<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_command" kind="class" prot="public">
    <compoundname>wxCommand</compoundname>
    <basecompoundref refid="classwx_object" prot="public" virt="non-virtual">wxObject</basecompoundref>
    <derivedcompoundref refid="classwx_rich_text_command" prot="public" virt="non-virtual">wxRichTextCommand</derivedcompoundref>
    <includes local="no">wx/cmdproc.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_command_1a544c13f28592ffd6a9e8b86be07e98d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxCommand::wxCommand</definition>
        <argsstring>(bool canUndo=false, const wxString &amp;name=wxEmptyString)</argsstring>
        <name>wxCommand</name>
        <param>
          <type>bool</type>
          <declname>canUndo</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="classwx_command" kindref="compound">wxCommand</ref> is an abstract class, so you will need to derive a new class and call this constructor from your own constructor.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>canUndo</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells the command processor whether this command is undo-able. You can achieve the same functionality by overriding the <ref refid="classwx_command_1a084b615e5adfd6d052ba2a87972b5da0" kindref="member">CanUndo()</ref> member function (if for example the criteria for undoability is context-dependent). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be supplied for the command processor to display the command name in the application&apos;s edit menu. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/cmdproc.h" line="38"/>
      </memberdef>
      <memberdef kind="function" id="classwx_command_1ae1a3e8b1984fe22e23c6fc38d08b63f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxCommand::~wxCommand</definition>
        <argsstring>()</argsstring>
        <name>~wxCommand</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/cmdproc.h" line="43"/>
      </memberdef>
      <memberdef kind="function" id="classwx_command_1a084b615e5adfd6d052ba2a87972b5da0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxCommand::CanUndo</definition>
        <argsstring>() const </argsstring>
        <name>CanUndo</name>
        <briefdescription>
<para>Returns true if the command can be undone, false otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/cmdproc.h" line="48"/>
      </memberdef>
      <memberdef kind="function" id="classwx_command_1a858fb8c1b0ab1d3400b9bc2605a5e5f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool wxCommand::Do</definition>
        <argsstring>()=0</argsstring>
        <name>Do</name>
        <reimplementedby refid="classwx_rich_text_command_1a8308209288049a5f31efb384e43b9e15">Do</reimplementedby>
        <briefdescription>
<para>Override this member function to execute the appropriate action when called. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true to indicate that the action has taken place, false otherwise. Returning false will indicate to the command processor that the action is not undoable and should not be added to the command history. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/cmdproc.h" line="59"/>
      </memberdef>
      <memberdef kind="function" id="classwx_command_1ad27fd1943748787529255d0542441a46" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxCommand::GetName</definition>
        <argsstring>() const </argsstring>
        <name>GetName</name>
        <briefdescription>
<para>Returns the command name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/cmdproc.h" line="64"/>
      </memberdef>
      <memberdef kind="function" id="classwx_command_1afed9df8cfda3579429ba8353098859dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool wxCommand::Undo</definition>
        <argsstring>()=0</argsstring>
        <name>Undo</name>
        <reimplementedby refid="classwx_rich_text_command_1afc5f9fd334b50a8d9994c4f23274f922">Undo</reimplementedby>
        <briefdescription>
<para>Override this member function to un-execute a previous Do. </para>        </briefdescription>
        <detaileddescription>
<para>How you implement this command is totally application dependent, but typical strategies include:</para><para><itemizedlist>
<listitem><para>Perform an inverse operation on the last modified piece of data in the document. When redone, a copy of data stored in command is pasted back or some operation reapplied. This relies on the fact that you know the ordering of Undos; the user can never Undo at an arbitrary position in the command history.</para></listitem><listitem><para>Restore the entire document state (perhaps using document transacting). Potentially very inefficient, but possibly easier to code if the user interface and data are complex, and an &quot;inverse
          execute&quot; operation is hard to write. The docview sample uses the first method, to remove or restore segments in the drawing.</para></listitem></itemizedlist>
</para><para><simplesect kind="return"><para>true to indicate that the action has taken place, false otherwise. Returning false will indicate to the command processor that the action is not redoable and no change should be made to the command history. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/cmdproc.h" line="88"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classwx_command" kindref="compound">wxCommand</ref> is a base class for modelling an application command, which is an action usually performed by selecting a menu item, pressing a toolbar button or any other means provided by the application to change the data or view. </para>    </briefdescription>
    <detaileddescription>
<para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__docview" kindref="compound">Document/View Framework</ref></para><para><simplesect kind="see"><para><ref refid="overview_docview_1overview_docview_wxcommand" kindref="member">wxCommand overview</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="5047">
        <label>wxRichTextCommand</label>
        <link refid="classwx_rich_text_command"/>
        <childnode refid="5045" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5046">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="5045">
        <label>wxCommand</label>
        <link refid="classwx_command"/>
        <childnode refid="5046" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5049">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="5050" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="5048">
        <label>wxCommand</label>
        <link refid="classwx_command"/>
        <childnode refid="5049" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5050">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/cmdproc.h" line="23" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/cmdproc.h" bodystart="22" bodyend="89"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxCommand</scope><name>AllocExclusive</name></member>
      <member refid="classwx_command_1a084b615e5adfd6d052ba2a87972b5da0" prot="public" virt="virtual"><scope>wxCommand</scope><name>CanUndo</name></member>
      <member refid="classwx_object_1a1d39f1d3650fe0982c9a1abe7f9fe7b7" prot="protected" virt="virtual"><scope>wxCommand</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a95c6a5e4e1e03ff23c7b9efe4cff0c1a" prot="protected" virt="virtual"><scope>wxCommand</scope><name>CreateRefData</name></member>
      <member refid="classwx_command_1a858fb8c1b0ab1d3400b9bc2605a5e5f7" prot="public" virt="pure-virtual"><scope>wxCommand</scope><name>Do</name></member>
      <member refid="classwx_object_1ab3a0c6f723cbaddb47be4e8dd98cc8e2" prot="public" virt="virtual"><scope>wxCommand</scope><name>GetClassInfo</name></member>
      <member refid="classwx_command_1ad27fd1943748787529255d0542441a46" prot="public" virt="virtual"><scope>wxCommand</scope><name>GetName</name></member>
      <member refid="classwx_object_1aabdb4fc957226544a8408167844e4f42" prot="public" virt="non-virtual"><scope>wxCommand</scope><name>GetRefData</name></member>
      <member refid="classwx_object_1af40d580385cf4f8112fae7713404b01e" prot="public" virt="non-virtual"><scope>wxCommand</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a80a1a3fda7b14396a9ddd3d7a46a88bd" prot="public" virt="non-virtual"><scope>wxCommand</scope><name>IsSameAs</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxCommand</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxCommand</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxCommand</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxCommand</scope><name>Ref</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxCommand</scope><name>SetRefData</name></member>
      <member refid="classwx_command_1afed9df8cfda3579429ba8353098859dc" prot="public" virt="pure-virtual"><scope>wxCommand</scope><name>Undo</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxCommand</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxCommand</scope><name>UnShare</name></member>
      <member refid="classwx_command_1a544c13f28592ffd6a9e8b86be07e98d6" prot="public" virt="non-virtual"><scope>wxCommand</scope><name>wxCommand</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxCommand</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxCommand</scope><name>wxObject</name></member>
      <member refid="classwx_command_1ae1a3e8b1984fe22e23c6fc38d08b63f3" prot="public" virt="virtual"><scope>wxCommand</scope><name>~wxCommand</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxCommand</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
