<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="overview_roughguide" kind="page">
    <compoundname>overview_roughguide</compoundname>
    <title>A Quick Guide to Writing Applications</title>
    <detaileddescription>
<para>To set a wxWidgets application going, you will need to derive a <ref refid="classwx_app" kindref="compound">wxApp</ref> class and override <ref refid="classwx_app_console_1a99953775a2fd83fa2456e390779afe15" kindref="member">wxApp::OnInit</ref>.</para><para>An application must have a top-level <ref refid="classwx_frame" kindref="compound">wxFrame</ref> or <ref refid="classwx_dialog" kindref="compound">wxDialog</ref> window. Each frame may contain one or more instances of classes such as <ref refid="classwx_panel" kindref="compound">wxPanel</ref>, <ref refid="classwx_splitter_window" kindref="compound">wxSplitterWindow</ref> or other windows and controls.</para><para>A frame can have a <ref refid="classwx_menu_bar" kindref="compound">wxMenuBar</ref>, a <ref refid="classwx_tool_bar" kindref="compound">wxToolBar</ref>, a <ref refid="classwx_status_bar" kindref="compound">wxStatusBar</ref>, and a <ref refid="classwx_icon" kindref="compound">wxIcon</ref> for when the frame is iconized.</para><para>A <ref refid="classwx_panel" kindref="compound">wxPanel</ref> is used to place controls (classes derived from <ref refid="classwx_control" kindref="compound">wxControl</ref>) which are used for user interaction. Examples of controls are <ref refid="classwx_button" kindref="compound">wxButton</ref>, <ref refid="classwx_check_box" kindref="compound">wxCheckBox</ref>, <ref refid="classwx_choice" kindref="compound">wxChoice</ref>, <ref refid="classwx_list_box" kindref="compound">wxListBox</ref>, <ref refid="classwx_radio_box" kindref="compound">wxRadioBox</ref>, and <ref refid="classwx_slider" kindref="compound">wxSlider</ref>.</para><para>Instances of <ref refid="classwx_dialog" kindref="compound">wxDialog</ref> can also be used for controls and they have the advantage of not requiring a separate frame.</para><para>Instead of creating a dialog box and populating it with items, it is possible to choose one of the convenient common dialog classes, such as <ref refid="classwx_message_dialog" kindref="compound">wxMessageDialog</ref> and <ref refid="classwx_file_dialog" kindref="compound">wxFileDialog</ref>.</para><para>You never draw directly onto a window - you use a <emphasis>device context</emphasis> (DC). <ref refid="classwx_d_c" kindref="compound">wxDC</ref> is the base for <ref refid="classwx_client_d_c" kindref="compound">wxClientDC</ref>, <ref refid="classwx_paint_d_c" kindref="compound">wxPaintDC</ref>, <ref refid="classwx_memory_d_c" kindref="compound">wxMemoryDC</ref>, <ref refid="classwx_post_script_d_c" kindref="compound">wxPostScriptDC</ref>, <ref refid="classwx_memory_d_c" kindref="compound">wxMemoryDC</ref>, <ref refid="classwx_metafile_d_c" kindref="compound">wxMetafileDC</ref> and <ref refid="classwx_printer_d_c" kindref="compound">wxPrinterDC</ref>. If your drawing functions have <ref refid="classwx_d_c" kindref="compound">wxDC</ref> as a parameter, you can pass any of these DCs to the function, and thus use the same code to draw to several different devices. You can draw using the member functions of <ref refid="classwx_d_c" kindref="compound">wxDC</ref>, such as <ref refid="classwx_d_c_1a12f2c236d4d320acec0bc6fe20e8399d" kindref="member">wxDC::DrawLine</ref> and <ref refid="classwx_d_c_1a11d35ce34fccb57b0efc7dc91168660b" kindref="member">wxDC::DrawText</ref>. Control colour on a window (<ref refid="classwx_colour" kindref="compound">wxColour</ref>) with brushes (<ref refid="classwx_brush" kindref="compound">wxBrush</ref>) and pens (<ref refid="classwx_pen" kindref="compound">wxPen</ref>).</para><para>To intercept events, you add a DECLARE_EVENT_TABLE macro to the window class declaration, and put a BEGIN_EVENT_TABLE ... END_EVENT_TABLE block in the implementation file. Between these macros, you add event macros which map the event (such as a mouse click) to a member function. These might override predefined event handlers such as for <ref refid="classwx_key_event" kindref="compound">wxKeyEvent</ref> and <ref refid="classwx_mouse_event" kindref="compound">wxMouseEvent</ref>.</para><para>Most modern applications will have an on-line, hypertext help system; for this, you need wxHelp and the <ref refid="classwx_help_controller" kindref="compound">wxHelpController</ref> class to control wxHelp.</para><para>GUI applications aren&apos;t all graphical wizardry. List and hash table needs are catered for by wxList and <ref refid="classwx_hash_map" kindref="compound">wxHashMap</ref>. You will undoubtedly need some platform-independent <ref refid="group__group__funcmacro__file" kindref="compound">Files and Directories</ref>, and you may find it handy to maintain and search a list of paths using <ref refid="classwx_path_list" kindref="compound">wxPathList</ref>. There&apos;s many <ref refid="group__group__funcmacro__misc" kindref="compound">Miscellaneous</ref> of operating system methods and other functions.</para><para><simplesect kind="see"><para></para></simplesect>
<itemizedlist>
<listitem><para><ref refid="group__group__class" kindref="compound">Full Class List by Category</ref> </para></listitem>
</itemizedlist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
