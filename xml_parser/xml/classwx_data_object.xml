<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_data_object" kind="class" prot="public">
    <compoundname>wxDataObject</compoundname>
    <derivedcompoundref refid="classwx_data_object_composite" prot="public" virt="non-virtual">wxDataObjectComposite</derivedcompoundref>
    <derivedcompoundref refid="classwx_data_object_simple" prot="public" virt="non-virtual">wxDataObjectSimple</derivedcompoundref>
    <includes local="no">wx/dataobj.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classwx_data_object_1a7623fd02a6bef5dba7c96ff0a1a692ef" prot="public" static="no">
        <name>Direction</name>
        <enumvalue id="classwx_data_object_1a7623fd02a6bef5dba7c96ff0a1a692efac7de2bf89290f75553da7f3cb8fa5397" prot="public">
          <name>Get</name>
          <initializer> 0x01</initializer>
          <briefdescription>
<para>Format is supported by <ref refid="classwx_data_object_1aa48761390b25d797d4cad393db752568" kindref="member">GetDataHere()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classwx_data_object_1a7623fd02a6bef5dba7c96ff0a1a692efa2ab9d7f173f2d17dc8ee7324ed3410b6" prot="public">
          <name>Set</name>
          <initializer> 0x02</initializer>
          <briefdescription>
<para>Format is supported by <ref refid="classwx_data_object_1ab73fa5f1cb933c67df20ddb1fad99071" kindref="member">SetData()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classwx_data_object_1a7623fd02a6bef5dba7c96ff0a1a692efa1f94b69e55238c5470f85e252b5fd8df" prot="public">
          <name>Both</name>
          <initializer> 0x03</initializer>
          <briefdescription>
<para>Format is supported by both <ref refid="classwx_data_object_1aa48761390b25d797d4cad393db752568" kindref="member">GetDataHere()</ref> and <ref refid="classwx_data_object_1ab73fa5f1cb933c67df20ddb1fad99071" kindref="member">SetData()</ref> (unused currently) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dataobj.h" line="223" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/dataobj.h" bodystart="222" bodyend="235"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_data_object_1aa910d21b55e45638567f770aa71a44da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxDataObject::wxDataObject</definition>
        <argsstring>()</argsstring>
        <name>wxDataObject</name>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dataobj.h" line="240"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_object_1a392665fe790cd29de240223b5bd2936c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxDataObject::~wxDataObject</definition>
        <argsstring>()</argsstring>
        <name>~wxDataObject</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dataobj.h" line="245"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_object_1a71abcc4eb2229e936ea53ebdefa53bef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxDataObject::GetAllFormats</definition>
        <argsstring>(wxDataFormat *formats, Direction dir=Get) const =0</argsstring>
        <name>GetAllFormats</name>
        <reimplementedby refid="classwx_text_data_object_1a6ef0b55724e5376e86552db82461c004">GetAllFormats</reimplementedby>
        <param>
          <type><ref refid="classwx_data_format" kindref="compound">wxDataFormat</ref> *</type>
          <declname>formats</declname>
        </param>
        <param>
          <type><ref refid="classwx_data_object_1a7623fd02a6bef5dba7c96ff0a1a692ef" kindref="member">Direction</ref></type>
          <declname>dir</declname>
          <defval>Get</defval>
        </param>
        <briefdescription>
<para>Copies all formats supported in the given direction <emphasis>dir</emphasis> to the array pointed to by <emphasis>formats</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>There must be enough space for GetFormatCount(dir) formats in it.</para><para><bold>wxPerl Note:</bold> In wxPerl this method only takes the <emphasis>dir</emphasis> parameter. In scalar context it returns the first format in the list, in list context it returns a list containing all the supported formats. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dataobj.h" line="260"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_object_1aa48761390b25d797d4cad393db752568" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool wxDataObject::GetDataHere</definition>
        <argsstring>(const wxDataFormat &amp;format, void *buf) const =0</argsstring>
        <name>GetDataHere</name>
        <param>
          <type>const <ref refid="classwx_data_format" kindref="compound">wxDataFormat</ref> &amp;</type>
          <declname>format</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>The method will write the data of the format <emphasis>format</emphasis> in the buffer <emphasis>buf</emphasis> and return true on success, false on failure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dataobj.h" line="266"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_object_1a10674c65e59f08ba318f942e410b8627" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t wxDataObject::GetDataSize</definition>
        <argsstring>(const wxDataFormat &amp;format) const =0</argsstring>
        <name>GetDataSize</name>
        <param>
          <type>const <ref refid="classwx_data_format" kindref="compound">wxDataFormat</ref> &amp;</type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Returns the data size of the given format <emphasis>format</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dataobj.h" line="271"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_object_1a3f82815810bf4dcc34e1a5783c9b8a62" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t wxDataObject::GetFormatCount</definition>
        <argsstring>(Direction dir=Get) const =0</argsstring>
        <name>GetFormatCount</name>
        <reimplementedby refid="classwx_text_data_object_1aeb197612bcadc2f37aecdfc4acee9b55">GetFormatCount</reimplementedby>
        <param>
          <type><ref refid="classwx_data_object_1a7623fd02a6bef5dba7c96ff0a1a692ef" kindref="member">Direction</ref></type>
          <declname>dir</declname>
          <defval>Get</defval>
        </param>
        <briefdescription>
<para>Returns the number of available formats for rendering or setting the data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dataobj.h" line="277"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_object_1a47570ed6123bbebec195a2b7f843103c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classwx_data_format" kindref="compound">wxDataFormat</ref></type>
        <definition>virtual wxDataFormat wxDataObject::GetPreferredFormat</definition>
        <argsstring>(Direction dir=Get) const =0</argsstring>
        <name>GetPreferredFormat</name>
        <param>
          <type><ref refid="classwx_data_object_1a7623fd02a6bef5dba7c96ff0a1a692ef" kindref="member">Direction</ref></type>
          <declname>dir</declname>
          <defval>Get</defval>
        </param>
        <briefdescription>
<para>Returns the preferred format for either rendering the data (if <emphasis>dir</emphasis> is <computeroutput>Get</computeroutput>, its default value) or for setting it. </para>        </briefdescription>
        <detaileddescription>
<para>Usually this will be the native format of the <ref refid="classwx_data_object" kindref="compound">wxDataObject</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dataobj.h" line="284"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_object_1ab73fa5f1cb933c67df20ddb1fad99071" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxDataObject::SetData</definition>
        <argsstring>(const wxDataFormat &amp;format, size_t len, const void *buf)</argsstring>
        <name>SetData</name>
        <param>
          <type>const <ref refid="classwx_data_format" kindref="compound">wxDataFormat</ref> &amp;</type>
          <declname>format</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>Set the data in the format <emphasis>format</emphasis> of the length <emphasis>len</emphasis> provided in the buffer <emphasis>buf</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>The format for which to set the data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of data in bytes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Non-NULL pointer to the data. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dataobj.h" line="299"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_object_1aaedc05373d1e6822c9795f57d8200b72" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxDataObject::IsSupported</definition>
        <argsstring>(const wxDataFormat &amp;format, Direction dir=Get) const </argsstring>
        <name>IsSupported</name>
        <param>
          <type>const <ref refid="classwx_data_format" kindref="compound">wxDataFormat</ref> &amp;</type>
          <declname>format</declname>
        </param>
        <param>
          <type><ref refid="classwx_data_object_1a7623fd02a6bef5dba7c96ff0a1a692ef" kindref="member">Direction</ref></type>
          <declname>dir</declname>
          <defval>Get</defval>
        </param>
        <briefdescription>
<para>Returns true if this format is supported. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dataobj.h" line="304"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A <ref refid="classwx_data_object" kindref="compound">wxDataObject</ref> represents data that can be copied to or from the clipboard, or dragged and dropped. </para>    </briefdescription>
    <detaileddescription>
<para>The important thing about <ref refid="classwx_data_object" kindref="compound">wxDataObject</ref> is that this is a &apos;smart&apos; piece of data unlike &apos;dumb&apos; data containers such as memory buffers or files. Being &apos;smart&apos; here means that the data object itself should know what data formats it supports and how to render itself in each of its supported formats.</para><para>A supported format, incidentally, is exactly the format in which the data can be requested from a data object or from which the data object may be set. In the general case, an object may support different formats on &apos;input&apos; and &apos;output&apos;, i.e. it may be able to render itself in a given format but not be created from data on this format or vice versa. <ref refid="classwx_data_object" kindref="compound">wxDataObject</ref> defines the <ref refid="classwx_data_object_1a7623fd02a6bef5dba7c96ff0a1a692ef" kindref="member">wxDataObject::Direction</ref> enumeration type which distinguishes between them.</para><para>See <ref refid="classwx_data_format" kindref="compound">wxDataFormat</ref> documentation for more about formats.</para><para>Not surprisingly, being &apos;smart&apos; comes at a price of added complexity. This is reasonable for the situations when you really need to support multiple formats, but may be annoying if you only want to do something simple like cut and paste text.</para><para>To provide a solution for both cases, wxWidgets has two predefined classes which derive from <ref refid="classwx_data_object" kindref="compound">wxDataObject</ref>: <ref refid="classwx_data_object_simple" kindref="compound">wxDataObjectSimple</ref> and <ref refid="classwx_data_object_composite" kindref="compound">wxDataObjectComposite</ref>. <ref refid="classwx_data_object_simple" kindref="compound">wxDataObjectSimple</ref> is the simplest <ref refid="classwx_data_object" kindref="compound">wxDataObject</ref> possible and only holds data in a single format (such as HTML or text) and <ref refid="classwx_data_object_composite" kindref="compound">wxDataObjectComposite</ref> is the simplest way to implement a <ref refid="classwx_data_object" kindref="compound">wxDataObject</ref> that does support multiple formats because it achieves this by simply holding several <ref refid="classwx_data_object_simple" kindref="compound">wxDataObjectSimple</ref> objects.</para><para>So, you have several solutions when you need a <ref refid="classwx_data_object" kindref="compound">wxDataObject</ref> class (and you need one as soon as you want to transfer data via the clipboard or drag and drop):</para><para><orderedlist>
<listitem><para>Use one of the built-in classes.<itemizedlist>
<listitem><para>You may use <ref refid="classwx_text_data_object" kindref="compound">wxTextDataObject</ref>, <ref refid="classwx_bitmap_data_object" kindref="compound">wxBitmapDataObject</ref> <ref refid="classwx_file_data_object" kindref="compound">wxFileDataObject</ref>, <ref refid="classwx_u_r_l_data_object" kindref="compound">wxURLDataObject</ref> in the simplest cases when you only need to support one format and your data is either text, bitmap or list of files.</para></listitem></itemizedlist>
</para></listitem><listitem><para>Use <ref refid="classwx_data_object_simple" kindref="compound">wxDataObjectSimple</ref><itemizedlist>
<listitem><para>Deriving from <ref refid="classwx_data_object_simple" kindref="compound">wxDataObjectSimple</ref> is the simplest solution for custom data - you will only support one format and so probably won&apos;t be able to communicate with other programs, but data transfer will work in your program (or between different instances of it).</para></listitem></itemizedlist>
</para></listitem><listitem><para>Use <ref refid="classwx_data_object_composite" kindref="compound">wxDataObjectComposite</ref><itemizedlist>
<listitem><para>This is a simple but powerful solution which allows you to support any number of formats (either standard or custom if you combine it with the previous solution).</para></listitem></itemizedlist>
</para></listitem><listitem><para>Use <ref refid="classwx_data_object" kindref="compound">wxDataObject</ref> directly<itemizedlist>
<listitem><para>This is the solution for maximum flexibility and efficiency, but it is also the most difficult to implement.</para></listitem></itemizedlist>
</para></listitem></orderedlist>
</para><para>Please note that the easiest way to use drag and drop and the clipboard with multiple formats is by using <ref refid="classwx_data_object_composite" kindref="compound">wxDataObjectComposite</ref>, but it is not the most efficient one as each <ref refid="classwx_data_object_simple" kindref="compound">wxDataObjectSimple</ref> would contain the whole data in its respective formats. Now imagine that you want to paste 200 pages of text in your proprietary format, as well as Word, RTF, HTML, Unicode and plain text to the clipboard and even today&apos;s computers are in trouble. For this case, you will have to derive from <ref refid="classwx_data_object" kindref="compound">wxDataObject</ref> directly and make it enumerate its formats and provide the data in the requested format on demand.</para><para>Note that neither the GTK+ data transfer mechanisms for clipboard and drag and drop, nor OLE data transfer, <emphasis>copies</emphasis> any data until another application actually requests the data. This is in contrast to the &apos;feel&apos; offered to the user of a program who would normally think that the data resides in the clipboard after having pressed &apos;Copy&apos; - in reality it is only declared to be <emphasis>available</emphasis>.</para><para>You may also derive your own data object classes from <ref refid="classwx_custom_data_object" kindref="compound">wxCustomDataObject</ref> for user-defined types. The format of user-defined data is given as a mime-type string literal, such as &quot;application/word&quot; or &quot;image/png&quot;. These strings are used as they are under Unix (so far only GTK+) to identify a format and are translated into their Windows equivalent under Win32 (using the OLE IDataObject for data exchange to and from the clipboard and for drag and drop). Note that the format string translation under Windows is not yet finished.</para><para>Each class derived directly from <ref refid="classwx_data_object" kindref="compound">wxDataObject</ref> must override and implement all of its functions which are pure virtual in the base class. The data objects which only render their data or only set it (i.e. work in only one direction), should return 0 from <ref refid="classwx_data_object_1a3f82815810bf4dcc34e1a5783c9b8a62" kindref="member">GetFormatCount()</ref>.</para><para><bold>wxPerl Note:</bold> This class is not currently usable from wxPerl; you may use Wx::PlDataObjectSimple instead.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__dnd" kindref="compound">Clipboard and Drag &amp; Drop</ref></para><para><simplesect kind="see"><para><ref refid="overview_dnd" kindref="compound">Drag and Drop Overview</ref>, <ref refid="page_samples_1page_samples_dnd" kindref="member">Drag &amp; Drop Sample</ref>, <ref refid="classwx_file_data_object" kindref="compound">wxFileDataObject</ref>, <ref refid="classwx_text_data_object" kindref="compound">wxTextDataObject</ref>, <ref refid="classwx_bitmap_data_object" kindref="compound">wxBitmapDataObject</ref>, <ref refid="classwx_custom_data_object" kindref="compound">wxCustomDataObject</ref>, <ref refid="classwx_drop_target" kindref="compound">wxDropTarget</ref>, <ref refid="classwx_drop_source" kindref="compound">wxDropSource</ref>, <ref refid="classwx_text_drop_target" kindref="compound">wxTextDropTarget</ref>, <ref refid="classwx_file_drop_target" kindref="compound">wxFileDropTarget</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="5345">
        <label>wxURLDataObject</label>
        <link refid="classwx_u_r_l_data_object"/>
        <childnode refid="5344" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5339">
        <label>wxDataObjectComposite</label>
        <link refid="classwx_data_object_composite"/>
        <childnode refid="5338" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5338">
        <label>wxDataObject</label>
        <link refid="classwx_data_object"/>
      </node>
      <node id="5344">
        <label>wxTextDataObject</label>
        <link refid="classwx_text_data_object"/>
        <childnode refid="5340" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5342">
        <label>wxCustomDataObject</label>
        <link refid="classwx_custom_data_object"/>
        <childnode refid="5340" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5341">
        <label>wxBitmapDataObject</label>
        <link refid="classwx_bitmap_data_object"/>
        <childnode refid="5340" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5343">
        <label>wxFileDataObject</label>
        <link refid="classwx_file_data_object"/>
        <childnode refid="5340" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5340">
        <label>wxDataObjectSimple</label>
        <link refid="classwx_data_object_simple"/>
        <childnode refid="5338" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dataobj.h" line="220" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/dataobj.h" bodystart="219" bodyend="305"/>
    <listofallmembers>
      <member refid="classwx_data_object_1a7623fd02a6bef5dba7c96ff0a1a692efa1f94b69e55238c5470f85e252b5fd8df" prot="public" virt="non-virtual"><scope>wxDataObject</scope><name>Both</name></member>
      <member refid="classwx_data_object_1a7623fd02a6bef5dba7c96ff0a1a692ef" prot="public" virt="non-virtual"><scope>wxDataObject</scope><name>Direction</name></member>
      <member refid="classwx_data_object_1a7623fd02a6bef5dba7c96ff0a1a692efac7de2bf89290f75553da7f3cb8fa5397" prot="public" virt="non-virtual"><scope>wxDataObject</scope><name>Get</name></member>
      <member refid="classwx_data_object_1a71abcc4eb2229e936ea53ebdefa53bef" prot="public" virt="pure-virtual"><scope>wxDataObject</scope><name>GetAllFormats</name></member>
      <member refid="classwx_data_object_1aa48761390b25d797d4cad393db752568" prot="public" virt="pure-virtual"><scope>wxDataObject</scope><name>GetDataHere</name></member>
      <member refid="classwx_data_object_1a10674c65e59f08ba318f942e410b8627" prot="public" virt="pure-virtual"><scope>wxDataObject</scope><name>GetDataSize</name></member>
      <member refid="classwx_data_object_1a3f82815810bf4dcc34e1a5783c9b8a62" prot="public" virt="pure-virtual"><scope>wxDataObject</scope><name>GetFormatCount</name></member>
      <member refid="classwx_data_object_1a47570ed6123bbebec195a2b7f843103c" prot="public" virt="pure-virtual"><scope>wxDataObject</scope><name>GetPreferredFormat</name></member>
      <member refid="classwx_data_object_1aaedc05373d1e6822c9795f57d8200b72" prot="public" virt="non-virtual"><scope>wxDataObject</scope><name>IsSupported</name></member>
      <member refid="classwx_data_object_1a7623fd02a6bef5dba7c96ff0a1a692efa2ab9d7f173f2d17dc8ee7324ed3410b6" prot="public" virt="non-virtual"><scope>wxDataObject</scope><name>Set</name></member>
      <member refid="classwx_data_object_1ab73fa5f1cb933c67df20ddb1fad99071" prot="public" virt="virtual"><scope>wxDataObject</scope><name>SetData</name></member>
      <member refid="classwx_data_object_1aa910d21b55e45638567f770aa71a44da" prot="public" virt="non-virtual"><scope>wxDataObject</scope><name>wxDataObject</name></member>
      <member refid="classwx_data_object_1a392665fe790cd29de240223b5bd2936c" prot="public" virt="virtual"><scope>wxDataObject</scope><name>~wxDataObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
