<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_d_c" kind="class" prot="public">
    <compoundname>wxDC</compoundname>
    <basecompoundref refid="classwx_object" prot="public" virt="non-virtual">wxObject</basecompoundref>
    <derivedcompoundref refid="classwx_g_c_d_c" prot="public" virt="non-virtual">wxGCDC</derivedcompoundref>
    <derivedcompoundref refid="classwx_memory_d_c" prot="public" virt="non-virtual">wxMemoryDC</derivedcompoundref>
    <derivedcompoundref refid="classwx_metafile_d_c" prot="public" virt="non-virtual">wxMetafileDC</derivedcompoundref>
    <derivedcompoundref refid="classwx_mirror_d_c" prot="public" virt="non-virtual">wxMirrorDC</derivedcompoundref>
    <derivedcompoundref refid="classwx_post_script_d_c" prot="public" virt="non-virtual">wxPostScriptDC</derivedcompoundref>
    <derivedcompoundref refid="classwx_printer_d_c" prot="public" virt="non-virtual">wxPrinterDC</derivedcompoundref>
    <derivedcompoundref refid="classwx_screen_d_c" prot="public" virt="non-virtual">wxScreenDC</derivedcompoundref>
    <derivedcompoundref refid="classwx_s_v_g_file_d_c" prot="public" virt="non-virtual">wxSVGFileDC</derivedcompoundref>
    <derivedcompoundref refid="classwx_window_d_c" prot="public" virt="non-virtual">wxWindowDC</derivedcompoundref>
    <includes local="no">wx/dc.h</includes>
      <sectiondef kind="user-defined">
      <header>Coordinate conversion functions</header>
      <memberdef kind="function" id="classwx_d_c_1af0c7b7b0f2736fbce53675f1420ed11c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
        <definition>wxCoord wxDC::DeviceToLogicalX</definition>
        <argsstring>(wxCoord x) const </argsstring>
        <name>DeviceToLogicalX</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Convert <emphasis>device</emphasis> X coordinate to logical coordinate, using the current mapping mode, user scale factor, device origin and axis orientation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="199"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1ab0dc7fb1c079f1fc8ca7df8987e261fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
        <definition>wxCoord wxDC::DeviceToLogicalXRel</definition>
        <argsstring>(wxCoord x) const </argsstring>
        <name>DeviceToLogicalXRel</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Convert <emphasis>device</emphasis> X coordinate to relative logical coordinate, using the current mapping mode and user scale factor but ignoring the axis orientation. </para>        </briefdescription>
        <detaileddescription>
<para>Use this for converting a width, for example. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="206"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1aac47fb25f72317712e74a7e2903ba704" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
        <definition>wxCoord wxDC::DeviceToLogicalY</definition>
        <argsstring>(wxCoord y) const </argsstring>
        <name>DeviceToLogicalY</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Converts <emphasis>device</emphasis> Y coordinate to logical coordinate, using the current mapping mode, user scale factor, device origin and axis orientation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="212"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a57fa7329b7890bb56cc7e05fc83e033c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
        <definition>wxCoord wxDC::DeviceToLogicalYRel</definition>
        <argsstring>(wxCoord y) const </argsstring>
        <name>DeviceToLogicalYRel</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Convert <emphasis>device</emphasis> Y coordinate to relative logical coordinate, using the current mapping mode and user scale factor but ignoring the axis orientation. </para>        </briefdescription>
        <detaileddescription>
<para>Use this for converting a height, for example. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="219"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a3f551058c92d68efa61548d266f6a750" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
        <definition>wxCoord wxDC::LogicalToDeviceX</definition>
        <argsstring>(wxCoord x) const </argsstring>
        <name>LogicalToDeviceX</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Converts logical X coordinate to device coordinate, using the current mapping mode, user scale factor, device origin and axis orientation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="225"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1adccbd84729882831bcbd0cb2c3e550a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
        <definition>wxCoord wxDC::LogicalToDeviceXRel</definition>
        <argsstring>(wxCoord x) const </argsstring>
        <name>LogicalToDeviceXRel</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Converts logical X coordinate to relative device coordinate, using the current mapping mode and user scale factor but ignoring the axis orientation. </para>        </briefdescription>
        <detaileddescription>
<para>Use this for converting a width, for example. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="232"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a9b5bd5a823388f8b941406315c5eeafb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
        <definition>wxCoord wxDC::LogicalToDeviceY</definition>
        <argsstring>(wxCoord y) const </argsstring>
        <name>LogicalToDeviceY</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Converts logical Y coordinate to device coordinate, using the current mapping mode, user scale factor, device origin and axis orientation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="238"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1aea082fd9d45adb6783542493439b73dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
        <definition>wxCoord wxDC::LogicalToDeviceYRel</definition>
        <argsstring>(wxCoord y) const </argsstring>
        <name>LogicalToDeviceYRel</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Converts logical Y coordinate to relative device coordinate, using the current mapping mode and user scale factor but ignoring the axis orientation. </para>        </briefdescription>
        <detaileddescription>
<para>Use this for converting a height, for example. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="245"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Drawing functions</header>
      <memberdef kind="function" id="classwx_d_c_1acf301dfd75b0f31d969ecb9daec21e85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <reimplementedby refid="classwx_s_v_g_file_d_c_1a88eb12ff20b15f2e7d91483394a2ed16">Clear</reimplementedby>
        <briefdescription>
<para>Clears the device context using the current background brush. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="259"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a348f8cd1ba0ffcf62b8145628b0a5492" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawArc</definition>
        <argsstring>(wxCoord xStart, wxCoord yStart, wxCoord xEnd, wxCoord yEnd, wxCoord xc, wxCoord yc)</argsstring>
        <name>DrawArc</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>xStart</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>yStart</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>xEnd</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>yEnd</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>xc</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>yc</declname>
        </param>
        <briefdescription>
<para>Draws an arc of a circle, centred on (<emphasis>xc</emphasis>, <emphasis>yc</emphasis>), with starting point (<emphasis>xStart</emphasis>, <emphasis>yStart</emphasis>) and ending at (<emphasis>xEnd</emphasis>, <emphasis>yEnd</emphasis>). </para>        </briefdescription>
        <detaileddescription>
<para>The current pen is used for the outline and the current brush for filling the shape.</para><para>The arc is drawn in a counter-clockwise direction from the start point to the end point. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="271"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1abe49b852e96ff500ef6333bfc044890f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawArc</definition>
        <argsstring>(const wxPoint &amp;ptStart, const wxPoint &amp;ptEnd, const wxPoint &amp;centre)</argsstring>
        <name>DrawArc</name>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>ptStart</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>ptEnd</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>centre</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="276"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1af982eb2d3b10c5617ef3559d51a1defc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawBitmap</definition>
        <argsstring>(const wxBitmap &amp;bitmap, wxCoord x, wxCoord y, bool useMask=false)</argsstring>
        <name>DrawBitmap</name>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>bitmap</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useMask</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Draw a bitmap on the device context at the specified point. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>transparent</emphasis> is true and the bitmap has a transparency mask, the bitmap will be drawn transparently.</para><para>When drawing a mono-bitmap, the current text foreground colour will be used to draw the foreground of the bitmap (all bits set to 1), and the current text background colour to draw the background (all bits set to 0).</para><para><simplesect kind="see"><para><ref refid="classwx_d_c_1aeac811df9a1688ce875117f3049849d6" kindref="member">SetTextForeground()</ref>, <ref refid="classwx_d_c_1a3ed22bd0a0b835d4d085261bb022766b" kindref="member">SetTextBackground()</ref>, <ref refid="classwx_memory_d_c" kindref="compound">wxMemoryDC</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="291"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a9449053951eceeb7984125cd4a694fd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawBitmap</definition>
        <argsstring>(const wxBitmap &amp;bmp, const wxPoint &amp;pt, bool useMask=false)</argsstring>
        <name>DrawBitmap</name>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>bmp</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useMask</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="297"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a8ad34eda4c0b75ca905d466c6328fe91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawCheckMark</definition>
        <argsstring>(wxCoord x, wxCoord y, wxCoord width, wxCoord height)</argsstring>
        <name>DrawCheckMark</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Draws a check mark inside the given rectangle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="302"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a14fe0d838374721e98d6254cdd1484a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawCheckMark</definition>
        <argsstring>(const wxRect &amp;rect)</argsstring>
        <name>DrawCheckMark</name>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="307"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a62fd1c810d532e53a25e3b2e6fd621f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawCircle</definition>
        <argsstring>(wxCoord x, wxCoord y, wxCoord radius)</argsstring>
        <name>DrawCircle</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>radius</declname>
        </param>
        <briefdescription>
<para>Draws a circle with the given centre and radius. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_d_c_1a340697f08f5fd08d9db383ffcef642c2" kindref="member">DrawEllipse()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="314"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a560192c6dcb33c5bde404f3647234657" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawCircle</definition>
        <argsstring>(const wxPoint &amp;pt, wxCoord radius)</argsstring>
        <name>DrawCircle</name>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>radius</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="319"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a340697f08f5fd08d9db383ffcef642c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawEllipse</definition>
        <argsstring>(wxCoord x, wxCoord y, wxCoord width, wxCoord height)</argsstring>
        <name>DrawEllipse</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Draws an ellipse contained in the rectangle specified either with the given top left corner and the given size or directly. </para>        </briefdescription>
        <detaileddescription>
<para>The current pen is used for the outline and the current brush for filling the shape.</para><para><simplesect kind="see"><para><ref refid="classwx_d_c_1a62fd1c810d532e53a25e3b2e6fd621f7" kindref="member">DrawCircle()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="328"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a8a7a8478797c599e91125168669a5f36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawEllipse</definition>
        <argsstring>(const wxPoint &amp;pt, const wxSize &amp;size)</argsstring>
        <name>DrawEllipse</name>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="333"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a637167c299d7e58832cf9c71f6f64fd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawEllipse</definition>
        <argsstring>(const wxRect &amp;rect)</argsstring>
        <name>DrawEllipse</name>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="338"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a821e0b82707ca0379273cca67913da06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawEllipticArc</definition>
        <argsstring>(wxCoord x, wxCoord y, wxCoord width, wxCoord height, double start, double end)</argsstring>
        <name>DrawEllipticArc</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>height</declname>
        </param>
        <param>
          <type>double</type>
          <declname>start</declname>
        </param>
        <param>
          <type>double</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Draws an arc of an ellipse. </para>        </briefdescription>
        <detaileddescription>
<para>The current pen is used for drawing the arc and the current brush is used for drawing the pie.</para><para><emphasis>x</emphasis> and <emphasis>y</emphasis> specify the x and y coordinates of the upper-left corner of the rectangle that contains the ellipse.</para><para><emphasis>width</emphasis> and <emphasis>height</emphasis> specify the width and height of the rectangle that contains the ellipse.</para><para><emphasis>start</emphasis> and <emphasis>end</emphasis> specify the start and end of the arc relative to the three-o&apos;clock position from the center of the rectangle. Angles are specified in degrees (360 is a complete circle). Positive values mean counter-clockwise motion. If <emphasis>start</emphasis> is equal to <emphasis>end</emphasis>, a complete ellipse will be drawn. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="357"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a5f18a7aee18b69c8721aec67ea0a3532" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawEllipticArc</definition>
        <argsstring>(const wxPoint &amp;pt, const wxSize &amp;sz, double sa, double ea)</argsstring>
        <name>DrawEllipticArc</name>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sa</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="363"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a890d011a03308a28039d4940dd04264e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawIcon</definition>
        <argsstring>(const wxIcon &amp;icon, wxCoord x, wxCoord y)</argsstring>
        <name>DrawIcon</name>
        <param>
          <type>const <ref refid="classwx_icon" kindref="compound">wxIcon</ref> &amp;</type>
          <declname>icon</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Draw an icon on the display (does nothing if the device context is PostScript). </para>        </briefdescription>
        <detaileddescription>
<para>This can be the simplest way of drawing bitmaps on a window. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="370"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a5719d8c36a03d1679828c5d89d33dd67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawIcon</definition>
        <argsstring>(const wxIcon &amp;icon, const wxPoint &amp;pt)</argsstring>
        <name>DrawIcon</name>
        <param>
          <type>const <ref refid="classwx_icon" kindref="compound">wxIcon</ref> &amp;</type>
          <declname>icon</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="375"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1ae28d7aa2e17a850f4ca15c042a870152" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawLabel</definition>
        <argsstring>(const wxString &amp;text, const wxBitmap &amp;bitmap, const wxRect &amp;rect, int alignment=wxALIGN_LEFT|wxALIGN_TOP, int indexAccel=-1, wxRect *rectBounding=NULL)</argsstring>
        <name>DrawLabel</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>bitmap</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>alignment</declname>
          <defval>wxALIGN_LEFT|wxALIGN_TOP</defval>
        </param>
        <param>
          <type>int</type>
          <declname>indexAccel</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="classwx_rect" kindref="compound">wxRect</ref> *</type>
          <declname>rectBounding</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Draw optional bitmap and the text into the given rectangle and aligns it as specified by alignment parameter; it also will emphasize the character with the given index if it is != -1 and return the bounding rectangle if required. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="386"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a9e4ddef5a10fdcee96ff9ef2fded9ee3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawLabel</definition>
        <argsstring>(const wxString &amp;text, const wxRect &amp;rect, int alignment=wxALIGN_LEFT|wxALIGN_TOP, int indexAccel=-1)</argsstring>
        <name>DrawLabel</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>alignment</declname>
          <defval>wxALIGN_LEFT|wxALIGN_TOP</defval>
        </param>
        <param>
          <type>int</type>
          <declname>indexAccel</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="393"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a12f2c236d4d320acec0bc6fe20e8399d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawLine</definition>
        <argsstring>(wxCoord x1, wxCoord y1, wxCoord x2, wxCoord y2)</argsstring>
        <name>DrawLine</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x1</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y1</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x2</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y2</declname>
        </param>
        <briefdescription>
<para>Draws a line from the first point to the second. </para>        </briefdescription>
        <detaileddescription>
<para>The current pen is used for drawing the line. Note that the point (<emphasis>x2</emphasis>, <emphasis>y2</emphasis>) is not part of the line and is not drawn by this function (this is consistent with the behaviour of many other toolkits). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="401"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a34f84b8b73cf782e6d9ab0f629598b6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawLine</definition>
        <argsstring>(const wxPoint &amp;pt1, const wxPoint &amp;pt2)</argsstring>
        <name>DrawLine</name>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt1</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt2</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="406"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a6480acc286278f7d87358586e51fa205" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawLines</definition>
        <argsstring>(int n, wxPoint points[], wxCoord xoffset=0, wxCoord yoffset=0)</argsstring>
        <name>DrawLines</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
          <declname>points</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>xoffset</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>yoffset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draws lines using an array of points of size <emphasis>n</emphasis> adding the optional offset coordinate. </para>        </briefdescription>
        <detaileddescription>
<para>The current pen is used for drawing the lines.</para><para><bold>wxPerl Note:</bold> Not supported by wxPerl. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="417"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a23cbb356e46890c99fcb5304d077f888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawLines</definition>
        <argsstring>(const wxPointList *points, wxCoord xoffset=0, wxCoord yoffset=0)</argsstring>
        <name>DrawLines</name>
        <param>
          <type>const wxPointList *</type>
          <declname>points</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>xoffset</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>yoffset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>This method uses a list of wxPoints, adding the optional offset coordinate. </para>        </briefdescription>
        <detaileddescription>
<para>The programmer is responsible for deleting the list of points.</para><para><bold>wxPerl Note:</bold> The wxPerl version of this method accepts as its first parameter a reference to an array of <ref refid="classwx_point" kindref="compound">wxPoint</ref> objects. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="430"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a8380aab866e8f3947e0898cf08969d9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawPoint</definition>
        <argsstring>(wxCoord x, wxCoord y)</argsstring>
        <name>DrawPoint</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Draws a point using the color of the current pen. </para>        </briefdescription>
        <detaileddescription>
<para>Note that the other properties of the pen are not used, such as width. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="436"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a9b75ad987adc0c01d13c34db101b3539" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawPoint</definition>
        <argsstring>(const wxPoint &amp;pt)</argsstring>
        <name>DrawPoint</name>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="441"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1af3ded6183d3ba706d0377e5c25fcaf83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawPolygon</definition>
        <argsstring>(int n, wxPoint points[], wxCoord xoffset=0, wxCoord yoffset=0, wxPolygonFillMode fill_style=wxODDEVEN_RULE)</argsstring>
        <name>DrawPolygon</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
          <declname>points</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>xoffset</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>yoffset</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="gdicmn_8h_1a771e5c5703eb406b19fb50bb718eee05" kindref="member">wxPolygonFillMode</ref></type>
          <declname>fill_style</declname>
          <defval>wxODDEVEN_RULE</defval>
        </param>
        <briefdescription>
<para>Draws a filled polygon using an array of points of size <emphasis>n</emphasis>, adding the optional offset coordinate. </para>        </briefdescription>
        <detaileddescription>
<para>The first and last points are automatically closed.</para><para>The last argument specifies the fill rule: <bold>wxODDEVEN_RULE</bold> (the default) or <bold>wxWINDING_RULE</bold>.</para><para>The current pen is used for drawing the outline, and the current brush for filling the shape. Using a transparent brush suppresses filling.</para><para><bold>wxPerl Note:</bold> Not supported by wxPerl. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="460"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a6e5808ba5b740f0d4df5da02b05ce5ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawPolygon</definition>
        <argsstring>(const wxPointList *points, wxCoord xoffset=0, wxCoord yoffset=0, wxPolygonFillMode fill_style=wxODDEVEN_RULE)</argsstring>
        <name>DrawPolygon</name>
        <param>
          <type>const wxPointList *</type>
          <declname>points</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>xoffset</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>yoffset</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="gdicmn_8h_1a771e5c5703eb406b19fb50bb718eee05" kindref="member">wxPolygonFillMode</ref></type>
          <declname>fill_style</declname>
          <defval>wxODDEVEN_RULE</defval>
        </param>
        <briefdescription>
<para>This method draws a filled polygon using a list of wxPoints, adding the optional offset coordinate. </para>        </briefdescription>
        <detaileddescription>
<para>The first and last points are automatically closed.</para><para>The last argument specifies the fill rule: <bold>wxODDEVEN_RULE</bold> (the default) or <bold>wxWINDING_RULE</bold>.</para><para>The current pen is used for drawing the outline, and the current brush for filling the shape. Using a transparent brush suppresses filling.</para><para>The programmer is responsible for deleting the list of points.</para><para><bold>wxPerl Note:</bold> The wxPerl version of this method accepts as its first parameter a reference to an array of <ref refid="classwx_point" kindref="compound">wxPoint</ref> objects. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="482"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a3beb1e45475b7f62babd123944818703" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawPolyPolygon</definition>
        <argsstring>(int n, int count[], wxPoint points[], wxCoord xoffset=0, wxCoord yoffset=0, wxPolygonFillMode fill_style=wxODDEVEN_RULE)</argsstring>
        <name>DrawPolyPolygon</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
          <declname>points</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>xoffset</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>yoffset</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="gdicmn_8h_1a771e5c5703eb406b19fb50bb718eee05" kindref="member">wxPolygonFillMode</ref></type>
          <declname>fill_style</declname>
          <defval>wxODDEVEN_RULE</defval>
        </param>
        <briefdescription>
<para>Draws two or more filled polygons using an array of <emphasis>points</emphasis>, adding the optional offset coordinates. </para>        </briefdescription>
        <detaileddescription>
<para>Notice that for the platforms providing a native implementation of this function (Windows and PostScript-based <ref refid="classwx_d_c" kindref="compound">wxDC</ref> currently), this is more efficient than using <ref refid="classwx_d_c_1af3ded6183d3ba706d0377e5c25fcaf83" kindref="member">DrawPolygon()</ref> in a loop.</para><para><emphasis>n</emphasis> specifies the number of polygons to draw, the array <emphasis>count</emphasis> of size <emphasis>n</emphasis> specifies the number of points in each of the polygons in the <emphasis>points</emphasis> array.</para><para>The last argument specifies the fill rule: <bold>wxODDEVEN_RULE</bold> (the default) or <bold>wxWINDING_RULE</bold>.</para><para>The current pen is used for drawing the outline, and the current brush for filling the shape. Using a transparent brush suppresses filling.</para><para>The polygons maybe disjoint or overlapping. Each polygon specified in a call to <ref refid="classwx_d_c_1a3beb1e45475b7f62babd123944818703" kindref="member">DrawPolyPolygon()</ref> must be closed. Unlike polygons created by the <ref refid="classwx_d_c_1af3ded6183d3ba706d0377e5c25fcaf83" kindref="member">DrawPolygon()</ref> member function, the polygons created by this method are not closed automatically. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="509"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a918b9ae3447a2fc13f4c38c628a45c01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawRectangle</definition>
        <argsstring>(wxCoord x, wxCoord y, wxCoord width, wxCoord height)</argsstring>
        <name>DrawRectangle</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Draws a rectangle with the given top left corner, and with the given size. </para>        </briefdescription>
        <detaileddescription>
<para>The current pen is used for the outline and the current brush for filling the shape. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="516"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a5499c7359d84871343e4875902c06a69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawRectangle</definition>
        <argsstring>(const wxPoint &amp;pt, const wxSize &amp;sz)</argsstring>
        <name>DrawRectangle</name>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="521"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1ae0a8c6fe2eb45f6f03339b049db6b2b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawRectangle</definition>
        <argsstring>(const wxRect &amp;rect)</argsstring>
        <name>DrawRectangle</name>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="526"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1aae5aff11939d5c55ab5c50987e4f2521" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawRotatedText</definition>
        <argsstring>(const wxString &amp;text, wxCoord x, wxCoord y, double angle)</argsstring>
        <name>DrawRotatedText</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>Draws the text rotated by <emphasis>angle</emphasis> degrees (positive angles are counterclockwise; the full angle is 360 degrees). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Under Win9x only TrueType fonts can be drawn by this function. In particular, a font different from <computeroutput>wxNORMAL_FONT</computeroutput> should be used as the latter is not a TrueType font. <computeroutput>wxSWISS_FONT</computeroutput> is an example of a font which is.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_d_c_1a11d35ce34fccb57b0efc7dc91168660b" kindref="member">DrawText()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="540"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a791bc8502da484f1d3163e360cf91e8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawRotatedText</definition>
        <argsstring>(const wxString &amp;text, const wxPoint &amp;point, double angle)</argsstring>
        <name>DrawRotatedText</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="546"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a94db29e2a40a16dc19ac852d05cd65b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawRoundedRectangle</definition>
        <argsstring>(wxCoord x, wxCoord y, wxCoord width, wxCoord height, double radius)</argsstring>
        <name>DrawRoundedRectangle</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>height</declname>
        </param>
        <param>
          <type>double</type>
          <declname>radius</declname>
        </param>
        <briefdescription>
<para>Draws a rectangle with the given top left corner, and with the given size. </para>        </briefdescription>
        <detaileddescription>
<para>The corners are quarter-circles using the given radius. The current pen is used for the outline and the current brush for filling the shape.</para><para>If <emphasis>radius</emphasis> is positive, the value is assumed to be the radius of the rounded corner. If <emphasis>radius</emphasis> is negative, the absolute value is assumed to be the <emphasis>proportion</emphasis> of the smallest dimension of the rectangle. This means that the corner can be a sensible size relative to the size of the rectangle, and also avoids the strange effects X produces when the corners are too big for the rectangle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="562"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a9e4b8ab031042016d434606eb7744c9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawRoundedRectangle</definition>
        <argsstring>(const wxPoint &amp;pt, const wxSize &amp;sz, double radius)</argsstring>
        <name>DrawRoundedRectangle</name>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>double</type>
          <declname>radius</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="568"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a926fb2251b9185e58f15c41f680aaf2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawRoundedRectangle</definition>
        <argsstring>(const wxRect &amp;rect, double radius)</argsstring>
        <name>DrawRoundedRectangle</name>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>double</type>
          <declname>radius</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="573"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a45ae54ccc969bac583b14988dd2ea01e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawSpline</definition>
        <argsstring>(int n, wxPoint points[])</argsstring>
        <name>DrawSpline</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
          <declname>points</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Draws a spline between all given points using the current pen. </para>        </briefdescription>
        <detaileddescription>
<para><bold>wxPerl Note:</bold> Not supported by wxPerl. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="582"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1aacfb4bab651f9eb572e42cd2870c40c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawSpline</definition>
        <argsstring>(const wxPointList *points)</argsstring>
        <name>DrawSpline</name>
        <param>
          <type>const wxPointList *</type>
          <declname>points</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
<para><bold>wxPerl Note:</bold> The wxPerl version of this method accepts as its first parameter a reference to an array of <ref refid="classwx_point" kindref="compound">wxPoint</ref> objects. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="594"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a60c358ff3cfbf2b6f6d1918b527de98a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawSpline</definition>
        <argsstring>(wxCoord x1, wxCoord y1, wxCoord x2, wxCoord y2, wxCoord x3, wxCoord y3)</argsstring>
        <name>DrawSpline</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x1</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y1</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x2</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y2</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x3</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y3</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
<para><bold>wxPerl Note:</bold> Not supported by wxPerl. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="605"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a11d35ce34fccb57b0efc7dc91168660b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawText</definition>
        <argsstring>(const wxString &amp;text, wxCoord x, wxCoord y)</argsstring>
        <name>DrawText</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Draws a text string at the specified point, using the current text font, and the current text foreground and background colours. </para>        </briefdescription>
        <detaileddescription>
<para>The coordinates refer to the top-left corner of the rectangle bounding the string. See <ref refid="classwx_d_c_1ae55cbf1bc7b7e836cb192eb48d31efab" kindref="member">GetTextExtent()</ref> for how to get the dimensions of a text string, which can be used to position the text more precisely and <ref refid="classwx_d_c_1ae28d7aa2e17a850f4ca15c042a870152" kindref="member">DrawLabel()</ref> if you need to align the string differently.</para><para>Starting from wxWidgets 2.9.2 <emphasis>text</emphasis> parameter can be a multi-line string, i.e. contain new line characters, and will be rendered correctly.</para><para><simplesect kind="note"><para>The current <ref refid="classwx_d_c_1aaa63fac56c04221856bcae7e669a64af" kindref="member">logical function</ref> is ignored by this function. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="623"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a17f5674c449449b730c63f773534d721" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DrawText</definition>
        <argsstring>(const wxString &amp;text, const wxPoint &amp;pt)</argsstring>
        <name>DrawText</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="628"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a323802ed579056fce98220f5d1778076" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::GradientFillConcentric</definition>
        <argsstring>(const wxRect &amp;rect, const wxColour &amp;initialColour, const wxColour &amp;destColour)</argsstring>
        <name>GradientFillConcentric</name>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>initialColour</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>destColour</declname>
        </param>
        <briefdescription>
<para>Fill the area specified by rect with a radial gradient, starting from <emphasis>initialColour</emphasis> at the centre of the circle and fading to <emphasis>destColour</emphasis> on the circle outside. </para>        </briefdescription>
        <detaileddescription>
<para>The circle is placed at the centre of <emphasis>rect</emphasis>.</para><para><simplesect kind="note"><para>Currently this function is very slow, don&apos;t use it for real-time drawing. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="642"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a2f0cd1850aefeda55b25cf56d55ac495" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::GradientFillConcentric</definition>
        <argsstring>(const wxRect &amp;rect, const wxColour &amp;initialColour, const wxColour &amp;destColour, const wxPoint &amp;circleCenter)</argsstring>
        <name>GradientFillConcentric</name>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>initialColour</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>destColour</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>circleCenter</declname>
        </param>
        <briefdescription>
<para>Fill the area specified by rect with a radial gradient, starting from <emphasis>initialColour</emphasis> at the centre of the circle and fading to <emphasis>destColour</emphasis> on the circle outside. </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>circleCenter</emphasis> are the relative coordinates of centre of the circle in the specified <emphasis>rect</emphasis>.</para><para><simplesect kind="note"><para>Currently this function is very slow, don&apos;t use it for real-time drawing. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="658"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a9cfbde2fcde06ffacf323f3a9dd1b020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::GradientFillLinear</definition>
        <argsstring>(const wxRect &amp;rect, const wxColour &amp;initialColour, const wxColour &amp;destColour, wxDirection nDirection=wxRIGHT)</argsstring>
        <name>GradientFillLinear</name>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>initialColour</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>destColour</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1ac0f30319732dcceda470516918ff3556" kindref="member">wxDirection</ref></type>
          <declname>nDirection</declname>
          <defval>wxRIGHT</defval>
        </param>
        <briefdescription>
<para>Fill the area specified by <emphasis>rect</emphasis> with a linear gradient, starting from <emphasis>initialColour</emphasis> and eventually fading to <emphasis>destColour</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>nDirection</emphasis> specifies the direction of the colour change, default is to use <emphasis>initialColour</emphasis> on the left part of the rectangle and <emphasis>destColour</emphasis> on the right one. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="670"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1af510e22ffc274d3d3b29659941f2b5a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxDC::FloodFill</definition>
        <argsstring>(wxCoord x, wxCoord y, const wxColour &amp;colour, wxFloodFillStyle style=wxFLOOD_SURFACE)</argsstring>
        <name>FloodFill</name>
        <reimplementedby refid="classwx_s_v_g_file_d_c_1af1b54af9382656b98cf4d5bf3f051618">FloodFill</reimplementedby>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>colour</declname>
        </param>
        <param>
          <type><ref refid="interface_2wx_2dc_8h_1a7ad228eb95f51d70574644e99d07dc8c" kindref="member">wxFloodFillStyle</ref></type>
          <declname>style</declname>
          <defval>wxFLOOD_SURFACE</defval>
        </param>
        <briefdescription>
<para>Flood fills the device context starting from the given point, using the current brush colour, and using a style: </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>wxFLOOD_SURFACE: The flooding occurs until a colour other than the given colour is encountered.</para></listitem><listitem><para>wxFLOOD_BORDER: The area to be flooded is bounded by the given colour.</para></listitem></itemizedlist>
</para><para><simplesect kind="return"><para>false if the operation failed.</para></simplesect>
<simplesect kind="note"><para>The present implementation for non-Windows platforms may fail to find colour borders if the pixels do not match the colour exactly. However the function will still return true.</para><simplesectsep/><para>This method shouldn&apos;t be used with <ref refid="classwx_paint_d_c" kindref="compound">wxPaintDC</ref> under non-Windows platforms as it uses <ref refid="classwx_d_c_1a3f82f6b54ba2e6f348de7f779487b234" kindref="member">GetPixel()</ref> internally and this may give wrong results, notably in wxGTK. If you need to flood fill <ref refid="classwx_paint_d_c" kindref="compound">wxPaintDC</ref>, create a temporary <ref refid="classwx_memory_d_c" kindref="compound">wxMemoryDC</ref>, flood fill it and then blit it to, or draw as a bitmap on, <ref refid="classwx_paint_d_c" kindref="compound">wxPaintDC</ref>. See the example of doing this in the drawing sample and <ref refid="classwx_buffered_paint_d_c" kindref="compound">wxBufferedPaintDC</ref> class. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="695"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1aa3ad38fdcd0e731af94bd9c3189e72e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxDC::FloodFill</definition>
        <argsstring>(const wxPoint &amp;pt, const wxColour &amp;col, wxFloodFillStyle style=wxFLOOD_SURFACE)</argsstring>
        <name>FloodFill</name>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>col</declname>
        </param>
        <param>
          <type><ref refid="interface_2wx_2dc_8h_1a7ad228eb95f51d70574644e99d07dc8c" kindref="member">wxFloodFillStyle</ref></type>
          <declname>style</declname>
          <defval>wxFLOOD_SURFACE</defval>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="701"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1af8bab4cd7ffc3050974236a32afa1e1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::CrossHair</definition>
        <argsstring>(wxCoord x, wxCoord y)</argsstring>
        <name>CrossHair</name>
        <reimplementedby refid="classwx_s_v_g_file_d_c_1ae9c7ad3de5259a461eb4fd7c56b58d90">CrossHair</reimplementedby>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Displays a cross hair using the current pen. </para>        </briefdescription>
        <detaileddescription>
<para>This is a vertical and horizontal line the height and width of the window, centred on the given point. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="708"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1ad5ad1b17105668a9cba6f4f6cc902a02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::CrossHair</definition>
        <argsstring>(const wxPoint &amp;pt)</argsstring>
        <name>CrossHair</name>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="713"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Clipping region functions</header>
      <memberdef kind="function" id="classwx_d_c_1ae0b0fc593c4559b9ac70e121bd28e3b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::DestroyClippingRegion</definition>
        <argsstring>()</argsstring>
        <name>DestroyClippingRegion</name>
        <reimplementedby refid="classwx_s_v_g_file_d_c_1a83be1b0f0b66a4949268e34348af3ee8">DestroyClippingRegion</reimplementedby>
        <briefdescription>
<para>Destroys the current clipping region so that none of the DC is clipped. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_d_c_1a21ce8b27db0da5d68b8571d0ff39114b" kindref="member">SetClippingRegion()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="728"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1ad5e374115511157ceed3d4c983a4dd7f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::GetClippingBox</definition>
        <argsstring>(wxCoord *x, wxCoord *y, wxCoord *width, wxCoord *height) const </argsstring>
        <name>GetClippingBox</name>
        <reimplementedby refid="classwx_s_v_g_file_d_c_1a41b2bd5acba931cdb14169019ae106a4">GetClippingBox</reimplementedby>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref> *</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref> *</type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref> *</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Gets the rectangle surrounding the current clipping region. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="733"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a21ce8b27db0da5d68b8571d0ff39114b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::SetClippingRegion</definition>
        <argsstring>(wxCoord x, wxCoord y, wxCoord width, wxCoord height)</argsstring>
        <name>SetClippingRegion</name>
        <reimplementedby refid="classwx_s_v_g_file_d_c_1aeb64330f4f9430472894df975968059a">SetClippingRegion</reimplementedby>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Sets the clipping region for this device context to the intersection of the given region described by the parameters of this method and the previously set clipping region. </para>        </briefdescription>
        <detaileddescription>
<para>The clipping region is an area to which drawing is restricted. Possible uses for the clipping region are for clipping text or for speeding up window redraws when only a known area of the screen is damaged.</para><para>Notice that you need to call <ref refid="classwx_d_c_1ae0b0fc593c4559b9ac70e121bd28e3b4" kindref="member">DestroyClippingRegion()</ref> if you want to set the clipping region exactly to the region specified.</para><para>Also note that if the clipping region is empty, any previously set clipping region is destroyed, i.e. it is equivalent to calling <ref refid="classwx_d_c_1ae0b0fc593c4559b9ac70e121bd28e3b4" kindref="member">DestroyClippingRegion()</ref>, and not to clipping out all drawing on the DC as might be expected.</para><para><simplesect kind="see"><para><ref refid="classwx_d_c_1ae0b0fc593c4559b9ac70e121bd28e3b4" kindref="member">DestroyClippingRegion()</ref>, <ref refid="classwx_region" kindref="compound">wxRegion</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="754"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a800f7ca2a4a7588ff68d808eb06191e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::SetClippingRegion</definition>
        <argsstring>(const wxPoint &amp;pt, const wxSize &amp;sz)</argsstring>
        <name>SetClippingRegion</name>
        <reimplementedby refid="classwx_s_v_g_file_d_c_1a719ce39244b3ae8b202ce7942467cc70">SetClippingRegion</reimplementedby>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="759"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a9a397f713db57f7999b5851a5b25dd84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::SetClippingRegion</definition>
        <argsstring>(const wxRect &amp;rect)</argsstring>
        <name>SetClippingRegion</name>
        <reimplementedby refid="classwx_s_v_g_file_d_c_1a280990002cc2671542eb7a0523da6e41">SetClippingRegion</reimplementedby>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="764"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a382a46c105ebad94e848e74e9cc0b4b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::SetDeviceClippingRegion</definition>
        <argsstring>(const wxRegion &amp;region)</argsstring>
        <name>SetDeviceClippingRegion</name>
        <param>
          <type>const <ref refid="classwx_region" kindref="compound">wxRegion</ref> &amp;</type>
          <declname>region</declname>
        </param>
        <briefdescription>
<para>Sets the clipping region for this device context. </para>        </briefdescription>
        <detaileddescription>
<para>Unlike <ref refid="classwx_d_c_1a21ce8b27db0da5d68b8571d0ff39114b" kindref="member">SetClippingRegion()</ref>, this function works with physical coordinates and not with the logical ones. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="772"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Text/character extent functions</header>
      <memberdef kind="function" id="classwx_d_c_1a6faa7a475c43b2305e9ffebac5259d15" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
        <definition>wxCoord wxDC::GetCharHeight</definition>
        <argsstring>() const </argsstring>
        <name>GetCharHeight</name>
        <briefdescription>
<para>Gets the character height of the currently set font. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="785"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a2d854a964cbabc521ac6a84b0b1ffe20" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
        <definition>wxCoord wxDC::GetCharWidth</definition>
        <argsstring>() const </argsstring>
        <name>GetCharWidth</name>
        <briefdescription>
<para>Gets the average character width of the currently set font. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="790"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a017ad82379a6e52d6b2ba1d212b65950" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwx_font_metrics" kindref="compound">wxFontMetrics</ref></type>
        <definition>wxFontMetrics wxDC::GetFontMetrics</definition>
        <argsstring>() const </argsstring>
        <name>GetFontMetrics</name>
        <briefdescription>
<para>Returns the various font characteristics. </para>        </briefdescription>
        <detaileddescription>
<para>This method allows to retrieve some of the font characteristics not returned by <ref refid="classwx_d_c_1ae55cbf1bc7b7e836cb192eb48d31efab" kindref="member">GetTextExtent()</ref>, notably internal leading and average character width.</para><para>Currently this method returns correct results only under wxMSW, in the other ports the internal leading will always be 0 and the average character width will be computed as the width of the character &apos;x&apos;.</para><para><simplesect kind="since"><para>2.9.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="805"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a1983be5fdf9e88127d15fff119a0ef03" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::GetMultiLineTextExtent</definition>
        <argsstring>(const wxString &amp;string, wxCoord *w, wxCoord *h, wxCoord *heightLine=NULL, const wxFont *font=NULL) const </argsstring>
        <name>GetMultiLineTextExtent</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref> *</type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref> *</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref> *</type>
          <declname>heightLine</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_font" kindref="compound">wxFont</ref> *</type>
          <declname>font</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Gets the dimensions of the string using the currently selected font. </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>string</emphasis> is the text string to measure, <emphasis>heightLine</emphasis>, if non NULL, is where to store the height of a single line.</para><para>The text extent is set in the given <emphasis>w</emphasis> and <emphasis>h</emphasis> pointers.</para><para>If the optional parameter <emphasis>font</emphasis> is specified and valid, then it is used for the text extent calculation, otherwise the currently selected font is used.</para><para><simplesect kind="note"><para>This function works with both single-line and multi-line strings.</para></simplesect>
<bold>wxPerl Note:</bold> In wxPerl this method is implemented as GetMultiLineTextExtent(string, font = undef) returning a 3-element list (width, height, line_height)</para><para><simplesect kind="see"><para><ref refid="classwx_font" kindref="compound">wxFont</ref>, <ref refid="classwx_d_c_1afab18239d707cd403235b36a987171a8" kindref="member">SetFont()</ref>, <ref refid="classwx_d_c_1aa0dd5cdd1ce56ff3d1c23d233711653d" kindref="member">GetPartialTextExtents()</ref>, <ref refid="classwx_d_c_1ae55cbf1bc7b7e836cb192eb48d31efab" kindref="member">GetTextExtent()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="831"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1af04e14231873e8659c4e88036f1bb8ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxDC::GetMultiLineTextExtent</definition>
        <argsstring>(const wxString &amp;string) const </argsstring>
        <name>GetMultiLineTextExtent</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
<para>Gets the dimensions of the string using the currently selected font. </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>string</emphasis> is the text string to measure, <emphasis>heightLine</emphasis>, if non NULL, is where to store the height of a single line.</para><para><simplesect kind="return"><para>The text extent as a <ref refid="classwx_size" kindref="compound">wxSize</ref> object.</para></simplesect>
<simplesect kind="note"><para>This function works with both single-line and multi-line strings.</para></simplesect>
<bold>wxPerl Note:</bold> Not supported by wxPerl.</para><para><simplesect kind="see"><para><ref refid="classwx_font" kindref="compound">wxFont</ref>, <ref refid="classwx_d_c_1afab18239d707cd403235b36a987171a8" kindref="member">SetFont()</ref>, <ref refid="classwx_d_c_1aa0dd5cdd1ce56ff3d1c23d233711653d" kindref="member">GetPartialTextExtents()</ref>, <ref refid="classwx_d_c_1ae55cbf1bc7b7e836cb192eb48d31efab" kindref="member">GetTextExtent()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="847"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1aa0dd5cdd1ce56ff3d1c23d233711653d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxDC::GetPartialTextExtents</definition>
        <argsstring>(const wxString &amp;text, wxArrayInt &amp;widths) const </argsstring>
        <name>GetPartialTextExtents</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type><ref refid="dynarray_8h_1add87f199292e36ee87efd6d7f0d4ee66" kindref="member">wxArrayInt</ref> &amp;</type>
          <declname>widths</declname>
        </param>
        <briefdescription>
<para>Fills the <emphasis>widths</emphasis> array with the widths from the beginning of <emphasis>text</emphasis> to the corresponding character of <emphasis>text</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>The generic version simply builds a running total of the widths of each character using <ref refid="classwx_d_c_1ae55cbf1bc7b7e836cb192eb48d31efab" kindref="member">GetTextExtent()</ref>, however if the various platforms have a native API function that is faster or more accurate than the generic implementation then it should be used instead.</para><para><bold>wxPerl Note:</bold> In wxPerl this method only takes the <emphasis>text</emphasis> parameter and returns the widths as a list of integers.</para><para><simplesect kind="see"><para><ref refid="classwx_d_c_1a1983be5fdf9e88127d15fff119a0ef03" kindref="member">GetMultiLineTextExtent()</ref>, <ref refid="classwx_d_c_1ae55cbf1bc7b7e836cb192eb48d31efab" kindref="member">GetTextExtent()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="865"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1ae55cbf1bc7b7e836cb192eb48d31efab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::GetTextExtent</definition>
        <argsstring>(const wxString &amp;string, wxCoord *w, wxCoord *h, wxCoord *descent=NULL, wxCoord *externalLeading=NULL, const wxFont *font=NULL) const </argsstring>
        <name>GetTextExtent</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref> *</type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref> *</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref> *</type>
          <declname>descent</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref> *</type>
          <declname>externalLeading</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_font" kindref="compound">wxFont</ref> *</type>
          <declname>font</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Gets the dimensions of the string using the currently selected font. </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>string</emphasis> is the text string to measure, <emphasis>descent</emphasis> is the dimension from the baseline of the font to the bottom of the descender, and <emphasis>externalLeading</emphasis> is any extra vertical space added to the font by the font designer (usually is zero).</para><para>The text extent is returned in <emphasis>w</emphasis> and <emphasis>h</emphasis> pointers or as a <ref refid="classwx_size" kindref="compound">wxSize</ref> object depending on which version of this function is used.</para><para>If the optional parameter <emphasis>font</emphasis> is specified and valid, then it is used for the text extent calculation. Otherwise the currently selected font is.</para><para><simplesect kind="note"><para>This function only works with single-line strings.</para></simplesect>
<bold>wxPerl Note:</bold> In wxPerl this method is implemented as GetTextExtent(string, font = undef) returning a 4-element list (width, height, descent, externalLeading)</para><para><simplesect kind="see"><para><ref refid="classwx_font" kindref="compound">wxFont</ref>, <ref refid="classwx_d_c_1afab18239d707cd403235b36a987171a8" kindref="member">SetFont()</ref>, <ref refid="classwx_d_c_1aa0dd5cdd1ce56ff3d1c23d233711653d" kindref="member">GetPartialTextExtents()</ref>, <ref refid="classwx_d_c_1a1983be5fdf9e88127d15fff119a0ef03" kindref="member">GetMultiLineTextExtent()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="895"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1ac195999acf9dd440bf92272eb4206c35" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxDC::GetTextExtent</definition>
        <argsstring>(const wxString &amp;string) const </argsstring>
        <name>GetTextExtent</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
<para><bold>wxPerl Note:</bold> Not supported by wxPerl. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="905"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Text properties functions</header>
      <memberdef kind="function" id="classwx_d_c_1a424e74e4790076a314511f86b8b7f408" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxDC::GetBackgroundMode</definition>
        <argsstring>() const </argsstring>
        <name>GetBackgroundMode</name>
        <briefdescription>
<para>Returns the current background mode: <computeroutput>wxSOLID</computeroutput> or <computeroutput>wxTRANSPARENT</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_d_c_1a86c405ae265e6fdb4e393c4c9ada73c0" kindref="member">SetBackgroundMode()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="920"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a06000dac38b658a388a9ad1d9d029a2a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_font" kindref="compound">wxFont</ref> &amp;</type>
        <definition>const wxFont&amp; wxDC::GetFont</definition>
        <argsstring>() const </argsstring>
        <name>GetFont</name>
        <briefdescription>
<para>Gets the current font. </para>        </briefdescription>
        <detaileddescription>
<para>Notice that even although each device context object has some default font after creation, this method would return a <ref refid="interface_2wx_2font_8h_1aa81b6e7b8f74356bfe604485a4be1066" kindref="member">wxNullFont</ref> initially and only after calling <ref refid="classwx_d_c_1afab18239d707cd403235b36a987171a8" kindref="member">SetFont()</ref> a valid font is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="929"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a781d5a5c56d1c3caeca4e3e18847fb47" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="intl_8h_1a7e30efec05ef9b40b1750ac046400c81" kindref="member">wxLayoutDirection</ref></type>
        <definition>wxLayoutDirection wxDC::GetLayoutDirection</definition>
        <argsstring>() const </argsstring>
        <name>GetLayoutDirection</name>
        <briefdescription>
<para>Gets the current layout direction of the device context. </para>        </briefdescription>
        <detaileddescription>
<para>On platforms where RTL layout is supported, the return value will either be <computeroutput>wxLayout_LeftToRight</computeroutput> or <computeroutput>wxLayout_RightToLeft</computeroutput>. If RTL layout is not supported, the return value will be <computeroutput>wxLayout_Default</computeroutput>.</para><para><simplesect kind="see"><para><ref refid="classwx_d_c_1a16196571f402cabf506619e8bf9f1586" kindref="member">SetLayoutDirection()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="939"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a1f3d318c90a2e7a89fb116feeacd4bcf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
        <definition>const wxColour&amp; wxDC::GetTextBackground</definition>
        <argsstring>() const </argsstring>
        <name>GetTextBackground</name>
        <briefdescription>
<para>Gets the current text background colour. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_d_c_1a3ed22bd0a0b835d4d085261bb022766b" kindref="member">SetTextBackground()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="946"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a0f044e87752d3c5e49a7f028fb3c44de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
        <definition>const wxColour&amp; wxDC::GetTextForeground</definition>
        <argsstring>() const </argsstring>
        <name>GetTextForeground</name>
        <briefdescription>
<para>Gets the current text foreground colour. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_d_c_1aeac811df9a1688ce875117f3049849d6" kindref="member">SetTextForeground()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="953"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a86c405ae265e6fdb4e393c4c9ada73c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::SetBackgroundMode</definition>
        <argsstring>(int mode)</argsstring>
        <name>SetBackgroundMode</name>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para><emphasis>mode</emphasis> may be one of <computeroutput>wxSOLID</computeroutput> and <computeroutput>wxTRANSPARENT</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This setting determines whether text will be drawn with a background colour or not. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="961"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1afab18239d707cd403235b36a987171a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::SetFont</definition>
        <argsstring>(const wxFont &amp;font)</argsstring>
        <name>SetFont</name>
        <param>
          <type>const <ref refid="classwx_font" kindref="compound">wxFont</ref> &amp;</type>
          <declname>font</declname>
        </param>
        <briefdescription>
<para>Sets the current font for the DC. </para>        </briefdescription>
        <detaileddescription>
<para>If the argument is <ref refid="interface_2wx_2font_8h_1aa81b6e7b8f74356bfe604485a4be1066" kindref="member">wxNullFont</ref> (or another invalid font; see <ref refid="classwx_font_1a3ea0ba08b44ea25a2c52cf18efb6856e" kindref="member">wxFont::IsOk</ref>), the current font is selected out of the device context (leaving <ref refid="classwx_d_c" kindref="compound">wxDC</ref> without any valid font), allowing the current font to be destroyed safely.</para><para><simplesect kind="see"><para><ref refid="classwx_font" kindref="compound">wxFont</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="972"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a3ed22bd0a0b835d4d085261bb022766b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::SetTextBackground</definition>
        <argsstring>(const wxColour &amp;colour)</argsstring>
        <name>SetTextBackground</name>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>colour</declname>
        </param>
        <briefdescription>
<para>Sets the current text background colour for the DC. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="977"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1aeac811df9a1688ce875117f3049849d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::SetTextForeground</definition>
        <argsstring>(const wxColour &amp;colour)</argsstring>
        <name>SetTextForeground</name>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>colour</declname>
        </param>
        <briefdescription>
<para>Sets the current text foreground colour for the DC. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_memory_d_c" kindref="compound">wxMemoryDC</ref> for the interpretation of colours when drawing into a monochrome bitmap. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="985"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a16196571f402cabf506619e8bf9f1586" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::SetLayoutDirection</definition>
        <argsstring>(wxLayoutDirection dir)</argsstring>
        <name>SetLayoutDirection</name>
        <param>
          <type><ref refid="intl_8h_1a7e30efec05ef9b40b1750ac046400c81" kindref="member">wxLayoutDirection</ref></type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Sets the current layout direction for the device context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>May be either <computeroutput>wxLayout_Default</computeroutput>, <computeroutput>wxLayout_LeftToRight</computeroutput> or <computeroutput>wxLayout_RightToLeft</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classwx_d_c_1a781d5a5c56d1c3caeca4e3e18847fb47" kindref="member">GetLayoutDirection()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="996"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Bounding box functions</header>
      <memberdef kind="function" id="classwx_d_c_1a850699d4fdc9006421b085d2d37fa0c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::CalcBoundingBox</definition>
        <argsstring>(wxCoord x, wxCoord y)</argsstring>
        <name>CalcBoundingBox</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Adds the specified point to the bounding box which can be retrieved with <ref refid="classwx_d_c_1a603de4a911be9500e5eb5ffda87750bc" kindref="member">MinX()</ref>, <ref refid="classwx_d_c_1a8829696c6ebabed7053f8a9479fabeef" kindref="member">MaxX()</ref> and <ref refid="classwx_d_c_1aecfe126a0ebb9818f1b3abf43675e744" kindref="member">MinY()</ref>, <ref refid="classwx_d_c_1a90b1bc13bd01e442754e91935a8d0ef3" kindref="member">MaxY()</ref> functions. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_d_c_1a35ed8c0c64315ec85588142d44f83af8" kindref="member">ResetBoundingBox()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1012"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a8829696c6ebabed7053f8a9479fabeef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
        <definition>wxCoord wxDC::MaxX</definition>
        <argsstring>() const </argsstring>
        <name>MaxX</name>
        <briefdescription>
<para>Gets the maximum horizontal extent used in drawing commands so far. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1017"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a90b1bc13bd01e442754e91935a8d0ef3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
        <definition>wxCoord wxDC::MaxY</definition>
        <argsstring>() const </argsstring>
        <name>MaxY</name>
        <briefdescription>
<para>Gets the maximum vertical extent used in drawing commands so far. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1022"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a603de4a911be9500e5eb5ffda87750bc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
        <definition>wxCoord wxDC::MinX</definition>
        <argsstring>() const </argsstring>
        <name>MinX</name>
        <briefdescription>
<para>Gets the minimum horizontal extent used in drawing commands so far. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1027"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1aecfe126a0ebb9818f1b3abf43675e744" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
        <definition>wxCoord wxDC::MinY</definition>
        <argsstring>() const </argsstring>
        <name>MinY</name>
        <briefdescription>
<para>Gets the minimum vertical extent used in drawing commands so far. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1032"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a35ed8c0c64315ec85588142d44f83af8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::ResetBoundingBox</definition>
        <argsstring>()</argsstring>
        <name>ResetBoundingBox</name>
        <briefdescription>
<para>Resets the bounding box: after a call to this function, the bounding box doesn&apos;t contain anything. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_d_c_1a850699d4fdc9006421b085d2d37fa0c0" kindref="member">CalcBoundingBox()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1040"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Page and document start/end functions</header>
      <memberdef kind="function" id="classwx_d_c_1ad6572581c9d31dc349b6a7462426856c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxDC::StartDoc</definition>
        <argsstring>(const wxString &amp;message)</argsstring>
        <name>StartDoc</name>
        <reimplementedby refid="classwx_s_v_g_file_d_c_1afc23fca3c1919a917ba4fa4ea1a47bd6">StartDoc</reimplementedby>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Starts a document (only relevant when outputting to a printer). </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>message</emphasis> is a message to show while printing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1054"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a94c855ceb9f2fd5dcd1cf61396c13576" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::StartPage</definition>
        <argsstring>()</argsstring>
        <name>StartPage</name>
        <briefdescription>
<para>Starts a document page (only relevant when outputting to a printer). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1059"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a95a506a0153d24dc352577161d45081c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::EndDoc</definition>
        <argsstring>()</argsstring>
        <name>EndDoc</name>
        <reimplementedby refid="classwx_s_v_g_file_d_c_1a70fee3fe2c116cd5698e89c63992dfe1">EndDoc</reimplementedby>
        <briefdescription>
<para>Ends a document (only relevant when outputting to a printer). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1064"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a3867f84557ecaf68bfeacffea74e8902" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::EndPage</definition>
        <argsstring>()</argsstring>
        <name>EndPage</name>
        <reimplementedby refid="classwx_s_v_g_file_d_c_1aabbe60d5f7816974da2ab92195de961a">EndPage</reimplementedby>
        <briefdescription>
<para>Ends a document page (only relevant when outputting to a printer). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1069"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Bit-Block Transfer operations (blit)</header>
      <memberdef kind="function" id="classwx_d_c_1a12bed94a15136b9080683f4151042a34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxDC::Blit</definition>
        <argsstring>(wxCoord xdest, wxCoord ydest, wxCoord width, wxCoord height, wxDC *source, wxCoord xsrc, wxCoord ysrc, wxRasterOperationMode logicalFunc=wxCOPY, bool useMask=false, wxCoord xsrcMask=wxDefaultCoord, wxCoord ysrcMask=wxDefaultCoord)</argsstring>
        <name>Blit</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>xdest</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>ydest</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>xsrc</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>ysrc</declname>
        </param>
        <param>
          <type><ref refid="interface_2wx_2dc_8h_1a07398221a1f9dfecf424c90c5c777d54" kindref="member">wxRasterOperationMode</ref></type>
          <declname>logicalFunc</declname>
          <defval>wxCOPY</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>useMask</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>xsrcMask</declname>
          <defval><ref refid="defs_8h_1ae297119c813ec5d3328ce3f43f9ac6c1" kindref="member">wxDefaultCoord</ref></defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>ysrcMask</declname>
          <defval><ref refid="defs_8h_1ae297119c813ec5d3328ce3f43f9ac6c1" kindref="member">wxDefaultCoord</ref></defval>
        </param>
        <briefdescription>
<para>Copy from a source DC to this DC. </para>        </briefdescription>
        <detaileddescription>
<para>With this method you can specify the destination coordinates and the size of area to copy which will be the same for both the source and target DCs. If you need to apply scaling while copying, use <ref refid="classwx_d_c_1a82801167a35e747218c49aa2161ae4bf" kindref="member">StretchBlit()</ref>.</para><para>Notice that source DC coordinates <emphasis>xsrc</emphasis> and <emphasis>ysrc</emphasis> are interpreted using the current source DC coordinate system, i.e. the scale, origin position and axis directions are taken into account when transforming them to physical (pixel) coordinates.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xdest</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination device context x position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ydest</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination device context y position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of source area to be copied. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of source area to be copied. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>Source device context. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xsrc</parametername>
</parameternamelist>
<parameterdescription>
<para>Source device context x position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ysrc</parametername>
</parameternamelist>
<parameterdescription>
<para>Source device context y position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>logicalFunc</parametername>
</parameternamelist>
<parameterdescription>
<para>Logical function to use, see <ref refid="classwx_d_c_1aae8adce8cf260bf703b8e76784bd577d" kindref="member">SetLogicalFunction()</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>useMask</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, Blit does a transparent blit using the mask that is associated with the bitmap selected into the source device context. The Windows implementation does the following if MaskBlt cannot be used: <orderedlist>
<listitem>
<para>Creates a temporary bitmap and copies the destination area into it. </para></listitem>
<listitem>
<para>Copies the source area into the temporary bitmap using the specified logical function. </para></listitem>
<listitem>
<para>Sets the masked area in the temporary bitmap to BLACK by ANDing the mask bitmap with the temp bitmap with the foreground colour set to WHITE and the bg colour set to BLACK. </para></listitem>
<listitem>
<para>Sets the unmasked area in the destination area to BLACK by ANDing the mask bitmap with the destination area with the foreground colour set to BLACK and the background colour set to WHITE. </para></listitem>
<listitem>
<para>ORs the temporary bitmap with the destination area. </para></listitem>
<listitem>
<para>Deletes the temporary bitmap. </para></listitem>
</orderedlist>
This sequence of operations ensures that the source&apos;s transparent area need not be black, and logical functions are supported. <linebreak/>
 <bold>Note:</bold> on Windows, blitting with masks can be speeded up considerably by compiling wxWidgets with the wxUSE_DC_CACHEING option enabled. You can also influence whether MaskBlt or the explicit mask blitting code above is used, by using <ref refid="classwx_system_options" kindref="compound">wxSystemOptions</ref> and setting the <computeroutput>no-maskblt</computeroutput> option to 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xsrcMask</parametername>
</parameternamelist>
<parameterdescription>
<para>Source x position on the mask. If both xsrcMask and ysrcMask are <computeroutput>-1</computeroutput>, xsrc and ysrc will be assumed for the mask source position. Currently only implemented on Windows. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ysrcMask</parametername>
</parameternamelist>
<parameterdescription>
<para>Source y position on the mask. If both xsrcMask and ysrcMask are <computeroutput>-1</computeroutput>, xsrc and ysrc will be assumed for the mask source position. Currently only implemented on Windows.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>There is partial support for <ref refid="classwx_d_c_1a12bed94a15136b9080683f4151042a34" kindref="member">Blit()</ref> in <ref refid="classwx_post_script_d_c" kindref="compound">wxPostScriptDC</ref>, under X.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_d_c_1a82801167a35e747218c49aa2161ae4bf" kindref="member">StretchBlit()</ref>, <ref refid="classwx_memory_d_c" kindref="compound">wxMemoryDC</ref>, <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref>, <ref refid="classwx_mask" kindref="compound">wxMask</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1151"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a82801167a35e747218c49aa2161ae4bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxDC::StretchBlit</definition>
        <argsstring>(wxCoord xdest, wxCoord ydest, wxCoord dstWidth, wxCoord dstHeight, wxDC *source, wxCoord xsrc, wxCoord ysrc, wxCoord srcWidth, wxCoord srcHeight, wxRasterOperationMode logicalFunc=wxCOPY, bool useMask=false, wxCoord xsrcMask=wxDefaultCoord, wxCoord ysrcMask=wxDefaultCoord)</argsstring>
        <name>StretchBlit</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>xdest</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>ydest</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>dstWidth</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>dstHeight</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>xsrc</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>ysrc</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>srcWidth</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>srcHeight</declname>
        </param>
        <param>
          <type><ref refid="interface_2wx_2dc_8h_1a07398221a1f9dfecf424c90c5c777d54" kindref="member">wxRasterOperationMode</ref></type>
          <declname>logicalFunc</declname>
          <defval>wxCOPY</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>useMask</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>xsrcMask</declname>
          <defval><ref refid="defs_8h_1ae297119c813ec5d3328ce3f43f9ac6c1" kindref="member">wxDefaultCoord</ref></defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>ysrcMask</declname>
          <defval><ref refid="defs_8h_1ae297119c813ec5d3328ce3f43f9ac6c1" kindref="member">wxDefaultCoord</ref></defval>
        </param>
        <briefdescription>
<para>Copy from a source DC to this DC possibly changing the scale. </para>        </briefdescription>
        <detaileddescription>
<para>Unlike <ref refid="classwx_d_c_1a12bed94a15136b9080683f4151042a34" kindref="member">Blit()</ref>, this method allows to specify different source and destination region sizes, meaning that it can stretch or shrink it while copying. The same can be achieved by changing the scale of the source or target DC but calling this method is simpler and can also be more efficient if the platform provides a native implementation of it.</para><para>The meaning of its other parameters is the same as with <ref refid="classwx_d_c_1a12bed94a15136b9080683f4151042a34" kindref="member">Blit()</ref>, in particular all source coordinates are interpreted using the source DC coordinate system, i.e. are affected by its scale, origin translation and axis direction.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xdest</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination device context x position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ydest</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination device context y position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dstWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of destination area. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dstHeight</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of destination area. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>Source device context. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xsrc</parametername>
</parameternamelist>
<parameterdescription>
<para>Source device context x position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ysrc</parametername>
</parameternamelist>
<parameterdescription>
<para>Source device context y position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>srcWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of source area to be copied. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>srcHeight</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of source area to be copied. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>logicalFunc</parametername>
</parameternamelist>
<parameterdescription>
<para>Logical function to use, see <ref refid="classwx_d_c_1aae8adce8cf260bf703b8e76784bd577d" kindref="member">SetLogicalFunction()</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>useMask</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, Blit does a transparent blit using the mask that is associated with the bitmap selected into the source device context. The Windows implementation does the following if MaskBlt cannot be used: <orderedlist>
<listitem>
<para>Creates a temporary bitmap and copies the destination area into it. </para></listitem>
<listitem>
<para>Copies the source area into the temporary bitmap using the specified logical function. </para></listitem>
<listitem>
<para>Sets the masked area in the temporary bitmap to BLACK by ANDing the mask bitmap with the temp bitmap with the foreground colour set to WHITE and the bg colour set to BLACK. </para></listitem>
<listitem>
<para>Sets the unmasked area in the destination area to BLACK by ANDing the mask bitmap with the destination area with the foreground colour set to BLACK and the background colour set to WHITE. </para></listitem>
<listitem>
<para>ORs the temporary bitmap with the destination area. </para></listitem>
<listitem>
<para>Deletes the temporary bitmap. </para></listitem>
</orderedlist>
This sequence of operations ensures that the source&apos;s transparent area need not be black, and logical functions are supported. <linebreak/>
 <bold>Note:</bold> on Windows, blitting with masks can be speeded up considerably by compiling wxWidgets with the wxUSE_DC_CACHEING option enabled. You can also influence whether MaskBlt or the explicit mask blitting code above is used, by using <ref refid="classwx_system_options" kindref="compound">wxSystemOptions</ref> and setting the <computeroutput>no-maskblt</computeroutput> option to 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xsrcMask</parametername>
</parameternamelist>
<parameterdescription>
<para>Source x position on the mask. If both xsrcMask and ysrcMask are wxDefaultCoord, <emphasis>xsrc</emphasis> and <emphasis>ysrc</emphasis> will be assumed for the mask source position. Currently only implemented on Windows. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ysrcMask</parametername>
</parameternamelist>
<parameterdescription>
<para>Source y position on the mask. If both xsrcMask and ysrcMask are wxDefaultCoord, <emphasis>xsrc</emphasis> and <emphasis>ysrc</emphasis> will be assumed for the mask source position. Currently only implemented on Windows.</para></parameterdescription>
</parameteritem>
</parameterlist>
There is partial support for <ref refid="classwx_d_c_1a12bed94a15136b9080683f4151042a34" kindref="member">Blit()</ref> in <ref refid="classwx_post_script_d_c" kindref="compound">wxPostScriptDC</ref>, under X.</para><para>See <ref refid="classwx_memory_d_c" kindref="compound">wxMemoryDC</ref> for typical usage.</para><para><simplesect kind="since"><para>2.9.0</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_d_c_1a12bed94a15136b9080683f4151042a34" kindref="member">Blit()</ref>, <ref refid="classwx_memory_d_c" kindref="compound">wxMemoryDC</ref>, <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref>, <ref refid="classwx_mask" kindref="compound">wxMask</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1238"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Background/foreground brush and pen</header>
      <memberdef kind="function" id="classwx_d_c_1ac9f6e5ace963178d3e167975b43d465d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_brush" kindref="compound">wxBrush</ref> &amp;</type>
        <definition>const wxBrush&amp; wxDC::GetBackground</definition>
        <argsstring>() const </argsstring>
        <name>GetBackground</name>
        <briefdescription>
<para>Gets the brush used for painting the background. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_d_c_1ad0139f6542f619244b80d4db7f685f86" kindref="member">wxDC::SetBackground()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1252"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1aca9a1077274d59d88b31261de91665f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_brush" kindref="compound">wxBrush</ref> &amp;</type>
        <definition>const wxBrush&amp; wxDC::GetBrush</definition>
        <argsstring>() const </argsstring>
        <name>GetBrush</name>
        <briefdescription>
<para>Gets the current brush. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_d_c_1a13978b2624116987a59ff729c4f81a96" kindref="member">wxDC::SetBrush()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1259"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a575cce713b210ca802d9d7ba0d39d3a7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_pen" kindref="compound">wxPen</ref> &amp;</type>
        <definition>const wxPen&amp; wxDC::GetPen</definition>
        <argsstring>() const </argsstring>
        <name>GetPen</name>
        <briefdescription>
<para>Gets the current pen. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_d_c_1a0d229733fbc83c7e4c483c0714d090b2" kindref="member">SetPen()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1266"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1ad0139f6542f619244b80d4db7f685f86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::SetBackground</definition>
        <argsstring>(const wxBrush &amp;brush)</argsstring>
        <name>SetBackground</name>
        <param>
          <type>const <ref refid="classwx_brush" kindref="compound">wxBrush</ref> &amp;</type>
          <declname>brush</declname>
        </param>
        <briefdescription>
<para>Sets the current background brush for the DC. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1271"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a13978b2624116987a59ff729c4f81a96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::SetBrush</definition>
        <argsstring>(const wxBrush &amp;brush)</argsstring>
        <name>SetBrush</name>
        <param>
          <type>const <ref refid="classwx_brush" kindref="compound">wxBrush</ref> &amp;</type>
          <declname>brush</declname>
        </param>
        <briefdescription>
<para>Sets the current brush for the DC. </para>        </briefdescription>
        <detaileddescription>
<para>If the argument is <ref refid="brush_8h_1a9919a44109f2c6091c71aece17ca7013" kindref="member">wxNullBrush</ref> (or another invalid brush; see <ref refid="classwx_brush_1aafe8cee326d90dc7145968370153ba0a" kindref="member">wxBrush::IsOk</ref>), the current brush is selected out of the device context (leaving <ref refid="classwx_d_c" kindref="compound">wxDC</ref> without any valid brush), allowing the current brush to be destroyed safely.</para><para><simplesect kind="see"><para><ref refid="classwx_brush" kindref="compound">wxBrush</ref>, <ref refid="classwx_memory_d_c" kindref="compound">wxMemoryDC</ref> (for the interpretation of colours when drawing into a monochrome bitmap) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1283"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a0d229733fbc83c7e4c483c0714d090b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::SetPen</definition>
        <argsstring>(const wxPen &amp;pen)</argsstring>
        <name>SetPen</name>
        <param>
          <type>const <ref refid="classwx_pen" kindref="compound">wxPen</ref> &amp;</type>
          <declname>pen</declname>
        </param>
        <briefdescription>
<para>Sets the current pen for the DC. </para>        </briefdescription>
        <detaileddescription>
<para>If the argument is <ref refid="pen_8h_1a4dbfd18a818b95630453f3d755a1c95d" kindref="member">wxNullPen</ref> (or another invalid pen; see <ref refid="classwx_pen_1ad36b523a05e5dc6f26cedcbe4e09e513" kindref="member">wxPen::IsOk</ref>), the current pen is selected out of the device context (leaving <ref refid="classwx_d_c" kindref="compound">wxDC</ref> without any valid pen), allowing the current pen to be destroyed safely.</para><para><simplesect kind="see"><para><ref refid="classwx_memory_d_c" kindref="compound">wxMemoryDC</ref> for the interpretation of colours when drawing into a monochrome bitmap. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1295"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Transformation matrix</header>
      <description><para>See the notes about the availability of these functions in the class documentation. </para></description>
      <memberdef kind="function" id="classwx_d_c_1a00ff493fe7d976d9433f9adb559f3089" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxDC::CanUseTransformMatrix</definition>
        <argsstring>() const </argsstring>
        <name>CanUseTransformMatrix</name>
        <briefdescription>
<para>Check if the use of transformation matrix is supported by the current system. </para>        </briefdescription>
        <detaileddescription>
<para>Currently this function always returns false for non-MSW platforms and may return false for old (Windows 9x/ME) Windows systems. Normally support for the transformation matrix is always available in any relatively recent Windows versions.</para><para><simplesect kind="since"><para>2.9.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1505"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a6e3243fcb5d194ef5637f4bda11a49c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxDC::SetTransformMatrix</definition>
        <argsstring>(const wxAffineMatrix2D &amp;matrix)</argsstring>
        <name>SetTransformMatrix</name>
        <param>
          <type>const <ref refid="classwx_affine_matrix2_d" kindref="compound">wxAffineMatrix2D</ref> &amp;</type>
          <declname>matrix</declname>
        </param>
        <briefdescription>
<para>Set the transformation matrix. </para>        </briefdescription>
        <detaileddescription>
<para>If transformation matrix is supported on the current system, the specified <emphasis>matrix</emphasis> will be used to transform between <ref refid="classwx_d_c" kindref="compound">wxDC</ref> and physical coordinates. Otherwise the function returns false and doesn&apos;t change the coordinate mapping.</para><para><simplesect kind="since"><para>2.9.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1517"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1ae763dfe2be3673044770adb67f7a212f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_affine_matrix2_d" kindref="compound">wxAffineMatrix2D</ref></type>
        <definition>wxAffineMatrix2D wxDC::GetTransformMatrix</definition>
        <argsstring>() const </argsstring>
        <name>GetTransformMatrix</name>
        <briefdescription>
<para>Return the transformation matrix used by this device context. </para>        </briefdescription>
        <detaileddescription>
<para>By default the transformation matrix is the identity matrix.</para><para><simplesect kind="since"><para>2.9.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1526"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a41a9a4f616da21afdcad0fe1585ca066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::ResetTransformMatrix</definition>
        <argsstring>()</argsstring>
        <name>ResetTransformMatrix</name>
        <briefdescription>
<para>Revert the transformation matrix to identity matrix. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.9.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1533"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_d_c_1ad1258b299c3a92344f1bdedbb7fc3acc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::CopyAttributes</definition>
        <argsstring>(const wxDC &amp;dc)</argsstring>
        <name>CopyAttributes</name>
        <param>
          <type>const <ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <briefdescription>
<para>Copy attributes from another DC. </para>        </briefdescription>
        <detaileddescription>
<para>The copied attributes currently are:<itemizedlist>
<listitem><para>Font</para></listitem><listitem><para>Text foreground and background colours</para></listitem><listitem><para>Background brush</para></listitem><listitem><para>Layout direction</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dc</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid (i.e. its <ref refid="classwx_d_c_1aac2d04cf636651fbbc943d4236586e3a" kindref="member">IsOk()</ref> must return true) source device context. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1312"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a04e455c37a61a0929fc8328c0fdbc5f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxDC::GetDepth</definition>
        <argsstring>() const </argsstring>
        <name>GetDepth</name>
        <briefdescription>
<para>Returns the depth (number of bits/pixel) of this DC. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__group__funcmacro__gdi_1gaa144903f36a28751aa9b80b3b5f804ba" kindref="member">wxDisplayDepth()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1319"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a8c6448e0f9b102f764964c74b46be1a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
        <definition>wxPoint wxDC::GetDeviceOrigin</definition>
        <argsstring>() const </argsstring>
        <name>GetDeviceOrigin</name>
        <briefdescription>
<para>Returns the current device origin. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_d_c_1a0a1c7d7d07d1faf3f7b89698bde769f3" kindref="member">SetDeviceOrigin()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1326"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1aaa63fac56c04221856bcae7e669a64af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interface_2wx_2dc_8h_1a07398221a1f9dfecf424c90c5c777d54" kindref="member">wxRasterOperationMode</ref></type>
        <definition>wxRasterOperationMode wxDC::GetLogicalFunction</definition>
        <argsstring>() const </argsstring>
        <name>GetLogicalFunction</name>
        <briefdescription>
<para>Gets the current logical function. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_d_c_1aae8adce8cf260bf703b8e76784bd577d" kindref="member">SetLogicalFunction()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1333"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a05edb97114a25ac879146b87a7c1d8f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interface_2wx_2dc_8h_1a5a641b839b9ac2ff94514d0596f6e20a" kindref="member">wxMappingMode</ref></type>
        <definition>wxMappingMode wxDC::GetMapMode</definition>
        <argsstring>() const </argsstring>
        <name>GetMapMode</name>
        <briefdescription>
<para>Gets the current mapping mode for the device context. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_d_c_1aa07ef94e2f3af5b64345c3f94333e86e" kindref="member">SetMapMode()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1340"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a3f82f6b54ba2e6f348de7f779487b234" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxDC::GetPixel</definition>
        <argsstring>(wxCoord x, wxCoord y, wxColour *colour) const </argsstring>
        <name>GetPixel</name>
        <reimplementedby refid="classwx_s_v_g_file_d_c_1ae394c964ff6902391b5ae5a370acb8da">GetPixel</reimplementedby>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classwx_colour" kindref="compound">wxColour</ref> *</type>
          <declname>colour</declname>
        </param>
        <briefdescription>
<para>Gets in <emphasis>colour</emphasis> the colour at the specified location. </para>        </briefdescription>
        <detaileddescription>
<para>Not available for <ref refid="classwx_post_script_d_c" kindref="compound">wxPostScriptDC</ref> or <ref refid="classwx_metafile_d_c" kindref="compound">wxMetafileDC</ref>.</para><para><simplesect kind="note"><para>Setting a pixel can be done using <ref refid="classwx_d_c_1a8380aab866e8f3947e0898cf08969d9f" kindref="member">DrawPoint()</ref>.</para><simplesectsep/><para>This method shouldn&apos;t be used with <ref refid="classwx_paint_d_c" kindref="compound">wxPaintDC</ref> as accessing the DC while drawing can result in unexpected results, notably in wxGTK. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1351"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1ad21c33ad6a0a0f3d620bc39633fa8268" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxDC::GetPPI</definition>
        <argsstring>() const </argsstring>
        <name>GetPPI</name>
        <briefdescription>
<para>Returns the resolution of the device in pixels per inch. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1356"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1ab4c22c7c7490a4aabc13dfd9e7a285a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::GetSize</definition>
        <argsstring>(wxCoord *width, wxCoord *height) const </argsstring>
        <name>GetSize</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref> *</type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref> *</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Gets the horizontal and vertical extent of this device context in <emphasis>device</emphasis> units. </para>        </briefdescription>
        <detaileddescription>
<para>It can be used to scale graphics to fit the page.</para><para>For example, if <emphasis>maxX</emphasis> and <emphasis>maxY</emphasis> represent the maximum horizontal and vertical &apos;pixel&apos; values used in your application, the following code will scale the graphic to fit on the printer page:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member" tooltip="The type for screen and DC coordinates.">wxCoord</ref><sp/>w,<sp/>h;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.GetSize(&amp;w,<sp/>&amp;h);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scaleX<sp/>=<sp/>(double)(maxX<sp/>/<sp/>w);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scaleY<sp/>=<sp/>(double)(maxY<sp/>/<sp/>h);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetUserScale(min(scaleX,<sp/>scaleY),min(scaleX,<sp/>scaleY));</highlight></codeline>
</programlisting></para><para><bold>wxPerl Note:</bold> In wxPerl there are two methods instead of a single overloaded method:<itemizedlist>
<listitem><para><ref refid="classwx_d_c_1ab4c22c7c7490a4aabc13dfd9e7a285a3" kindref="member">GetSize()</ref>: returns a Wx::Size object.</para></listitem><listitem><para>GetSizeWH(): returns a 2-element list (width, height). </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1381"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a29c2c2fb580e287e31789c681445dc76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxDC::GetSize</definition>
        <argsstring>() const </argsstring>
        <name>GetSize</name>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1386"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a079324d560b2c88a150962101ff3a055" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::GetSizeMM</definition>
        <argsstring>(wxCoord *width, wxCoord *height) const </argsstring>
        <name>GetSizeMM</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref> *</type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref> *</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Returns the horizontal and vertical resolution in millimetres. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1391"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a4365cedbd78180624a1b9abf1dad730d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxDC::GetSizeMM</definition>
        <argsstring>() const </argsstring>
        <name>GetSizeMM</name>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1396"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a8be86f17ac3fcf8925372825a9210120" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::GetUserScale</definition>
        <argsstring>(double *x, double *y) const </argsstring>
        <name>GetUserScale</name>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Gets the current user scale factor. </para>        </briefdescription>
        <detaileddescription>
<para><bold>wxPerl Note:</bold> In wxPerl this method takes no arguments and return a two element array (x, y).</para><para><simplesect kind="see"><para><ref refid="classwx_d_c_1a190e43cf66ef402aa67f759d20f22eb0" kindref="member">SetUserScale()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1408"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1aac2d04cf636651fbbc943d4236586e3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxDC::IsOk</definition>
        <argsstring>() const </argsstring>
        <name>IsOk</name>
        <briefdescription>
<para>Returns true if the DC is ok to use. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1413"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a1ada4defde484280fb24c4c47d24e0e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::SetAxisOrientation</definition>
        <argsstring>(bool xLeftRight, bool yBottomUp)</argsstring>
        <name>SetAxisOrientation</name>
        <param>
          <type>bool</type>
          <declname>xLeftRight</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>yBottomUp</declname>
        </param>
        <briefdescription>
<para>Sets the x and y axis orientation (i.e., the direction from lowest to highest values on the axis). </para>        </briefdescription>
        <detaileddescription>
<para>The default orientation is x axis from left to right and y axis from top down.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xLeftRight</parametername>
</parameternamelist>
<parameterdescription>
<para>True to set the x axis orientation to the natural left to right orientation, false to invert it. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yBottomUp</parametername>
</parameternamelist>
<parameterdescription>
<para>True to set the y axis orientation to the natural bottom up orientation, false to invert it. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1427"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a0a1c7d7d07d1faf3f7b89698bde769f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::SetDeviceOrigin</definition>
        <argsstring>(wxCoord x, wxCoord y)</argsstring>
        <name>SetDeviceOrigin</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Sets the device origin (i.e., the origin in pixels after scaling has been applied). </para>        </briefdescription>
        <detaileddescription>
<para>This function may be useful in Windows printing operations for placing a graphic on a page. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1434"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1aae8adce8cf260bf703b8e76784bd577d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::SetLogicalFunction</definition>
        <argsstring>(wxRasterOperationMode function)</argsstring>
        <name>SetLogicalFunction</name>
        <reimplementedby refid="classwx_s_v_g_file_d_c_1a0450e2e90bf39ed0167c49b59fcb9e31">SetLogicalFunction</reimplementedby>
        <param>
          <type><ref refid="interface_2wx_2dc_8h_1a07398221a1f9dfecf424c90c5c777d54" kindref="member">wxRasterOperationMode</ref></type>
          <declname>function</declname>
        </param>
        <briefdescription>
<para>Sets the current logical function for the device context. </para>        </briefdescription>
        <detaileddescription>
<para>It determines how a <emphasis>source</emphasis> pixel (from a pen or brush colour, or source device context if using <ref refid="classwx_d_c_1a12bed94a15136b9080683f4151042a34" kindref="member">Blit()</ref>) combines with a <emphasis>destination</emphasis> pixel in the current device context. Text drawing is not affected by this function.</para><para>See <ref refid="interface_2wx_2dc_8h_1a07398221a1f9dfecf424c90c5c777d54" kindref="member">wxRasterOperationMode</ref> enumeration values for more info.</para><para>The default is <computeroutput>wxCOPY</computeroutput>, which simply draws with the current colour. The others combine the current colour and the background using a logical operation. <computeroutput>wxINVERT</computeroutput> is commonly used for drawing rubber bands or moving outlines, since drawing twice reverts to the original colour. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1450"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1aa07ef94e2f3af5b64345c3f94333e86e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::SetMapMode</definition>
        <argsstring>(wxMappingMode mode)</argsstring>
        <name>SetMapMode</name>
        <param>
          <type><ref refid="interface_2wx_2dc_8h_1a5a641b839b9ac2ff94514d0596f6e20a" kindref="member">wxMappingMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>The mapping mode of the device context defines the unit of measurement used to convert <emphasis>logical</emphasis> units to <emphasis>device</emphasis> units. </para>        </briefdescription>
        <detaileddescription>
<para>Note that in X, text drawing isn&apos;t handled consistently with the mapping mode; a font is always specified in point size. However, setting the user scale (see <ref refid="classwx_d_c_1a190e43cf66ef402aa67f759d20f22eb0" kindref="member">SetUserScale()</ref>) scales the text appropriately. In Windows, scalable TrueType fonts are always used; in X, results depend on availability of fonts, but usually a reasonable match is found.</para><para>The coordinate origin is always at the top left of the screen/printer.</para><para>Drawing to a Windows printer device context uses the current mapping mode, but mapping mode is currently ignored for PostScript output. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1467"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1afc58b0f4653159e713377d38c84a120f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::SetPalette</definition>
        <argsstring>(const wxPalette &amp;palette)</argsstring>
        <name>SetPalette</name>
        <reimplementedby refid="classwx_s_v_g_file_d_c_1a56f9674ee5fff78f9f884586c7106bfc">SetPalette</reimplementedby>
        <param>
          <type>const <ref refid="classwx_palette" kindref="compound">wxPalette</ref> &amp;</type>
          <declname>palette</declname>
        </param>
        <briefdescription>
<para>If this is a window DC or memory DC, assigns the given palette to the window or bitmap associated with the DC. </para>        </briefdescription>
        <detaileddescription>
<para>If the argument is <ref refid="palette_8h_1a2ecbe58191b89a50dd5dd0643e29f708" kindref="member">wxNullPalette</ref>, the current palette is selected out of the device context, and the original palette restored.</para><para><simplesect kind="see"><para><ref refid="classwx_palette" kindref="compound">wxPalette</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1477"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a190e43cf66ef402aa67f759d20f22eb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::SetUserScale</definition>
        <argsstring>(double xScale, double yScale)</argsstring>
        <name>SetUserScale</name>
        <param>
          <type>double</type>
          <declname>xScale</declname>
        </param>
        <param>
          <type>double</type>
          <declname>yScale</declname>
        </param>
        <briefdescription>
<para>Sets the user scaling factor, useful for applications which require &apos;zooming&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1483"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1aae1c728cdd2f43601f876b7d67067a39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::SetLogicalScale</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>SetLogicalScale</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1538"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1ab857836d90a4b12f2cc26488fda0e328" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::GetLogicalScale</definition>
        <argsstring>(double *x, double *y) const </argsstring>
        <name>GetLogicalScale</name>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1539"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a4ce7dda4ff2f3ece524b8d538b346b6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::SetLogicalOrigin</definition>
        <argsstring>(wxCoord x, wxCoord y)</argsstring>
        <name>SetLogicalOrigin</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1540"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1ae045e468451ef72c70b6b94d418ab2e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDC::GetLogicalOrigin</definition>
        <argsstring>(wxCoord *x, wxCoord *y) const </argsstring>
        <name>GetLogicalOrigin</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref> *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1541"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_c_1a2e0817f3073c1661d52351afff46c379" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
        <definition>wxPoint wxDC::GetLogicalOrigin</definition>
        <argsstring>() const </argsstring>
        <name>GetLogicalOrigin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="1542"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A <ref refid="classwx_d_c" kindref="compound">wxDC</ref> is a <emphasis>&quot;device context&quot;</emphasis> onto which graphics and text can be drawn. </para>    </briefdescription>
    <detaileddescription>
<para>It is intended to represent different output devices and offers a common abstract API for drawing on any of them.</para><para>wxWidgets offers an alternative drawing API based on the modern drawing backends GDI+, CoreGraphics and Cairo. See <ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref>, <ref refid="classwx_graphics_renderer" kindref="compound">wxGraphicsRenderer</ref> and related classes. There is also a <ref refid="classwx_g_c_d_c" kindref="compound">wxGCDC</ref> linking the APIs by offering the <ref refid="classwx_d_c" kindref="compound">wxDC</ref> API on top of a <ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref>.</para><para><ref refid="classwx_d_c" kindref="compound">wxDC</ref> is an abstract base class and cannot be created directly. Use <ref refid="classwx_paint_d_c" kindref="compound">wxPaintDC</ref>, <ref refid="classwx_client_d_c" kindref="compound">wxClientDC</ref>, <ref refid="classwx_window_d_c" kindref="compound">wxWindowDC</ref>, <ref refid="classwx_screen_d_c" kindref="compound">wxScreenDC</ref>, <ref refid="classwx_memory_d_c" kindref="compound">wxMemoryDC</ref> or <ref refid="classwx_printer_d_c" kindref="compound">wxPrinterDC</ref>. Notice that device contexts which are associated with windows (i.e. <ref refid="classwx_client_d_c" kindref="compound">wxClientDC</ref>, <ref refid="classwx_window_d_c" kindref="compound">wxWindowDC</ref> and <ref refid="classwx_paint_d_c" kindref="compound">wxPaintDC</ref>) use the window font and colours by default (starting with wxWidgets 2.9.0) but the other device context classes use system-default values so you always must set the appropriate fonts and colours before using them.</para><para>In addition to the versions of the methods documented below, there are also versions which accept single <ref refid="classwx_point" kindref="compound">wxPoint</ref> parameter instead of the two wxCoord ones or <ref refid="classwx_point" kindref="compound">wxPoint</ref> and <ref refid="classwx_size" kindref="compound">wxSize</ref> instead of the four wxCoord parameters.</para><para>Beginning with wxWidgets 2.9.0 the entire <ref refid="classwx_d_c" kindref="compound">wxDC</ref> code has been reorganized. All platform dependent code (actually all drawing code) has been moved into backend classes which derive from a common wxDCImpl class. The user-visible classes such as <ref refid="classwx_client_d_c" kindref="compound">wxClientDC</ref> and <ref refid="classwx_paint_d_c" kindref="compound">wxPaintDC</ref> merely forward all calls to the backend implementation.</para><sect1 id="classwx_d_c_1dc_units">
<title>Device and logical units</title>
<para>In the <ref refid="classwx_d_c" kindref="compound">wxDC</ref> context there is a distinction between <emphasis>logical</emphasis> units and <emphasis>device</emphasis> units.</para><para><bold>Device</bold> units are the units native to the particular device; e.g. for a screen, a device unit is a <emphasis>pixel</emphasis>. For a printer, the device unit is defined by the resolution of the printer (usually given in <computeroutput>DPI:</computeroutput> dot-per-inch).</para><para>All <ref refid="classwx_d_c" kindref="compound">wxDC</ref> functions use instead <bold>logical</bold> units, unless where explicitly stated. Logical units are arbitrary units mapped to device units using the current mapping mode (see <ref refid="classwx_d_c_1aa07ef94e2f3af5b64345c3f94333e86e" kindref="member">wxDC::SetMapMode</ref>).</para><para>This mechanism allows to reuse the same code which prints on e.g. a window on the screen to print on e.g. a paper.</para></sect1>
<sect1 id="classwx_d_c_1dc_alpha_support">
<title>Support for Transparency / Alpha Channel</title>
<para>In general <ref refid="classwx_d_c" kindref="compound">wxDC</ref> methods don&apos;t support alpha transparency and the alpha component of <ref refid="classwx_colour" kindref="compound">wxColour</ref> is simply ignored and you need to use <ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> for full transparency support. There are, however, a few exceptions: first, under Mac OS X colours with alpha channel are supported in all the normal wxDC-derived classes as they use <ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> internally. Second, under all platforms <ref refid="classwx_s_v_g_file_d_c" kindref="compound">wxSVGFileDC</ref> also fully supports alpha channel. In both of these cases the instances of <ref refid="classwx_pen" kindref="compound">wxPen</ref> or <ref refid="classwx_brush" kindref="compound">wxBrush</ref> that are built from <ref refid="classwx_colour" kindref="compound">wxColour</ref> use the colour&apos;s alpha values when stroking or filling.</para></sect1>
<sect1 id="classwx_d_c_1Support">
<title>for Transformation Matrix</title>
<para>On some platforms (currently only under MSW and only on Windows NT, i.e. not Windows 9x/ME, systems) <ref refid="classwx_d_c" kindref="compound">wxDC</ref> has support for applying an arbitrary affine transformation matrix to its coordinate system. Call <ref refid="classwx_d_c_1a00ff493fe7d976d9433f9adb559f3089" kindref="member">CanUseTransformMatrix()</ref> to check if this support is available and then call <ref refid="classwx_d_c_1a6e3243fcb5d194ef5637f4bda11a49c3" kindref="member">SetTransformMatrix()</ref> if it is. If the transformation matrix is not supported, <ref refid="classwx_d_c_1a6e3243fcb5d194ef5637f4bda11a49c3" kindref="member">SetTransformMatrix()</ref> always simply returns false and doesn&apos;t do anything.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__dc" kindref="compound">Device Contexts</ref>, <ref refid="group__group__class__gdi" kindref="compound">Graphics Device Interface (GDI)</ref></para><para><simplesect kind="see"><para><ref refid="overview_dc" kindref="compound">Device Contexts</ref>, <ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref>, <ref refid="classwx_d_c_font_changer" kindref="compound">wxDCFontChanger</ref>, <ref refid="classwx_d_c_text_colour_changer" kindref="compound">wxDCTextColourChanger</ref>, <ref refid="classwx_d_c_pen_changer" kindref="compound">wxDCPenChanger</ref>, <ref refid="classwx_d_c_brush_changer" kindref="compound">wxDCBrushChanger</ref>, <ref refid="classwx_d_c_clipper" kindref="compound">wxDCClipper</ref></para></simplesect>
<xrefsect id="todo_1_todo000024"><xreftitle>Todo</xreftitle><xrefdescription><para>Precise definition of default/initial state. </para><para>Pixelwise definition of operations (e.g. last point of a line not drawn). </para></xrefdescription></xrefsect></para></sect1>
    </detaileddescription>
    <inheritancegraph>
      <node id="5608">
        <label>wxScreenDC</label>
        <link refid="classwx_screen_d_c"/>
        <childnode refid="5597" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5599">
        <label>wxGCDC</label>
        <link refid="classwx_g_c_d_c"/>
        <childnode refid="5597" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5598">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="5600">
        <label>wxMemoryDC</label>
        <link refid="classwx_memory_d_c"/>
        <childnode refid="5597" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5610">
        <label>wxWindowDC</label>
        <link refid="classwx_window_d_c"/>
        <childnode refid="5597" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5602">
        <label>wxBufferedPaintDC</label>
        <link refid="classwx_buffered_paint_d_c"/>
        <childnode refid="5601" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5601">
        <label>wxBufferedDC</label>
        <link refid="classwx_buffered_d_c"/>
        <childnode refid="5600" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5611">
        <label>wxClientDC</label>
        <link refid="classwx_client_d_c"/>
        <childnode refid="5610" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5607">
        <label>wxPrinterDC</label>
        <link refid="classwx_printer_d_c"/>
        <childnode refid="5597" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5604">
        <label>wxMetafileDC</label>
        <link refid="classwx_metafile_d_c"/>
        <childnode refid="5597" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5597">
        <label>wxDC</label>
        <link refid="classwx_d_c"/>
        <childnode refid="5598" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5605">
        <label>wxMirrorDC</label>
        <link refid="classwx_mirror_d_c"/>
        <childnode refid="5597" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5609">
        <label>wxSVGFileDC</label>
        <link refid="classwx_s_v_g_file_d_c"/>
        <childnode refid="5597" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5606">
        <label>wxPostScriptDC</label>
        <link refid="classwx_post_script_d_c"/>
        <childnode refid="5597" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5603">
        <label>wxAutoBufferedPaintDC</label>
        <link refid="classwx_auto_buffered_paint_d_c"/>
        <childnode refid="5602" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5612">
        <label>wxPaintDC</label>
        <link refid="classwx_paint_d_c"/>
        <childnode refid="5611" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5614">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="5615" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="5613">
        <label>wxDC</label>
        <link refid="classwx_d_c"/>
        <childnode refid="5614" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5615">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" line="188" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/dc.h" bodystart="187" bodyend="1544"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxDC</scope><name>AllocExclusive</name></member>
      <member refid="classwx_d_c_1a12bed94a15136b9080683f4151042a34" prot="public" virt="non-virtual"><scope>wxDC</scope><name>Blit</name></member>
      <member refid="classwx_d_c_1a850699d4fdc9006421b085d2d37fa0c0" prot="public" virt="non-virtual"><scope>wxDC</scope><name>CalcBoundingBox</name></member>
      <member refid="classwx_d_c_1a00ff493fe7d976d9433f9adb559f3089" prot="public" virt="non-virtual"><scope>wxDC</scope><name>CanUseTransformMatrix</name></member>
      <member refid="classwx_d_c_1acf301dfd75b0f31d969ecb9daec21e85" prot="public" virt="non-virtual"><scope>wxDC</scope><name>Clear</name></member>
      <member refid="classwx_object_1a1d39f1d3650fe0982c9a1abe7f9fe7b7" prot="protected" virt="virtual"><scope>wxDC</scope><name>CloneRefData</name></member>
      <member refid="classwx_d_c_1ad1258b299c3a92344f1bdedbb7fc3acc" prot="public" virt="non-virtual"><scope>wxDC</scope><name>CopyAttributes</name></member>
      <member refid="classwx_object_1a95c6a5e4e1e03ff23c7b9efe4cff0c1a" prot="protected" virt="virtual"><scope>wxDC</scope><name>CreateRefData</name></member>
      <member refid="classwx_d_c_1af8bab4cd7ffc3050974236a32afa1e1d" prot="public" virt="non-virtual"><scope>wxDC</scope><name>CrossHair</name></member>
      <member refid="classwx_d_c_1ad5ad1b17105668a9cba6f4f6cc902a02" prot="public" virt="non-virtual"><scope>wxDC</scope><name>CrossHair</name></member>
      <member refid="classwx_d_c_1ae0b0fc593c4559b9ac70e121bd28e3b4" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DestroyClippingRegion</name></member>
      <member refid="classwx_d_c_1af0c7b7b0f2736fbce53675f1420ed11c" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DeviceToLogicalX</name></member>
      <member refid="classwx_d_c_1ab0dc7fb1c079f1fc8ca7df8987e261fc" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DeviceToLogicalXRel</name></member>
      <member refid="classwx_d_c_1aac47fb25f72317712e74a7e2903ba704" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DeviceToLogicalY</name></member>
      <member refid="classwx_d_c_1a57fa7329b7890bb56cc7e05fc83e033c" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DeviceToLogicalYRel</name></member>
      <member refid="classwx_d_c_1a348f8cd1ba0ffcf62b8145628b0a5492" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawArc</name></member>
      <member refid="classwx_d_c_1abe49b852e96ff500ef6333bfc044890f" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawArc</name></member>
      <member refid="classwx_d_c_1af982eb2d3b10c5617ef3559d51a1defc" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawBitmap</name></member>
      <member refid="classwx_d_c_1a9449053951eceeb7984125cd4a694fd8" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawBitmap</name></member>
      <member refid="classwx_d_c_1a8ad34eda4c0b75ca905d466c6328fe91" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawCheckMark</name></member>
      <member refid="classwx_d_c_1a14fe0d838374721e98d6254cdd1484a6" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawCheckMark</name></member>
      <member refid="classwx_d_c_1a62fd1c810d532e53a25e3b2e6fd621f7" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawCircle</name></member>
      <member refid="classwx_d_c_1a560192c6dcb33c5bde404f3647234657" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawCircle</name></member>
      <member refid="classwx_d_c_1a340697f08f5fd08d9db383ffcef642c2" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawEllipse</name></member>
      <member refid="classwx_d_c_1a8a7a8478797c599e91125168669a5f36" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawEllipse</name></member>
      <member refid="classwx_d_c_1a637167c299d7e58832cf9c71f6f64fd5" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawEllipse</name></member>
      <member refid="classwx_d_c_1a821e0b82707ca0379273cca67913da06" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawEllipticArc</name></member>
      <member refid="classwx_d_c_1a5f18a7aee18b69c8721aec67ea0a3532" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawEllipticArc</name></member>
      <member refid="classwx_d_c_1a890d011a03308a28039d4940dd04264e" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawIcon</name></member>
      <member refid="classwx_d_c_1a5719d8c36a03d1679828c5d89d33dd67" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawIcon</name></member>
      <member refid="classwx_d_c_1ae28d7aa2e17a850f4ca15c042a870152" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawLabel</name></member>
      <member refid="classwx_d_c_1a9e4ddef5a10fdcee96ff9ef2fded9ee3" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawLabel</name></member>
      <member refid="classwx_d_c_1a12f2c236d4d320acec0bc6fe20e8399d" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawLine</name></member>
      <member refid="classwx_d_c_1a34f84b8b73cf782e6d9ab0f629598b6f" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawLine</name></member>
      <member refid="classwx_d_c_1a6480acc286278f7d87358586e51fa205" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawLines</name></member>
      <member refid="classwx_d_c_1a23cbb356e46890c99fcb5304d077f888" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawLines</name></member>
      <member refid="classwx_d_c_1a8380aab866e8f3947e0898cf08969d9f" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawPoint</name></member>
      <member refid="classwx_d_c_1a9b75ad987adc0c01d13c34db101b3539" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawPoint</name></member>
      <member refid="classwx_d_c_1af3ded6183d3ba706d0377e5c25fcaf83" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawPolygon</name></member>
      <member refid="classwx_d_c_1a6e5808ba5b740f0d4df5da02b05ce5ca" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawPolygon</name></member>
      <member refid="classwx_d_c_1a3beb1e45475b7f62babd123944818703" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawPolyPolygon</name></member>
      <member refid="classwx_d_c_1a918b9ae3447a2fc13f4c38c628a45c01" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawRectangle</name></member>
      <member refid="classwx_d_c_1a5499c7359d84871343e4875902c06a69" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawRectangle</name></member>
      <member refid="classwx_d_c_1ae0a8c6fe2eb45f6f03339b049db6b2b8" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawRectangle</name></member>
      <member refid="classwx_d_c_1aae5aff11939d5c55ab5c50987e4f2521" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawRotatedText</name></member>
      <member refid="classwx_d_c_1a791bc8502da484f1d3163e360cf91e8a" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawRotatedText</name></member>
      <member refid="classwx_d_c_1a94db29e2a40a16dc19ac852d05cd65b0" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawRoundedRectangle</name></member>
      <member refid="classwx_d_c_1a9e4b8ab031042016d434606eb7744c9c" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawRoundedRectangle</name></member>
      <member refid="classwx_d_c_1a926fb2251b9185e58f15c41f680aaf2a" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawRoundedRectangle</name></member>
      <member refid="classwx_d_c_1a45ae54ccc969bac583b14988dd2ea01e" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawSpline</name></member>
      <member refid="classwx_d_c_1aacfb4bab651f9eb572e42cd2870c40c6" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawSpline</name></member>
      <member refid="classwx_d_c_1a60c358ff3cfbf2b6f6d1918b527de98a" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawSpline</name></member>
      <member refid="classwx_d_c_1a11d35ce34fccb57b0efc7dc91168660b" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawText</name></member>
      <member refid="classwx_d_c_1a17f5674c449449b730c63f773534d721" prot="public" virt="non-virtual"><scope>wxDC</scope><name>DrawText</name></member>
      <member refid="classwx_d_c_1a95a506a0153d24dc352577161d45081c" prot="public" virt="non-virtual"><scope>wxDC</scope><name>EndDoc</name></member>
      <member refid="classwx_d_c_1a3867f84557ecaf68bfeacffea74e8902" prot="public" virt="non-virtual"><scope>wxDC</scope><name>EndPage</name></member>
      <member refid="classwx_d_c_1af510e22ffc274d3d3b29659941f2b5a9" prot="public" virt="non-virtual"><scope>wxDC</scope><name>FloodFill</name></member>
      <member refid="classwx_d_c_1aa3ad38fdcd0e731af94bd9c3189e72e9" prot="public" virt="non-virtual"><scope>wxDC</scope><name>FloodFill</name></member>
      <member refid="classwx_d_c_1ac9f6e5ace963178d3e167975b43d465d" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetBackground</name></member>
      <member refid="classwx_d_c_1a424e74e4790076a314511f86b8b7f408" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetBackgroundMode</name></member>
      <member refid="classwx_d_c_1aca9a1077274d59d88b31261de91665f0" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetBrush</name></member>
      <member refid="classwx_d_c_1a6faa7a475c43b2305e9ffebac5259d15" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetCharHeight</name></member>
      <member refid="classwx_d_c_1a2d854a964cbabc521ac6a84b0b1ffe20" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetCharWidth</name></member>
      <member refid="classwx_object_1ab3a0c6f723cbaddb47be4e8dd98cc8e2" prot="public" virt="virtual"><scope>wxDC</scope><name>GetClassInfo</name></member>
      <member refid="classwx_d_c_1ad5e374115511157ceed3d4c983a4dd7f" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetClippingBox</name></member>
      <member refid="classwx_d_c_1a04e455c37a61a0929fc8328c0fdbc5f4" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetDepth</name></member>
      <member refid="classwx_d_c_1a8c6448e0f9b102f764964c74b46be1a9" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetDeviceOrigin</name></member>
      <member refid="classwx_d_c_1a06000dac38b658a388a9ad1d9d029a2a" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetFont</name></member>
      <member refid="classwx_d_c_1a017ad82379a6e52d6b2ba1d212b65950" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetFontMetrics</name></member>
      <member refid="classwx_d_c_1a781d5a5c56d1c3caeca4e3e18847fb47" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetLayoutDirection</name></member>
      <member refid="classwx_d_c_1aaa63fac56c04221856bcae7e669a64af" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetLogicalFunction</name></member>
      <member refid="classwx_d_c_1ae045e468451ef72c70b6b94d418ab2e6" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetLogicalOrigin</name></member>
      <member refid="classwx_d_c_1a2e0817f3073c1661d52351afff46c379" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetLogicalOrigin</name></member>
      <member refid="classwx_d_c_1ab857836d90a4b12f2cc26488fda0e328" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetLogicalScale</name></member>
      <member refid="classwx_d_c_1a05edb97114a25ac879146b87a7c1d8f5" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetMapMode</name></member>
      <member refid="classwx_d_c_1a1983be5fdf9e88127d15fff119a0ef03" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetMultiLineTextExtent</name></member>
      <member refid="classwx_d_c_1af04e14231873e8659c4e88036f1bb8ce" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetMultiLineTextExtent</name></member>
      <member refid="classwx_d_c_1aa0dd5cdd1ce56ff3d1c23d233711653d" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetPartialTextExtents</name></member>
      <member refid="classwx_d_c_1a575cce713b210ca802d9d7ba0d39d3a7" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetPen</name></member>
      <member refid="classwx_d_c_1a3f82f6b54ba2e6f348de7f779487b234" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetPixel</name></member>
      <member refid="classwx_d_c_1ad21c33ad6a0a0f3d620bc39633fa8268" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetPPI</name></member>
      <member refid="classwx_object_1aabdb4fc957226544a8408167844e4f42" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetRefData</name></member>
      <member refid="classwx_d_c_1ab4c22c7c7490a4aabc13dfd9e7a285a3" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetSize</name></member>
      <member refid="classwx_d_c_1a29c2c2fb580e287e31789c681445dc76" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetSize</name></member>
      <member refid="classwx_d_c_1a079324d560b2c88a150962101ff3a055" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetSizeMM</name></member>
      <member refid="classwx_d_c_1a4365cedbd78180624a1b9abf1dad730d" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetSizeMM</name></member>
      <member refid="classwx_d_c_1a1f3d318c90a2e7a89fb116feeacd4bcf" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetTextBackground</name></member>
      <member refid="classwx_d_c_1ae55cbf1bc7b7e836cb192eb48d31efab" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetTextExtent</name></member>
      <member refid="classwx_d_c_1ac195999acf9dd440bf92272eb4206c35" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetTextExtent</name></member>
      <member refid="classwx_d_c_1a0f044e87752d3c5e49a7f028fb3c44de" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetTextForeground</name></member>
      <member refid="classwx_d_c_1ae763dfe2be3673044770adb67f7a212f" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetTransformMatrix</name></member>
      <member refid="classwx_d_c_1a8be86f17ac3fcf8925372825a9210120" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GetUserScale</name></member>
      <member refid="classwx_d_c_1a323802ed579056fce98220f5d1778076" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GradientFillConcentric</name></member>
      <member refid="classwx_d_c_1a2f0cd1850aefeda55b25cf56d55ac495" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GradientFillConcentric</name></member>
      <member refid="classwx_d_c_1a9cfbde2fcde06ffacf323f3a9dd1b020" prot="public" virt="non-virtual"><scope>wxDC</scope><name>GradientFillLinear</name></member>
      <member refid="classwx_object_1af40d580385cf4f8112fae7713404b01e" prot="public" virt="non-virtual"><scope>wxDC</scope><name>IsKindOf</name></member>
      <member refid="classwx_d_c_1aac2d04cf636651fbbc943d4236586e3a" prot="public" virt="non-virtual"><scope>wxDC</scope><name>IsOk</name></member>
      <member refid="classwx_object_1a80a1a3fda7b14396a9ddd3d7a46a88bd" prot="public" virt="non-virtual"><scope>wxDC</scope><name>IsSameAs</name></member>
      <member refid="classwx_d_c_1a3f551058c92d68efa61548d266f6a750" prot="public" virt="non-virtual"><scope>wxDC</scope><name>LogicalToDeviceX</name></member>
      <member refid="classwx_d_c_1adccbd84729882831bcbd0cb2c3e550a6" prot="public" virt="non-virtual"><scope>wxDC</scope><name>LogicalToDeviceXRel</name></member>
      <member refid="classwx_d_c_1a9b5bd5a823388f8b941406315c5eeafb" prot="public" virt="non-virtual"><scope>wxDC</scope><name>LogicalToDeviceY</name></member>
      <member refid="classwx_d_c_1aea082fd9d45adb6783542493439b73dc" prot="public" virt="non-virtual"><scope>wxDC</scope><name>LogicalToDeviceYRel</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxDC</scope><name>m_refData</name></member>
      <member refid="classwx_d_c_1a8829696c6ebabed7053f8a9479fabeef" prot="public" virt="non-virtual"><scope>wxDC</scope><name>MaxX</name></member>
      <member refid="classwx_d_c_1a90b1bc13bd01e442754e91935a8d0ef3" prot="public" virt="non-virtual"><scope>wxDC</scope><name>MaxY</name></member>
      <member refid="classwx_d_c_1a603de4a911be9500e5eb5ffda87750bc" prot="public" virt="non-virtual"><scope>wxDC</scope><name>MinX</name></member>
      <member refid="classwx_d_c_1aecfe126a0ebb9818f1b3abf43675e744" prot="public" virt="non-virtual"><scope>wxDC</scope><name>MinY</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxDC</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxDC</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxDC</scope><name>Ref</name></member>
      <member refid="classwx_d_c_1a35ed8c0c64315ec85588142d44f83af8" prot="public" virt="non-virtual"><scope>wxDC</scope><name>ResetBoundingBox</name></member>
      <member refid="classwx_d_c_1a41a9a4f616da21afdcad0fe1585ca066" prot="public" virt="non-virtual"><scope>wxDC</scope><name>ResetTransformMatrix</name></member>
      <member refid="classwx_d_c_1a1ada4defde484280fb24c4c47d24e0e8" prot="public" virt="non-virtual"><scope>wxDC</scope><name>SetAxisOrientation</name></member>
      <member refid="classwx_d_c_1ad0139f6542f619244b80d4db7f685f86" prot="public" virt="non-virtual"><scope>wxDC</scope><name>SetBackground</name></member>
      <member refid="classwx_d_c_1a86c405ae265e6fdb4e393c4c9ada73c0" prot="public" virt="non-virtual"><scope>wxDC</scope><name>SetBackgroundMode</name></member>
      <member refid="classwx_d_c_1a13978b2624116987a59ff729c4f81a96" prot="public" virt="non-virtual"><scope>wxDC</scope><name>SetBrush</name></member>
      <member refid="classwx_d_c_1a21ce8b27db0da5d68b8571d0ff39114b" prot="public" virt="non-virtual"><scope>wxDC</scope><name>SetClippingRegion</name></member>
      <member refid="classwx_d_c_1a800f7ca2a4a7588ff68d808eb06191e1" prot="public" virt="non-virtual"><scope>wxDC</scope><name>SetClippingRegion</name></member>
      <member refid="classwx_d_c_1a9a397f713db57f7999b5851a5b25dd84" prot="public" virt="non-virtual"><scope>wxDC</scope><name>SetClippingRegion</name></member>
      <member refid="classwx_d_c_1a382a46c105ebad94e848e74e9cc0b4b1" prot="public" virt="non-virtual"><scope>wxDC</scope><name>SetDeviceClippingRegion</name></member>
      <member refid="classwx_d_c_1a0a1c7d7d07d1faf3f7b89698bde769f3" prot="public" virt="non-virtual"><scope>wxDC</scope><name>SetDeviceOrigin</name></member>
      <member refid="classwx_d_c_1afab18239d707cd403235b36a987171a8" prot="public" virt="non-virtual"><scope>wxDC</scope><name>SetFont</name></member>
      <member refid="classwx_d_c_1a16196571f402cabf506619e8bf9f1586" prot="public" virt="non-virtual"><scope>wxDC</scope><name>SetLayoutDirection</name></member>
      <member refid="classwx_d_c_1aae8adce8cf260bf703b8e76784bd577d" prot="public" virt="non-virtual"><scope>wxDC</scope><name>SetLogicalFunction</name></member>
      <member refid="classwx_d_c_1a4ce7dda4ff2f3ece524b8d538b346b6f" prot="public" virt="non-virtual"><scope>wxDC</scope><name>SetLogicalOrigin</name></member>
      <member refid="classwx_d_c_1aae1c728cdd2f43601f876b7d67067a39" prot="public" virt="non-virtual"><scope>wxDC</scope><name>SetLogicalScale</name></member>
      <member refid="classwx_d_c_1aa07ef94e2f3af5b64345c3f94333e86e" prot="public" virt="non-virtual"><scope>wxDC</scope><name>SetMapMode</name></member>
      <member refid="classwx_d_c_1afc58b0f4653159e713377d38c84a120f" prot="public" virt="non-virtual"><scope>wxDC</scope><name>SetPalette</name></member>
      <member refid="classwx_d_c_1a0d229733fbc83c7e4c483c0714d090b2" prot="public" virt="non-virtual"><scope>wxDC</scope><name>SetPen</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxDC</scope><name>SetRefData</name></member>
      <member refid="classwx_d_c_1a3ed22bd0a0b835d4d085261bb022766b" prot="public" virt="non-virtual"><scope>wxDC</scope><name>SetTextBackground</name></member>
      <member refid="classwx_d_c_1aeac811df9a1688ce875117f3049849d6" prot="public" virt="non-virtual"><scope>wxDC</scope><name>SetTextForeground</name></member>
      <member refid="classwx_d_c_1a6e3243fcb5d194ef5637f4bda11a49c3" prot="public" virt="non-virtual"><scope>wxDC</scope><name>SetTransformMatrix</name></member>
      <member refid="classwx_d_c_1a190e43cf66ef402aa67f759d20f22eb0" prot="public" virt="non-virtual"><scope>wxDC</scope><name>SetUserScale</name></member>
      <member refid="classwx_d_c_1ad6572581c9d31dc349b6a7462426856c" prot="public" virt="non-virtual"><scope>wxDC</scope><name>StartDoc</name></member>
      <member refid="classwx_d_c_1a94c855ceb9f2fd5dcd1cf61396c13576" prot="public" virt="non-virtual"><scope>wxDC</scope><name>StartPage</name></member>
      <member refid="classwx_d_c_1a82801167a35e747218c49aa2161ae4bf" prot="public" virt="non-virtual"><scope>wxDC</scope><name>StretchBlit</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxDC</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxDC</scope><name>UnShare</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxDC</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxDC</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxDC</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
