<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_p_g_editor" kind="class" prot="public">
    <compoundname>wxPGEditor</compoundname>
    <basecompoundref refid="classwx_object" prot="public" virt="non-virtual">wxObject</basecompoundref>
    <includes local="no">wx/propgrid/editors.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_p_g_editor_1a31af1e59136a4246e19a4f2792762a1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxPGEditor::wxPGEditor</definition>
        <argsstring>()</argsstring>
        <name>wxPGEditor</name>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/editors.h" line="42"/>
      </memberdef>
      <memberdef kind="function" id="classwx_p_g_editor_1a29dc3fd2736e4e4929753e10df3fa01c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxPGEditor::~wxPGEditor</definition>
        <argsstring>()</argsstring>
        <name>~wxPGEditor</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/editors.h" line="45"/>
      </memberdef>
      <memberdef kind="function" id="classwx_p_g_editor_1ac3c037223d4a2d9bcf6b7b79d4e22495" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxPGEditor::GetName</definition>
        <argsstring>() const </argsstring>
        <name>GetName</name>
        <briefdescription>
<para>Returns pointer to the name of the editor. </para>        </briefdescription>
        <detaileddescription>
<para>For example, wxPGEditor_TextCtrl has name &quot;TextCtrl&quot;. If you dont&apos; need to access your custom editor by string name, then you do not need to implement this function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/editors.h" line="53"/>
      </memberdef>
      <memberdef kind="function" id="classwx_p_g_editor_1a9d33fbd55fe4fe390bdaa826a7ff87e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>wxPGWindowList</type>
        <definition>virtual wxPGWindowList wxPGEditor::CreateControls</definition>
        <argsstring>(wxPropertyGrid *propgrid, wxPGProperty *property, const wxPoint &amp;pos, const wxSize &amp;size) const =0</argsstring>
        <name>CreateControls</name>
        <param>
          <type><ref refid="classwx_property_grid" kindref="compound">wxPropertyGrid</ref> *</type>
          <declname>propgrid</declname>
        </param>
        <param>
          <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
          <declname>property</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Instantiates editor controls. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>propgrid</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classwx_property_grid" kindref="compound">wxPropertyGrid</ref> to which the property belongs (use as parent for control).</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>property</parametername>
</parameternamelist>
<parameterdescription>
<para>Property for which this method is called.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Position, inside <ref refid="classwx_property_grid" kindref="compound">wxPropertyGrid</ref>, to create control(s) to.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial size for control(s).</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para><itemizedlist>
<listitem><para>Primary control shall use id wxPG_SUBID1, and secondary (button) control shall use wxPG_SUBID2.</para></listitem><listitem><para>Unlike in previous version of <ref refid="classwx_property_grid" kindref="compound">wxPropertyGrid</ref>, it is no longer necessary to call <ref refid="classwx_evt_handler_1a78719e8b82c9f9c6e4056b3449df1943" kindref="member">wxEvtHandler::Connect()</ref> for interesting editor events. Instead, all events from control are now automatically forwarded to <ref refid="classwx_p_g_editor_1a035fa3bee4ac87e4300df0c637a56261" kindref="member">wxPGEditor::OnEvent()</ref> and <ref refid="classwx_p_g_property_1a16fbe26240bf47ab0a9a02d21781da73" kindref="member">wxPGProperty::OnEvent()</ref>. </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/editors.h" line="81"/>
      </memberdef>
      <memberdef kind="function" id="classwx_p_g_editor_1a229b635a46763efa40814584eb480c51" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxPGEditor::UpdateControl</definition>
        <argsstring>(wxPGProperty *property, wxWindow *ctrl) const =0</argsstring>
        <name>UpdateControl</name>
        <param>
          <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
          <declname>property</declname>
        </param>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>ctrl</declname>
        </param>
        <briefdescription>
<para>Loads value from property to the control. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/editors.h" line="84"/>
      </memberdef>
      <memberdef kind="function" id="classwx_p_g_editor_1ac44a1db95b88f0f33f723eff7bc3d983" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxPGEditor::DrawValue</definition>
        <argsstring>(wxDC &amp;dc, const wxRect &amp;rect, wxPGProperty *property, const wxString &amp;text) const </argsstring>
        <name>DrawValue</name>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
          <declname>property</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Draws value for given property. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/editors.h" line="90"/>
      </memberdef>
      <memberdef kind="function" id="classwx_p_g_editor_1a035fa3bee4ac87e4300df0c637a56261" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool wxPGEditor::OnEvent</definition>
        <argsstring>(wxPropertyGrid *propgrid, wxPGProperty *property, wxWindow *wnd_primary, wxEvent &amp;event) const =0</argsstring>
        <name>OnEvent</name>
        <param>
          <type><ref refid="classwx_property_grid" kindref="compound">wxPropertyGrid</ref> *</type>
          <declname>propgrid</declname>
        </param>
        <param>
          <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
          <declname>property</declname>
        </param>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>wnd_primary</declname>
        </param>
        <param>
          <type><ref refid="classwx_event" kindref="compound">wxEvent</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Handles events. </para>        </briefdescription>
        <detaileddescription>
<para>Returns true if value in control was modified (see <ref refid="classwx_p_g_property_1a16fbe26240bf47ab0a9a02d21781da73" kindref="member">wxPGProperty::OnEvent()</ref> for more information).</para><para><simplesect kind="remark"><para><ref refid="classwx_property_grid" kindref="compound">wxPropertyGrid</ref> will automatically unfocus the editor when <computeroutput>wxEVT_COMMAND_TEXT_ENTER</computeroutput> is received and when it results in property value being modified. This happens regardless of editor type (ie. behaviour is same for any <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> and <ref refid="classwx_combo_box" kindref="compound">wxComboBox</ref> based editor). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/editors.h" line="103"/>
      </memberdef>
      <memberdef kind="function" id="classwx_p_g_editor_1a2a4995739922590161ffbdf7127063f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxPGEditor::GetValueFromControl</definition>
        <argsstring>(wxVariant &amp;variant, wxPGProperty *property, wxWindow *ctrl) const </argsstring>
        <name>GetValueFromControl</name>
        <param>
          <type><ref refid="classwx_variant" kindref="compound">wxVariant</ref> &amp;</type>
          <declname>variant</declname>
        </param>
        <param>
          <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
          <declname>property</declname>
        </param>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>ctrl</declname>
        </param>
        <briefdescription>
<para>Returns value from control, via parameter &apos;variant&apos;. </para>        </briefdescription>
        <detaileddescription>
<para>Usually ends up calling property&apos;s StringToValue() or IntToValue(). Returns true if value was different. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/editors.h" line="111"/>
      </memberdef>
      <memberdef kind="function" id="classwx_p_g_editor_1a8b4f403f1311f9b3a57807147f0e8473" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxPGEditor::SetValueToUnspecified</definition>
        <argsstring>(wxPGProperty *property, wxWindow *ctrl) const =0</argsstring>
        <name>SetValueToUnspecified</name>
        <param>
          <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
          <declname>property</declname>
        </param>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>ctrl</declname>
        </param>
        <briefdescription>
<para>Sets value in control to unspecified. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/editors.h" line="115"/>
      </memberdef>
      <memberdef kind="function" id="classwx_p_g_editor_1a9bb01134af7a481206486035c54f5c20" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxPGEditor::SetControlAppearance</definition>
        <argsstring>(wxPropertyGrid *pg, wxPGProperty *property, wxWindow *ctrl, const wxPGCell &amp;appearance, const wxPGCell &amp;oldAppearance, bool unspecified) const </argsstring>
        <name>SetControlAppearance</name>
        <param>
          <type><ref refid="classwx_property_grid" kindref="compound">wxPropertyGrid</ref> *</type>
          <declname>pg</declname>
        </param>
        <param>
          <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
          <declname>property</declname>
        </param>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>ctrl</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_p_g_cell" kindref="compound">wxPGCell</ref> &amp;</type>
          <declname>appearance</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_p_g_cell" kindref="compound">wxPGCell</ref> &amp;</type>
          <declname>oldAppearance</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>unspecified</declname>
        </param>
        <briefdescription>
<para>Called by property grid to set new appearance for the control. </para>        </briefdescription>
        <detaileddescription>
<para>Default implementation sets foreground colour, background colour, font, plus text for <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> and <ref refid="classwx_combo_ctrl" kindref="compound">wxComboCtrl</ref>.</para><para>The parameter <emphasis>appearance</emphasis> represents the new appearance to be applied.</para><para>The parameter <emphasis>oldAppearance</emphasis> is the previously applied appearance. Used to detect which control attributes need to be changed (e.g. so we only change background colour if really needed).</para><para>Finally, the parameter <emphasis>unspecified</emphasis> if true tells this function that the new appearance represents an unspecified property value. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/editors.h" line="136"/>
      </memberdef>
      <memberdef kind="function" id="classwx_p_g_editor_1a5fefad75f7890ac414f365d0b949a7a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxPGEditor::SetControlStringValue</definition>
        <argsstring>(wxPGProperty *property, wxWindow *ctrl, const wxString &amp;txt) const </argsstring>
        <name>SetControlStringValue</name>
        <param>
          <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
          <declname>property</declname>
        </param>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>ctrl</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>txt</declname>
        </param>
        <briefdescription>
<para>Sets control&apos;s value specifically from string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/editors.h" line="140"/>
      </memberdef>
      <memberdef kind="function" id="classwx_p_g_editor_1ad9667eb541f25f1d667de8cb937d24af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxPGEditor::SetControlIntValue</definition>
        <argsstring>(wxPGProperty *property, wxWindow *ctrl, int value) const </argsstring>
        <name>SetControlIntValue</name>
        <param>
          <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
          <declname>property</declname>
        </param>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>ctrl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets control&apos;s value specifically from int (applies to choice etc.). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/editors.h" line="144"/>
      </memberdef>
      <memberdef kind="function" id="classwx_p_g_editor_1a97de228636ce4e4b3f8d00593c65fe26" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int wxPGEditor::InsertItem</definition>
        <argsstring>(wxWindow *ctrl, const wxString &amp;label, int index) const </argsstring>
        <name>InsertItem</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>ctrl</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Inserts item to existing control. </para>        </briefdescription>
        <detaileddescription>
<para>Index -1 means end of list. Default implementation does nothing. Returns index of item added. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/editors.h" line="150"/>
      </memberdef>
      <memberdef kind="function" id="classwx_p_g_editor_1afc7056e3e42a7deba94e13b519fdbc7c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxPGEditor::DeleteItem</definition>
        <argsstring>(wxWindow *ctrl, int index) const </argsstring>
        <name>DeleteItem</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>ctrl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Deletes item from existing control. </para>        </briefdescription>
        <detaileddescription>
<para>Default implementation does nothing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/editors.h" line="156"/>
      </memberdef>
      <memberdef kind="function" id="classwx_p_g_editor_1a479f4ec8deeb41a41c5427f4e506c499" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxPGEditor::OnFocus</definition>
        <argsstring>(wxPGProperty *property, wxWindow *wnd) const </argsstring>
        <name>OnFocus</name>
        <param>
          <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
          <declname>property</declname>
        </param>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>wnd</declname>
        </param>
        <briefdescription>
<para>Extra processing when control gains focus. </para>        </briefdescription>
        <detaileddescription>
<para>For example, <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> based controls should select all text. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/editors.h" line="162"/>
      </memberdef>
      <memberdef kind="function" id="classwx_p_g_editor_1abd6bbee08a30f42d55b386cd5d400946" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxPGEditor::CanContainCustomImage</definition>
        <argsstring>() const </argsstring>
        <name>CanContainCustomImage</name>
        <briefdescription>
<para>Returns true if control itself can contain the custom image. </para>        </briefdescription>
        <detaileddescription>
<para>Default implementation returns false. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/editors.h" line="168"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for custom <ref refid="classwx_property_grid" kindref="compound">wxPropertyGrid</ref> editors. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="remark"><para><itemizedlist>
<listitem><para>Names of built-in property editors are: TextCtrl, Choice, ComboBox, CheckBox, TextCtrlAndButton, and ChoiceAndButton. Additional editors include SpinCtrl and DatePickerCtrl, but using them requires calling <ref refid="classwx_property_grid_interface_1a330dc911b08378e967955f8a6a938612" kindref="member">wxPropertyGrid::RegisterAdditionalEditors()</ref> prior use.</para></listitem></itemizedlist>
</para></simplesect>
<itemizedlist>
<listitem><para>Pointer to built-in editor is available as wxPGEditor_EditorName (eg. wxPGEditor_TextCtrl).</para></listitem></itemizedlist>
</para><para><itemizedlist>
<listitem><para>Before you start using new editor you just created, you need to register it using static function <ref refid="classwx_property_grid_1adb8c3d0d29d1c051a8a9ece93d40f6b7" kindref="member">wxPropertyGrid::RegisterEditorClass()</ref>, with code like this: <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_p_g_editor" kindref="compound" tooltip="Base class for custom wxPropertyGrid editors.">wxPGEditor</ref>*<sp/>editorPointer<sp/>=<sp/><ref refid="classwx_property_grid_1adb8c3d0d29d1c051a8a9ece93d40f6b7" kindref="member" tooltip="Forwards to DoRegisterEditorClass with empty name.">wxPropertyGrid::RegisterEditorClass</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MyEditorClass(),<sp/></highlight><highlight class="stringliteral">&quot;MyEditor&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> After that, <ref refid="classwx_property_grid" kindref="compound">wxPropertyGrid</ref> will take ownership of the given object, but you should still store editorPointer somewhere, so you can pass it to <ref refid="classwx_p_g_property_1a2cd2e6f0b30a1ab789f9ea8b58226260" kindref="member">wxPGProperty::SetEditor()</ref>, or return it from wxPGEditor::DoGetEditorClass().</para></listitem></itemizedlist>
</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxpropgrid" kindref="member">wxPropertyGrid</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__propgrid" kindref="compound">wxPropertyGrid</ref> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="8842">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="8841">
        <label>wxPGEditor</label>
        <link refid="classwx_p_g_editor"/>
        <childnode refid="8842" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8844">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="8845" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="8843">
        <label>wxPGEditor</label>
        <link refid="classwx_p_g_editor"/>
        <childnode refid="8844" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8845">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/editors.h" line="38" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/editors.h" bodystart="37" bodyend="169"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxPGEditor</scope><name>AllocExclusive</name></member>
      <member refid="classwx_p_g_editor_1abd6bbee08a30f42d55b386cd5d400946" prot="public" virt="virtual"><scope>wxPGEditor</scope><name>CanContainCustomImage</name></member>
      <member refid="classwx_object_1a1d39f1d3650fe0982c9a1abe7f9fe7b7" prot="protected" virt="virtual"><scope>wxPGEditor</scope><name>CloneRefData</name></member>
      <member refid="classwx_p_g_editor_1a9d33fbd55fe4fe390bdaa826a7ff87e2" prot="public" virt="pure-virtual"><scope>wxPGEditor</scope><name>CreateControls</name></member>
      <member refid="classwx_object_1a95c6a5e4e1e03ff23c7b9efe4cff0c1a" prot="protected" virt="virtual"><scope>wxPGEditor</scope><name>CreateRefData</name></member>
      <member refid="classwx_p_g_editor_1afc7056e3e42a7deba94e13b519fdbc7c" prot="public" virt="virtual"><scope>wxPGEditor</scope><name>DeleteItem</name></member>
      <member refid="classwx_p_g_editor_1ac44a1db95b88f0f33f723eff7bc3d983" prot="public" virt="virtual"><scope>wxPGEditor</scope><name>DrawValue</name></member>
      <member refid="classwx_object_1ab3a0c6f723cbaddb47be4e8dd98cc8e2" prot="public" virt="virtual"><scope>wxPGEditor</scope><name>GetClassInfo</name></member>
      <member refid="classwx_p_g_editor_1ac3c037223d4a2d9bcf6b7b79d4e22495" prot="public" virt="virtual"><scope>wxPGEditor</scope><name>GetName</name></member>
      <member refid="classwx_object_1aabdb4fc957226544a8408167844e4f42" prot="public" virt="non-virtual"><scope>wxPGEditor</scope><name>GetRefData</name></member>
      <member refid="classwx_p_g_editor_1a2a4995739922590161ffbdf7127063f2" prot="public" virt="virtual"><scope>wxPGEditor</scope><name>GetValueFromControl</name></member>
      <member refid="classwx_p_g_editor_1a97de228636ce4e4b3f8d00593c65fe26" prot="public" virt="virtual"><scope>wxPGEditor</scope><name>InsertItem</name></member>
      <member refid="classwx_object_1af40d580385cf4f8112fae7713404b01e" prot="public" virt="non-virtual"><scope>wxPGEditor</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a80a1a3fda7b14396a9ddd3d7a46a88bd" prot="public" virt="non-virtual"><scope>wxPGEditor</scope><name>IsSameAs</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxPGEditor</scope><name>m_refData</name></member>
      <member refid="classwx_p_g_editor_1a035fa3bee4ac87e4300df0c637a56261" prot="public" virt="pure-virtual"><scope>wxPGEditor</scope><name>OnEvent</name></member>
      <member refid="classwx_p_g_editor_1a479f4ec8deeb41a41c5427f4e506c499" prot="public" virt="virtual"><scope>wxPGEditor</scope><name>OnFocus</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxPGEditor</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxPGEditor</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxPGEditor</scope><name>Ref</name></member>
      <member refid="classwx_p_g_editor_1a9bb01134af7a481206486035c54f5c20" prot="public" virt="virtual"><scope>wxPGEditor</scope><name>SetControlAppearance</name></member>
      <member refid="classwx_p_g_editor_1ad9667eb541f25f1d667de8cb937d24af" prot="public" virt="virtual"><scope>wxPGEditor</scope><name>SetControlIntValue</name></member>
      <member refid="classwx_p_g_editor_1a5fefad75f7890ac414f365d0b949a7a6" prot="public" virt="virtual"><scope>wxPGEditor</scope><name>SetControlStringValue</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxPGEditor</scope><name>SetRefData</name></member>
      <member refid="classwx_p_g_editor_1a8b4f403f1311f9b3a57807147f0e8473" prot="public" virt="pure-virtual"><scope>wxPGEditor</scope><name>SetValueToUnspecified</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxPGEditor</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxPGEditor</scope><name>UnShare</name></member>
      <member refid="classwx_p_g_editor_1a229b635a46763efa40814584eb480c51" prot="public" virt="pure-virtual"><scope>wxPGEditor</scope><name>UpdateControl</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxPGEditor</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxPGEditor</scope><name>wxObject</name></member>
      <member refid="classwx_p_g_editor_1a31af1e59136a4246e19a4f2792762a1f" prot="public" virt="non-virtual"><scope>wxPGEditor</scope><name>wxPGEditor</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxPGEditor</scope><name>~wxObject</name></member>
      <member refid="classwx_p_g_editor_1a29dc3fd2736e4e4929753e10df3fa01c" prot="public" virt="virtual"><scope>wxPGEditor</scope><name>~wxPGEditor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
