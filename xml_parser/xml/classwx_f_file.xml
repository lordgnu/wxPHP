<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_f_file" kind="class" prot="public">
    <compoundname>wxFFile</compoundname>
    <includes local="no">wx/ffile.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_f_file_1aef8e8fcc709f5b03c2a605602652b31f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxFFile::wxFFile</definition>
        <argsstring>()</argsstring>
        <name>wxFFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ffile.h" line="29"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_file_1a957a84c52a104a88892e647900b666a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxFFile::wxFFile</definition>
        <argsstring>(FILE *fp)</argsstring>
        <name>wxFFile</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
<para>Opens a file with the given file pointer, which has already been opened. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fp</parametername>
</parameternamelist>
<parameterdescription>
<para>An existing file descriptor, such as stderr. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ffile.h" line="37"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_file_1a07a6341e1b5d624064e5d09559e6481b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxFFile::wxFFile</definition>
        <argsstring>(const wxString &amp;filename, const wxString &amp;mode=&quot;r&quot;)</argsstring>
        <name>wxFFile</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>mode</declname>
          <defval>&quot;r&quot;</defval>
        </param>
        <briefdescription>
<para>Opens a file with the given mode. </para>        </briefdescription>
        <detaileddescription>
<para>As there is no way to return whether the operation was successful or not from the constructor you should test the return value of <ref refid="classwx_f_file_1a8d957fe6f3c765d0141186e0aac9a7bf" kindref="member">IsOpened()</ref> to check that it didn&apos;t fail.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The filename. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>The mode in which to open the file using standard C strings. Note that you should use &quot;b&quot; flag if you use binary files under Windows or the results might be unexpected due to automatic newline conversion done for the text files. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ffile.h" line="53"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_file_1a60ead93a3fcd003b74ae9fe39694b1fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxFFile::~wxFFile</definition>
        <argsstring>()</argsstring>
        <name>~wxFFile</name>
        <briefdescription>
<para>Destructor will close the file. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>it is not virtual so you should <emphasis>not</emphasis> derive from wxFFile! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ffile.h" line="61"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_file_1a7e793b723e47955790b3f381bef450de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxFFile::Attach</definition>
        <argsstring>(FILE *fp, const wxString &amp;name=wxEmptyString)</argsstring>
        <name>Attach</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <briefdescription>
<para>Attaches an existing file pointer to the <ref refid="classwx_f_file" kindref="compound">wxFFile</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>The descriptor should be already opened and it will be closed by <ref refid="classwx_f_file" kindref="compound">wxFFile</ref> object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ffile.h" line="68"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_file_1a00f1f75c98adc0a8c401d702006f406a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxFFile::Close</definition>
        <argsstring>()</argsstring>
        <name>Close</name>
        <briefdescription>
<para>Closes the file and returns true on success. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ffile.h" line="73"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_file_1a70a7d8f33458d53ddf693b2a5edff711" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxFFile::Detach</definition>
        <argsstring>()</argsstring>
        <name>Detach</name>
        <briefdescription>
<para>Get back a file pointer from <ref refid="classwx_f_file" kindref="compound">wxFFile</ref> object -- the caller is responsible for closing the file if this descriptor is opened. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="classwx_f_file_1a8d957fe6f3c765d0141186e0aac9a7bf" kindref="member">IsOpened()</ref> will return false after call to <ref refid="classwx_f_file_1a70a7d8f33458d53ddf693b2a5edff711" kindref="member">Detach()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ffile.h" line="81"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_file_1a16992b8b1da3d2a06b8be60529f29327" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxFFile::Eof</definition>
        <argsstring>() const </argsstring>
        <name>Eof</name>
        <briefdescription>
<para>Returns true if an attempt has been made to read <emphasis>past</emphasis> the end of the file. </para>        </briefdescription>
        <detaileddescription>
<para>Note that the behaviour of the file descriptor based class <ref refid="classwx_file" kindref="compound">wxFile</ref> is different as <ref refid="classwx_file_1ae584442c77415e9d287ca7faec0dcca4" kindref="member">wxFile::Eof()</ref> will return true here as soon as the last byte of the file has been read.</para><para>Also note that this method may only be called for opened files and may crash if the file is not opened.</para><para><xrefsect id="todo_1_todo000027"><xreftitle>Todo</xreftitle><xrefdescription><para>THIS METHOD MAY CRASH? DOESN&apos;T SOUND GOOD</para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><ref refid="classwx_f_file_1a8d957fe6f3c765d0141186e0aac9a7bf" kindref="member">IsOpened()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ffile.h" line="97"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_file_1ad720e6da582c899997ab79c7aa323155" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxFFile::Error</definition>
        <argsstring>() const </argsstring>
        <name>Error</name>
        <briefdescription>
<para>Returns true if an error has occurred on this file, similar to the standard <computeroutput>ferror()</computeroutput> function. </para>        </briefdescription>
        <detaileddescription>
<para>Please note that this method may only be called for opened files and may crash if the file is not opened.</para><para><xrefsect id="todo_1_todo000028"><xreftitle>Todo</xreftitle><xrefdescription><para>THIS METHOD MAY CRASH? DOESN&apos;T SOUND GOOD</para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><ref refid="classwx_f_file_1a8d957fe6f3c765d0141186e0aac9a7bf" kindref="member">IsOpened()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ffile.h" line="110"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_file_1a914af50f413957a7decd928ababf1112" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxFFile::Flush</definition>
        <argsstring>()</argsstring>
        <name>Flush</name>
        <briefdescription>
<para>Flushes the file and returns true on success. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ffile.h" line="115"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_file_1a7d1b48920f6583f9a50f7f21cbaa6b2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__group__funcmacro__file_1ga68af15575db590aaa874d40a1073809d" kindref="member">wxFileKind</ref></type>
        <definition>wxFileKind wxFFile::GetKind</definition>
        <argsstring>() const </argsstring>
        <name>GetKind</name>
        <briefdescription>
<para>Returns the type of the file. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__group__funcmacro__file_1ga68af15575db590aaa874d40a1073809d" kindref="member">wxFileKind</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ffile.h" line="122"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_file_1a3d85586d6b75a9213dea048bab61fc9a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>const wxString&amp; wxFFile::GetName</definition>
        <argsstring>() const </argsstring>
        <name>GetName</name>
        <briefdescription>
<para>Returns the file name. </para>        </briefdescription>
        <detaileddescription>
<para>This is the name that was specified when the object was constructed or to the last call to <ref refid="classwx_f_file_1a93670081c85d725649660611e5dccb9c" kindref="member">Open()</ref>. Notice that it may be empty if <ref refid="classwx_f_file_1a7e793b723e47955790b3f381bef450de" kindref="member">Attach()</ref> was called without specifying the name. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ffile.h" line="131"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_file_1a8d957fe6f3c765d0141186e0aac9a7bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxFFile::IsOpened</definition>
        <argsstring>() const </argsstring>
        <name>IsOpened</name>
        <briefdescription>
<para>Returns true if the file is opened. </para>        </briefdescription>
        <detaileddescription>
<para>Most of the methods of this class may only be used for an opened file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ffile.h" line="138"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_file_1a0fe2858580e9d94623228ce98afdd116" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__group__funcmacro__file_1ga69d831b3febabc149c67b716c8e22de5" kindref="member">wxFileOffset</ref></type>
        <definition>wxFileOffset wxFFile::Length</definition>
        <argsstring>() const </argsstring>
        <name>Length</name>
        <briefdescription>
<para>Returns the length of the file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ffile.h" line="143"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_file_1a93670081c85d725649660611e5dccb9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxFFile::Open</definition>
        <argsstring>(const wxString &amp;filename, const wxString &amp;mode=&quot;r&quot;)</argsstring>
        <name>Open</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>mode</declname>
          <defval>&quot;r&quot;</defval>
        </param>
        <briefdescription>
<para>Opens the file, returning true if successful. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The filename. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>The mode in which to open the file. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ffile.h" line="153"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_file_1affb9aa57da40a29e4ca2d8f0abc804a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxFFile::Read</definition>
        <argsstring>(void *buffer, size_t count)</argsstring>
        <name>Read</name>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Reads the specified number of bytes into a buffer, returning the actual number read. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>A buffer to receive the data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes to read.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of bytes read. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ffile.h" line="165"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_file_1af8ac1ea8df8df72d0bfddfb179b40af3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxFFile::ReadAll</definition>
        <argsstring>(wxString *str, const wxMBConv &amp;conv=wxConvAuto())</argsstring>
        <name>ReadAll</name>
        <param>
          <type><ref refid="classwx_string" kindref="compound">wxString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_m_b_conv" kindref="compound">wxMBConv</ref> &amp;</type>
          <declname>conv</declname>
          <defval><ref refid="classwx_conv_auto" kindref="compound">wxConvAuto</ref>()</defval>
        </param>
        <briefdescription>
<para>Reads the entire contents of the file into a string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>String to read data into. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conv</parametername>
</parameternamelist>
<parameterdescription>
<para>Conversion object to use in Unicode build; by default supposes that file contents is encoded in UTF-8.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if file was read successfully, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ffile.h" line="178"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_file_1a5b629e330a80275fc8275b8b08a5b40e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxFFile::Seek</definition>
        <argsstring>(wxFileOffset ofs, wxSeekMode mode=wxFromStart)</argsstring>
        <name>Seek</name>
        <param>
          <type><ref refid="group__group__funcmacro__file_1ga69d831b3febabc149c67b716c8e22de5" kindref="member">wxFileOffset</ref></type>
          <declname>ofs</declname>
        </param>
        <param>
          <type><ref refid="group__group__funcmacro__file_1gae3981f8632f0391e5c852bf62eb982b0" kindref="member">wxSeekMode</ref></type>
          <declname>mode</declname>
          <defval>wxFromStart</defval>
        </param>
        <briefdescription>
<para>Seeks to the specified position and returns true on success. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ofs</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset to seek to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>One of wxFromStart, wxFromEnd, wxFromCurrent. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ffile.h" line="188"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_file_1a74fd996691eb2ba0f06371a17ea3dbb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxFFile::SeekEnd</definition>
        <argsstring>(wxFileOffset ofs=0)</argsstring>
        <name>SeekEnd</name>
        <param>
          <type><ref refid="group__group__funcmacro__file_1ga69d831b3febabc149c67b716c8e22de5" kindref="member">wxFileOffset</ref></type>
          <declname>ofs</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Moves the file pointer to the specified number of bytes before the end of the file and returns true on success. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ofs</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes before the end of the file. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ffile.h" line="197"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_file_1a1b84187b39d443c83f37727a4e69051f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__group__funcmacro__file_1ga69d831b3febabc149c67b716c8e22de5" kindref="member">wxFileOffset</ref></type>
        <definition>wxFileOffset wxFFile::Tell</definition>
        <argsstring>() const </argsstring>
        <name>Tell</name>
        <briefdescription>
<para>Returns the current position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ffile.h" line="202"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_file_1afd41f8e0692c46a31f15b66bbb9bb6e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxFFile::Write</definition>
        <argsstring>(const wxString &amp;str, const wxMBConv &amp;conv=wxConvAuto())</argsstring>
        <name>Write</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_m_b_conv" kindref="compound">wxMBConv</ref> &amp;</type>
          <declname>conv</declname>
          <defval><ref refid="classwx_conv_auto" kindref="compound">wxConvAuto</ref>()</defval>
        </param>
        <briefdescription>
<para>Writes the contents of the string to the file, returns true on success. </para>        </briefdescription>
        <detaileddescription>
<para>The second argument is only meaningful in Unicode build of wxWidgets when <emphasis>conv</emphasis> is used to convert <emphasis>str</emphasis> to multibyte representation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ffile.h" line="210"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_file_1a4bf1d6b4ba02051b31c52f091cd6f53e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxFFile::Write</definition>
        <argsstring>(const void *buffer, size_t count)</argsstring>
        <name>Write</name>
        <param>
          <type>const void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Writes the specified number of bytes from a buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>A buffer containing the data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes to write.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of bytes written. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ffile.h" line="222"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_file_1a6a63fa1dd92a895a4925ad3bafc46636" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE* wxFFile::fp</definition>
        <argsstring>() const </argsstring>
        <name>fp</name>
        <briefdescription>
<para>Returns the file pointer associated with the file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ffile.h" line="227"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classwx_f_file" kindref="compound">wxFFile</ref> implements buffered file I/O. </para>    </briefdescription>
    <detaileddescription>
<para>This is a very small class designed to minimize the overhead of using it - in fact, there is hardly any overhead at all, but using it brings you automatic error checking and hides differences between platforms and compilers.</para><para>It wraps inside it a <computeroutput>FILE</computeroutput> * handle used by standard C IO library (also known as <computeroutput>stdio</computeroutput>).</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__file" kindref="compound">File Handling</ref></para><para><simplesect kind="see"><para><ref refid="classwx_f_file_1a8d957fe6f3c765d0141186e0aac9a7bf" kindref="member">wxFFile::IsOpened</ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ffile.h" line="27" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/ffile.h" bodystart="26" bodyend="228"/>
    <listofallmembers>
      <member refid="classwx_f_file_1a7e793b723e47955790b3f381bef450de" prot="public" virt="non-virtual"><scope>wxFFile</scope><name>Attach</name></member>
      <member refid="classwx_f_file_1a00f1f75c98adc0a8c401d702006f406a" prot="public" virt="non-virtual"><scope>wxFFile</scope><name>Close</name></member>
      <member refid="classwx_f_file_1a70a7d8f33458d53ddf693b2a5edff711" prot="public" virt="non-virtual"><scope>wxFFile</scope><name>Detach</name></member>
      <member refid="classwx_f_file_1a16992b8b1da3d2a06b8be60529f29327" prot="public" virt="non-virtual"><scope>wxFFile</scope><name>Eof</name></member>
      <member refid="classwx_f_file_1ad720e6da582c899997ab79c7aa323155" prot="public" virt="non-virtual"><scope>wxFFile</scope><name>Error</name></member>
      <member refid="classwx_f_file_1a914af50f413957a7decd928ababf1112" prot="public" virt="non-virtual"><scope>wxFFile</scope><name>Flush</name></member>
      <member refid="classwx_f_file_1a6a63fa1dd92a895a4925ad3bafc46636" prot="public" virt="non-virtual"><scope>wxFFile</scope><name>fp</name></member>
      <member refid="classwx_f_file_1a7d1b48920f6583f9a50f7f21cbaa6b2e" prot="public" virt="non-virtual"><scope>wxFFile</scope><name>GetKind</name></member>
      <member refid="classwx_f_file_1a3d85586d6b75a9213dea048bab61fc9a" prot="public" virt="non-virtual"><scope>wxFFile</scope><name>GetName</name></member>
      <member refid="classwx_f_file_1a8d957fe6f3c765d0141186e0aac9a7bf" prot="public" virt="non-virtual"><scope>wxFFile</scope><name>IsOpened</name></member>
      <member refid="classwx_f_file_1a0fe2858580e9d94623228ce98afdd116" prot="public" virt="non-virtual"><scope>wxFFile</scope><name>Length</name></member>
      <member refid="classwx_f_file_1a93670081c85d725649660611e5dccb9c" prot="public" virt="non-virtual"><scope>wxFFile</scope><name>Open</name></member>
      <member refid="classwx_f_file_1affb9aa57da40a29e4ca2d8f0abc804a7" prot="public" virt="non-virtual"><scope>wxFFile</scope><name>Read</name></member>
      <member refid="classwx_f_file_1af8ac1ea8df8df72d0bfddfb179b40af3" prot="public" virt="non-virtual"><scope>wxFFile</scope><name>ReadAll</name></member>
      <member refid="classwx_f_file_1a5b629e330a80275fc8275b8b08a5b40e" prot="public" virt="non-virtual"><scope>wxFFile</scope><name>Seek</name></member>
      <member refid="classwx_f_file_1a74fd996691eb2ba0f06371a17ea3dbb4" prot="public" virt="non-virtual"><scope>wxFFile</scope><name>SeekEnd</name></member>
      <member refid="classwx_f_file_1a1b84187b39d443c83f37727a4e69051f" prot="public" virt="non-virtual"><scope>wxFFile</scope><name>Tell</name></member>
      <member refid="classwx_f_file_1afd41f8e0692c46a31f15b66bbb9bb6e4" prot="public" virt="non-virtual"><scope>wxFFile</scope><name>Write</name></member>
      <member refid="classwx_f_file_1a4bf1d6b4ba02051b31c52f091cd6f53e" prot="public" virt="non-virtual"><scope>wxFFile</scope><name>Write</name></member>
      <member refid="classwx_f_file_1aef8e8fcc709f5b03c2a605602652b31f" prot="public" virt="non-virtual"><scope>wxFFile</scope><name>wxFFile</name></member>
      <member refid="classwx_f_file_1a957a84c52a104a88892e647900b666a5" prot="public" virt="non-virtual"><scope>wxFFile</scope><name>wxFFile</name></member>
      <member refid="classwx_f_file_1a07a6341e1b5d624064e5d09559e6481b" prot="public" virt="non-virtual"><scope>wxFFile</scope><name>wxFFile</name></member>
      <member refid="classwx_f_file_1a60ead93a3fcd003b74ae9fe39694b1fd" prot="public" virt="non-virtual"><scope>wxFFile</scope><name>~wxFFile</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
