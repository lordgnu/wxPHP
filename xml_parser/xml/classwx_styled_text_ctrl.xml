<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_styled_text_ctrl" kind="class" prot="public">
    <compoundname>wxStyledTextCtrl</compoundname>
    <basecompoundref refid="classwx_control" prot="public" virt="non-virtual">wxControl</basecompoundref>
    <includes local="no">wx/stc/stc.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a0a55567d3331ee6cb8271d183be7a737" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxStyledTextCtrl::wxStyledTextCtrl</definition>
        <argsstring>(wxWindow *parent, wxWindowID id=wxID_ANY, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=0, const wxString &amp;name=wxSTCNameStr)</argsstring>
        <name>wxStyledTextCtrl</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="windowid_8h_1ae8091432cc2cb2485d45f2302fb51133" kindref="member">wxWindowID</ref></type>
          <declname>id</declname>
          <defval>wxID_ANY</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pos</declname>
          <defval><ref refid="gdicmn_8h_1af5a90c753eaf3d3e3e5068a19ec3c1d0" kindref="member">wxDefaultPosition</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
          <defval><ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref></defval>
        </param>
        <param>
          <type>long</type>
          <declname>style</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
          <defval>wxSTCNameStr</defval>
        </param>
        <briefdescription>
<para>Ctor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="348"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a253764689ee3a0448c159f05b683c050" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AddRefDocument</definition>
        <argsstring>(void *docPointer)</argsstring>
        <name>AddRefDocument</name>
        <param>
          <type>void *</type>
          <declname>docPointer</declname>
        </param>
        <briefdescription>
<para>Extend life of document. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="353"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1acf84b22ebe77e57927ac9bcbcec09a5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AddStyledText</definition>
        <argsstring>(const wxMemoryBuffer &amp;data)</argsstring>
        <name>AddStyledText</name>
        <param>
          <type>const <ref refid="classwx_memory_buffer" kindref="compound">wxMemoryBuffer</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Add array of cells to document. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="358"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae6a49933178e52a9312741c06a7bcfb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AddText</definition>
        <argsstring>(const wxString &amp;text)</argsstring>
        <name>AddText</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Add text to the document at current position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="363"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aff7ad6c266575377b69a94dc115ed10a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AddTextRaw</definition>
        <argsstring>(const char *text, int length=-1)</argsstring>
        <name>AddTextRaw</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Add raw text to the document at current position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="368"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a4af0b26e83a158ba2d444bcb42fe90be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::Allocate</definition>
        <argsstring>(int bytes)</argsstring>
        <name>Allocate</name>
        <param>
          <type>int</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
<para>Enlarge the document to a particular size of text bytes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="373"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9ece0e2d645daec2e36b26111ff27fac" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxStyledTextCtrl::AppendText</definition>
        <argsstring>(const wxString &amp;text)</argsstring>
        <name>AppendText</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Append a string to the end of the document without changing the selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="378"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a44c5ff0ac81ff7496e84e8eb4e691091" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AppendTextRaw</definition>
        <argsstring>(const char *text, int length=-1)</argsstring>
        <name>AppendTextRaw</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Append a string to the end of the document without changing the selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="383"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a0f42da320f51676cefb9c96a50076a3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::AutoCompActive</definition>
        <argsstring>()</argsstring>
        <name>AutoCompActive</name>
        <briefdescription>
<para>Is there an auto-completion list visible? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="388"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a67a96291c515f843bdb50ff2befbe04e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AutoCompCancel</definition>
        <argsstring>()</argsstring>
        <name>AutoCompCancel</name>
        <briefdescription>
<para>Remove the auto-completion list from the screen. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="393"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae73acee3f1f2e5009574a4d58dc30899" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AutoCompComplete</definition>
        <argsstring>()</argsstring>
        <name>AutoCompComplete</name>
        <briefdescription>
<para>User has selected an item so remove the list and insert the selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="398"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a63e576887bc5ce730dd977fe692138a7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::AutoCompGetAutoHide</definition>
        <argsstring>() const </argsstring>
        <name>AutoCompGetAutoHide</name>
        <briefdescription>
<para>Retrieve whether or not autocompletion is hidden automatically when nothing matches. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="404"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9dff390dae42510b1186fb132d5cb2a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::AutoCompGetCancelAtStart</definition>
        <argsstring>() const </argsstring>
        <name>AutoCompGetCancelAtStart</name>
        <briefdescription>
<para>Retrieve whether auto-completion cancelled by backspacing before start. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="409"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a5426442ed540535279e7789f6f2c56e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::AutoCompGetChooseSingle</definition>
        <argsstring>() const </argsstring>
        <name>AutoCompGetChooseSingle</name>
        <briefdescription>
<para>Retrieve whether a single item auto-completion list automatically choose the item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="415"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a586f70b655d6502ff06b0aa21e29a19d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::AutoCompGetCurrent</definition>
        <argsstring>()</argsstring>
        <name>AutoCompGetCurrent</name>
        <briefdescription>
<para>Get currently selected item position in the auto-completion list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="420"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af7d3537cef242b7938ad2c7293a58914" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::AutoCompGetDropRestOfWord</definition>
        <argsstring>() const </argsstring>
        <name>AutoCompGetDropRestOfWord</name>
        <briefdescription>
<para>Retrieve whether or not autocompletion deletes any word characters after the inserted text upon completion. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="426"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a708057881fe7ed927c48dd9302306093" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::AutoCompGetIgnoreCase</definition>
        <argsstring>() const </argsstring>
        <name>AutoCompGetIgnoreCase</name>
        <briefdescription>
<para>Retrieve state of ignore case flag. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="431"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a48fb68ee2ca2ad53fec892ba41656799" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::AutoCompGetMaxHeight</definition>
        <argsstring>() const </argsstring>
        <name>AutoCompGetMaxHeight</name>
        <briefdescription>
<para>Set the maximum height, in rows, of auto-completion and user lists. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="436"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af198c2518ed4a847a82676ae414e33dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::AutoCompGetMaxWidth</definition>
        <argsstring>() const </argsstring>
        <name>AutoCompGetMaxWidth</name>
        <briefdescription>
<para>Get the maximum width, in characters, of auto-completion and user lists. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="441"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae21c4c6c0706cb3aa6c532c5486f6bbe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::AutoCompGetSeparator</definition>
        <argsstring>() const </argsstring>
        <name>AutoCompGetSeparator</name>
        <briefdescription>
<para>Retrieve the auto-completion list separator character. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="446"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a2a7b167414763baa480cbe97b49ba01b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::AutoCompGetTypeSeparator</definition>
        <argsstring>() const </argsstring>
        <name>AutoCompGetTypeSeparator</name>
        <briefdescription>
<para>Retrieve the auto-completion list type-separator character. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="451"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ab26825a33c6bc6a7c301a8406c5c6f0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::AutoCompPosStart</definition>
        <argsstring>()</argsstring>
        <name>AutoCompPosStart</name>
        <briefdescription>
<para>Retrieve the position of the caret when the auto-completion list was displayed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="456"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a83e1f2434cf86b7321333ef90c53bd21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AutoCompSelect</definition>
        <argsstring>(const wxString &amp;text)</argsstring>
        <name>AutoCompSelect</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Select the item in the auto-completion list that starts with a string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="461"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a3f11adf70e6e0ee121d3375cdfb4c455" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AutoCompSetAutoHide</definition>
        <argsstring>(bool autoHide)</argsstring>
        <name>AutoCompSetAutoHide</name>
        <param>
          <type>bool</type>
          <declname>autoHide</declname>
        </param>
        <briefdescription>
<para>Set whether or not autocompletion is hidden automatically when nothing matches. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="466"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a1296efd068f325b21941c9cad968edd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AutoCompSetCancelAtStart</definition>
        <argsstring>(bool cancel)</argsstring>
        <name>AutoCompSetCancelAtStart</name>
        <param>
          <type>bool</type>
          <declname>cancel</declname>
        </param>
        <briefdescription>
<para>Should the auto-completion list be cancelled if the user backspaces to a position before where the box was created. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="472"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a14bef81d58d81c83e65e3aa2c2b07ce5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AutoCompSetChooseSingle</definition>
        <argsstring>(bool chooseSingle)</argsstring>
        <name>AutoCompSetChooseSingle</name>
        <param>
          <type>bool</type>
          <declname>chooseSingle</declname>
        </param>
        <briefdescription>
<para>Should a single item auto-completion list automatically choose the item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="477"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9430ffe5d457d8c2c168863a6c87cb0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AutoCompSetDropRestOfWord</definition>
        <argsstring>(bool dropRestOfWord)</argsstring>
        <name>AutoCompSetDropRestOfWord</name>
        <param>
          <type>bool</type>
          <declname>dropRestOfWord</declname>
        </param>
        <briefdescription>
<para>Set whether or not autocompletion deletes any word characters after the inserted text upon completion. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="483"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a17a74347096943bda00e5e091b264483" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AutoCompSetFillUps</definition>
        <argsstring>(const wxString &amp;characterSet)</argsstring>
        <name>AutoCompSetFillUps</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>characterSet</declname>
        </param>
        <briefdescription>
<para>Define a set of characters that when typed will cause the autocompletion to choose the selected item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="489"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1abe46b21c1195b2c81166f39d771b3335" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AutoCompSetIgnoreCase</definition>
        <argsstring>(bool ignoreCase)</argsstring>
        <name>AutoCompSetIgnoreCase</name>
        <param>
          <type>bool</type>
          <declname>ignoreCase</declname>
        </param>
        <briefdescription>
<para>Set whether case is significant when performing auto-completion searches. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="494"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a3a39dd3ef96c7953bd9aa7fdfbc8943d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AutoCompSetMaxHeight</definition>
        <argsstring>(int rowCount)</argsstring>
        <name>AutoCompSetMaxHeight</name>
        <param>
          <type>int</type>
          <declname>rowCount</declname>
        </param>
        <briefdescription>
<para>Set the maximum height, in rows, of auto-completion and user lists. </para>        </briefdescription>
        <detaileddescription>
<para>The default is 5 rows. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="500"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a97b1dc83f63df3d5cff55e98ac8d8f42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AutoCompSetMaxWidth</definition>
        <argsstring>(int characterCount)</argsstring>
        <name>AutoCompSetMaxWidth</name>
        <param>
          <type>int</type>
          <declname>characterCount</declname>
        </param>
        <briefdescription>
<para>Set the maximum width, in characters, of auto-completion and user lists. </para>        </briefdescription>
        <detaileddescription>
<para>Set to 0 to autosize to fit longest item, which is the default. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="506"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a82e788eb1f8ddfaf57250e6a08f952c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AutoCompSetSeparator</definition>
        <argsstring>(int separatorCharacter)</argsstring>
        <name>AutoCompSetSeparator</name>
        <param>
          <type>int</type>
          <declname>separatorCharacter</declname>
        </param>
        <briefdescription>
<para>Change the separator character in the string setting up an auto-completion list. </para>        </briefdescription>
        <detaileddescription>
<para>Default is space but can be changed if items contain space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="512"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ad4b09dc62d17ca6b4edcdb6cf8347ab2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AutoCompSetTypeSeparator</definition>
        <argsstring>(int separatorCharacter)</argsstring>
        <name>AutoCompSetTypeSeparator</name>
        <param>
          <type>int</type>
          <declname>separatorCharacter</declname>
        </param>
        <briefdescription>
<para>Change the type-separator character in the string setting up an auto-completion list. </para>        </briefdescription>
        <detaileddescription>
<para>Default is &apos;?&apos; but can be changed if items contain &apos;?&apos;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="518"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a442d3beba06d3791c749f20dc8c91ba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AutoCompShow</definition>
        <argsstring>(int lenEntered, const wxString &amp;itemList)</argsstring>
        <name>AutoCompShow</name>
        <param>
          <type>int</type>
          <declname>lenEntered</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>itemList</declname>
        </param>
        <briefdescription>
<para>Display a auto-completion list. </para>        </briefdescription>
        <detaileddescription>
<para>The lenEntered parameter indicates how many characters before the caret should be used to provide context. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="525"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a521ecbc5dd6a7d3127b48b52ea4abd76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AutoCompStops</definition>
        <argsstring>(const wxString &amp;characterSet)</argsstring>
        <name>AutoCompStops</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>characterSet</declname>
        </param>
        <briefdescription>
<para>Define a set of character that when typed cancel the auto-completion list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="530"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a5d3e32e591c11634eeaf5e912b922b36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::BackTab</definition>
        <argsstring>()</argsstring>
        <name>BackTab</name>
        <briefdescription>
<para>Dedent the selected lines. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="535"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a505c65bf4a294cfa33834027cdafa28f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::BeginUndoAction</definition>
        <argsstring>()</argsstring>
        <name>BeginUndoAction</name>
        <briefdescription>
<para>Start a sequence of actions that is undone and redone as a unit. </para>        </briefdescription>
        <detaileddescription>
<para>May be nested. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="541"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1abe05b7096219a2224bad2225eed45263" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::BraceBadLight</definition>
        <argsstring>(int pos)</argsstring>
        <name>BraceBadLight</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Highlight the character at a position indicating there is no matching brace. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="546"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1acb951c57588eab12ed020b2fcc5ea140" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::BraceHighlight</definition>
        <argsstring>(int pos1, int pos2)</argsstring>
        <name>BraceHighlight</name>
        <param>
          <type>int</type>
          <declname>pos1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos2</declname>
        </param>
        <briefdescription>
<para>Highlight the characters at two positions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="551"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a3a7af58ee7b9741c87d2daed158bc65e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::BraceMatch</definition>
        <argsstring>(int pos)</argsstring>
        <name>BraceMatch</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Find the position of a matching brace or wxSTC_INVALID_POSITION if no match. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="556"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aa984b16dce33a4aa9547c2bc7fe22fd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::CallTipActive</definition>
        <argsstring>()</argsstring>
        <name>CallTipActive</name>
        <briefdescription>
<para>Is there an active call tip? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="561"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9340360cc2e7c12ee9d16c1993390c1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::CallTipCancel</definition>
        <argsstring>()</argsstring>
        <name>CallTipCancel</name>
        <briefdescription>
<para>Remove the call tip from the screen. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="566"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a672c4eff3e808305adfb02b5894e4f61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::CallTipPosAtStart</definition>
        <argsstring>()</argsstring>
        <name>CallTipPosAtStart</name>
        <briefdescription>
<para>Retrieve the position where the caret was before displaying the call tip. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="571"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a02818a9bd35154feea5ac55dbf9358df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::CallTipSetBackground</definition>
        <argsstring>(const wxColour &amp;back)</argsstring>
        <name>CallTipSetBackground</name>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>back</declname>
        </param>
        <briefdescription>
<para>Set the background colour for the call tip. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="576"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a103c96e588c40600d360f0fc04496123" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::CallTipSetForeground</definition>
        <argsstring>(const wxColour &amp;fore)</argsstring>
        <name>CallTipSetForeground</name>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>fore</declname>
        </param>
        <briefdescription>
<para>Set the foreground colour for the call tip. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="581"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1afc1fa68a4f485d169fa664c9fc9d8d64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::CallTipSetForegroundHighlight</definition>
        <argsstring>(const wxColour &amp;fore)</argsstring>
        <name>CallTipSetForegroundHighlight</name>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>fore</declname>
        </param>
        <briefdescription>
<para>Set the foreground colour for the highlighted part of the call tip. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="586"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ac7631d41ebf3bd8c7dea4918dfa609b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::CallTipSetHighlight</definition>
        <argsstring>(int start, int end)</argsstring>
        <name>CallTipSetHighlight</name>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Highlight a segment of the definition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="591"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a8a21bb9df8e5116b7230c545f54cf9f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::CallTipShow</definition>
        <argsstring>(int pos, const wxString &amp;definition)</argsstring>
        <name>CallTipShow</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>definition</declname>
        </param>
        <briefdescription>
<para>Show a call tip containing a definition near position pos. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="596"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aee7c127fb40e52bbaa3b374ebe8e1668" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::CallTipUseStyle</definition>
        <argsstring>(int tabSize)</argsstring>
        <name>CallTipUseStyle</name>
        <param>
          <type>int</type>
          <declname>tabSize</declname>
        </param>
        <briefdescription>
<para>Enable use of STYLE_CALLTIP and set call tip tab size in pixels. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="601"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a940379b00be9c35d8cba3d2489b0b2b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxStyledTextCtrl::CanPaste</definition>
        <argsstring>() const </argsstring>
        <name>CanPaste</name>
        <briefdescription>
<para>Will a paste succeed? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="606"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1adb8ab100fe4d9aa3a54e0902001e2c92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxStyledTextCtrl::CanRedo</definition>
        <argsstring>() const </argsstring>
        <name>CanRedo</name>
        <briefdescription>
<para>Are there any redoable actions in the undo history? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="611"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a7821def2a39dea20a374837ec077a59d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxStyledTextCtrl::CanUndo</definition>
        <argsstring>() const </argsstring>
        <name>CanUndo</name>
        <briefdescription>
<para>Are there any undoable actions in the undo history? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="616"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9c91e02fc109334ba435b2fca8422508" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::Cancel</definition>
        <argsstring>()</argsstring>
        <name>Cancel</name>
        <briefdescription>
<para>Cancel any modes such as call tip or auto-completion list display. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="621"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a2c98ff8de0fcb3c59aae4df1013cbf49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::CharLeft</definition>
        <argsstring>()</argsstring>
        <name>CharLeft</name>
        <briefdescription>
<para>Move caret left one character. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="626"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ad7d6edfd400aa811567c301789f3f99f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::CharLeftExtend</definition>
        <argsstring>()</argsstring>
        <name>CharLeftExtend</name>
        <briefdescription>
<para>Move caret left one character extending selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="631"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ab8c7c791c37ad158fa356a6c2385d5b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::CharLeftRectExtend</definition>
        <argsstring>()</argsstring>
        <name>CharLeftRectExtend</name>
        <briefdescription>
<para>Move caret left one character, extending rectangular selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="637"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aa3e5fe3051d46c097b0610ae4b66775e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::CharRight</definition>
        <argsstring>()</argsstring>
        <name>CharRight</name>
        <briefdescription>
<para>Move caret right one character. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="642"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a15f0635c531037dda30bc140041e2476" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::CharRightExtend</definition>
        <argsstring>()</argsstring>
        <name>CharRightExtend</name>
        <briefdescription>
<para>Move caret right one character extending selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="647"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a6f3e1f21338c2389db68efcdd94868de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::CharRightRectExtend</definition>
        <argsstring>()</argsstring>
        <name>CharRightRectExtend</name>
        <briefdescription>
<para>Move caret right one character, extending rectangular selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="653"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af5b45963d561c61f8a983f6c6e3078ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::ChooseCaretX</definition>
        <argsstring>()</argsstring>
        <name>ChooseCaretX</name>
        <briefdescription>
<para>Set the last x chosen value to be the caret x position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="658"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a7e12bc89b919c1fb35cdfbdc01bb63c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxStyledTextCtrl::Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <briefdescription>
<para>Clear the selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="663"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af771cdc0e3b8d85c1038ba51ef33cdae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::ClearAll</definition>
        <argsstring>()</argsstring>
        <name>ClearAll</name>
        <briefdescription>
<para>Delete all text in the document. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="668"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9cfd5783fd85eaa636ce31994af57303" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::ClearDocumentStyle</definition>
        <argsstring>()</argsstring>
        <name>ClearDocumentStyle</name>
        <briefdescription>
<para>Set all style bytes to 0, remove all folding information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="673"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae93ebfa2f583e576482cf10c8307250e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::ClearRegisteredImages</definition>
        <argsstring>()</argsstring>
        <name>ClearRegisteredImages</name>
        <briefdescription>
<para>Clear all the registered images. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="678"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1abf78d20a413c8e95c97ede19e27fcbe9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::CmdKeyAssign</definition>
        <argsstring>(int key, int modifiers, int cmd)</argsstring>
        <name>CmdKeyAssign</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>modifiers</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>When key+modifier combination km is pressed perform msg. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="683"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a661022247d0eab8d150641e7d5a66665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::CmdKeyClear</definition>
        <argsstring>(int key, int modifiers)</argsstring>
        <name>CmdKeyClear</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>modifiers</declname>
        </param>
        <briefdescription>
<para>When key+modifier combination km is pressed do nothing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="688"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1afa77c7e8cda7cc91a3480a54cecf4504" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::CmdKeyClearAll</definition>
        <argsstring>()</argsstring>
        <name>CmdKeyClearAll</name>
        <briefdescription>
<para>Drop all key mappings. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="693"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a248fc7296e539353e5617940685bea49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::CmdKeyExecute</definition>
        <argsstring>(int cmd)</argsstring>
        <name>CmdKeyExecute</name>
        <param>
          <type>int</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>Perform one of the operations defined by the wxSTC_CMD_* constants. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="698"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ac6c7f32218faea6b29168464479f6816" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::Colourise</definition>
        <argsstring>(int start, int end)</argsstring>
        <name>Colourise</name>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Colourise a segment of the document using the current lexing language. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="703"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a32d7242ddf6aa9c4e317821a30207550" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::ConvertEOLs</definition>
        <argsstring>(int eolMode)</argsstring>
        <name>ConvertEOLs</name>
        <param>
          <type>int</type>
          <declname>eolMode</declname>
        </param>
        <briefdescription>
<para>Convert all line endings in the document to one mode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="708"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1adf0884482883d591e82c266c50cbdd34" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxStyledTextCtrl::Copy</definition>
        <argsstring>()</argsstring>
        <name>Copy</name>
        <briefdescription>
<para>Copy the selection to the clipboard. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="713"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a305eccb44894029e809cfa31d68e91ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::CopyRange</definition>
        <argsstring>(int start, int end)</argsstring>
        <name>CopyRange</name>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Copy a range of text to the clipboard. </para>        </briefdescription>
        <detaileddescription>
<para>Positions are clipped into the document. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="718"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aecbe5e763b12d7b744c1c77dbee2fe2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::CopyText</definition>
        <argsstring>(int length, const wxString &amp;text)</argsstring>
        <name>CopyText</name>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Copy argument text to the clipboard. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="723"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ac9fec1a8bb67fcb8d89751db19583e92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::Create</definition>
        <argsstring>(wxWindow *parent, wxWindowID id=wxID_ANY, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=0, const wxString &amp;name=wxSTCNameStr)</argsstring>
        <name>Create</name>
        <reimplements refid="classwx_window_1a95b7ca8faa033f5ab35458887c07bf38">Create</reimplements>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="windowid_8h_1ae8091432cc2cb2485d45f2302fb51133" kindref="member">wxWindowID</ref></type>
          <declname>id</declname>
          <defval>wxID_ANY</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pos</declname>
          <defval><ref refid="gdicmn_8h_1af5a90c753eaf3d3e3e5068a19ec3c1d0" kindref="member">wxDefaultPosition</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
          <defval><ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref></defval>
        </param>
        <param>
          <type>long</type>
          <declname>style</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
          <defval>wxSTCNameStr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="732"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a3f351523d7a8672305ca0ab368113ece" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* wxStyledTextCtrl::CreateDocument</definition>
        <argsstring>()</argsstring>
        <name>CreateDocument</name>
        <briefdescription>
<para>Create a new document object. </para>        </briefdescription>
        <detaileddescription>
<para>Starts with reference count of 1 and not selected into editor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="738"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ad3c85fd43a71c28ffeb188cfcc7d102b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxStyledTextCtrl::Cut</definition>
        <argsstring>()</argsstring>
        <name>Cut</name>
        <briefdescription>
<para>Cut the selection to the clipboard. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="743"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a703b45e05f6be8ae614ca60a5b36177d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::DelLineLeft</definition>
        <argsstring>()</argsstring>
        <name>DelLineLeft</name>
        <briefdescription>
<para>Delete back from the current position to the start of the line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="748"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1abd5b23cb5d54f06928002b50e96313ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::DelLineRight</definition>
        <argsstring>()</argsstring>
        <name>DelLineRight</name>
        <briefdescription>
<para>Delete forwards from the current position to the end of the line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="753"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ace37594e87afefdd579f7a20444e2898" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::DelWordLeft</definition>
        <argsstring>()</argsstring>
        <name>DelWordLeft</name>
        <briefdescription>
<para>Delete the word to the left of the caret. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="758"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a6d59400c2bf5dc56876e5f51e9ae4059" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::DelWordRight</definition>
        <argsstring>()</argsstring>
        <name>DelWordRight</name>
        <briefdescription>
<para>Delete the word to the right of the caret. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="763"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a229e837b1bc6e3b3b713eb8e83650812" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::DeleteBack</definition>
        <argsstring>()</argsstring>
        <name>DeleteBack</name>
        <briefdescription>
<para>Delete the selection or if no selection, the character before the caret. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="768"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9085f5a5a938ac29aa3a6b47c4f13a22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::DeleteBackNotLine</definition>
        <argsstring>()</argsstring>
        <name>DeleteBackNotLine</name>
        <briefdescription>
<para>Delete the selection or if no selection, the character before the caret. </para>        </briefdescription>
        <detaileddescription>
<para>Will not delete the character before at the start of a line. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="774"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af6d73028983c5042aa4dbd8297e754b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interface_2wx_2dnd_8h_1adbd4b292582eebbc9a6ce3dee31c2afb" kindref="member">wxDragResult</ref></type>
        <definition>wxDragResult wxStyledTextCtrl::DoDragOver</definition>
        <argsstring>(wxCoord x, wxCoord y, wxDragResult def)</argsstring>
        <name>DoDragOver</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="interface_2wx_2dnd_8h_1adbd4b292582eebbc9a6ce3dee31c2afb" kindref="member">wxDragResult</ref></type>
          <declname>def</declname>
        </param>
        <briefdescription>
<para>Allow for simulating a DnD DragOver. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="779"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a8e8fa7c1cc7da1fddf51c8715f1db178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::DoDropText</definition>
        <argsstring>(long x, long y, const wxString &amp;data)</argsstring>
        <name>DoDropText</name>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Allow for simulating a DnD DropText. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="784"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a87ecbf20b71b8e470cb6732aba624b73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::DocLineFromVisible</definition>
        <argsstring>(int lineDisplay)</argsstring>
        <name>DocLineFromVisible</name>
        <param>
          <type>int</type>
          <declname>lineDisplay</declname>
        </param>
        <briefdescription>
<para>Find the document line of a display line taking hidden lines into account. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="789"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1adefe3471b22ee1df8982d62a2fd45029" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::DocumentEnd</definition>
        <argsstring>()</argsstring>
        <name>DocumentEnd</name>
        <briefdescription>
<para>Move caret to last position in document. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="794"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a59425a502218d7aa9b7b5ac857602cf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::DocumentEndExtend</definition>
        <argsstring>()</argsstring>
        <name>DocumentEndExtend</name>
        <briefdescription>
<para>Move caret to last position in document extending selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="800"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ab53f0b56e7826c6f4e7753ddbced0e15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::DocumentStart</definition>
        <argsstring>()</argsstring>
        <name>DocumentStart</name>
        <briefdescription>
<para>Move caret to first position in document. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="805"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a7d0ba468af83c82dcad8265b1d6670b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::DocumentStartExtend</definition>
        <argsstring>()</argsstring>
        <name>DocumentStartExtend</name>
        <briefdescription>
<para>Move caret to first position in document extending selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="811"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a76148bfd7624f43735dccc69a378ee29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::EditToggleOvertype</definition>
        <argsstring>()</argsstring>
        <name>EditToggleOvertype</name>
        <briefdescription>
<para>Switch from insert to overtype mode or the reverse. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="816"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1afa14ec48fb24337e74f1650fa16749ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::EmptyUndoBuffer</definition>
        <argsstring>()</argsstring>
        <name>EmptyUndoBuffer</name>
        <briefdescription>
<para>Delete the undo history. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="821"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1afe2fdcd1acd46e57cb26e8d4b16833a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::EndUndoAction</definition>
        <argsstring>()</argsstring>
        <name>EndUndoAction</name>
        <briefdescription>
<para>End a sequence of actions that is undone and redone as a unit. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="826"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9a2cc57b36779323a3b437ac2ff22015" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::EnsureCaretVisible</definition>
        <argsstring>()</argsstring>
        <name>EnsureCaretVisible</name>
        <briefdescription>
<para>Ensure the caret is visible. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="831"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9a9b1eb223a5d1d27eb9a36cc8784eda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::EnsureVisible</definition>
        <argsstring>(int line)</argsstring>
        <name>EnsureVisible</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Ensure a particular line is visible by expanding any header line hiding it. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="836"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a6adbabfa94312f36411ef5cb11ef02b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::EnsureVisibleEnforcePolicy</definition>
        <argsstring>(int line)</argsstring>
        <name>EnsureVisibleEnforcePolicy</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Ensure a particular line is visible by expanding any header line hiding it. </para>        </briefdescription>
        <detaileddescription>
<para>Use the currently set visibility policy to determine which range to display. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="842"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a35822757e5083cce51aa9ebb044d9187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::FindColumn</definition>
        <argsstring>(int line, int column)</argsstring>
        <name>FindColumn</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>int</type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Find the position of a column on a line taking into account tabs and multi-byte characters. </para>        </briefdescription>
        <detaileddescription>
<para>If beyond end of line, return line end position. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="848"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aa9d3189469c4c1826cb75e2cbff84341" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::FindText</definition>
        <argsstring>(int minPos, int maxPos, const wxString &amp;text, int flags=0)</argsstring>
        <name>FindText</name>
        <param>
          <type>int</type>
          <declname>minPos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxPos</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Find some text in the document. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="854"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae22b3a855f2c6f545ea15fbfb3399b79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::FormFeed</definition>
        <argsstring>()</argsstring>
        <name>FormFeed</name>
        <briefdescription>
<para>Insert a Form Feed character. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="859"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a0796d66bc19de243e7b5f684cfca5d52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::FormatRange</definition>
        <argsstring>(bool doDraw, int startPos, int endPos, wxDC *draw, wxDC *target, wxRect renderRect, wxRect pageRect)</argsstring>
        <name>FormatRange</name>
        <param>
          <type>bool</type>
          <declname>doDraw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startPos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endPos</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> *</type>
          <declname>draw</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> *</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="classwx_rect" kindref="compound">wxRect</ref></type>
          <declname>renderRect</declname>
        </param>
        <param>
          <type><ref refid="classwx_rect" kindref="compound">wxRect</ref></type>
          <declname>pageRect</declname>
        </param>
        <briefdescription>
<para>On Windows, will draw the document into a display context such as a printer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="867"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a5c394fba7332855fe6dffde17ac84a51" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetAnchor</definition>
        <argsstring>() const </argsstring>
        <name>GetAnchor</name>
        <briefdescription>
<para>Returns the position of the opposite end of the selection to the caret. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="872"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a1741657c608dc8f632aaca600bf1391c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetBackSpaceUnIndents</definition>
        <argsstring>() const </argsstring>
        <name>GetBackSpaceUnIndents</name>
        <briefdescription>
<para>Does a backspace pressed when caret is within indentation unindent? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="877"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a6a6ff741fd5d3b39e456d107552b7902" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetBufferedDraw</definition>
        <argsstring>() const </argsstring>
        <name>GetBufferedDraw</name>
        <briefdescription>
<para>Is drawing done first into a buffer or direct to the screen? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="882"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ad5e9e27faf0c215632d51f5bce1380de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_colour" kindref="compound">wxColour</ref></type>
        <definition>wxColour wxStyledTextCtrl::GetCaretForeground</definition>
        <argsstring>() const </argsstring>
        <name>GetCaretForeground</name>
        <briefdescription>
<para>Get the foreground colour of the caret. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="887"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9e6f46532401e581ac1e57ce5aa2a0e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetCaretLineBackAlpha</definition>
        <argsstring>() const </argsstring>
        <name>GetCaretLineBackAlpha</name>
        <briefdescription>
<para>Get the background alpha of the caret line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="892"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae331168473c69e48e9d132bca8c6a50e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_colour" kindref="compound">wxColour</ref></type>
        <definition>wxColour wxStyledTextCtrl::GetCaretLineBackground</definition>
        <argsstring>() const </argsstring>
        <name>GetCaretLineBackground</name>
        <briefdescription>
<para>Get the colour of the background of the line containing the caret. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="897"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a4dae70584af70a027ceb3337341fbde6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetCaretLineVisible</definition>
        <argsstring>() const </argsstring>
        <name>GetCaretLineVisible</name>
        <briefdescription>
<para>Is the background of the line containing the caret in a different colour? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="902"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af622e7fd53a681b16852ad2b270efe67" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetCaretPeriod</definition>
        <argsstring>() const </argsstring>
        <name>GetCaretPeriod</name>
        <briefdescription>
<para>Get the time in milliseconds that the caret is on and off. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="907"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a3addf3bdc09f3af3462b226e1e347ccb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetCaretSticky</definition>
        <argsstring>() const </argsstring>
        <name>GetCaretSticky</name>
        <briefdescription>
<para>Can the caret preferred x position only be changed by explicit movement commands? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="913"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a7f847f70c5765d926db06c5075980860" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetCaretWidth</definition>
        <argsstring>() const </argsstring>
        <name>GetCaretWidth</name>
        <briefdescription>
<para>Returns the width of the insert mode caret. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="918"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a0096c378b13a5198f0907e8e24e11f48" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetCharAt</definition>
        <argsstring>(int pos) const </argsstring>
        <name>GetCharAt</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Returns the character byte at the position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="923"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a76be9141adfd1a2492a3debf00f88695" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetCodePage</definition>
        <argsstring>() const </argsstring>
        <name>GetCodePage</name>
        <briefdescription>
<para>Get the code page used to interpret the bytes of the document as characters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="928"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a0d2ad91f9e17cbca470c65f7a9f074cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetColumn</definition>
        <argsstring>(int pos) const </argsstring>
        <name>GetColumn</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Retrieve the column number of a position, taking tab width into account. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="933"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a41011408381dd91273c176b0bc08c6bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetControlCharSymbol</definition>
        <argsstring>() const </argsstring>
        <name>GetControlCharSymbol</name>
        <briefdescription>
<para>Get the way control characters are displayed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="938"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af8885aaddb96738b8a9c182655c1892a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxStyledTextCtrl::GetCurLine</definition>
        <argsstring>(int *linePos=NULL)</argsstring>
        <name>GetCurLine</name>
        <param>
          <type>int *</type>
          <declname>linePos</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="943"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a5229698886cd28f260bc14bd96b5ba93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_char_buffer" kindref="compound">wxCharBuffer</ref></type>
        <definition>wxCharBuffer wxStyledTextCtrl::GetCurLineRaw</definition>
        <argsstring>(int *linePos=NULL)</argsstring>
        <name>GetCurLineRaw</name>
        <param>
          <type>int *</type>
          <declname>linePos</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="948"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ade127ac090240c41077de95ed8867462" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetCurrentLine</definition>
        <argsstring>()</argsstring>
        <name>GetCurrentLine</name>
        <briefdescription>
<para>END of generated section Others... </para>        </briefdescription>
        <detaileddescription>
<para>Returns the line number of the line with the caret. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="955"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a1cf3d775e56d677b1bad2bf0975f776c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetCurrentPos</definition>
        <argsstring>() const </argsstring>
        <name>GetCurrentPos</name>
        <briefdescription>
<para>Returns the position of the caret. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="960"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ad219b7936c07cce89938fe977706bf94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* wxStyledTextCtrl::GetDocPointer</definition>
        <argsstring>()</argsstring>
        <name>GetDocPointer</name>
        <briefdescription>
<para>Retrieve a pointer to the document object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="965"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a97e64320abdb4197eeed9d981fe2a0b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetEOLMode</definition>
        <argsstring>() const </argsstring>
        <name>GetEOLMode</name>
        <briefdescription>
<para>Retrieve the current end of line mode - one of CRLF, CR, or LF. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="970"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a83661baa292c31b8689a154eebde4449" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_colour" kindref="compound">wxColour</ref></type>
        <definition>wxColour wxStyledTextCtrl::GetEdgeColour</definition>
        <argsstring>() const </argsstring>
        <name>GetEdgeColour</name>
        <briefdescription>
<para>Retrieve the colour used in edge indication. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="975"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a0bca95b451ddb72d83d54a1279290723" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetEdgeColumn</definition>
        <argsstring>() const </argsstring>
        <name>GetEdgeColumn</name>
        <briefdescription>
<para>Retrieve the column number which text should be kept within. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="980"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a39926c63151415f234c396a0de535a52" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetEdgeMode</definition>
        <argsstring>() const </argsstring>
        <name>GetEdgeMode</name>
        <briefdescription>
<para>Retrieve the edge highlight mode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="985"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aa52d0f6cde620310ced574e22ddd6d89" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetEndAtLastLine</definition>
        <argsstring>() const </argsstring>
        <name>GetEndAtLastLine</name>
        <briefdescription>
<para>Retrieve whether the maximum scroll position has the last line at the bottom of the view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="991"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a3b7488ceb72c142732d5f02d36b6c589" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetEndStyled</definition>
        <argsstring>() const </argsstring>
        <name>GetEndStyled</name>
        <briefdescription>
<para>Retrieve the position of the last correctly styled character. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="996"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ad1b55d7c46320c79dda10cea11acf0cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetFirstVisibleLine</definition>
        <argsstring>() const </argsstring>
        <name>GetFirstVisibleLine</name>
        <briefdescription>
<para>Retrieve the display line at the top of the display. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1001"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a5220b8c01de2c65cf516e5dfb28cb827" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetFoldExpanded</definition>
        <argsstring>(int line) const </argsstring>
        <name>GetFoldExpanded</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Is a header line expanded? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1006"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aa8c57e36840d0df1f4f5473a9744a481" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetFoldLevel</definition>
        <argsstring>(int line) const </argsstring>
        <name>GetFoldLevel</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Retrieve the fold level of a line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1011"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af0dc2a5d3391584f74a6c2ab0b8a468e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetFoldParent</definition>
        <argsstring>(int line) const </argsstring>
        <name>GetFoldParent</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Find the parent line of a child line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1016"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a2a3b0a0c35d8b274f5a54935318412e1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetHighlightGuide</definition>
        <argsstring>() const </argsstring>
        <name>GetHighlightGuide</name>
        <briefdescription>
<para>Get the highlighted indentation guide column. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1021"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ad0da05e7e0e917258aae56c749a96e47" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetIndent</definition>
        <argsstring>() const </argsstring>
        <name>GetIndent</name>
        <briefdescription>
<para>Retrieve indentation size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1026"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a8e5f7075879adbd25d2448dcdad8690e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetIndentationGuides</definition>
        <argsstring>() const </argsstring>
        <name>GetIndentationGuides</name>
        <briefdescription>
<para>Are the indentation guides visible? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1031"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af350640033f08df4813bd1178ae37a31" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetLastChild</definition>
        <argsstring>(int line, int level) const </argsstring>
        <name>GetLastChild</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Find the last child line of a header line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1036"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af742c2d4f39e67c156c91eb90ffb32a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetLastKeydownProcessed</definition>
        <argsstring>()</argsstring>
        <name>GetLastKeydownProcessed</name>
        <briefdescription>
<para>Can be used to prevent the EVT_CHAR handler from adding the char. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1041"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aac27f508ec6cd93700be4b6020a36284" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetLayoutCache</definition>
        <argsstring>() const </argsstring>
        <name>GetLayoutCache</name>
        <briefdescription>
<para>Retrieve the degree of caching of layout information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1046"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ad0d9dcced4a367478933187c8954d75d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetLength</definition>
        <argsstring>() const </argsstring>
        <name>GetLength</name>
        <briefdescription>
<para>Returns the number of bytes in the document. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1051"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a62a5d2c688c46fa11f356a8e60dadade" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetLexer</definition>
        <argsstring>() const </argsstring>
        <name>GetLexer</name>
        <briefdescription>
<para>Retrieve the lexing language of the document. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1056"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a7ccfe3f4bbfca85a15e1d2a9ae9ee70e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxStyledTextCtrl::GetLine</definition>
        <argsstring>(int line) const </argsstring>
        <name>GetLine</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Retrieve the contents of a line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1061"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a141863da3c3c9819fcc7218df28b86d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetLineCount</definition>
        <argsstring>() const </argsstring>
        <name>GetLineCount</name>
        <briefdescription>
<para>Returns the number of lines in the document. </para>        </briefdescription>
        <detaileddescription>
<para>There is always at least one. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1066"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aface63120e6ba948d33c60dd9fb2710c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetLineEndPosition</definition>
        <argsstring>(int line) const </argsstring>
        <name>GetLineEndPosition</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Get the position after the last visible characters on a line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1071"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a239c61bf9f71adc1dc0707055b1aa246" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetLineIndentPosition</definition>
        <argsstring>(int line) const </argsstring>
        <name>GetLineIndentPosition</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Retrieve the position before the first non indentation character on a line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1076"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a451a9ad688222f7a912871c51da47767" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetLineIndentation</definition>
        <argsstring>(int line) const </argsstring>
        <name>GetLineIndentation</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Retrieve the number of columns that a line is indented. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1081"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aa2440e99edc0184e6027227dfa58b86e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_char_buffer" kindref="compound">wxCharBuffer</ref></type>
        <definition>wxCharBuffer wxStyledTextCtrl::GetLineRaw</definition>
        <argsstring>(int line)</argsstring>
        <name>GetLineRaw</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Retrieve the contents of a line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1086"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ad5eebf78698683d465a9be9819d7f8b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetLineSelEndPosition</definition>
        <argsstring>(int line)</argsstring>
        <name>GetLineSelEndPosition</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Retrieve the position of the end of the selection at the given line (wxSTC_INVALID_POSITION if no selection on this line). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1092"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a232d7a6bead8dfdd9923fd3f1777b1aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetLineSelStartPosition</definition>
        <argsstring>(int line)</argsstring>
        <name>GetLineSelStartPosition</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Retrieve the position of the start of the selection at the given line (wxSTC_INVALID_POSITION if no selection on this line). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1098"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ac6c8072dd5ebc9fb5529eade45c25f66" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetLineState</definition>
        <argsstring>(int line) const </argsstring>
        <name>GetLineState</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Retrieve the extra styling information for a line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1103"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a246e6fb68aa64ca9d05ae51d0ab33ee2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetLineVisible</definition>
        <argsstring>(int line) const </argsstring>
        <name>GetLineVisible</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Is a line visible? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1108"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a3504d706dae293c1fddb4014163929d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetMarginLeft</definition>
        <argsstring>() const </argsstring>
        <name>GetMarginLeft</name>
        <briefdescription>
<para>Returns the size in pixels of the left margin. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1113"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a7a1e3609b487cccbe90301d045a5dc3b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetMarginMask</definition>
        <argsstring>(int margin) const </argsstring>
        <name>GetMarginMask</name>
        <param>
          <type>int</type>
          <declname>margin</declname>
        </param>
        <briefdescription>
<para>Retrieve the marker mask of a margin. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1118"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a86abaedf0d231b5ed90436cc0cba9c92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetMarginRight</definition>
        <argsstring>() const </argsstring>
        <name>GetMarginRight</name>
        <briefdescription>
<para>Returns the size in pixels of the right margin. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1123"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a5464d236d7b3a4631d7510cfd460dd37" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetMarginSensitive</definition>
        <argsstring>(int margin) const </argsstring>
        <name>GetMarginSensitive</name>
        <param>
          <type>int</type>
          <declname>margin</declname>
        </param>
        <briefdescription>
<para>Retrieve the mouse click sensitivity of a margin. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1128"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a81d3d69ce219c5a023230ad30a92fae0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetMarginType</definition>
        <argsstring>(int margin) const </argsstring>
        <name>GetMarginType</name>
        <param>
          <type>int</type>
          <declname>margin</declname>
        </param>
        <briefdescription>
<para>Retrieve the type of a margin. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1133"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a07bb9178144f012698a7497a90a2b7f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetMarginWidth</definition>
        <argsstring>(int margin) const </argsstring>
        <name>GetMarginWidth</name>
        <param>
          <type>int</type>
          <declname>margin</declname>
        </param>
        <briefdescription>
<para>Retrieve the width of a margin in pixels. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1138"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9d28df186880080c42f74d565807c5fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetMaxLineState</definition>
        <argsstring>() const </argsstring>
        <name>GetMaxLineState</name>
        <briefdescription>
<para>Retrieve the last line number that has line state. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1143"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ada95d37e0cc8206f6fbbe86558530e77" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetModEventMask</definition>
        <argsstring>() const </argsstring>
        <name>GetModEventMask</name>
        <briefdescription>
<para>Get which document modification events are sent to the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1148"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1acbaa66a7085f8883854167b32abe8365" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetModify</definition>
        <argsstring>() const </argsstring>
        <name>GetModify</name>
        <briefdescription>
<para>Is the document different from when it was last saved? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1153"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a59a1e17a27e614968edb7eb62392c29c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetMouseDownCaptures</definition>
        <argsstring>() const </argsstring>
        <name>GetMouseDownCaptures</name>
        <briefdescription>
<para>Get whether mouse gets captured. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1158"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9a5e7132f0f6914219df5af7ceed3bfc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetMouseDwellTime</definition>
        <argsstring>() const </argsstring>
        <name>GetMouseDwellTime</name>
        <briefdescription>
<para>Retrieve the time the mouse must sit still to generate a mouse dwell event. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1163"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a78182f797190bc0a9c78442a0c1f0ead" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetOvertype</definition>
        <argsstring>() const </argsstring>
        <name>GetOvertype</name>
        <briefdescription>
<para>Returns true if overtype mode is active otherwise false is returned. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1168"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a50e58196ef9a81257828279a7002c48b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetPasteConvertEndings</definition>
        <argsstring>() const </argsstring>
        <name>GetPasteConvertEndings</name>
        <briefdescription>
<para>Get convert-on-paste setting. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1173"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af972afdb9d0a39e34929f1089a947d15" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetPrintColourMode</definition>
        <argsstring>() const </argsstring>
        <name>GetPrintColourMode</name>
        <briefdescription>
<para>Returns the print colour mode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1178"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ac2ccf9764d79cc83fa0b68ca048a23c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetPrintMagnification</definition>
        <argsstring>() const </argsstring>
        <name>GetPrintMagnification</name>
        <briefdescription>
<para>Returns the print magnification. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1183"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a64f2900cdf038b8473747be098a7ae6c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetPrintWrapMode</definition>
        <argsstring>() const </argsstring>
        <name>GetPrintWrapMode</name>
        <briefdescription>
<para>Is printing line wrapped? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1188"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a38337213208bf9d17d30b62561f9aff8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxStyledTextCtrl::GetProperty</definition>
        <argsstring>(const wxString &amp;key)</argsstring>
        <name>GetProperty</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Retrieve a &apos;property&apos; value previously set with SetProperty. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1193"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a51bce2c376bd674f31a84c9b7977082c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxStyledTextCtrl::GetPropertyExpanded</definition>
        <argsstring>(const wxString &amp;key)</argsstring>
        <name>GetPropertyExpanded</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Retrieve a &apos;property&apos; value previously set with SetProperty, with &apos;$()&apos; variable replacement on returned buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1199"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a7ae8e50a6a9729aae54b3816e11070a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetPropertyInt</definition>
        <argsstring>(const wxString &amp;key) const </argsstring>
        <name>GetPropertyInt</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Retrieve a &apos;property&apos; value previously set with SetProperty, interpreted as an int AFTER any &apos;$()&apos; variable replacement. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1205"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a35b13bd2aa70df0d6058400c711c932b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetReadOnly</definition>
        <argsstring>() const </argsstring>
        <name>GetReadOnly</name>
        <briefdescription>
<para>In read-only mode? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1210"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a486bf115bb38acdbca37e248bcec21ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetSTCCursor</definition>
        <argsstring>() const </argsstring>
        <name>GetSTCCursor</name>
        <briefdescription>
<para>Get cursor type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1215"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a240b066df1bd57a004e02e8da8b5b134" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetSTCFocus</definition>
        <argsstring>() const </argsstring>
        <name>GetSTCFocus</name>
        <briefdescription>
<para>Get internal focus flag. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1220"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a6c26293a34244e7ba20449249c4abbe1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetScrollWidth</definition>
        <argsstring>() const </argsstring>
        <name>GetScrollWidth</name>
        <briefdescription>
<para>Retrieve the document width assumed for scrolling. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1225"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a7123ac33c2388ad0f26b7e3db68c42ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetSearchFlags</definition>
        <argsstring>() const </argsstring>
        <name>GetSearchFlags</name>
        <briefdescription>
<para>Get the search flags used by SearchInTarget. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1230"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aefb67c41c3c24cb37b3cddb15c2dfb19" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetSelAlpha</definition>
        <argsstring>() const </argsstring>
        <name>GetSelAlpha</name>
        <briefdescription>
<para>Get the alpha of the selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1235"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aeaa5b992311b6fd7ca4d5d18d19853d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxStyledTextCtrl::GetSelectedText</definition>
        <argsstring>()</argsstring>
        <name>GetSelectedText</name>
        <briefdescription>
<para>Retrieve the selected text. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1240"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a740113ad3a6dbfbcb2627c70907f4455" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_char_buffer" kindref="compound">wxCharBuffer</ref></type>
        <definition>wxCharBuffer wxStyledTextCtrl::GetSelectedTextRaw</definition>
        <argsstring>()</argsstring>
        <name>GetSelectedTextRaw</name>
        <briefdescription>
<para>Retrieve the selected text. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1245"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1abe9ad10c64ca4571e15df128ff501743" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::GetSelection</definition>
        <argsstring>(int *OUTPUT, int *OUTPUT)</argsstring>
        <name>GetSelection</name>
        <param>
          <type>int *</type>
          <declname>OUTPUT</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>OUTPUT</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1250"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae35d93d484ca96ffb6016e2a0921ede3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetSelectionEnd</definition>
        <argsstring>() const </argsstring>
        <name>GetSelectionEnd</name>
        <briefdescription>
<para>Returns the position at the end of the selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1255"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a4f78c05fdaa1b6205f65797a9b835ee7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetSelectionMode</definition>
        <argsstring>() const </argsstring>
        <name>GetSelectionMode</name>
        <briefdescription>
<para>Get the mode of the current selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1260"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1afbe22076a57019f3ad4694bb6e00c0c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetSelectionStart</definition>
        <argsstring>() const </argsstring>
        <name>GetSelectionStart</name>
        <briefdescription>
<para>Returns the position at the start of the selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1265"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af51257322913c6027d4651a6748e39a0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetStatus</definition>
        <argsstring>() const </argsstring>
        <name>GetStatus</name>
        <briefdescription>
<para>Get error status. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1270"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af57c77624882b8f94a61d252dd0e78a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetStyleAt</definition>
        <argsstring>(int pos) const </argsstring>
        <name>GetStyleAt</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Returns the style byte at the position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1275"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a49d5b9a734641a0b112c3ff75cfd0af9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetStyleBits</definition>
        <argsstring>() const </argsstring>
        <name>GetStyleBits</name>
        <briefdescription>
<para>Retrieve number of bits in style bytes used to hold the lexical state. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1280"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aa8819958aea9de2ebec490b0646967dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetStyleBitsNeeded</definition>
        <argsstring>() const </argsstring>
        <name>GetStyleBitsNeeded</name>
        <briefdescription>
<para>Retrieve the number of bits the current lexer needs for styling. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1285"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a4d99c288fef906a6f31c4007a2526297" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_memory_buffer" kindref="compound">wxMemoryBuffer</ref></type>
        <definition>wxMemoryBuffer wxStyledTextCtrl::GetStyledText</definition>
        <argsstring>(int startPos, int endPos)</argsstring>
        <name>GetStyledText</name>
        <param>
          <type>int</type>
          <declname>startPos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endPos</declname>
        </param>
        <briefdescription>
<para>Retrieve a buffer of cells. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1290"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ad08155d4b4df42ec9a69c5ce0676fbc4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetTabIndents</definition>
        <argsstring>() const </argsstring>
        <name>GetTabIndents</name>
        <briefdescription>
<para>Does a tab pressed when caret is within indentation indent? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1295"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a80c8231ab592cd0f39e04c97cfe60007" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetTabWidth</definition>
        <argsstring>() const </argsstring>
        <name>GetTabWidth</name>
        <briefdescription>
<para>Retrieve the visible size of a tab. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1300"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a5532b04ba5f1a3ffbf279267e3fda773" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetTargetEnd</definition>
        <argsstring>() const </argsstring>
        <name>GetTargetEnd</name>
        <briefdescription>
<para>Get the position that ends the target. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1305"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ad8e81767c696ed238d681ee67a3151a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetTargetStart</definition>
        <argsstring>() const </argsstring>
        <name>GetTargetStart</name>
        <briefdescription>
<para>Get the position that starts the target. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1310"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a69a4d36bceba8fe605a424ac5d7e6675" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxStyledTextCtrl::GetText</definition>
        <argsstring>() const </argsstring>
        <name>GetText</name>
        <briefdescription>
<para>Retrieve all the text in the document. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1315"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a2c696a049f52f399dc9fad616740e77b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetTextLength</definition>
        <argsstring>() const </argsstring>
        <name>GetTextLength</name>
        <briefdescription>
<para>Retrieve the number of characters in the document. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1320"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a4a1c9bb239d6d24e69675bbf4a1c7e99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxStyledTextCtrl::GetTextRange</definition>
        <argsstring>(int startPos, int endPos)</argsstring>
        <name>GetTextRange</name>
        <param>
          <type>int</type>
          <declname>startPos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endPos</declname>
        </param>
        <briefdescription>
<para>Retrieve a range of text. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1325"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a88be62c7ec2c2d0075df9b4b35cbd1b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_char_buffer" kindref="compound">wxCharBuffer</ref></type>
        <definition>wxCharBuffer wxStyledTextCtrl::GetTextRangeRaw</definition>
        <argsstring>(int startPos, int endPos)</argsstring>
        <name>GetTextRangeRaw</name>
        <param>
          <type>int</type>
          <declname>startPos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endPos</declname>
        </param>
        <briefdescription>
<para>Retrieve a range of text. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1330"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ace83fdced1ffe0cdf7e7fa5b13f53add" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_char_buffer" kindref="compound">wxCharBuffer</ref></type>
        <definition>wxCharBuffer wxStyledTextCtrl::GetTextRaw</definition>
        <argsstring>()</argsstring>
        <name>GetTextRaw</name>
        <briefdescription>
<para>Retrieve all the text in the document. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1335"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ac14e1e9f39e12ccae698b421261da198" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetTwoPhaseDraw</definition>
        <argsstring>() const </argsstring>
        <name>GetTwoPhaseDraw</name>
        <briefdescription>
<para>Is drawing done in two phases with backgrounds drawn before foregrounds? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1340"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a444dd995d86c73147ff929b1313b7ad0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetUndoCollection</definition>
        <argsstring>() const </argsstring>
        <name>GetUndoCollection</name>
        <briefdescription>
<para>Is undo history being collected? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1345"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a65f22f8fa3b367846cd798be26815b68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetUseAntiAliasing</definition>
        <argsstring>()</argsstring>
        <name>GetUseAntiAliasing</name>
        <briefdescription>
<para>Returns the current UseAntiAliasing setting. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1350"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a7eb640563c7c64d5d486607d87a84760" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetUseHorizontalScrollBar</definition>
        <argsstring>() const </argsstring>
        <name>GetUseHorizontalScrollBar</name>
        <briefdescription>
<para>Is the horizontal scroll bar visible? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1355"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a8e2c627c193968007e69e075e13c0beb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetUseTabs</definition>
        <argsstring>() const </argsstring>
        <name>GetUseTabs</name>
        <briefdescription>
<para>Retrieve whether tabs will be used in indentation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1360"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a748a585d6fa6ef8db95e6a809781a1e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetUseVerticalScrollBar</definition>
        <argsstring>() const </argsstring>
        <name>GetUseVerticalScrollBar</name>
        <briefdescription>
<para>Is the vertical scroll bar visible? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1365"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a12ba205b69a45e4fe011b18a769c553e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetViewEOL</definition>
        <argsstring>() const </argsstring>
        <name>GetViewEOL</name>
        <briefdescription>
<para>Are the end of line characters visible? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1370"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a34c93c69d541ba7a1c3fbb18378bc0c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetViewWhiteSpace</definition>
        <argsstring>() const </argsstring>
        <name>GetViewWhiteSpace</name>
        <briefdescription>
<para>Are white space characters currently visible? Returns one of SCWS_* constants. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1376"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a16cdb18f5be88498542f5204585aeb38" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetWrapMode</definition>
        <argsstring>() const </argsstring>
        <name>GetWrapMode</name>
        <briefdescription>
<para>Retrieve whether text is word wrapped. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1381"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ad6589d2a8d0c49463c896b64ec348d36" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetWrapStartIndent</definition>
        <argsstring>() const </argsstring>
        <name>GetWrapStartIndent</name>
        <briefdescription>
<para>Retrieve the start indent for wrapped lines. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1386"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a5e7f8a8dfbbcc6ec7b41c936bce533bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetWrapVisualFlags</definition>
        <argsstring>() const </argsstring>
        <name>GetWrapVisualFlags</name>
        <briefdescription>
<para>Retrieve the display mode of visual flags for wrapped lines. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1391"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a4ab54283c8413c96545931cf12175286" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetWrapVisualFlagsLocation</definition>
        <argsstring>() const </argsstring>
        <name>GetWrapVisualFlagsLocation</name>
        <briefdescription>
<para>Retrieve the location of visual flags for wrapped lines. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1396"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a66becb498f88c970793112805375ac4f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetXOffset</definition>
        <argsstring>() const </argsstring>
        <name>GetXOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1401"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a91750e43b5c40ee885f3bd2e97a7a738" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetZoom</definition>
        <argsstring>() const </argsstring>
        <name>GetZoom</name>
        <briefdescription>
<para>Retrieve the zoom level. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1406"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a36755313b796f113224095c17c344934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::GotoLine</definition>
        <argsstring>(int line)</argsstring>
        <name>GotoLine</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Set caret to start of a line and ensure it is visible. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1411"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae17f2704b5eba4ebfe520cff716107e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::GotoPos</definition>
        <argsstring>(int pos)</argsstring>
        <name>GotoPos</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Set caret to a position and ensure it is visible. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1416"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a586b008abbe3b5030f0e877a5449f292" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::HideLines</definition>
        <argsstring>(int lineStart, int lineEnd)</argsstring>
        <name>HideLines</name>
        <param>
          <type>int</type>
          <declname>lineStart</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineEnd</declname>
        </param>
        <briefdescription>
<para>Make a range of lines invisible. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1421"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a76b30f64c534b14d6010be9562d8d8c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::HideSelection</definition>
        <argsstring>(bool normal)</argsstring>
        <name>HideSelection</name>
        <param>
          <type>bool</type>
          <declname>normal</declname>
        </param>
        <briefdescription>
<para>Draw the selection in normal style or with selection highlighted. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1426"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a81cc40177c35e47daa1cff8c0ba205cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::Home</definition>
        <argsstring>()</argsstring>
        <name>Home</name>
        <briefdescription>
<para>Move caret to first position on line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1431"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a86da232f299722eb400c3169fc5cf5b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::HomeDisplay</definition>
        <argsstring>()</argsstring>
        <name>HomeDisplay</name>
        <briefdescription>
<para>Move caret to first position on display line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1436"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae249dee11bd5ec8ac1bf7295996d0e1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::HomeDisplayExtend</definition>
        <argsstring>()</argsstring>
        <name>HomeDisplayExtend</name>
        <briefdescription>
<para>Move caret to first position on display line extending selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1442"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ac86adda825a69f315a433f72c65a26a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::HomeExtend</definition>
        <argsstring>()</argsstring>
        <name>HomeExtend</name>
        <briefdescription>
<para>Move caret to first position on line extending selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1447"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a09eda26be0d53e59128af4f8c3ce163d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::HomeRectExtend</definition>
        <argsstring>()</argsstring>
        <name>HomeRectExtend</name>
        <briefdescription>
<para>Move caret to first position on line, extending rectangular selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1453"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aa9435194013564156570a17593883c7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::HomeWrap</definition>
        <argsstring>()</argsstring>
        <name>HomeWrap</name>
        <briefdescription>
<para>These are like their namesakes Home(Extend)?, LineEnd(Extend)?, VCHome(Extend)? except they behave differently when word-wrap is enabled: They go first to the start / end of the display line, like (Home|LineEnd)Display The difference is that, the cursor is already at the point, it goes on to the start or end of the document line, as appropriate for (Home|LineEnd|VCHome)(Extend)?. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1462"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a2faea08698aba4ff0d35e82a7637a911" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::HomeWrapExtend</definition>
        <argsstring>()</argsstring>
        <name>HomeWrapExtend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1467"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a48ad8e1845792e7aaa10652326d58259" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_colour" kindref="compound">wxColour</ref></type>
        <definition>wxColour wxStyledTextCtrl::IndicatorGetForeground</definition>
        <argsstring>(int indic) const </argsstring>
        <name>IndicatorGetForeground</name>
        <param>
          <type>int</type>
          <declname>indic</declname>
        </param>
        <briefdescription>
<para>Retrieve the foreground colour of an indicator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1472"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a78c1941e8a08b88856961528d417bde7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::IndicatorGetStyle</definition>
        <argsstring>(int indic) const </argsstring>
        <name>IndicatorGetStyle</name>
        <param>
          <type>int</type>
          <declname>indic</declname>
        </param>
        <briefdescription>
<para>Retrieve the style of an indicator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1477"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a65620aaff59fc9c0219926bedc8cf333" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::IndicatorSetForeground</definition>
        <argsstring>(int indic, const wxColour &amp;fore)</argsstring>
        <name>IndicatorSetForeground</name>
        <param>
          <type>int</type>
          <declname>indic</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>fore</declname>
        </param>
        <briefdescription>
<para>Set the foreground colour of an indicator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1482"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a20fed79891b09e523138b6332ae2764b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::IndicatorSetStyle</definition>
        <argsstring>(int indic, int style)</argsstring>
        <name>IndicatorSetStyle</name>
        <param>
          <type>int</type>
          <declname>indic</declname>
        </param>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Set an indicator to plain, squiggle or TT. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1487"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a2fd8afea2355396a93b2b8ba99f1a559" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::InsertText</definition>
        <argsstring>(int pos, const wxString &amp;text)</argsstring>
        <name>InsertText</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Insert string at a position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1492"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a04ac8c4c6e4cc8978b325f62e3991830" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::InsertTextRaw</definition>
        <argsstring>(int pos, const char *text)</argsstring>
        <name>InsertTextRaw</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Insert string at a position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1497"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a65413d4c086ae8c0ef8380cff55773e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::LineCopy</definition>
        <argsstring>()</argsstring>
        <name>LineCopy</name>
        <briefdescription>
<para>Copy the line containing the caret. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1502"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aa2afa8f527045e387838ca9465ae62c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::LineCut</definition>
        <argsstring>()</argsstring>
        <name>LineCut</name>
        <briefdescription>
<para>Cut the line containing the caret. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1507"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a7973166dc3a25e59f6da2679c40a0e77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::LineDelete</definition>
        <argsstring>()</argsstring>
        <name>LineDelete</name>
        <briefdescription>
<para>Delete the line containing the caret. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1512"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ac9515ecb49c5649c282222e5ca475d19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::LineDown</definition>
        <argsstring>()</argsstring>
        <name>LineDown</name>
        <reimplements refid="classwx_window_1ade808784f0e64d9985e2f279b5ca8c02">LineDown</reimplements>
        <briefdescription>
<para>Move caret down one line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1517"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a0845a980da1cd5bb7d3aa075ddc17da4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::LineDownExtend</definition>
        <argsstring>()</argsstring>
        <name>LineDownExtend</name>
        <briefdescription>
<para>Move caret down one line extending selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1522"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a532132fa839732be1c4eb9cc60d8f9a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::LineDownRectExtend</definition>
        <argsstring>()</argsstring>
        <name>LineDownRectExtend</name>
        <briefdescription>
<para>Move caret down one line, extending rectangular selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1527"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a2313db2853adf1c0845e930edabae12c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::LineDuplicate</definition>
        <argsstring>()</argsstring>
        <name>LineDuplicate</name>
        <briefdescription>
<para>Duplicate the current line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1532"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9b8793a79c0f76d377df68e7b5bd26ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::LineEnd</definition>
        <argsstring>()</argsstring>
        <name>LineEnd</name>
        <briefdescription>
<para>Move caret to last position on line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1537"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a46f1b649c7c10362e2c03405300c71fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::LineEndDisplay</definition>
        <argsstring>()</argsstring>
        <name>LineEndDisplay</name>
        <briefdescription>
<para>Move caret to last position on display line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1542"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1afedadbabcd1c1b2467a695130b933393" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::LineEndDisplayExtend</definition>
        <argsstring>()</argsstring>
        <name>LineEndDisplayExtend</name>
        <briefdescription>
<para>Move caret to last position on display line extending selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1548"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a43f776d94819c2a4eed79adc62795b66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::LineEndExtend</definition>
        <argsstring>()</argsstring>
        <name>LineEndExtend</name>
        <briefdescription>
<para>Move caret to last position on line extending selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1553"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a3a1eb6fee3a2192ec1d08ca26703e7fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::LineEndRectExtend</definition>
        <argsstring>()</argsstring>
        <name>LineEndRectExtend</name>
        <briefdescription>
<para>Move caret to last position on line, extending rectangular selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1559"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ac8281133453c747409b60dc5acc3758a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::LineEndWrap</definition>
        <argsstring>()</argsstring>
        <name>LineEndWrap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1564"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a8f52104fcc9e05711a864896475c7ad5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::LineEndWrapExtend</definition>
        <argsstring>()</argsstring>
        <name>LineEndWrapExtend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1569"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a071d308ff8a8923946b28aa840db74b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::LineFromPosition</definition>
        <argsstring>(int pos) const </argsstring>
        <name>LineFromPosition</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Retrieve the line containing a position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1574"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a88684b7ed3252ad59c004f3fd8ccb8b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::LineLength</definition>
        <argsstring>(int line) const </argsstring>
        <name>LineLength</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>How many characters are on a line, including end of line characters? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1579"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a6368f884c5803294e3aedfe88fe3112a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::LineScroll</definition>
        <argsstring>(int columns, int lines)</argsstring>
        <name>LineScroll</name>
        <param>
          <type>int</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lines</declname>
        </param>
        <briefdescription>
<para>Scroll horizontally and vertically. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1584"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9b53d6cfccf347333995a9a48c36029e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::LineScrollDown</definition>
        <argsstring>()</argsstring>
        <name>LineScrollDown</name>
        <briefdescription>
<para>Scroll the document down, keeping the caret visible. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1589"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aab817bec123fc7ee32eb8dcbbfdc55a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::LineScrollUp</definition>
        <argsstring>()</argsstring>
        <name>LineScrollUp</name>
        <briefdescription>
<para>Scroll the document up, keeping the caret visible. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1594"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1abcf0762da43a7f95b3fc2c5f9937614e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::LineTranspose</definition>
        <argsstring>()</argsstring>
        <name>LineTranspose</name>
        <briefdescription>
<para>Switch the current line with the previous. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1599"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a495f22e16a3471147b1cb925e8ce0ca5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::LineUp</definition>
        <argsstring>()</argsstring>
        <name>LineUp</name>
        <reimplements refid="classwx_window_1afc0816a174ceee6d36d1995c6824a273">LineUp</reimplements>
        <briefdescription>
<para>Move caret up one line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1604"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a597babc365b24614d5a2998f25fa4458" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::LineUpExtend</definition>
        <argsstring>()</argsstring>
        <name>LineUpExtend</name>
        <briefdescription>
<para>Move caret up one line extending selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1609"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aa74a9c0c48e4176bdd70d261637bb9c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::LineUpRectExtend</definition>
        <argsstring>()</argsstring>
        <name>LineUpRectExtend</name>
        <briefdescription>
<para>Move caret up one line, extending rectangular selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1614"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a3f24817be6a8af9aa560fd1ee7c05b85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::LinesJoin</definition>
        <argsstring>()</argsstring>
        <name>LinesJoin</name>
        <briefdescription>
<para>Join the lines in the target. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1619"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1adbd3af9505c9bfb8f13aae5778015619" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::LinesOnScreen</definition>
        <argsstring>() const </argsstring>
        <name>LinesOnScreen</name>
        <briefdescription>
<para>Retrieves the number of lines completely visible. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1624"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a591959bfee0a8353f70b1306ca7fe2eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::LinesSplit</definition>
        <argsstring>(int pixelWidth)</argsstring>
        <name>LinesSplit</name>
        <param>
          <type>int</type>
          <declname>pixelWidth</declname>
        </param>
        <briefdescription>
<para>Split the lines in the target into lines that are less wide than pixelWidth where possible. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1630"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af45914416eb3c9372dcdeb26bdbc0534" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::LoadFile</definition>
        <argsstring>(const wxString &amp;file, int fileType=wxTEXT_TYPE_ANY)</argsstring>
        <name>LoadFile</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fileType</declname>
          <defval>wxTEXT_TYPE_ANY</defval>
        </param>
        <briefdescription>
<para>Load the contents of filename into the editor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1635"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a69e0875a6d000351f6c6498de6310f4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::LowerCase</definition>
        <argsstring>()</argsstring>
        <name>LowerCase</name>
        <briefdescription>
<para>Transform the selection to lower case. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1640"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a2bce811d7d23416b4aed7068f55f48a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::MarkerAdd</definition>
        <argsstring>(int line, int markerNumber)</argsstring>
        <name>MarkerAdd</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>int</type>
          <declname>markerNumber</declname>
        </param>
        <briefdescription>
<para>Add a marker to a line, returning an ID which can be used to find or delete the marker. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1646"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ac1ebd9b3c385a00140f753d3b52d98cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::MarkerAddSet</definition>
        <argsstring>(int line, int set)</argsstring>
        <name>MarkerAddSet</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>int</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>Add a set of markers to a line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1651"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af4aff2744a8d3fc28f8f6f126e6da49b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::MarkerDefine</definition>
        <argsstring>(int markerNumber, int markerSymbol, const wxColour &amp;foreground=wxNullColour, const wxColour &amp;background=wxNullColour)</argsstring>
        <name>MarkerDefine</name>
        <param>
          <type>int</type>
          <declname>markerNumber</declname>
        </param>
        <param>
          <type>int</type>
          <declname>markerSymbol</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>foreground</declname>
          <defval><ref refid="colour_8h_1a882fc9395ce82080f0c2c91ca04731d6" kindref="member">wxNullColour</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>background</declname>
          <defval><ref refid="colour_8h_1a882fc9395ce82080f0c2c91ca04731d6" kindref="member">wxNullColour</ref></defval>
        </param>
        <briefdescription>
<para>Set the symbol used for a particular marker number, and optionally the fore and background colours. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1659"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1adeefe5392b7394fb98ebf0291385c76a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::MarkerDefineBitmap</definition>
        <argsstring>(int markerNumber, const wxBitmap &amp;bmp)</argsstring>
        <name>MarkerDefineBitmap</name>
        <param>
          <type>int</type>
          <declname>markerNumber</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>bmp</declname>
        </param>
        <briefdescription>
<para>Define a marker from a bitmap. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1664"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aea89da40e6dfdaa26a9a74a1067f651f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::MarkerDelete</definition>
        <argsstring>(int line, int markerNumber)</argsstring>
        <name>MarkerDelete</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>int</type>
          <declname>markerNumber</declname>
        </param>
        <briefdescription>
<para>Delete a marker from a line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1669"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a59e91381c363f396bd0c26ef9574515d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::MarkerDeleteAll</definition>
        <argsstring>(int markerNumber)</argsstring>
        <name>MarkerDeleteAll</name>
        <param>
          <type>int</type>
          <declname>markerNumber</declname>
        </param>
        <briefdescription>
<para>Delete all markers with a particular number from all lines. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1674"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a0db2a7ba33d022a973f82bd21a6c6e41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::MarkerDeleteHandle</definition>
        <argsstring>(int handle)</argsstring>
        <name>MarkerDeleteHandle</name>
        <param>
          <type>int</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Delete a marker. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1679"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a681d408ab69cd6e63204b8359bb44605" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::MarkerGet</definition>
        <argsstring>(int line)</argsstring>
        <name>MarkerGet</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Get a bit mask of all the markers set on a line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1684"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a43af4651e826d2d92bc135fe8170c518" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::MarkerLineFromHandle</definition>
        <argsstring>(int handle)</argsstring>
        <name>MarkerLineFromHandle</name>
        <param>
          <type>int</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Retrieve the line number at which a particular marker is located. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1689"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ad2fed626190435a772aa5b00f725d2ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::MarkerNext</definition>
        <argsstring>(int lineStart, int markerMask)</argsstring>
        <name>MarkerNext</name>
        <param>
          <type>int</type>
          <declname>lineStart</declname>
        </param>
        <param>
          <type>int</type>
          <declname>markerMask</declname>
        </param>
        <briefdescription>
<para>Find the next line after lineStart that includes a marker in mask. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1694"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a5dba6328004c17faaecacc2647ac043d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::MarkerPrevious</definition>
        <argsstring>(int lineStart, int markerMask)</argsstring>
        <name>MarkerPrevious</name>
        <param>
          <type>int</type>
          <declname>lineStart</declname>
        </param>
        <param>
          <type>int</type>
          <declname>markerMask</declname>
        </param>
        <briefdescription>
<para>Find the previous line before lineStart that includes a marker in mask. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1699"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae3d48bdff0d995bfbf35ea29cff7b5bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::MarkerSetAlpha</definition>
        <argsstring>(int markerNumber, int alpha)</argsstring>
        <name>MarkerSetAlpha</name>
        <param>
          <type>int</type>
          <declname>markerNumber</declname>
        </param>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>Set the alpha used for a marker that is drawn in the text area, not the margin. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1704"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ad11e02f4a07cdbd45c3627a0ce8fa5e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::MarkerSetBackground</definition>
        <argsstring>(int markerNumber, const wxColour &amp;back)</argsstring>
        <name>MarkerSetBackground</name>
        <param>
          <type>int</type>
          <declname>markerNumber</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>back</declname>
        </param>
        <briefdescription>
<para>Set the background colour used for a particular marker number. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1709"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a7b038202798c153f2ba6c454dfa9f92b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::MarkerSetForeground</definition>
        <argsstring>(int markerNumber, const wxColour &amp;fore)</argsstring>
        <name>MarkerSetForeground</name>
        <param>
          <type>int</type>
          <declname>markerNumber</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>fore</declname>
        </param>
        <briefdescription>
<para>Set the foreground colour used for a particular marker number. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1714"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a88b9b807e250da28f23f26bf4dba09ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::MoveCaretInsideView</definition>
        <argsstring>()</argsstring>
        <name>MoveCaretInsideView</name>
        <briefdescription>
<para>Move the caret inside current view if it&apos;s not there already. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1719"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aafe614a7f6032598933112f1c6e4fb67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::NewLine</definition>
        <argsstring>()</argsstring>
        <name>NewLine</name>
        <briefdescription>
<para>Insert a new line, may use a CRLF, CR or LF depending on EOL mode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1724"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae42da911681afee75d2782b410a8da6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::PageDown</definition>
        <argsstring>()</argsstring>
        <name>PageDown</name>
        <reimplements refid="classwx_window_1a61e78cb48ece3e9e989e37b475ac1e35">PageDown</reimplements>
        <briefdescription>
<para>Move caret one page down. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1729"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a11834c1cd84c602aa2cd09a525ebb3cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::PageDownExtend</definition>
        <argsstring>()</argsstring>
        <name>PageDownExtend</name>
        <briefdescription>
<para>Move caret one page down extending selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1734"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a34ecf284fc1437ec8e57bc488c0e882d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::PageDownRectExtend</definition>
        <argsstring>()</argsstring>
        <name>PageDownRectExtend</name>
        <briefdescription>
<para>Move caret one page down, extending rectangular selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1739"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a51017ad326b639f505d0b2007d6fe0b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::PageUp</definition>
        <argsstring>()</argsstring>
        <name>PageUp</name>
        <reimplements refid="classwx_window_1aa7c2bbc480d8863d9f139c01d7abc1b1">PageUp</reimplements>
        <briefdescription>
<para>Move caret one page up. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1744"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a41f991d2cf74d9695e3fb5ac2a00ca80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::PageUpExtend</definition>
        <argsstring>()</argsstring>
        <name>PageUpExtend</name>
        <briefdescription>
<para>Move caret one page up extending selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1749"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a221fa3ba9842f8bca1698e5f228210ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::PageUpRectExtend</definition>
        <argsstring>()</argsstring>
        <name>PageUpRectExtend</name>
        <briefdescription>
<para>Move caret one page up, extending rectangular selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1754"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aedfdbc2b174fdb0c229eec4d7a39961b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::ParaDown</definition>
        <argsstring>()</argsstring>
        <name>ParaDown</name>
        <briefdescription>
<para>Move caret between paragraphs (delimited by empty lines). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1759"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1afff9fd76f788b03f1d88d4cf374ebd7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::ParaDownExtend</definition>
        <argsstring>()</argsstring>
        <name>ParaDownExtend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1764"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aead8c88e661579be7481fda7816aa569" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::ParaUp</definition>
        <argsstring>()</argsstring>
        <name>ParaUp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1769"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a85ff441f893aefba1fbbcf994eaa78b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::ParaUpExtend</definition>
        <argsstring>()</argsstring>
        <name>ParaUpExtend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1774"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a65c6bd6cfdf28259a9158b444cff443d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxStyledTextCtrl::Paste</definition>
        <argsstring>()</argsstring>
        <name>Paste</name>
        <briefdescription>
<para>Paste the contents of the clipboard into the document replacing the selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1779"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9501d7575194cce280cfd8c3aef6eb88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
        <definition>wxPoint wxStyledTextCtrl::PointFromPosition</definition>
        <argsstring>(int pos)</argsstring>
        <name>PointFromPosition</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Retrieve the point in the window where a position is displayed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1784"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a028c1147afb93e729a44712b01668a1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::PositionAfter</definition>
        <argsstring>(int pos)</argsstring>
        <name>PositionAfter</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Given a valid document position, return the next position taking code page into account. </para>        </briefdescription>
        <detaileddescription>
<para>Maximum value returned is the last position in the document. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1790"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a1d494a1101f6983d01d4727af5371398" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::PositionBefore</definition>
        <argsstring>(int pos)</argsstring>
        <name>PositionBefore</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Given a valid document position, return the previous position taking code page into account. </para>        </briefdescription>
        <detaileddescription>
<para>Returns 0 if passed 0. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1796"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1afdab99ccd4a54a0ef02cb42554ad7fd1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::PositionFromLine</definition>
        <argsstring>(int line) const </argsstring>
        <name>PositionFromLine</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Retrieve the position at the start of a line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1801"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af3f952056236fa7e391c6416989799e9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::PositionFromPoint</definition>
        <argsstring>(wxPoint pt) const </argsstring>
        <name>PositionFromPoint</name>
        <param>
          <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>Find the position from a point within the window. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1806"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a892b27398a7b8d03923c86d1594280fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::PositionFromPointClose</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>PositionFromPointClose</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Find the position from a point within the window but return wxSTC_INVALID_POSITION if not close to text. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1812"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a129c1c9fedf006b6a8c4c150a576de27" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxStyledTextCtrl::Redo</definition>
        <argsstring>()</argsstring>
        <name>Redo</name>
        <briefdescription>
<para>Redoes the next action on the undo history. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1817"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a002a95831ec96515101922756d4d99e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::RegisterImage</definition>
        <argsstring>(int type, const wxBitmap &amp;bmp)</argsstring>
        <name>RegisterImage</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>bmp</declname>
        </param>
        <briefdescription>
<para>Register an image for use in autocompletion lists. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1822"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a3b8edb39e182b3d095f5f5d4728319e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::ReleaseDocument</definition>
        <argsstring>(void *docPointer)</argsstring>
        <name>ReleaseDocument</name>
        <param>
          <type>void *</type>
          <declname>docPointer</declname>
        </param>
        <briefdescription>
<para>Release a reference to the document, deleting document if it fades to black. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1827"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a781675a6c92f399e0cfe426fcf8ee13e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::ReplaceSelection</definition>
        <argsstring>(const wxString &amp;text)</argsstring>
        <name>ReplaceSelection</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Replace the selected text with the argument text. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1832"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9f9600dbe5b828f493e323f0dabd67ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::ReplaceTarget</definition>
        <argsstring>(const wxString &amp;text)</argsstring>
        <name>ReplaceTarget</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Replace the target text with the argument text. </para>        </briefdescription>
        <detaileddescription>
<para>Text is counted so it can contain NULs. Returns the length of the replacement text. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1839"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae6e45a7a50bb6e524b79fa3f730765e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::ReplaceTargetRE</definition>
        <argsstring>(const wxString &amp;text)</argsstring>
        <name>ReplaceTargetRE</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Replace the target text with the argument text after d processing. </para>        </briefdescription>
        <detaileddescription>
<para>Text is counted so it can contain NULs.</para><para>Looks for d where d is between 1 and 9 and replaces these with the strings matched in the last search operation which were surrounded by ( and ).</para><para>Returns the length of the replacement text including any change caused by processing the d patterns. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1851"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a92d360f9c11f8ad5648c630d573eabe7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::SaveFile</definition>
        <argsstring>(const wxString &amp;file=wxEmptyString, int fileType=wxTEXT_TYPE_ANY)</argsstring>
        <name>SaveFile</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>file</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>fileType</declname>
          <defval>wxTEXT_TYPE_ANY</defval>
        </param>
        <briefdescription>
<para>Write the contents of the editor to filename. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1856"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a4045083b0cd2cd28125d0f28d6734d6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::ScrollToColumn</definition>
        <argsstring>(int column)</argsstring>
        <name>ScrollToColumn</name>
        <param>
          <type>int</type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Scroll enough to make the given column visible. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1861"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ac56e5bf9181625fe4b5b227c7f2b6920" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::ScrollToLine</definition>
        <argsstring>(int line)</argsstring>
        <name>ScrollToLine</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Scroll enough to make the given line visible. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1866"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a42100d4f60d5361099a18a036b2cbb06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SearchAnchor</definition>
        <argsstring>()</argsstring>
        <name>SearchAnchor</name>
        <briefdescription>
<para>Sets the current caret position to be the search anchor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1871"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a741f27ac90f15b36c172708e6b2276da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::SearchInTarget</definition>
        <argsstring>(const wxString &amp;text)</argsstring>
        <name>SearchInTarget</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Search for a counted string in the target and set the target to the found range. </para>        </briefdescription>
        <detaileddescription>
<para>Text is counted so it can contain NULs. Returns length of range or -1 for failure in which case target is not moved. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1878"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a657c17cb2ed3afd10e286266c22786ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::SearchNext</definition>
        <argsstring>(int flags, const wxString &amp;text)</argsstring>
        <name>SearchNext</name>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Find some text starting at the search anchor. </para>        </briefdescription>
        <detaileddescription>
<para>Does not ensure the selection is visible. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1884"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1abc7c587fd096da6df84f245296343212" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::SearchPrev</definition>
        <argsstring>(int flags, const wxString &amp;text)</argsstring>
        <name>SearchPrev</name>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Find some text starting at the search anchor and moving backwards. </para>        </briefdescription>
        <detaileddescription>
<para>Does not ensure the selection is visible. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1890"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af2250b2b6bf00adf77f7bbcdcc3cc76b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxStyledTextCtrl::SelectAll</definition>
        <argsstring>()</argsstring>
        <name>SelectAll</name>
        <briefdescription>
<para>Select all the text in the document. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1895"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a4e384ad9646e25cf253b5c9bc611e5e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SelectionDuplicate</definition>
        <argsstring>()</argsstring>
        <name>SelectionDuplicate</name>
        <briefdescription>
<para>Duplicate the selection. </para>        </briefdescription>
        <detaileddescription>
<para>If selection empty duplicate the line containing the caret. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1901"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a3527677aac82ebd1733c4738d8326330" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::SelectionIsRectangle</definition>
        <argsstring>() const </argsstring>
        <name>SelectionIsRectangle</name>
        <briefdescription>
<para>Is the selection rectangular? The alternative is the more common stream selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1907"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a60bde35c437ac8edc081582fb06cd2da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1adc7fafddfefae454021d2e0660c96487" kindref="member">wxIntPtr</ref></type>
        <definition>wxIntPtr wxStyledTextCtrl::SendMsg</definition>
        <argsstring>(int msg, wxUIntPtr wp=0, wxIntPtr lp=0) const </argsstring>
        <name>SendMsg</name>
        <param>
          <type>int</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a74cc3a4753ec135e9e2ee6b155c97216" kindref="member">wxUIntPtr</ref></type>
          <declname>wp</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1adc7fafddfefae454021d2e0660c96487" kindref="member">wxIntPtr</ref></type>
          <declname>lp</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Send a message to Scintilla. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1912"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aae65c9177c7e04cc56db92ee2a82c30d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetAnchor</definition>
        <argsstring>(int posAnchor)</argsstring>
        <name>SetAnchor</name>
        <param>
          <type>int</type>
          <declname>posAnchor</declname>
        </param>
        <briefdescription>
<para>Set the selection anchor to a position. </para>        </briefdescription>
        <detaileddescription>
<para>The anchor is the opposite end of the selection from the caret. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1918"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1acb9871f499cc49f222199ce17858be78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetBackSpaceUnIndents</definition>
        <argsstring>(bool bsUnIndents)</argsstring>
        <name>SetBackSpaceUnIndents</name>
        <param>
          <type>bool</type>
          <declname>bsUnIndents</declname>
        </param>
        <briefdescription>
<para>Sets whether a backspace pressed when caret is within indentation unindents. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1923"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a625ec429c30103b60c3c3683008b98ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetBufferedDraw</definition>
        <argsstring>(bool buffered)</argsstring>
        <name>SetBufferedDraw</name>
        <param>
          <type>bool</type>
          <declname>buffered</declname>
        </param>
        <briefdescription>
<para>If drawing is buffered then each line of text is drawn into a bitmap buffer before drawing it to the screen to avoid flicker. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1929"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a8b9df9c761aac1e0b7ef2457b09415d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetCaretForeground</definition>
        <argsstring>(const wxColour &amp;fore)</argsstring>
        <name>SetCaretForeground</name>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>fore</declname>
        </param>
        <briefdescription>
<para>Set the foreground colour of the caret. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1934"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ac5979bd0c78c7cd6176b1294ea620027" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetCaretLineBackAlpha</definition>
        <argsstring>(int alpha)</argsstring>
        <name>SetCaretLineBackAlpha</name>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>Set background alpha of the caret line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1939"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a10b9b644790f1a9ca287df6f527d6e63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetCaretLineBackground</definition>
        <argsstring>(const wxColour &amp;back)</argsstring>
        <name>SetCaretLineBackground</name>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>back</declname>
        </param>
        <briefdescription>
<para>Set the colour of the background of the line containing the caret. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1944"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af1ed9a3be0fdda376f6b4ab819508f4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetCaretLineVisible</definition>
        <argsstring>(bool show)</argsstring>
        <name>SetCaretLineVisible</name>
        <param>
          <type>bool</type>
          <declname>show</declname>
        </param>
        <briefdescription>
<para>Display the background of the line containing the caret in a different colour. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1949"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aad5817f223b594770fec0cc83fcd88e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetCaretPeriod</definition>
        <argsstring>(int periodMilliseconds)</argsstring>
        <name>SetCaretPeriod</name>
        <param>
          <type>int</type>
          <declname>periodMilliseconds</declname>
        </param>
        <briefdescription>
<para>Get the time in milliseconds that the caret is on and off. </para>        </briefdescription>
        <detaileddescription>
<para>0 = steady on. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1954"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a3ae097b42f3b5b3d2569796a09b075d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetCaretSticky</definition>
        <argsstring>(bool useCaretStickyBehaviour)</argsstring>
        <name>SetCaretSticky</name>
        <param>
          <type>bool</type>
          <declname>useCaretStickyBehaviour</declname>
        </param>
        <briefdescription>
<para>Stop the caret preferred x position changing when the user types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1959"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9c89012c8781311f4aa8d8bb0e78a087" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetCaretWidth</definition>
        <argsstring>(int pixelWidth)</argsstring>
        <name>SetCaretWidth</name>
        <param>
          <type>int</type>
          <declname>pixelWidth</declname>
        </param>
        <briefdescription>
<para>Set the width of the insert mode caret. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1964"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a76bbfb8faf5016f90aef3df1d068ad86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetCharsDefault</definition>
        <argsstring>()</argsstring>
        <name>SetCharsDefault</name>
        <briefdescription>
<para>Reset the set of characters for whitespace and word characters to the defaults. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1969"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a1f453da45a1621528f258700cf462a6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetCodePage</definition>
        <argsstring>(int codePage)</argsstring>
        <name>SetCodePage</name>
        <param>
          <type>int</type>
          <declname>codePage</declname>
        </param>
        <briefdescription>
<para>Set the code page used to interpret the bytes of the document as characters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1974"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a65eeb943df8d89628c047caeb89c4413" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetControlCharSymbol</definition>
        <argsstring>(int symbol)</argsstring>
        <name>SetControlCharSymbol</name>
        <param>
          <type>int</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
<para>Change the way control characters are displayed: If symbol is 32, keep the drawn way, else, use the given character. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1980"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aff888113834dedbd7779784f1e84412a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetCurrentPos</definition>
        <argsstring>(int pos)</argsstring>
        <name>SetCurrentPos</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Sets the position of the caret. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1985"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aab3d63cf95c36142160589ee9a8fbcde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetDocPointer</definition>
        <argsstring>(void *docPointer)</argsstring>
        <name>SetDocPointer</name>
        <param>
          <type>void *</type>
          <declname>docPointer</declname>
        </param>
        <briefdescription>
<para>Change the document object used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1990"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9f2ea01c2fa3fdeb7021c071b1f0a7bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetEOLMode</definition>
        <argsstring>(int eolMode)</argsstring>
        <name>SetEOLMode</name>
        <param>
          <type>int</type>
          <declname>eolMode</declname>
        </param>
        <briefdescription>
<para>Set the current end of line mode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="1995"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9118716e17cfe2de2390be4b784f5d28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetEdgeColour</definition>
        <argsstring>(const wxColour &amp;edgeColour)</argsstring>
        <name>SetEdgeColour</name>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>edgeColour</declname>
        </param>
        <briefdescription>
<para>Change the colour used in edge indication. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2000"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a5bcd5249910c4c7c41118da5d49858b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetEdgeColumn</definition>
        <argsstring>(int column)</argsstring>
        <name>SetEdgeColumn</name>
        <param>
          <type>int</type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Set the column number of the edge. </para>        </briefdescription>
        <detaileddescription>
<para>If text goes past the edge then it is highlighted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2006"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af8183c56a932b0b06ac475109a14ce9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetEdgeMode</definition>
        <argsstring>(int mode)</argsstring>
        <name>SetEdgeMode</name>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>The edge may be displayed by a line (EDGE_LINE) or by highlighting text that goes beyond it (EDGE_BACKGROUND) or not displayed at all (EDGE_NONE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2012"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a5af5606b6edbb85b554a03ecdfffa2db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetEndAtLastLine</definition>
        <argsstring>(bool endAtLastLine)</argsstring>
        <name>SetEndAtLastLine</name>
        <param>
          <type>bool</type>
          <declname>endAtLastLine</declname>
        </param>
        <briefdescription>
<para>Sets the scroll range so that maximum scroll position has the last line at the bottom of the view (default). </para>        </briefdescription>
        <detaileddescription>
<para>Setting this to false allows scrolling one page below the last line. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2019"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a36532e6641aafb97a7254ab285896ff2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetFoldExpanded</definition>
        <argsstring>(int line, bool expanded)</argsstring>
        <name>SetFoldExpanded</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>expanded</declname>
        </param>
        <briefdescription>
<para>Show the children of a header line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2024"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9f8281c84a1f6c945f4b41e566ec3b47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetFoldFlags</definition>
        <argsstring>(int flags)</argsstring>
        <name>SetFoldFlags</name>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Set some style options for folding. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2029"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a3a7717a0e33eac50428ea764786c3e1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetFoldLevel</definition>
        <argsstring>(int line, int level)</argsstring>
        <name>SetFoldLevel</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Set the fold level of a line. </para>        </briefdescription>
        <detaileddescription>
<para>This encodes an integer level along with flags indicating whether the line is a header and whether it is effectively white space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2036"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a213204145ccb740cca7eb816210e6ebe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetFoldMarginColour</definition>
        <argsstring>(bool useSetting, const wxColour &amp;back)</argsstring>
        <name>SetFoldMarginColour</name>
        <param>
          <type>bool</type>
          <declname>useSetting</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>back</declname>
        </param>
        <briefdescription>
<para>Set the colours used as a chequerboard pattern in the fold margin. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2041"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a318338d67d375dd4408b281b55fd3699" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetFoldMarginHiColour</definition>
        <argsstring>(bool useSetting, const wxColour &amp;fore)</argsstring>
        <name>SetFoldMarginHiColour</name>
        <param>
          <type>bool</type>
          <declname>useSetting</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>fore</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2046"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a8a41c511c916ac59c486900eabfac5b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetHScrollBar</definition>
        <argsstring>(wxScrollBar *bar)</argsstring>
        <name>SetHScrollBar</name>
        <param>
          <type><ref refid="classwx_scroll_bar" kindref="compound">wxScrollBar</ref> *</type>
          <declname>bar</declname>
        </param>
        <briefdescription>
<para>Set the horizontal scrollbar to use instead of the ont that&apos;s built-in. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2051"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ab7a2411d02d4fb900f7847f81a0bf9cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetHighlightGuide</definition>
        <argsstring>(int column)</argsstring>
        <name>SetHighlightGuide</name>
        <param>
          <type>int</type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Set the highlighted indentation guide column. </para>        </briefdescription>
        <detaileddescription>
<para>0 = no highlighted guide. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2057"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aa3697a1a89bff16a98fc4b648d2a25ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetHotspotActiveBackground</definition>
        <argsstring>(bool useSetting, const wxColour &amp;back)</argsstring>
        <name>SetHotspotActiveBackground</name>
        <param>
          <type>bool</type>
          <declname>useSetting</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>back</declname>
        </param>
        <briefdescription>
<para>Set a back colour for active hotspots. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2063"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a0f9e6a38b3f57612406f587dce145a31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetHotspotActiveForeground</definition>
        <argsstring>(bool useSetting, const wxColour &amp;fore)</argsstring>
        <name>SetHotspotActiveForeground</name>
        <param>
          <type>bool</type>
          <declname>useSetting</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>fore</declname>
        </param>
        <briefdescription>
<para>Set a fore colour for active hotspots. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2069"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a543946a4c1705ea1f94fbc7b3b901239" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetHotspotActiveUnderline</definition>
        <argsstring>(bool underline)</argsstring>
        <name>SetHotspotActiveUnderline</name>
        <param>
          <type>bool</type>
          <declname>underline</declname>
        </param>
        <briefdescription>
<para>Enable / Disable underlining active hotspots. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2074"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a905c2e7323b7712084f84cb37399ea4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetHotspotSingleLine</definition>
        <argsstring>(bool singleLine)</argsstring>
        <name>SetHotspotSingleLine</name>
        <param>
          <type>bool</type>
          <declname>singleLine</declname>
        </param>
        <briefdescription>
<para>Limit hotspots to single line so hotspots on two lines don&apos;t merge. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2079"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ab0a658b03734d81d23d4654b35e88785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetIndent</definition>
        <argsstring>(int indentSize)</argsstring>
        <name>SetIndent</name>
        <param>
          <type>int</type>
          <declname>indentSize</declname>
        </param>
        <briefdescription>
<para>Set the number of spaces used for one level of indentation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2084"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ac4ed86f4730dcbcd2a8272f33f74778b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetIndentationGuides</definition>
        <argsstring>(int indentView)</argsstring>
        <name>SetIndentationGuides</name>
        <param>
          <type>int</type>
          <declname>indentView</declname>
        </param>
        <briefdescription>
<para>Show or hide indentation guides. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2089"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1abdb42d7d41e71172d5e2939ead1ceb87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetKeyWords</definition>
        <argsstring>(int keywordSet, const wxString &amp;keyWords)</argsstring>
        <name>SetKeyWords</name>
        <param>
          <type>int</type>
          <declname>keywordSet</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>keyWords</declname>
        </param>
        <briefdescription>
<para>Set up the key words used by the lexer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2094"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ac810f3a881221a261d95d701d080dda7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetLastKeydownProcessed</definition>
        <argsstring>(bool val)</argsstring>
        <name>SetLastKeydownProcessed</name>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2099"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a37c956d74a6daeb5ddfe40d98c3f6dfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetLayoutCache</definition>
        <argsstring>(int mode)</argsstring>
        <name>SetLayoutCache</name>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Sets the degree of caching of layout information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2104"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ac19aeb2585c3794168611a9c097a00c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetLexer</definition>
        <argsstring>(int lexer)</argsstring>
        <name>SetLexer</name>
        <param>
          <type>int</type>
          <declname>lexer</declname>
        </param>
        <briefdescription>
<para>Set the lexing language of the document. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2109"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aa55e15f075e652c051ed9f1ad4d2f4c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetLexerLanguage</definition>
        <argsstring>(const wxString &amp;language)</argsstring>
        <name>SetLexerLanguage</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>language</declname>
        </param>
        <briefdescription>
<para>Set the lexing language of the document based on string name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2114"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a418944f7b93cb56fb2e70d1b623ae682" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetLineIndentation</definition>
        <argsstring>(int line, int indentSize)</argsstring>
        <name>SetLineIndentation</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indentSize</declname>
        </param>
        <briefdescription>
<para>Change the indentation of a line to a number of columns. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2119"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af6a83c6573c60b12fd6aa3376349cf36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetLineState</definition>
        <argsstring>(int line, int state)</argsstring>
        <name>SetLineState</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>int</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Used to hold extra styling information for each line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2124"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a66195611508b5ca6f3a191b4e5433fd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetMarginLeft</definition>
        <argsstring>(int pixelWidth)</argsstring>
        <name>SetMarginLeft</name>
        <param>
          <type>int</type>
          <declname>pixelWidth</declname>
        </param>
        <briefdescription>
<para>Sets the size in pixels of the left margin. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2129"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a6e164c4c454eb75d9082c55159572fcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetMarginMask</definition>
        <argsstring>(int margin, int mask)</argsstring>
        <name>SetMarginMask</name>
        <param>
          <type>int</type>
          <declname>margin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Set a mask that determines which markers are displayed in a margin. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2134"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a20a270a0adafd05fdac58bb34e6748da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetMarginRight</definition>
        <argsstring>(int pixelWidth)</argsstring>
        <name>SetMarginRight</name>
        <param>
          <type>int</type>
          <declname>pixelWidth</declname>
        </param>
        <briefdescription>
<para>Sets the size in pixels of the right margin. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2139"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae70bbd7ab233d7d8b3ffc6b7e8de1920" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetMarginSensitive</definition>
        <argsstring>(int margin, bool sensitive)</argsstring>
        <name>SetMarginSensitive</name>
        <param>
          <type>int</type>
          <declname>margin</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sensitive</declname>
        </param>
        <briefdescription>
<para>Make a margin sensitive or insensitive to mouse clicks. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2144"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a79eaf23fc0c1b80a6b3cf4e9dc928461" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetMarginType</definition>
        <argsstring>(int margin, int marginType)</argsstring>
        <name>SetMarginType</name>
        <param>
          <type>int</type>
          <declname>margin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>marginType</declname>
        </param>
        <briefdescription>
<para>Set a margin to be either numeric or symbolic. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2149"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ab506524159db11a54ffd3fde2e4f601d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetMarginWidth</definition>
        <argsstring>(int margin, int pixelWidth)</argsstring>
        <name>SetMarginWidth</name>
        <param>
          <type>int</type>
          <declname>margin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pixelWidth</declname>
        </param>
        <briefdescription>
<para>Set the width of a margin to a width expressed in pixels. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2154"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a18a3037d50ee82d355294c8c347a08c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetMargins</definition>
        <argsstring>(int left, int right)</argsstring>
        <name>SetMargins</name>
        <param>
          <type>int</type>
          <declname>left</declname>
        </param>
        <param>
          <type>int</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Set the left and right margin in the edit area, measured in pixels. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2159"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a641d575d56ef4de4a2256184eecc86cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetModEventMask</definition>
        <argsstring>(int mask)</argsstring>
        <name>SetModEventMask</name>
        <param>
          <type>int</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Set which document modification events are sent to the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2164"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1adb7c207ea2bc0d74eb96aef2075084df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetMouseDownCaptures</definition>
        <argsstring>(bool captures)</argsstring>
        <name>SetMouseDownCaptures</name>
        <param>
          <type>bool</type>
          <declname>captures</declname>
        </param>
        <briefdescription>
<para>Set whether the mouse is captured when its button is pressed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2169"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a8cbdb87eac5f4edd2bf78703192255fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetMouseDwellTime</definition>
        <argsstring>(int periodMilliseconds)</argsstring>
        <name>SetMouseDwellTime</name>
        <param>
          <type>int</type>
          <declname>periodMilliseconds</declname>
        </param>
        <briefdescription>
<para>Sets the time the mouse must sit still to generate a mouse dwell event. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2174"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ac6990933ca1f9dacd92ce73e6c34dc24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetOvertype</definition>
        <argsstring>(bool overtype)</argsstring>
        <name>SetOvertype</name>
        <param>
          <type>bool</type>
          <declname>overtype</declname>
        </param>
        <briefdescription>
<para>Set to overtype (true) or insert mode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2179"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1abab994f4de37a9d7c7286351577d19ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetPasteConvertEndings</definition>
        <argsstring>(bool convert)</argsstring>
        <name>SetPasteConvertEndings</name>
        <param>
          <type>bool</type>
          <declname>convert</declname>
        </param>
        <briefdescription>
<para>Enable/Disable convert-on-paste for line endings. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2184"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a8422f36721ddac36265458c447125cbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetPrintColourMode</definition>
        <argsstring>(int mode)</argsstring>
        <name>SetPrintColourMode</name>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Modify colours when printing for clearer printed text. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2189"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9dfa04a9474c70abc36af50eca990883" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetPrintMagnification</definition>
        <argsstring>(int magnification)</argsstring>
        <name>SetPrintMagnification</name>
        <param>
          <type>int</type>
          <declname>magnification</declname>
        </param>
        <briefdescription>
<para>Sets the print magnification added to the point size of each style for printing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2194"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a05bffeaf1d82befd6402cad5ca40bf29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetPrintWrapMode</definition>
        <argsstring>(int mode)</argsstring>
        <name>SetPrintWrapMode</name>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Set printing to line wrapped (SC_WRAP_WORD) or not line wrapped (SC_WRAP_NONE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2199"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a503b51248a736de0aace8cac98cdd634" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetProperty</definition>
        <argsstring>(const wxString &amp;key, const wxString &amp;value)</argsstring>
        <name>SetProperty</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set up a value that may be used by a lexer for some optional feature. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2204"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a8e0234fe76281a6645798c47a34c2ecd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetReadOnly</definition>
        <argsstring>(bool readOnly)</argsstring>
        <name>SetReadOnly</name>
        <param>
          <type>bool</type>
          <declname>readOnly</declname>
        </param>
        <briefdescription>
<para>Set to read only or read write. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2209"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a05df936f0003d9df7a24762120901b96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetSTCCursor</definition>
        <argsstring>(int cursorType)</argsstring>
        <name>SetSTCCursor</name>
        <param>
          <type>int</type>
          <declname>cursorType</declname>
        </param>
        <briefdescription>
<para>Sets the cursor to one of the SC_CURSOR* values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2214"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a6b835a56a1a870fc46e3b8bc005bcc07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetSTCFocus</definition>
        <argsstring>(bool focus)</argsstring>
        <name>SetSTCFocus</name>
        <param>
          <type>bool</type>
          <declname>focus</declname>
        </param>
        <briefdescription>
<para>Change internal focus flag. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2219"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ab6d036ea6ab7a6389eca1d8d1fa19430" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetSavePoint</definition>
        <argsstring>()</argsstring>
        <name>SetSavePoint</name>
        <briefdescription>
<para>Remember the current position in the undo history as the position at which the document was saved. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2225"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a8b1ad6a0f9d0b59e4b71f0b5eab69238" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetScrollWidth</definition>
        <argsstring>(int pixelWidth)</argsstring>
        <name>SetScrollWidth</name>
        <param>
          <type>int</type>
          <declname>pixelWidth</declname>
        </param>
        <briefdescription>
<para>Sets the document width assumed for scrolling. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2230"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a800c6ee3cc908f9ed5d0a6701afb43c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetSearchFlags</definition>
        <argsstring>(int flags)</argsstring>
        <name>SetSearchFlags</name>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Set the search flags used by SearchInTarget. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2235"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aff181c7ff3f55b66d1cd1fc2b9fb4b4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetSelAlpha</definition>
        <argsstring>(int alpha)</argsstring>
        <name>SetSelAlpha</name>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>Set the alpha of the selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2240"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a22825ff4a852af2798dffca897b3063f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetSelBackground</definition>
        <argsstring>(bool useSetting, const wxColour &amp;back)</argsstring>
        <name>SetSelBackground</name>
        <param>
          <type>bool</type>
          <declname>useSetting</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>back</declname>
        </param>
        <briefdescription>
<para>Set the background colour of the main and additional selections and whether to use this setting. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2245"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a8700f308a77dc08a2cd857e44ee0a194" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetSelForeground</definition>
        <argsstring>(bool useSetting, const wxColour &amp;fore)</argsstring>
        <name>SetSelForeground</name>
        <param>
          <type>bool</type>
          <declname>useSetting</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>fore</declname>
        </param>
        <briefdescription>
<para>Set the foreground colour of the main and additional selections and whether to use this setting. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2250"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a93a0b8b0c54846b064f010ae999296d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxStyledTextCtrl::SetSelection</definition>
        <argsstring>(long from, long to)</argsstring>
        <name>SetSelection</name>
        <param>
          <type>long</type>
          <declname>from</declname>
        </param>
        <param>
          <type>long</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>Select a range of text. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2255"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a0c762f147dda831832b10e9b42ac74cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetSelectionEnd</definition>
        <argsstring>(int pos)</argsstring>
        <name>SetSelectionEnd</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Sets the position that ends the selection - this becomes the currentPosition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2260"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9bdcb970e3fa01b7e4f51c96b6132784" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetSelectionMode</definition>
        <argsstring>(int mode)</argsstring>
        <name>SetSelectionMode</name>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Set the selection mode to stream (wxSTC_SEL_STREAM) or rectangular (wxSTC_SEL_RECTANGLE/wxSTC_SEL_THIN) or by lines (wxSTC_SEL_LINES). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2266"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a4f8891026178d5cf2ba69a77b4846b9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetSelectionStart</definition>
        <argsstring>(int pos)</argsstring>
        <name>SetSelectionStart</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Sets the position that starts the selection - this becomes the anchor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2271"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a6298a2fcb9d04e53a1521e6966c9900a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetStatus</definition>
        <argsstring>(int statusCode)</argsstring>
        <name>SetStatus</name>
        <param>
          <type>int</type>
          <declname>statusCode</declname>
        </param>
        <briefdescription>
<para>Change error status - 0 = OK. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2276"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9d9f2fc0cc7f4f10e437139602f69b18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetStyleBits</definition>
        <argsstring>(int bits)</argsstring>
        <name>SetStyleBits</name>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
<para>Divide each styling byte into lexical class bits (default: 5) and indicator bits (default: 3). </para>        </briefdescription>
        <detaileddescription>
<para>If a lexer requires more than 32 lexical states, then this is used to expand the possible states. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2283"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a879088a9c2e207f2664b2b558eceabb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetStyleBytes</definition>
        <argsstring>(int length, char *styleBytes)</argsstring>
        <name>SetStyleBytes</name>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>styleBytes</declname>
        </param>
        <briefdescription>
<para>Set the styles for a segment of the document. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2288"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a177842bba7bc31bf5a000382f2a258be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetStyling</definition>
        <argsstring>(int length, int style)</argsstring>
        <name>SetStyling</name>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Change style from current styling position for length characters to a style and move the current styling position to after this newly styled segment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2294"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a7180670a48c8e3512a7b81fbfe4534c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetTabIndents</definition>
        <argsstring>(bool tabIndents)</argsstring>
        <name>SetTabIndents</name>
        <param>
          <type>bool</type>
          <declname>tabIndents</declname>
        </param>
        <briefdescription>
<para>Sets whether a tab pressed when caret is within indentation indents. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2299"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a3b762d0f295c136f78826335c871fabb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetTabWidth</definition>
        <argsstring>(int tabWidth)</argsstring>
        <name>SetTabWidth</name>
        <param>
          <type>int</type>
          <declname>tabWidth</declname>
        </param>
        <briefdescription>
<para>Change the visible size of a tab to be a multiple of the width of a space character. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2305"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a6945abe1ceba12c3aa69a13fc3ecd3bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetTargetEnd</definition>
        <argsstring>(int pos)</argsstring>
        <name>SetTargetEnd</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Sets the position that ends the target which is used for updating the document without affecting the scroll position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2311"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ab6dc546a539447d354bfbe60ac023021" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetTargetStart</definition>
        <argsstring>(int pos)</argsstring>
        <name>SetTargetStart</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Sets the position that starts the target which is used for updating the document without affecting the scroll position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2317"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a404eb5101b0c1602f29dec04ef6e4394" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetText</definition>
        <argsstring>(const wxString &amp;text)</argsstring>
        <name>SetText</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Replace the contents of the document with the argument text. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2322"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a393c04f71bc68ec711a82232d440d4bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetTextRaw</definition>
        <argsstring>(const char *text)</argsstring>
        <name>SetTextRaw</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Replace the contents of the document with the argument text. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2327"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a905908a4ba6cb09a938c42e8b1b58142" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetTwoPhaseDraw</definition>
        <argsstring>(bool twoPhase)</argsstring>
        <name>SetTwoPhaseDraw</name>
        <param>
          <type>bool</type>
          <declname>twoPhase</declname>
        </param>
        <briefdescription>
<para>In twoPhaseDraw mode, drawing is performed in two phases, first the background and then the foreground. </para>        </briefdescription>
        <detaileddescription>
<para>This avoids chopping off characters that overlap the next run. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2334"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a67e1aba75c768fee4acf078ccf1b25f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetUndoCollection</definition>
        <argsstring>(bool collectUndo)</argsstring>
        <name>SetUndoCollection</name>
        <param>
          <type>bool</type>
          <declname>collectUndo</declname>
        </param>
        <briefdescription>
<para>Choose between collecting actions into the undo history and discarding them. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2340"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9c2d1af466e2e5279215b90ca02c2d88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetUseAntiAliasing</definition>
        <argsstring>(bool useAA)</argsstring>
        <name>SetUseAntiAliasing</name>
        <param>
          <type>bool</type>
          <declname>useAA</declname>
        </param>
        <briefdescription>
<para>Specify whether anti-aliased fonts should be used. </para>        </briefdescription>
        <detaileddescription>
<para>Will have no effect on some platforms, but on some (wxMac for example) can greatly improve performance. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2347"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae809308836c2071e8624db5fc610f040" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetUseHorizontalScrollBar</definition>
        <argsstring>(bool show)</argsstring>
        <name>SetUseHorizontalScrollBar</name>
        <param>
          <type>bool</type>
          <declname>show</declname>
        </param>
        <briefdescription>
<para>Show or hide the horizontal scroll bar. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2352"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a0ed22fd1d4945a917156b4b53d8829b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetUseTabs</definition>
        <argsstring>(bool useTabs)</argsstring>
        <name>SetUseTabs</name>
        <param>
          <type>bool</type>
          <declname>useTabs</declname>
        </param>
        <briefdescription>
<para>Indentation will only use space characters if useTabs is false, otherwise it will use a combination of tabs and spaces. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2358"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a5fe6d6b2b0ebf05ff197c77254d8e594" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetUseVerticalScrollBar</definition>
        <argsstring>(bool show)</argsstring>
        <name>SetUseVerticalScrollBar</name>
        <param>
          <type>bool</type>
          <declname>show</declname>
        </param>
        <briefdescription>
<para>Show or hide the vertical scroll bar. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2363"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a44acbd82ce7e4c351a6f7dec387769e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetVScrollBar</definition>
        <argsstring>(wxScrollBar *bar)</argsstring>
        <name>SetVScrollBar</name>
        <param>
          <type><ref refid="classwx_scroll_bar" kindref="compound">wxScrollBar</ref> *</type>
          <declname>bar</declname>
        </param>
        <briefdescription>
<para>Set the vertical scrollbar to use instead of the ont that&apos;s built-in. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2368"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1abcdd147640044f0b589ad41e01de3b69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetViewEOL</definition>
        <argsstring>(bool visible)</argsstring>
        <name>SetViewEOL</name>
        <param>
          <type>bool</type>
          <declname>visible</declname>
        </param>
        <briefdescription>
<para>Make the end of line characters visible or invisible. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2373"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a4fa5fc715d380567796e41f220729c16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetViewWhiteSpace</definition>
        <argsstring>(int viewWS)</argsstring>
        <name>SetViewWhiteSpace</name>
        <param>
          <type>int</type>
          <declname>viewWS</declname>
        </param>
        <briefdescription>
<para>Make white space characters invisible, always visible or visible outside indentation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2379"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a1307ace5a86483b5c05dc6b980ec3b99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetVisiblePolicy</definition>
        <argsstring>(int visiblePolicy, int visibleSlop)</argsstring>
        <name>SetVisiblePolicy</name>
        <param>
          <type>int</type>
          <declname>visiblePolicy</declname>
        </param>
        <param>
          <type>int</type>
          <declname>visibleSlop</declname>
        </param>
        <briefdescription>
<para>Set the way the display area is determined when a particular line is to be moved to by Find, FindNext, GotoLine, etc. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2385"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a2ac8e962f6d64eec9ca2402f805afc6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetWhitespaceBackground</definition>
        <argsstring>(bool useSetting, const wxColour &amp;back)</argsstring>
        <name>SetWhitespaceBackground</name>
        <param>
          <type>bool</type>
          <declname>useSetting</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>back</declname>
        </param>
        <briefdescription>
<para>Set the background colour of all whitespace and whether to use this setting. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2391"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a90386e4db2515b09ad1927b4ee77a5ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetWhitespaceChars</definition>
        <argsstring>(const wxString &amp;characters)</argsstring>
        <name>SetWhitespaceChars</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>characters</declname>
        </param>
        <briefdescription>
<para>Set the set of characters making up whitespace for when moving or selecting by word. </para>        </briefdescription>
        <detaileddescription>
<para>Should be called after SetWordChars. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2398"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a503a80587f9ff5f2b96c2a1f0e294378" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetWhitespaceForeground</definition>
        <argsstring>(bool useSetting, const wxColour &amp;fore)</argsstring>
        <name>SetWhitespaceForeground</name>
        <param>
          <type>bool</type>
          <declname>useSetting</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>fore</declname>
        </param>
        <briefdescription>
<para>Set the foreground colour of all whitespace and whether to use this setting. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2404"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ab58a13a90a65b2870dc7918aaf1c9f64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetWhitespaceSize</definition>
        <argsstring>(int size)</argsstring>
        <name>SetWhitespaceSize</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Set the size of the dots used to mark space characters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2409"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a635e119235cbc5bbeb843a73117f6933" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetWhitespaceSize</definition>
        <argsstring>() const </argsstring>
        <name>GetWhitespaceSize</name>
        <briefdescription>
<para>Get the size of the dots used to mark space characters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2414"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a91d5c9df3ecc79aa75a518cc4a4aa856" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetWordChars</definition>
        <argsstring>(const wxString &amp;characters)</argsstring>
        <name>SetWordChars</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>characters</declname>
        </param>
        <briefdescription>
<para>Set the set of characters making up words for when moving or selecting by word. </para>        </briefdescription>
        <detaileddescription>
<para>First sets defaults like SetCharsDefault. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2421"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ad009f046db17691b308000409b004918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetWrapMode</definition>
        <argsstring>(int mode)</argsstring>
        <name>SetWrapMode</name>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Sets whether text is word wrapped. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2426"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae69e2a7978cfe4ab7ff843f6bf59ef77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetWrapStartIndent</definition>
        <argsstring>(int indent)</argsstring>
        <name>SetWrapStartIndent</name>
        <param>
          <type>int</type>
          <declname>indent</declname>
        </param>
        <briefdescription>
<para>Set the start indent for wrapped lines. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2431"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af7b68c16eadf74c929a0a14923cfe785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetWrapVisualFlags</definition>
        <argsstring>(int wrapVisualFlags)</argsstring>
        <name>SetWrapVisualFlags</name>
        <param>
          <type>int</type>
          <declname>wrapVisualFlags</declname>
        </param>
        <briefdescription>
<para>Set the display mode of visual flags for wrapped lines. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2436"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a5910f52bfa080616ca49306b73725c86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetWrapVisualFlagsLocation</definition>
        <argsstring>(int wrapVisualFlagsLocation)</argsstring>
        <name>SetWrapVisualFlagsLocation</name>
        <param>
          <type>int</type>
          <declname>wrapVisualFlagsLocation</declname>
        </param>
        <briefdescription>
<para>Set the location of visual flags for wrapped lines. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2441"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a675c4a537ad6f35101057a745ded1c66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetXCaretPolicy</definition>
        <argsstring>(int caretPolicy, int caretSlop)</argsstring>
        <name>SetXCaretPolicy</name>
        <param>
          <type>int</type>
          <declname>caretPolicy</declname>
        </param>
        <param>
          <type>int</type>
          <declname>caretSlop</declname>
        </param>
        <briefdescription>
<para>Set the way the caret is kept visible when going sideway. </para>        </briefdescription>
        <detaileddescription>
<para>The exclusion zone is given in pixels. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2447"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af0366b19a354f80f12fc73b9ecd10024" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetXOffset</definition>
        <argsstring>(int newOffset)</argsstring>
        <name>SetXOffset</name>
        <param>
          <type>int</type>
          <declname>newOffset</declname>
        </param>
        <briefdescription>
<para>Get and Set the xOffset (ie, horizontal scroll position). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2452"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ab0105eadf06fb58b01eec70d1c5b3f2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetYCaretPolicy</definition>
        <argsstring>(int caretPolicy, int caretSlop)</argsstring>
        <name>SetYCaretPolicy</name>
        <param>
          <type>int</type>
          <declname>caretPolicy</declname>
        </param>
        <param>
          <type>int</type>
          <declname>caretSlop</declname>
        </param>
        <briefdescription>
<para>Set the way the line the caret is on is kept visible. </para>        </briefdescription>
        <detaileddescription>
<para>The exclusion zone is given in lines. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2458"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a689b6d6fd77a45f2759d24165234c092" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetZoom</definition>
        <argsstring>(int zoom)</argsstring>
        <name>SetZoom</name>
        <param>
          <type>int</type>
          <declname>zoom</declname>
        </param>
        <briefdescription>
<para>Set the zoom level. </para>        </briefdescription>
        <detaileddescription>
<para>This number of points is added to the size of all fonts. It may be positive to magnify or negative to reduce. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2464"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a6c1bc19d97321b1bfa272f8e9b07b75c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::ShowLines</definition>
        <argsstring>(int lineStart, int lineEnd)</argsstring>
        <name>ShowLines</name>
        <param>
          <type>int</type>
          <declname>lineStart</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineEnd</declname>
        </param>
        <briefdescription>
<para>Make a range of lines visible. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2469"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a3d712a9a418ef6d8de896bd5a39375db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StartRecord</definition>
        <argsstring>()</argsstring>
        <name>StartRecord</name>
        <briefdescription>
<para>Start notifying the container of all key presses and commands. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2474"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a6ca352cb6a20c69a9f4bc5001d0fdf25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StartStyling</definition>
        <argsstring>(int pos, int mask)</argsstring>
        <name>StartStyling</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Set the current styling position to pos and the styling mask to mask. </para>        </briefdescription>
        <detaileddescription>
<para>The styling mask can be used to protect some bits in each styling byte from modification. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2481"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a27ad57e2f03a339b2759f1cae22b1651" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StopRecord</definition>
        <argsstring>()</argsstring>
        <name>StopRecord</name>
        <briefdescription>
<para>Stop notifying the container of all key presses and commands. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2486"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a007d2175a04dedd349cf44a7625ca72d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StutteredPageDown</definition>
        <argsstring>()</argsstring>
        <name>StutteredPageDown</name>
        <briefdescription>
<para>Move caret to bottom of page, or one page down if already at bottom of page. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2491"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ac42d4ddbb20357422e2581e054f1e6b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StutteredPageDownExtend</definition>
        <argsstring>()</argsstring>
        <name>StutteredPageDownExtend</name>
        <briefdescription>
<para>Move caret to bottom of page, or one page down if already at bottom of page, extending selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2497"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a52ae7d5d4cb62bfc9fdf01eb1855dc5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StutteredPageUp</definition>
        <argsstring>()</argsstring>
        <name>StutteredPageUp</name>
        <briefdescription>
<para>Move caret to top of page, or one page up if already at top of page. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2502"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a15f422b87392daaae228fdf5a305a780" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StutteredPageUpExtend</definition>
        <argsstring>()</argsstring>
        <name>StutteredPageUpExtend</name>
        <briefdescription>
<para>Move caret to top of page, or one page up if already at top of page, extending selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2508"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a599a5c4fcc4af55c173492d8b0839afd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StyleClearAll</definition>
        <argsstring>()</argsstring>
        <name>StyleClearAll</name>
        <briefdescription>
<para>Clear all the styles and make equivalent to the global default style. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2513"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aa0a453c7c4fa4b65d4095d676d0831b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StyleResetDefault</definition>
        <argsstring>()</argsstring>
        <name>StyleResetDefault</name>
        <briefdescription>
<para>Reset the default style to its state at startup. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2518"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a5a5157388e230ccfe1cefeaa2334346e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StyleSetBackground</definition>
        <argsstring>(int style, const wxColour &amp;back)</argsstring>
        <name>StyleSetBackground</name>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>back</declname>
        </param>
        <briefdescription>
<para>Set the background colour of a style. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2523"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ab666a9627aef3a3fe7f0a67736f1c0e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StyleSetBold</definition>
        <argsstring>(int style, bool bold)</argsstring>
        <name>StyleSetBold</name>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bold</declname>
        </param>
        <briefdescription>
<para>Set a style to be bold or not. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2528"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a31ce6e8b277eff27b43733ff4002469f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StyleSetCase</definition>
        <argsstring>(int style, int caseForce)</argsstring>
        <name>StyleSetCase</name>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <param>
          <type>int</type>
          <declname>caseForce</declname>
        </param>
        <briefdescription>
<para>Set a style to be mixed case, or to force upper or lower case. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2533"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a34ce1df694a712a9ad19227b19d82f09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StyleSetChangeable</definition>
        <argsstring>(int style, bool changeable)</argsstring>
        <name>StyleSetChangeable</name>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>changeable</declname>
        </param>
        <briefdescription>
<para>Set a style to be changeable or not (read only). </para>        </briefdescription>
        <detaileddescription>
<para>Experimental feature, currently buggy. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2539"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a8e9996a37a1c1a93a39a29f928fc87ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StyleSetCharacterSet</definition>
        <argsstring>(int style, int characterSet)</argsstring>
        <name>StyleSetCharacterSet</name>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <param>
          <type>int</type>
          <declname>characterSet</declname>
        </param>
        <briefdescription>
<para>Set the character set of the font in a style. </para>        </briefdescription>
        <detaileddescription>
<para>Converts the Scintilla character set values to a wxFontEncoding. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2545"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ab25f02ee7215ce6fb98abd07e80410dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StyleSetEOLFilled</definition>
        <argsstring>(int style, bool filled)</argsstring>
        <name>StyleSetEOLFilled</name>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>filled</declname>
        </param>
        <briefdescription>
<para>Set a style to have its end of line filled or not. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2550"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aba42c64b450953bbdad03aee33b3730f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StyleSetFaceName</definition>
        <argsstring>(int style, const wxString &amp;fontName)</argsstring>
        <name>StyleSetFaceName</name>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>fontName</declname>
        </param>
        <briefdescription>
<para>Set the font of a style. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2555"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a23bcfd5c7d2c1e445cf801b77217531f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StyleSetFont</definition>
        <argsstring>(int styleNum, wxFont &amp;font)</argsstring>
        <name>StyleSetFont</name>
        <param>
          <type>int</type>
          <declname>styleNum</declname>
        </param>
        <param>
          <type><ref refid="classwx_font" kindref="compound">wxFont</ref> &amp;</type>
          <declname>font</declname>
        </param>
        <briefdescription>
<para>Set style size, face, bold, italic, and underline attributes from a wxFont&apos;s attributes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2561"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a5eb90aa07d1eb7b08b17b0865a9a9f7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StyleSetFontAttr</definition>
        <argsstring>(int styleNum, int size, const wxString &amp;faceName, bool bold, bool italic, bool underline, wxFontEncoding encoding=wxFONTENCODING_DEFAULT)</argsstring>
        <name>StyleSetFontAttr</name>
        <param>
          <type>int</type>
          <declname>styleNum</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>faceName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bold</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>italic</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>underline</declname>
        </param>
        <param>
          <type><ref refid="interface_2wx_2font_8h_1a09016a7497d1ec6defdf13fd6439acca" kindref="member">wxFontEncoding</ref></type>
          <declname>encoding</declname>
          <defval>wxFONTENCODING_DEFAULT</defval>
        </param>
        <briefdescription>
<para>Set all font style attributes at once. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2571"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ab5305d9d20766a67a040325cd2140b25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StyleSetFontEncoding</definition>
        <argsstring>(int style, wxFontEncoding encoding)</argsstring>
        <name>StyleSetFontEncoding</name>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <param>
          <type><ref refid="interface_2wx_2font_8h_1a09016a7497d1ec6defdf13fd6439acca" kindref="member">wxFontEncoding</ref></type>
          <declname>encoding</declname>
        </param>
        <briefdescription>
<para>Set the font encoding to be used by a style. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2576"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a340519113f1ce71d5fbf5ad857fd2775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StyleSetForeground</definition>
        <argsstring>(int style, const wxColour &amp;fore)</argsstring>
        <name>StyleSetForeground</name>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>fore</declname>
        </param>
        <briefdescription>
<para>Set the foreground colour of a style. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2581"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aa4445d605000f0da8f45c3fa6ee693f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StyleSetHotSpot</definition>
        <argsstring>(int style, bool hotspot)</argsstring>
        <name>StyleSetHotSpot</name>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hotspot</declname>
        </param>
        <briefdescription>
<para>Set a style to be a hotspot or not. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2586"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a48e18a2aaa345af6d5c40b592aec496f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StyleSetItalic</definition>
        <argsstring>(int style, bool italic)</argsstring>
        <name>StyleSetItalic</name>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>italic</declname>
        </param>
        <briefdescription>
<para>Set a style to be italic or not. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2591"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9b620f2c97f5040a720fa41cecd83b8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StyleSetSize</definition>
        <argsstring>(int style, int sizePoints)</argsstring>
        <name>StyleSetSize</name>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sizePoints</declname>
        </param>
        <briefdescription>
<para>Set the size of characters of a style. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2596"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae2e8e43d16a25898b11972de8772044e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StyleSetSpec</definition>
        <argsstring>(int styleNum, const wxString &amp;spec)</argsstring>
        <name>StyleSetSpec</name>
        <param>
          <type>int</type>
          <declname>styleNum</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>spec</declname>
        </param>
        <briefdescription>
<para>Extract style settings from a spec-string which is composed of one or more of the following comma separated elements: bold turns on bold italic turns on italics fore:[name or #RRGGBB] sets the foreground colour back:[name or #RRGGBB] sets the background colour face:[facename] sets the font face name to use size:[num] sets the font size in points eol turns on eol filling underline turns on underlining. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2610"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a3e86b2923933019f77f0cc4c1d597ca8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StyleSetUnderline</definition>
        <argsstring>(int style, bool underline)</argsstring>
        <name>StyleSetUnderline</name>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>underline</declname>
        </param>
        <briefdescription>
<para>Set a style to be underlined or not. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2615"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ade9c9f8dedd0a1501368b1c04c6f487b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::StyleSetVisible</definition>
        <argsstring>(int style, bool visible)</argsstring>
        <name>StyleSetVisible</name>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>visible</declname>
        </param>
        <briefdescription>
<para>Set a style to be visible or not. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2620"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a2e1952f8b5c3dff0c1522465bc9ae109" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::Tab</definition>
        <argsstring>()</argsstring>
        <name>Tab</name>
        <briefdescription>
<para>If selection is empty or all on one line replace the selection with a tab character. </para>        </briefdescription>
        <detaileddescription>
<para>If more than one line selected, indent the lines. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2627"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ab943ccce1bf3a135bea42becef9d5653" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::TargetFromSelection</definition>
        <argsstring>()</argsstring>
        <name>TargetFromSelection</name>
        <briefdescription>
<para>Make the target range start and end be the same as the selection range start and end. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2633"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae955348ccf4efd231357c6d96f299589" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::TextHeight</definition>
        <argsstring>(int line)</argsstring>
        <name>TextHeight</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Retrieve the height of a particular line of text in pixels. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2638"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a52586525a7af5c901828ca8a44ae71ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::TextWidth</definition>
        <argsstring>(int style, const wxString &amp;text)</argsstring>
        <name>TextWidth</name>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Measure the pixel width of some text in a particular style. </para>        </briefdescription>
        <detaileddescription>
<para>NUL terminated text argument. Does not handle tab or control characters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2645"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1adfc2b57b5e8d2f1fb512437344aab923" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::ToggleCaretSticky</definition>
        <argsstring>()</argsstring>
        <name>ToggleCaretSticky</name>
        <briefdescription>
<para>Switch between sticky and non-sticky: meant to be bound to a key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2650"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a41820dbb85f0b04756552982f276e621" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::ToggleFold</definition>
        <argsstring>(int line)</argsstring>
        <name>ToggleFold</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Switch a header line between expanded and contracted. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2655"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af95f2c228d605f5d22afb14e8a61acbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxStyledTextCtrl::Undo</definition>
        <argsstring>()</argsstring>
        <name>Undo</name>
        <briefdescription>
<para>Undo one action in the undo history. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2660"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ab33c702836fe7f5bd001f9750781c8fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::UpperCase</definition>
        <argsstring>()</argsstring>
        <name>UpperCase</name>
        <briefdescription>
<para>Transform the selection to upper case. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2665"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a66f2c0277170bca26e3da29a5cde193b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::UsePopUp</definition>
        <argsstring>(bool allowPopUp)</argsstring>
        <name>UsePopUp</name>
        <param>
          <type>bool</type>
          <declname>allowPopUp</declname>
        </param>
        <briefdescription>
<para>Set whether a pop up menu is displayed automatically when the user presses the wrong mouse button. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2671"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aca26323e7a482fb4fe2651ef2158f2c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::UserListShow</definition>
        <argsstring>(int listType, const wxString &amp;itemList)</argsstring>
        <name>UserListShow</name>
        <param>
          <type>int</type>
          <declname>listType</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>itemList</declname>
        </param>
        <briefdescription>
<para>Display a list of strings and send notification when user chooses one. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2676"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a7f1a7f3ea35f58e5b9bc5227f5833400" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::VCHome</definition>
        <argsstring>()</argsstring>
        <name>VCHome</name>
        <briefdescription>
<para>Move caret to before first visible character on line. </para>        </briefdescription>
        <detaileddescription>
<para>If already there move to first character on line. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2682"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af4e34f2bbdca94ccbd89960a7e765dd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::VCHomeExtend</definition>
        <argsstring>()</argsstring>
        <name>VCHomeExtend</name>
        <briefdescription>
<para>Like VCHome but extending selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2687"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a7675ef1a8905fad08e50d1c72fdfdfa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::VCHomeRectExtend</definition>
        <argsstring>()</argsstring>
        <name>VCHomeRectExtend</name>
        <briefdescription>
<para>Move caret to before first visible character on line. </para>        </briefdescription>
        <detaileddescription>
<para>If already there move to first character on line. In either case, extend rectangular selection to new caret position. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2694"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae2ae99a185d56fe6b9b631c099e1ca55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::VCHomeWrap</definition>
        <argsstring>()</argsstring>
        <name>VCHomeWrap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2699"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae56149308008de97ad52f2cc0fbc3834" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::VCHomeWrapExtend</definition>
        <argsstring>()</argsstring>
        <name>VCHomeWrapExtend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2704"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a7fce59582d5c0d1100860f4f2c7aeac0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::VisibleFromDocLine</definition>
        <argsstring>(int line)</argsstring>
        <name>VisibleFromDocLine</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Find the display line of a document line taking hidden lines into account. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2709"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a53f125206f4228bbd121cb2ff220b341" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::WordEndPosition</definition>
        <argsstring>(int pos, bool onlyWordCharacters)</argsstring>
        <name>WordEndPosition</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>onlyWordCharacters</declname>
        </param>
        <briefdescription>
<para>Get position of end of word. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2714"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a4ca6f1c3ca419de400ebe39ab35f51f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::WordLeft</definition>
        <argsstring>()</argsstring>
        <name>WordLeft</name>
        <briefdescription>
<para>Move caret left one word. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2719"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a1c6fa64a1f9cd980d1788113a54d27ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::WordLeftEnd</definition>
        <argsstring>()</argsstring>
        <name>WordLeftEnd</name>
        <briefdescription>
<para>Move caret left one word, position cursor at end of word. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2724"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af8aa311e02e87ce6afc74168253b5926" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::WordLeftEndExtend</definition>
        <argsstring>()</argsstring>
        <name>WordLeftEndExtend</name>
        <briefdescription>
<para>Move caret left one word, position cursor at end of word, extending selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2730"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a3fd89d0457dba6ec11dc251084b023ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::WordLeftExtend</definition>
        <argsstring>()</argsstring>
        <name>WordLeftExtend</name>
        <briefdescription>
<para>Move caret left one word extending selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2735"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a7a0cd4c5aa77fc3b9a4e64a56075a22c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::WordPartLeft</definition>
        <argsstring>()</argsstring>
        <name>WordPartLeft</name>
        <briefdescription>
<para>Move to the previous change in capitalisation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2740"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a542c023362fd69ed830312205d1765b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::WordPartLeftExtend</definition>
        <argsstring>()</argsstring>
        <name>WordPartLeftExtend</name>
        <briefdescription>
<para>Move to the previous change in capitalisation extending selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2746"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a17f07b597ba6f78edba3299d55cd8f0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::WordPartRight</definition>
        <argsstring>()</argsstring>
        <name>WordPartRight</name>
        <briefdescription>
<para>Move to the change next in capitalisation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2751"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a2fc12c9c741688bde4aaebb31c72e5d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::WordPartRightExtend</definition>
        <argsstring>()</argsstring>
        <name>WordPartRightExtend</name>
        <briefdescription>
<para>Move to the next change in capitalisation extending selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2757"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ab2d591e26e64d471b6bf23670747f7a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::WordRight</definition>
        <argsstring>()</argsstring>
        <name>WordRight</name>
        <briefdescription>
<para>Move caret right one word. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2762"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a76f215ddde10790de36f62b2075dc169" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::WordRightEnd</definition>
        <argsstring>()</argsstring>
        <name>WordRightEnd</name>
        <briefdescription>
<para>Move caret right one word, position cursor at end of word. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2767"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a94e2562fd4feb6c60aef3b84ed672e01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::WordRightEndExtend</definition>
        <argsstring>()</argsstring>
        <name>WordRightEndExtend</name>
        <briefdescription>
<para>Move caret right one word, position cursor at end of word, extending selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2773"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a0bb6af61d66ca7459d52ed451aad939a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::WordRightExtend</definition>
        <argsstring>()</argsstring>
        <name>WordRightExtend</name>
        <briefdescription>
<para>Move caret right one word extending selection to new caret position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2778"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aafea98346c64fce7375232412010adb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::WordStartPosition</definition>
        <argsstring>(int pos, bool onlyWordCharacters)</argsstring>
        <name>WordStartPosition</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>onlyWordCharacters</declname>
        </param>
        <briefdescription>
<para>Get position of start of word. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2783"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1afe6db16c2e8b1c7422c23989044d66e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::WrapCount</definition>
        <argsstring>(int line)</argsstring>
        <name>WrapCount</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>The number of display lines needed to wrap a document line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2788"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ad5d6fc9fc4a1362dfb1d048d77e0210b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::ZoomIn</definition>
        <argsstring>()</argsstring>
        <name>ZoomIn</name>
        <briefdescription>
<para>Magnify the displayed text by increasing the sizes by 1 point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2793"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a08c90b90ddb67c6bdb362474e294eba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::ZoomOut</definition>
        <argsstring>()</argsstring>
        <name>ZoomOut</name>
        <briefdescription>
<para>Make the displayed text smaller by decreasing the sizes by 1 point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2798"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af5409c5666f48c330eb52f992a000f79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetWrapIndentMode</definition>
        <argsstring>(int mode)</argsstring>
        <name>SetWrapIndentMode</name>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Sets how wrapped sublines are placed. </para>        </briefdescription>
        <detaileddescription>
<para>Default is fixed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2804"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a41cb053bb7c1a4190ccc1591f982b74e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetWrapIndentMode</definition>
        <argsstring>() const </argsstring>
        <name>GetWrapIndentMode</name>
        <briefdescription>
<para>Retrieve how wrapped sublines are placed. </para>        </briefdescription>
        <detaileddescription>
<para>Default is fixed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2809"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ac446ba410b79acc1c9eaa42584dff055" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetFirstVisibleLine</definition>
        <argsstring>(int lineDisplay)</argsstring>
        <name>SetFirstVisibleLine</name>
        <param>
          <type>int</type>
          <declname>lineDisplay</declname>
        </param>
        <briefdescription>
<para>Scroll so that a display line is at the top of the display. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2814"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a6700ede8c3e6885f9bdd73039478ffe2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::CopyAllowLine</definition>
        <argsstring>()</argsstring>
        <name>CopyAllowLine</name>
        <briefdescription>
<para>Copy the selection, if selection empty copy the line with the caret. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2821"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a31cc5670870607ddc63acdedcad1ffbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* wxStyledTextCtrl::GetCharacterPointer</definition>
        <argsstring>()</argsstring>
        <name>GetCharacterPointer</name>
        <briefdescription>
<para>Compact the document buffer and return a read-only pointer to the characters in the document. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2827"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a32d78b92db52a312d533dccafc6048f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetKeysUnicode</definition>
        <argsstring>(bool keysUnicode)</argsstring>
        <name>SetKeysUnicode</name>
        <param>
          <type>bool</type>
          <declname>keysUnicode</declname>
        </param>
        <briefdescription>
<para>Always interpret keyboard input as Unicode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2832"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae03b5c512534635dd8511a9b3c44a30f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetKeysUnicode</definition>
        <argsstring>() const </argsstring>
        <name>GetKeysUnicode</name>
        <briefdescription>
<para>Are keys always interpreted as Unicode? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2837"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aa5a90e1fec271eb4a6be5da6739d7d48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::IndicatorSetAlpha</definition>
        <argsstring>(int indicator, int alpha)</argsstring>
        <name>IndicatorSetAlpha</name>
        <param>
          <type>int</type>
          <declname>indicator</declname>
        </param>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>Set the alpha fill colour of the given indicator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2842"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a69edcaa53757325269f097487430dc8d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::IndicatorGetAlpha</definition>
        <argsstring>(int indicator) const </argsstring>
        <name>IndicatorGetAlpha</name>
        <param>
          <type>int</type>
          <declname>indicator</declname>
        </param>
        <briefdescription>
<para>Get the alpha fill colour of the given indicator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2847"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a095a5dc7299ff340410621baf3636597" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetExtraAscent</definition>
        <argsstring>(int extraAscent)</argsstring>
        <name>SetExtraAscent</name>
        <param>
          <type>int</type>
          <declname>extraAscent</declname>
        </param>
        <briefdescription>
<para>Set extra ascent for each line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2852"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae9de472b3cf14f4052b03320f16375de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetExtraAscent</definition>
        <argsstring>() const </argsstring>
        <name>GetExtraAscent</name>
        <briefdescription>
<para>Get extra ascent for each line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2857"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1adbb77f11a6ada3ae989ea37e58f3b15e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetExtraDescent</definition>
        <argsstring>(int extraDescent)</argsstring>
        <name>SetExtraDescent</name>
        <param>
          <type>int</type>
          <declname>extraDescent</declname>
        </param>
        <briefdescription>
<para>Set extra descent for each line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2862"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a5eacc57053552d5e35d9cdc568a45198" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetExtraDescent</definition>
        <argsstring>() const </argsstring>
        <name>GetExtraDescent</name>
        <briefdescription>
<para>Get extra descent for each line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2867"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a835511306369b74750c9421e7717a84d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetMarkerSymbolDefined</definition>
        <argsstring>(int markerNumber)</argsstring>
        <name>GetMarkerSymbolDefined</name>
        <param>
          <type>int</type>
          <declname>markerNumber</declname>
        </param>
        <briefdescription>
<para>Which symbol was defined for markerNumber with MarkerDefine. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2872"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ad66c7d820d12a5cc6f82aa72935fbbea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::MarginSetText</definition>
        <argsstring>(int line, const wxString &amp;text)</argsstring>
        <name>MarginSetText</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Set the text in the text margin for a line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2877"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a38844cc95c2c74cc3de5821e78757146" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxStyledTextCtrl::MarginGetText</definition>
        <argsstring>(int line) const </argsstring>
        <name>MarginGetText</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Get the text in the text margin for a line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2882"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae552ef3d00be362facd155efdbb06644" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::MarginSetStyle</definition>
        <argsstring>(int line, int style)</argsstring>
        <name>MarginSetStyle</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Set the style number for the text margin for a line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2887"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a89ed079381f546ef0719f02918506734" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::MarginGetStyle</definition>
        <argsstring>(int line) const </argsstring>
        <name>MarginGetStyle</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Get the style number for the text margin for a line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2892"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9b5d745fe8da43d83fed85baa7bfe0f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::MarginSetStyles</definition>
        <argsstring>(int line, const wxString &amp;styles)</argsstring>
        <name>MarginSetStyles</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>styles</declname>
        </param>
        <briefdescription>
<para>Set the style in the text margin for a line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2897"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1acae15a86c4716929b7d38439668496cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxStyledTextCtrl::MarginGetStyles</definition>
        <argsstring>(int line) const </argsstring>
        <name>MarginGetStyles</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Get the styles in the text margin for a line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2902"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ade9ece6d3f3a4373283c12b77f6469c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::MarginTextClearAll</definition>
        <argsstring>()</argsstring>
        <name>MarginTextClearAll</name>
        <briefdescription>
<para>Clear the margin text on all lines. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2907"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a07193d7b379e085991b840344293f4b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::MarginSetStyleOffset</definition>
        <argsstring>(int style)</argsstring>
        <name>MarginSetStyleOffset</name>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Get the start of the range of style numbers used for margin text. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2912"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a6e4f08253296b1614aba0d34304f2e7b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::MarginGetStyleOffset</definition>
        <argsstring>() const </argsstring>
        <name>MarginGetStyleOffset</name>
        <briefdescription>
<para>Get the start of the range of style numbers used for margin text. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2917"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aecd0b63c51816832642ecd2f44b00a87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AnnotationSetText</definition>
        <argsstring>(int line, const wxString &amp;text)</argsstring>
        <name>AnnotationSetText</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Set the annotation text for a line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2922"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a5f85232c07afbf7dad9b55f3ee90c0fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxStyledTextCtrl::AnnotationGetText</definition>
        <argsstring>(int line) const </argsstring>
        <name>AnnotationGetText</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Get the annotation text for a line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2927"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a67bfcd63c3e377996de8e0f6cea79494" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AnnotationSetStyle</definition>
        <argsstring>(int line, int style)</argsstring>
        <name>AnnotationSetStyle</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Set the style number for the annotations for a line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2932"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a3aa4803acdbfd10b2ad4d97f8f73389a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::AnnotationGetStyle</definition>
        <argsstring>(int line) const </argsstring>
        <name>AnnotationGetStyle</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Get the style number for the annotations for a line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2937"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a8644662a623a35c6f8970119cbc891ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AnnotationSetStyles</definition>
        <argsstring>(int line, const wxString &amp;styles)</argsstring>
        <name>AnnotationSetStyles</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>styles</declname>
        </param>
        <briefdescription>
<para>Set the annotation styles for a line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2942"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1abdc737cf5e4794044d5a4b09010d9487" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxStyledTextCtrl::AnnotationGetStyles</definition>
        <argsstring>(int line) const </argsstring>
        <name>AnnotationGetStyles</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Get the annotation styles for a line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2947"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ac48b486499d5e4855b312af113f51039" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::AnnotationGetLines</definition>
        <argsstring>(int line) const </argsstring>
        <name>AnnotationGetLines</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Get the number of annotation lines for a line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2952"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae5b50b8811ea4dca4fce022dcf97b457" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AnnotationClearAll</definition>
        <argsstring>()</argsstring>
        <name>AnnotationClearAll</name>
        <briefdescription>
<para>Clear the annotations from all lines. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2957"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a6e2c50e5cbc7de59f25bc4c00662c90d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AnnotationSetVisible</definition>
        <argsstring>(int visible)</argsstring>
        <name>AnnotationSetVisible</name>
        <param>
          <type>int</type>
          <declname>visible</declname>
        </param>
        <briefdescription>
<para>Set the visibility for the annotations for a view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2962"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a2f71545e39eace9ac3b59ef90d39ba9c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::AnnotationGetVisible</definition>
        <argsstring>() const </argsstring>
        <name>AnnotationGetVisible</name>
        <briefdescription>
<para>Get the visibility for the annotations for a view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2967"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af526a69f258363d5e6db9d75be291cdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AnnotationSetStyleOffset</definition>
        <argsstring>(int style)</argsstring>
        <name>AnnotationSetStyleOffset</name>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Get the start of the range of style numbers used for annotations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2972"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a1aa39b80c6846396d14647e6079b095b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::AnnotationGetStyleOffset</definition>
        <argsstring>() const </argsstring>
        <name>AnnotationGetStyleOffset</name>
        <briefdescription>
<para>Get the start of the range of style numbers used for annotations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2977"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a14353874dba30d73b1cde1f245e09c10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::AddUndoAction</definition>
        <argsstring>(int token, int flags)</argsstring>
        <name>AddUndoAction</name>
        <param>
          <type>int</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Add a container action to the undo stack. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2982"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a8f12562557819d7a5e00b3db2df5eee2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::CharPositionFromPoint</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>CharPositionFromPoint</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Find the position of a character from a point within the window. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2987"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae3a7cecfce77c22a8e1bc26393821125" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::CharPositionFromPointClose</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>CharPositionFromPointClose</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Find the position of a character from a point within the window. </para>        </briefdescription>
        <detaileddescription>
<para>Return wxSTC_INVALID_POSITION if not close to text. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2993"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ab747e3dc90cc75b4d706c2e7ee2a102e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetMultipleSelection</definition>
        <argsstring>(bool multipleSelection)</argsstring>
        <name>SetMultipleSelection</name>
        <param>
          <type>bool</type>
          <declname>multipleSelection</declname>
        </param>
        <briefdescription>
<para>Set whether multiple selections can be made. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="2998"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a1138b4de3d319596fe3df0b0cc31c6f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetMultipleSelection</definition>
        <argsstring>() const </argsstring>
        <name>GetMultipleSelection</name>
        <briefdescription>
<para>Whether multiple selections can be made. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3003"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a0a915649ec8b7a95afa2eed7752804d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetAdditionalSelectionTyping</definition>
        <argsstring>(bool additionalSelectionTyping)</argsstring>
        <name>SetAdditionalSelectionTyping</name>
        <param>
          <type>bool</type>
          <declname>additionalSelectionTyping</declname>
        </param>
        <briefdescription>
<para>Set whether typing can be performed into multiple selections. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3008"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a4c955f3bc85b35ba393caedf4443b2a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetAdditionalSelectionTyping</definition>
        <argsstring>() const </argsstring>
        <name>GetAdditionalSelectionTyping</name>
        <briefdescription>
<para>Whether typing can be performed into multiple selections. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3013"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a559040550cb01c794a3dd23942823e46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetAdditionalCaretsBlink</definition>
        <argsstring>(bool additionalCaretsBlink)</argsstring>
        <name>SetAdditionalCaretsBlink</name>
        <param>
          <type>bool</type>
          <declname>additionalCaretsBlink</declname>
        </param>
        <briefdescription>
<para>Set whether additional carets will blink. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3018"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a99dd3ac15eb4fe1e1f031f5b01b48c8d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetAdditionalCaretsBlink</definition>
        <argsstring>() const </argsstring>
        <name>GetAdditionalCaretsBlink</name>
        <briefdescription>
<para>Whether additional carets will blink. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3023"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ad3a25f9dcf379c4aa0686ec22dd838b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetAdditionalCaretsVisible</definition>
        <argsstring>(bool additionalCaretsBlink)</argsstring>
        <name>SetAdditionalCaretsVisible</name>
        <param>
          <type>bool</type>
          <declname>additionalCaretsBlink</declname>
        </param>
        <briefdescription>
<para>Set whether additional carets are visible. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3028"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a23e27c39ead70daccd78cffc697fb3f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStyledTextCtrl::GetAdditionalCaretsVisible</definition>
        <argsstring>() const </argsstring>
        <name>GetAdditionalCaretsVisible</name>
        <briefdescription>
<para>Whether additional carets are visible. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3033"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af42da665e889f8418ab19a4837474496" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetSelections</definition>
        <argsstring>() const </argsstring>
        <name>GetSelections</name>
        <briefdescription>
<para>How many selections are there? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3038"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a951210a57d6d2895e5977642007af9bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::ClearSelections</definition>
        <argsstring>()</argsstring>
        <name>ClearSelections</name>
        <briefdescription>
<para>Clear selections to a single empty stream selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3043"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a07b961b15bbec1b9dd39b4a496052eb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::AddSelection</definition>
        <argsstring>(int caret, int anchor)</argsstring>
        <name>AddSelection</name>
        <param>
          <type>int</type>
          <declname>caret</declname>
        </param>
        <param>
          <type>int</type>
          <declname>anchor</declname>
        </param>
        <briefdescription>
<para>Add a selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3048"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a4ebdadcd64a90f09c20ffc47226f4690" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetMainSelection</definition>
        <argsstring>(int selection)</argsstring>
        <name>SetMainSelection</name>
        <param>
          <type>int</type>
          <declname>selection</declname>
        </param>
        <briefdescription>
<para>Set the main selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3053"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ad9a7822aa46eac8fe5fbbac0f250d5dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetMainSelection</definition>
        <argsstring>() const </argsstring>
        <name>GetMainSelection</name>
        <briefdescription>
<para>Which selection is the main selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3058"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a197a8be506adcd0fd011fd265150dbbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetSelectionNCaret</definition>
        <argsstring>(int selection, int pos)</argsstring>
        <name>SetSelectionNCaret</name>
        <param>
          <type>int</type>
          <declname>selection</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3060"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a32de07d812552f5227c0f2f4992deda3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetSelectionNCaret</definition>
        <argsstring>(int selection) const </argsstring>
        <name>GetSelectionNCaret</name>
        <param>
          <type>int</type>
          <declname>selection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3061"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af1555d1ff8f5e75be3a0b2ce17de2791" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetSelectionNAnchor</definition>
        <argsstring>(int selection, int posAnchor)</argsstring>
        <name>SetSelectionNAnchor</name>
        <param>
          <type>int</type>
          <declname>selection</declname>
        </param>
        <param>
          <type>int</type>
          <declname>posAnchor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3062"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a3ae49554cf1564e357afcf4276aba3a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetSelectionNAnchor</definition>
        <argsstring>(int selection) const </argsstring>
        <name>GetSelectionNAnchor</name>
        <param>
          <type>int</type>
          <declname>selection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3063"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ab287c51b65add3b900a23b11c4f2b04f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetSelectionNCaretVirtualSpace</definition>
        <argsstring>(int selection, int space)</argsstring>
        <name>SetSelectionNCaretVirtualSpace</name>
        <param>
          <type>int</type>
          <declname>selection</declname>
        </param>
        <param>
          <type>int</type>
          <declname>space</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3064"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a69e15ff1b9d015bcba01a4943fa0d85e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetSelectionNCaretVirtualSpace</definition>
        <argsstring>(int selection) const </argsstring>
        <name>GetSelectionNCaretVirtualSpace</name>
        <param>
          <type>int</type>
          <declname>selection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3065"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ac2be62fa3b37860deb4225fa45bb9205" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetSelectionNAnchorVirtualSpace</definition>
        <argsstring>(int selection, int space)</argsstring>
        <name>SetSelectionNAnchorVirtualSpace</name>
        <param>
          <type>int</type>
          <declname>selection</declname>
        </param>
        <param>
          <type>int</type>
          <declname>space</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3066"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a7bb73d0bcb61742e03e24fcfd99559ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetSelectionNAnchorVirtualSpace</definition>
        <argsstring>(int selection) const </argsstring>
        <name>GetSelectionNAnchorVirtualSpace</name>
        <param>
          <type>int</type>
          <declname>selection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3067"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1af1cc7f008b6d8727c581ef7311ccec97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetSelectionNStart</definition>
        <argsstring>(int selection, int pos)</argsstring>
        <name>SetSelectionNStart</name>
        <param>
          <type>int</type>
          <declname>selection</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Sets the position that starts the selection - this becomes the anchor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3072"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9919070dc0d6d730f323192c104dd16f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetSelectionNStart</definition>
        <argsstring>(int selection) const </argsstring>
        <name>GetSelectionNStart</name>
        <param>
          <type>int</type>
          <declname>selection</declname>
        </param>
        <briefdescription>
<para>Returns the position at the start of the selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3077"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9ad8211f8909203df9e6b9cabe132815" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetSelectionNEnd</definition>
        <argsstring>(int selection, int pos)</argsstring>
        <name>SetSelectionNEnd</name>
        <param>
          <type>int</type>
          <declname>selection</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Sets the position that ends the selection - this becomes the currentPosition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3082"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a9215efa3e2e13edcbb9e3a9942e04f17" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetSelectionNEnd</definition>
        <argsstring>(int selection) const </argsstring>
        <name>GetSelectionNEnd</name>
        <param>
          <type>int</type>
          <declname>selection</declname>
        </param>
        <briefdescription>
<para>Returns the position at the end of the selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3087"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a0b69b45c7ae0dbe9765e4fe662c6630e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetRectangularSelectionCaret</definition>
        <argsstring>(int pos)</argsstring>
        <name>SetRectangularSelectionCaret</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3089"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a3a83d54dc7edd11bf26f99d5f9d225e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetRectangularSelectionCaret</definition>
        <argsstring>() const </argsstring>
        <name>GetRectangularSelectionCaret</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3090"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a0872a1fb54b5e28e4e841809b821f830" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetRectangularSelectionAnchor</definition>
        <argsstring>(int posAnchor)</argsstring>
        <name>SetRectangularSelectionAnchor</name>
        <param>
          <type>int</type>
          <declname>posAnchor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3091"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae60165a2cf98246075965c6c40ade6a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetRectangularSelectionAnchor</definition>
        <argsstring>() const </argsstring>
        <name>GetRectangularSelectionAnchor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3092"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ad762ea42339e7d3faea6ff8b71773e39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetRectangularSelectionCaretVirtualSpace</definition>
        <argsstring>(int space)</argsstring>
        <name>SetRectangularSelectionCaretVirtualSpace</name>
        <param>
          <type>int</type>
          <declname>space</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3093"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a94779b75ca8a4c1b9eb568f15649ef83" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetRectangularSelectionCaretVirtualSpace</definition>
        <argsstring>() const </argsstring>
        <name>GetRectangularSelectionCaretVirtualSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3094"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ab5fdb7c5973a2f4585027b426430c573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetRectangularSelectionAnchorVirtualSpace</definition>
        <argsstring>(int space)</argsstring>
        <name>SetRectangularSelectionAnchorVirtualSpace</name>
        <param>
          <type>int</type>
          <declname>space</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3095"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a8614807c4b20d5cd850146251eedd729" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetRectangularSelectionAnchorVirtualSpace</definition>
        <argsstring>() const </argsstring>
        <name>GetRectangularSelectionAnchorVirtualSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3096"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a555832e34d6394ca922dc9ad0341f84d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetVirtualSpaceOptions</definition>
        <argsstring>(int virtualSpaceOptions)</argsstring>
        <name>SetVirtualSpaceOptions</name>
        <param>
          <type>int</type>
          <declname>virtualSpaceOptions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3097"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a4c3ddf3fcd3fdb81b1dfef27b133cbdf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetVirtualSpaceOptions</definition>
        <argsstring>() const </argsstring>
        <name>GetVirtualSpaceOptions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3098"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a30441f30d7a1cce818205f819f1c7c91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetRectangularSelectionModifier</definition>
        <argsstring>(int modifier)</argsstring>
        <name>SetRectangularSelectionModifier</name>
        <param>
          <type>int</type>
          <declname>modifier</declname>
        </param>
        <briefdescription>
<para>Select the modifier key to use for mouse-based rectangular selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3103"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a0e208a31a981da8a12fcaac3d9e94d23" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetRectangularSelectionModifier</definition>
        <argsstring>() const </argsstring>
        <name>GetRectangularSelectionModifier</name>
        <briefdescription>
<para>Get the modifier key used for rectangular selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3108"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a1db22a164853318d8f10e249651cc119" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetAdditionalSelForeground</definition>
        <argsstring>(const wxColour &amp;fore)</argsstring>
        <name>SetAdditionalSelForeground</name>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>fore</declname>
        </param>
        <briefdescription>
<para>Set the foreground colour of additional selections. </para>        </briefdescription>
        <detaileddescription>
<para>Must have previously called SetSelFore with non-zero first argument for this to have an effect. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3115"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a4aec08b338247133812c9657483242f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetAdditionalSelBackground</definition>
        <argsstring>(const wxColour &amp;back)</argsstring>
        <name>SetAdditionalSelBackground</name>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>back</declname>
        </param>
        <briefdescription>
<para>Set the background colour of additional selections. </para>        </briefdescription>
        <detaileddescription>
<para>Must have previously called SetSelBack with non-zero first argument for this to have an effect. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3122"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a3b87020382f1b185c30cb40acfcbe66c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetAdditionalSelAlpha</definition>
        <argsstring>(int alpha)</argsstring>
        <name>SetAdditionalSelAlpha</name>
        <param>
          <type>int</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>Set the alpha of the selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3127"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1ae6abfec00ca2ee44fbdfad7437d285f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxStyledTextCtrl::GetAdditionalSelAlpha</definition>
        <argsstring>() const </argsstring>
        <name>GetAdditionalSelAlpha</name>
        <briefdescription>
<para>Get the alpha of the selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3132"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a3754bef6b4bcc2ab6929a63e864c35da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SetAdditionalCaretForeground</definition>
        <argsstring>(const wxColour &amp;fore)</argsstring>
        <name>SetAdditionalCaretForeground</name>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>fore</declname>
        </param>
        <briefdescription>
<para>Set the foreground colour of additional carets. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3137"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a31ac58ec2d1b6064938569647446d7ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_colour" kindref="compound">wxColour</ref></type>
        <definition>wxColour wxStyledTextCtrl::GetAdditionalCaretForeground</definition>
        <argsstring>() const </argsstring>
        <name>GetAdditionalCaretForeground</name>
        <briefdescription>
<para>Get the foreground colour of additional carets. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3142"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a152d87c865cd3683a018cbf6c9e4dfc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::RotateSelection</definition>
        <argsstring>()</argsstring>
        <name>RotateSelection</name>
        <briefdescription>
<para>Set the main selection to the next selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3147"/>
      </memberdef>
      <memberdef kind="function" id="classwx_styled_text_ctrl_1aa22a09d093a4ac8e91b1aa8dfc743ddb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStyledTextCtrl::SwapMainAnchorCaret</definition>
        <argsstring>()</argsstring>
        <name>SwapMainAnchorCaret</name>
        <briefdescription>
<para>Swap that caret and anchor of the main selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3152"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_styled_text_ctrl_1a79969628d9be422e5af9735e1aafdc00" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_version_info" kindref="compound">wxVersionInfo</ref></type>
        <definition>static wxVersionInfo wxStyledTextCtrl::GetLibraryVersionInfo</definition>
        <argsstring>()</argsstring>
        <name>GetLibraryVersionInfo</name>
        <briefdescription>
<para>Get Scintilla library version information. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.9.2 </para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_version_info" kindref="compound">wxVersionInfo</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="3160"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A wxWidgets implementation of the Scintilla source code editing component. </para>    </briefdescription>
    <detaileddescription>
<para>As well as features found in standard text editing components, Scintilla includes features especially useful when editing and debugging source code. These include support for syntax styling, error indicators, code completion and call tips.</para><para>The selection margin can contain markers like those used in debuggers to indicate breakpoints and the current line. Styling choices are more open than with many editors, allowing the use of proportional fonts, bold and italics, multiple foreground and background colours and multiple fonts.</para><para><ref refid="classwx_styled_text_ctrl" kindref="compound">wxStyledTextCtrl</ref> is a 1 to 1 mapping of &quot;raw&quot; scintilla interface, whose documentation can be found in the Scintilla website (<ulink url="http://www.scintilla.org/">http://www.scintilla.org/</ulink>).</para><para><heading level="2">Events emitted by this class</heading>
</para><para>The following event handler macros redirect the events to member function handlers &apos;<bold>func</bold>&apos; with prototypes like: void<nonbreakablespace/>handlerFuncName(<ref refid="classwx_styled_text_event" kindref="compound">wxStyledTextEvent</ref>&amp;<nonbreakablespace/>event)Event macros for events emitted by this class: <itemizedlist>
<listitem><para>EVT_STC_CHANGE(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_STYLENEEDED(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_CHARADDED(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_SAVEPOINTREACHED(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_SAVEPOINTLEFT(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_ROMODIFYATTEMPT(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_KEY(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_DOUBLECLICK(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_UPDATEUI(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_MODIFIED(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_MACRORECORD(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_MARGINCLICK(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_NEEDSHOWN(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_PAINTED(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_USERLISTSELECTION(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_URIDROPPED(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_DWELLSTART(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_DWELLEND(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_START_DRAG(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_DRAG_OVER(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_DO_DROP(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_ZOOM(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_HOTSPOT_CLICK(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_HOTSPOT_DCLICK(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_CALLTIP_CLICK(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_AUTOCOMP_SELECTION(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_INDICATOR_CLICK(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_INDICATOR_RELEASE(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_AUTOCOMP_CANCELLED(id,  fn): TOWRITE </para></listitem>
<listitem><para>EVT_STC_AUTOCOMP_CHAR_DELETED(id,  fn): TOWRITE </para></listitem>
</itemizedlist>
<heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__stc" kindref="compound">Scintilla Text Editor</ref></para><para><simplesect kind="see"><para><ref refid="classwx_styled_text_event" kindref="compound">wxStyledTextEvent</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="10792">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="10791">
        <label>wxEvtHandler</label>
        <link refid="classwx_evt_handler"/>
        <childnode refid="10792" relation="public-inheritance">
        </childnode>
        <childnode refid="10793" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10793">
        <label>wxTrackable</label>
        <link refid="classwx_trackable"/>
      </node>
      <node id="10789">
        <label>wxControl</label>
        <link refid="classwx_control"/>
        <childnode refid="10790" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10790">
        <label>wxWindow</label>
        <link refid="classwx_window"/>
        <childnode refid="10791" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10788">
        <label>wxStyledTextCtrl</label>
        <link refid="classwx_styled_text_ctrl"/>
        <childnode refid="10789" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10798">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="10799" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="10797">
        <label>wxEvtHandler</label>
        <link refid="classwx_evt_handler"/>
        <childnode refid="10798" relation="public-inheritance">
        </childnode>
        <childnode refid="10800" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10800">
        <label>wxTrackable</label>
        <link refid="classwx_trackable"/>
      </node>
      <node id="10795">
        <label>wxControl</label>
        <link refid="classwx_control"/>
        <childnode refid="10796" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10796">
        <label>wxWindow</label>
        <link refid="classwx_window"/>
        <childnode refid="10797" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10794">
        <label>wxStyledTextCtrl</label>
        <link refid="classwx_styled_text_ctrl"/>
        <childnode refid="10795" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10799">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" line="338" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/stc/stc.h" bodystart="337" bodyend="3161"/>
    <listofallmembers>
      <member refid="classwx_window_1a3afbd49b1ea2f8275e3600dcac102923" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>AcceptsFocus</name></member>
      <member refid="classwx_window_1a2370bdd3ab08e7ef3c7555c6aa8301b8" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>AcceptsFocusFromKeyboard</name></member>
      <member refid="classwx_window_1ac7ed96693517630f4d2e99265b76d1a9" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>AcceptsFocusRecursively</name></member>
      <member refid="classwx_window_1abf60159278059a5bb397eb8647227bb3" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>AddChild</name></member>
      <member refid="classwx_evt_handler_1a7dc3c701781f4044372049de5004137e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AddFilter</name></member>
      <member refid="classwx_window_1a774b5b5548a6258727b5e2099e63ae9a" prot="protected" virt="virtual"><scope>wxStyledTextCtrl</scope><name>AddPendingEvent</name></member>
      <member refid="classwx_styled_text_ctrl_1a253764689ee3a0448c159f05b683c050" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AddRefDocument</name></member>
      <member refid="classwx_styled_text_ctrl_1a07b961b15bbec1b9dd39b4a496052eb8" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AddSelection</name></member>
      <member refid="classwx_styled_text_ctrl_1acf84b22ebe77e57927ac9bcbcec09a5e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AddStyledText</name></member>
      <member refid="classwx_styled_text_ctrl_1ae6a49933178e52a9312741c06a7bcfb3" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AddText</name></member>
      <member refid="classwx_styled_text_ctrl_1aff7ad6c266575377b69a94dc115ed10a" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AddTextRaw</name></member>
      <member refid="classwx_styled_text_ctrl_1a14353874dba30d73b1cde1f245e09c10" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AddUndoAction</name></member>
      <member refid="classwx_styled_text_ctrl_1a4af0b26e83a158ba2d444bcb42fe90be" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Allocate</name></member>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AllocExclusive</name></member>
      <member refid="classwx_window_1aae29552806a328c6a55ef8f07647f5ba" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>AlwaysShowScrollbars</name></member>
      <member refid="classwx_styled_text_ctrl_1ae5b50b8811ea4dca4fce022dcf97b457" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AnnotationClearAll</name></member>
      <member refid="classwx_styled_text_ctrl_1ac48b486499d5e4855b312af113f51039" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AnnotationGetLines</name></member>
      <member refid="classwx_styled_text_ctrl_1a3aa4803acdbfd10b2ad4d97f8f73389a" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AnnotationGetStyle</name></member>
      <member refid="classwx_styled_text_ctrl_1a1aa39b80c6846396d14647e6079b095b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AnnotationGetStyleOffset</name></member>
      <member refid="classwx_styled_text_ctrl_1abdc737cf5e4794044d5a4b09010d9487" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AnnotationGetStyles</name></member>
      <member refid="classwx_styled_text_ctrl_1a5f85232c07afbf7dad9b55f3ee90c0fe" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AnnotationGetText</name></member>
      <member refid="classwx_styled_text_ctrl_1a2f71545e39eace9ac3b59ef90d39ba9c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AnnotationGetVisible</name></member>
      <member refid="classwx_styled_text_ctrl_1a67bfcd63c3e377996de8e0f6cea79494" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AnnotationSetStyle</name></member>
      <member refid="classwx_styled_text_ctrl_1af526a69f258363d5e6db9d75be291cdd" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AnnotationSetStyleOffset</name></member>
      <member refid="classwx_styled_text_ctrl_1a8644662a623a35c6f8970119cbc891ed" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AnnotationSetStyles</name></member>
      <member refid="classwx_styled_text_ctrl_1aecd0b63c51816832642ecd2f44b00a87" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AnnotationSetText</name></member>
      <member refid="classwx_styled_text_ctrl_1a6e2c50e5cbc7de59f25bc4c00662c90d" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AnnotationSetVisible</name></member>
      <member refid="classwx_styled_text_ctrl_1a9ece0e2d645daec2e36b26111ff27fac" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>AppendText</name></member>
      <member refid="classwx_styled_text_ctrl_1a44c5ff0ac81ff7496e84e8eb4e691091" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AppendTextRaw</name></member>
      <member refid="classwx_styled_text_ctrl_1a0f42da320f51676cefb9c96a50076a3e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompActive</name></member>
      <member refid="classwx_styled_text_ctrl_1a67a96291c515f843bdb50ff2befbe04e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompCancel</name></member>
      <member refid="classwx_styled_text_ctrl_1ae73acee3f1f2e5009574a4d58dc30899" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompComplete</name></member>
      <member refid="classwx_styled_text_ctrl_1a63e576887bc5ce730dd977fe692138a7" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompGetAutoHide</name></member>
      <member refid="classwx_styled_text_ctrl_1a9dff390dae42510b1186fb132d5cb2a8" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompGetCancelAtStart</name></member>
      <member refid="classwx_styled_text_ctrl_1a5426442ed540535279e7789f6f2c56e2" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompGetChooseSingle</name></member>
      <member refid="classwx_styled_text_ctrl_1a586f70b655d6502ff06b0aa21e29a19d" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompGetCurrent</name></member>
      <member refid="classwx_styled_text_ctrl_1af7d3537cef242b7938ad2c7293a58914" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompGetDropRestOfWord</name></member>
      <member refid="classwx_styled_text_ctrl_1a708057881fe7ed927c48dd9302306093" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompGetIgnoreCase</name></member>
      <member refid="classwx_styled_text_ctrl_1a48fb68ee2ca2ad53fec892ba41656799" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompGetMaxHeight</name></member>
      <member refid="classwx_styled_text_ctrl_1af198c2518ed4a847a82676ae414e33dd" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompGetMaxWidth</name></member>
      <member refid="classwx_styled_text_ctrl_1ae21c4c6c0706cb3aa6c532c5486f6bbe" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompGetSeparator</name></member>
      <member refid="classwx_styled_text_ctrl_1a2a7b167414763baa480cbe97b49ba01b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompGetTypeSeparator</name></member>
      <member refid="classwx_styled_text_ctrl_1ab26825a33c6bc6a7c301a8406c5c6f0e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompPosStart</name></member>
      <member refid="classwx_styled_text_ctrl_1a83e1f2434cf86b7321333ef90c53bd21" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompSelect</name></member>
      <member refid="classwx_styled_text_ctrl_1a3f11adf70e6e0ee121d3375cdfb4c455" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompSetAutoHide</name></member>
      <member refid="classwx_styled_text_ctrl_1a1296efd068f325b21941c9cad968edd5" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompSetCancelAtStart</name></member>
      <member refid="classwx_styled_text_ctrl_1a14bef81d58d81c83e65e3aa2c2b07ce5" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompSetChooseSingle</name></member>
      <member refid="classwx_styled_text_ctrl_1a9430ffe5d457d8c2c168863a6c87cb0e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompSetDropRestOfWord</name></member>
      <member refid="classwx_styled_text_ctrl_1a17a74347096943bda00e5e091b264483" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompSetFillUps</name></member>
      <member refid="classwx_styled_text_ctrl_1abe46b21c1195b2c81166f39d771b3335" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompSetIgnoreCase</name></member>
      <member refid="classwx_styled_text_ctrl_1a3a39dd3ef96c7953bd9aa7fdfbc8943d" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompSetMaxHeight</name></member>
      <member refid="classwx_styled_text_ctrl_1a97b1dc83f63df3d5cff55e98ac8d8f42" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompSetMaxWidth</name></member>
      <member refid="classwx_styled_text_ctrl_1a82e788eb1f8ddfaf57250e6a08f952c2" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompSetSeparator</name></member>
      <member refid="classwx_styled_text_ctrl_1ad4b09dc62d17ca6b4edcdb6cf8347ab2" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompSetTypeSeparator</name></member>
      <member refid="classwx_styled_text_ctrl_1a442d3beba06d3791c749f20dc8c91ba5" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompShow</name></member>
      <member refid="classwx_styled_text_ctrl_1a521ecbc5dd6a7d3127b48b52ea4abd76" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>AutoCompStops</name></member>
      <member refid="classwx_styled_text_ctrl_1a5d3e32e591c11634eeaf5e912b922b36" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>BackTab</name></member>
      <member refid="classwx_styled_text_ctrl_1a505c65bf4a294cfa33834027cdafa28f" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>BeginUndoAction</name></member>
      <member refid="classwx_evt_handler_1a84b1e446053bda8f76f13336839e8b64" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Bind</name></member>
      <member refid="classwx_evt_handler_1a95520e770e157ef93d1d60e03db66e5c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Bind</name></member>
      <member refid="classwx_styled_text_ctrl_1abe05b7096219a2224bad2225eed45263" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>BraceBadLight</name></member>
      <member refid="classwx_styled_text_ctrl_1acb951c57588eab12ed020b2fcc5ea140" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>BraceHighlight</name></member>
      <member refid="classwx_styled_text_ctrl_1a3a7af58ee7b9741c87d2daed158bc65e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>BraceMatch</name></member>
      <member refid="classwx_window_1a100905524d330cfd9620fd726e378066" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CacheBestSize</name></member>
      <member refid="classwx_styled_text_ctrl_1aa984b16dce33a4aa9547c2bc7fe22fd3" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CallTipActive</name></member>
      <member refid="classwx_styled_text_ctrl_1a9340360cc2e7c12ee9d16c1993390c1b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CallTipCancel</name></member>
      <member refid="classwx_styled_text_ctrl_1a672c4eff3e808305adfb02b5894e4f61" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CallTipPosAtStart</name></member>
      <member refid="classwx_styled_text_ctrl_1a02818a9bd35154feea5ac55dbf9358df" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CallTipSetBackground</name></member>
      <member refid="classwx_styled_text_ctrl_1a103c96e588c40600d360f0fc04496123" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CallTipSetForeground</name></member>
      <member refid="classwx_styled_text_ctrl_1afc1fa68a4f485d169fa664c9fc9d8d64" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CallTipSetForegroundHighlight</name></member>
      <member refid="classwx_styled_text_ctrl_1ac7631d41ebf3bd8c7dea4918dfa609b9" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CallTipSetHighlight</name></member>
      <member refid="classwx_styled_text_ctrl_1a8a21bb9df8e5116b7230c545f54cf9f2" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CallTipShow</name></member>
      <member refid="classwx_styled_text_ctrl_1aee7c127fb40e52bbaa3b374ebe8e1668" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CallTipUseStyle</name></member>
      <member refid="classwx_styled_text_ctrl_1a9c91e02fc109334ba435b2fca8422508" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Cancel</name></member>
      <member refid="classwx_styled_text_ctrl_1a940379b00be9c35d8cba3d2489b0b2b3" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>CanPaste</name></member>
      <member refid="classwx_styled_text_ctrl_1adb8ab100fe4d9aa3a54e0902001e2c92" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>CanRedo</name></member>
      <member refid="classwx_window_1a179f9a770f8c835f279923d2cbe5d766" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CanScroll</name></member>
      <member refid="classwx_window_1a64f7f6fb75bf4b7281e1d33542d523c7" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>CanSetTransparent</name></member>
      <member refid="classwx_styled_text_ctrl_1a7821def2a39dea20a374837ec077a59d" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>CanUndo</name></member>
      <member refid="classwx_window_1a5c72c6260a73ef77bb0b1f7ec85fcfef" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CaptureMouse</name></member>
      <member refid="classwx_window_1a06c0ecb262995b40083bfb446a6cff99" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Center</name></member>
      <member refid="classwx_window_1a2dc4e0a85d33fc55cc9650eaea1da0a4" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CenterOnParent</name></member>
      <member refid="classwx_window_1a4a1819eeee3f2143cdde4f329ffde787" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Centre</name></member>
      <member refid="classwx_window_1ab8e9b91b0e2db344fd71259616dfd433" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CentreOnParent</name></member>
      <member refid="classwx_styled_text_ctrl_1a2c98ff8de0fcb3c59aae4df1013cbf49" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CharLeft</name></member>
      <member refid="classwx_styled_text_ctrl_1ad7d6edfd400aa811567c301789f3f99f" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CharLeftExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1ab8c7c791c37ad158fa356a6c2385d5b1" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CharLeftRectExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1a8f12562557819d7a5e00b3db2df5eee2" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CharPositionFromPoint</name></member>
      <member refid="classwx_styled_text_ctrl_1ae3a7cecfce77c22a8e1bc26393821125" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CharPositionFromPointClose</name></member>
      <member refid="classwx_styled_text_ctrl_1aa3e5fe3051d46c097b0610ae4b66775e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CharRight</name></member>
      <member refid="classwx_styled_text_ctrl_1a15f0635c531037dda30bc140041e2476" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CharRightExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1a6f3e1f21338c2389db68efcdd94868de" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CharRightRectExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1af5b45963d561c61f8a983f6c6e3078ec" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ChooseCaretX</name></member>
      <member refid="classwx_styled_text_ctrl_1a7e12bc89b919c1fb35cdfbdc01bb63c7" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>Clear</name></member>
      <member refid="classwx_styled_text_ctrl_1af771cdc0e3b8d85c1038ba51ef33cdae" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ClearAll</name></member>
      <member refid="classwx_window_1a61e833684ee5c89775e91e88be1a9a52" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>ClearBackground</name></member>
      <member refid="classwx_styled_text_ctrl_1a9cfd5783fd85eaa636ce31994af57303" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ClearDocumentStyle</name></member>
      <member refid="classwx_styled_text_ctrl_1ae93ebfa2f583e576482cf10c8307250e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ClearRegisteredImages</name></member>
      <member refid="classwx_styled_text_ctrl_1a951210a57d6d2895e5977642007af9bb" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ClearSelections</name></member>
      <member refid="classwx_window_1a29eac611e5f6b47db82bb4dd5450ba3d" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ClientToScreen</name></member>
      <member refid="classwx_window_1a7de852b144210b93b690189e99dbe1df" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ClientToScreen</name></member>
      <member refid="classwx_window_1a693fffbbb7ad5f36a5f442703396dafa" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>ClientToWindowSize</name></member>
      <member refid="classwx_object_1a1d39f1d3650fe0982c9a1abe7f9fe7b7" prot="protected" virt="virtual"><scope>wxStyledTextCtrl</scope><name>CloneRefData</name></member>
      <member refid="classwx_window_1a3e44f4a494fc9ef4346c4fba70c8de0c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Close</name></member>
      <member refid="classwx_styled_text_ctrl_1abf78d20a413c8e95c97ede19e27fcbe9" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CmdKeyAssign</name></member>
      <member refid="classwx_styled_text_ctrl_1a661022247d0eab8d150641e7d5a66665" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CmdKeyClear</name></member>
      <member refid="classwx_styled_text_ctrl_1afa77c7e8cda7cc91a3480a54cecf4504" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CmdKeyClearAll</name></member>
      <member refid="classwx_styled_text_ctrl_1a248fc7296e539353e5617940685bea49" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CmdKeyExecute</name></member>
      <member refid="classwx_styled_text_ctrl_1ac6c7f32218faea6b29168464479f6816" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Colourise</name></member>
      <member refid="classwx_control_1a8cd7ac81debaf506d6d146528c3d9a82" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>Command</name></member>
      <member refid="classwx_evt_handler_1a78719e8b82c9f9c6e4056b3449df1943" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Connect</name></member>
      <member refid="classwx_evt_handler_1a1e8b5fc4c7e7f6d32d40bc00d4108ba4" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Connect</name></member>
      <member refid="classwx_evt_handler_1aa290d9b67348e74c1da8497955a4e35c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Connect</name></member>
      <member refid="classwx_window_1acb6787b6c3c314f9e015658a89ad0265" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ConvertDialogToPixels</name></member>
      <member refid="classwx_window_1a3daf76b93f648c68224e6ccd8095066b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ConvertDialogToPixels</name></member>
      <member refid="classwx_styled_text_ctrl_1a32d7242ddf6aa9c4e317821a30207550" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ConvertEOLs</name></member>
      <member refid="classwx_window_1a449aac6a24f1d14b1a82b58003447dfe" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ConvertPixelsToDialog</name></member>
      <member refid="classwx_window_1afd955ce9d25ec26a115bfb794b1c7d8b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ConvertPixelsToDialog</name></member>
      <member refid="classwx_styled_text_ctrl_1adf0884482883d591e82c266c50cbdd34" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>Copy</name></member>
      <member refid="classwx_styled_text_ctrl_1a6700ede8c3e6885f9bdd73039478ffe2" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CopyAllowLine</name></member>
      <member refid="classwx_styled_text_ctrl_1a305eccb44894029e809cfa31d68e91ab" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CopyRange</name></member>
      <member refid="classwx_styled_text_ctrl_1aecbe5e763b12d7b744c1c77dbee2fe2b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CopyText</name></member>
      <member refid="classwx_styled_text_ctrl_1ac9fec1a8bb67fcb8d89751db19583e92" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Create</name></member>
      <member refid="classwx_control_1abe23789c94c86907463a0e8434be822a" prot="public" virt="non-virtual" ambiguityscope="wxControl::"><scope>wxStyledTextCtrl</scope><name>Create</name></member>
      <member refid="classwx_styled_text_ctrl_1a3f351523d7a8672305ca0ab368113ece" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>CreateDocument</name></member>
      <member refid="classwx_object_1a95c6a5e4e1e03ff23c7b9efe4cff0c1a" prot="protected" virt="virtual"><scope>wxStyledTextCtrl</scope><name>CreateRefData</name></member>
      <member refid="classwx_styled_text_ctrl_1ad3c85fd43a71c28ffeb188cfcc7d102b" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>Cut</name></member>
      <member refid="classwx_styled_text_ctrl_1a229e837b1bc6e3b3b713eb8e83650812" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>DeleteBack</name></member>
      <member refid="classwx_styled_text_ctrl_1a9085f5a5a938ac29aa3a6b47c4f13a22" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>DeleteBackNotLine</name></member>
      <member refid="classwx_evt_handler_1a6e7f9cf4ebd0623c1d94979855d096f8" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>DeletePendingEvents</name></member>
      <member refid="classwx_styled_text_ctrl_1a703b45e05f6be8ae614ca60a5b36177d" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>DelLineLeft</name></member>
      <member refid="classwx_styled_text_ctrl_1abd5b23cb5d54f06928002b50e96313ac" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>DelLineRight</name></member>
      <member refid="classwx_styled_text_ctrl_1ace37594e87afefdd579f7a20444e2898" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>DelWordLeft</name></member>
      <member refid="classwx_styled_text_ctrl_1a6d59400c2bf5dc56876e5f51e9ae4059" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>DelWordRight</name></member>
      <member refid="classwx_window_1a6bf0c5be864544d9ce0560087667b7fc" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>Destroy</name></member>
      <member refid="classwx_window_1aff47b32c8d42d515ea0bb6a6c2fea917" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>DestroyChildren</name></member>
      <member refid="classwx_window_1a26d7329a9a753fa0445501f01f66c41e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Disable</name></member>
      <member refid="classwx_evt_handler_1a13061cf0ed01ac10a804ac057ef4bdbc" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Disconnect</name></member>
      <member refid="classwx_evt_handler_1a2f171e19444b9c4034c5e11f24fa9c91" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Disconnect</name></member>
      <member refid="classwx_evt_handler_1a16a6f823853e4b74b43dd9a2cf3abee6" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Disconnect</name></member>
      <member refid="classwx_window_1a2d10b472a4962d1c852c83d55252c44b" prot="protected" virt="virtual"><scope>wxStyledTextCtrl</scope><name>DoCentre</name></member>
      <member refid="classwx_styled_text_ctrl_1a87ecbf20b71b8e470cb6732aba624b73" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>DocLineFromVisible</name></member>
      <member refid="classwx_styled_text_ctrl_1adefe3471b22ee1df8982d62a2fd45029" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>DocumentEnd</name></member>
      <member refid="classwx_styled_text_ctrl_1a59425a502218d7aa9b7b5ac857602cf6" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>DocumentEndExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1ab53f0b56e7826c6f4e7753ddbced0e15" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>DocumentStart</name></member>
      <member refid="classwx_styled_text_ctrl_1a7d0ba468af83c82dcad8265b1d6670b3" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>DocumentStartExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1af6d73028983c5042aa4dbd8297e754b2" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>DoDragOver</name></member>
      <member refid="classwx_styled_text_ctrl_1a8e8fa7c1cc7da1fddf51c8715f1db178" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>DoDropText</name></member>
      <member refid="classwx_window_1a01e7604ab0f0b2b1a8e322a630a4669e" prot="protected" virt="virtual"><scope>wxStyledTextCtrl</scope><name>DoGetBestSize</name></member>
      <member refid="classwx_window_1ae8a84a80645e99f4d24a22e5c386f626" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>DoUpdateWindowUI</name></member>
      <member refid="classwx_window_1a7e7015bc61bd79b6821d2dccaecf9eda" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>DragAcceptFiles</name></member>
      <member refid="classwx_styled_text_ctrl_1a76148bfd7624f43735dccc69a378ee29" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>EditToggleOvertype</name></member>
      <member refid="classwx_control_1a0bb834cae2a8986aceddb89f84ef4ed1" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Ellipsize</name></member>
      <member refid="classwx_styled_text_ctrl_1afa14ec48fb24337e74f1650fa16749ec" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>EmptyUndoBuffer</name></member>
      <member refid="classwx_window_1a4e933aa891f42fbb3b87438057c573af" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>Enable</name></member>
      <member refid="classwx_styled_text_ctrl_1afe2fdcd1acd46e57cb26e8d4b16833a3" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>EndUndoAction</name></member>
      <member refid="classwx_styled_text_ctrl_1a9a2cc57b36779323a3b437ac2ff22015" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>EnsureCaretVisible</name></member>
      <member refid="classwx_styled_text_ctrl_1a9a9b1eb223a5d1d27eb9a36cc8784eda" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>EnsureVisible</name></member>
      <member refid="classwx_styled_text_ctrl_1a6adbabfa94312f36411ef5cb11ef02b4" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>EnsureVisibleEnforcePolicy</name></member>
      <member refid="classwx_control_1abdbd9c0684856546671e759dd95b23d4" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>EscapeMnemonics</name></member>
      <member refid="classwx_styled_text_ctrl_1a35822757e5083cce51aa9ebb044d9187" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>FindColumn</name></member>
      <member refid="classwx_window_1a777258379a3eef1b0530f12db6b77cab" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>FindFocus</name></member>
      <member refid="classwx_styled_text_ctrl_1aa9d3189469c4c1826cb75e2cbff84341" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>FindText</name></member>
      <member refid="classwx_window_1a3468ef382c612b5f8e91c7c18d00a69f" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>FindWindow</name></member>
      <member refid="classwx_window_1ab2dad735acc2121b964ee1d51836cffa" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>FindWindow</name></member>
      <member refid="classwx_window_1a101201b12ccd5fba49fa06ed19b5c6fb" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>FindWindowById</name></member>
      <member refid="classwx_window_1ab8eb148fffae109e0fac86e88d569670" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>FindWindowByLabel</name></member>
      <member refid="classwx_window_1adbe4eea02f615313c12a2c00557a44c3" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>FindWindowByName</name></member>
      <member refid="classwx_window_1a2bf38a6cbd1f82fb46f274396f482994" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>Fit</name></member>
      <member refid="classwx_window_1a55aca401aab29d59f7cc53f89ba2e38d" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>FitInside</name></member>
      <member refid="classwx_styled_text_ctrl_1a0796d66bc19de243e7b5f684cfca5d52" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>FormatRange</name></member>
      <member refid="classwx_styled_text_ctrl_1ae22b3a855f2c6f545ea15fbfb3399b79" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>FormFeed</name></member>
      <member refid="classwx_window_1a15c678314cfc1d807196bc298b713ed3" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Freeze</name></member>
      <member refid="classwx_window_1aefc02d7275010ebb8d5b66569e7287c4" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetAcceleratorTable</name></member>
      <member refid="classwx_window_1ae0469b554e9c501b356b3ed4b6d8a3af" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetAccessible</name></member>
      <member refid="classwx_styled_text_ctrl_1a31ac58ec2d1b6064938569647446d7ab" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetAdditionalCaretForeground</name></member>
      <member refid="classwx_styled_text_ctrl_1a99dd3ac15eb4fe1e1f031f5b01b48c8d" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetAdditionalCaretsBlink</name></member>
      <member refid="classwx_styled_text_ctrl_1a23e27c39ead70daccd78cffc697fb3f8" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetAdditionalCaretsVisible</name></member>
      <member refid="classwx_styled_text_ctrl_1ae6abfec00ca2ee44fbdfad7437d285f6" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetAdditionalSelAlpha</name></member>
      <member refid="classwx_styled_text_ctrl_1a4c955f3bc85b35ba393caedf4443b2a4" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetAdditionalSelectionTyping</name></member>
      <member refid="classwx_styled_text_ctrl_1a5c394fba7332855fe6dffde17ac84a51" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetAnchor</name></member>
      <member refid="classwx_window_1ad7a9d7fca325112fae493a00d253b3be" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetAutoLayout</name></member>
      <member refid="classwx_window_1a3006d98a4145b7064c1f08e39487d257" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetBackgroundColour</name></member>
      <member refid="classwx_window_1a59047d52b88f2422bbcf01bbecdc4b7b" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>GetBackgroundStyle</name></member>
      <member refid="classwx_styled_text_ctrl_1a1741657c608dc8f632aaca600bf1391c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetBackSpaceUnIndents</name></member>
      <member refid="classwx_window_1a7e64b9380374e5681f146e9e319e35e3" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetBestSize</name></member>
      <member refid="classwx_window_1a0180343fa395e0c8e6de4022684ca5d6" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>GetBestVirtualSize</name></member>
      <member refid="classwx_window_1ad95a95e683e57ac6365745b737571582" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetBorder</name></member>
      <member refid="classwx_window_1aa53c8d1b5af17a8fbbe8845210e2032b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetBorder</name></member>
      <member refid="classwx_styled_text_ctrl_1a6a6ff741fd5d3b39e456d107552b7902" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetBufferedDraw</name></member>
      <member refid="classwx_window_1a483d3f73925bd38c3964dad058672f0a" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetCapture</name></member>
      <member refid="classwx_window_1a83ed7c9d9252b912eebc753d6132245b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetCaret</name></member>
      <member refid="classwx_styled_text_ctrl_1ad5e9e27faf0c215632d51f5bce1380de" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetCaretForeground</name></member>
      <member refid="classwx_styled_text_ctrl_1a9e6f46532401e581ac1e57ce5aa2a0e5" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetCaretLineBackAlpha</name></member>
      <member refid="classwx_styled_text_ctrl_1ae331168473c69e48e9d132bca8c6a50e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetCaretLineBackground</name></member>
      <member refid="classwx_styled_text_ctrl_1a4dae70584af70a027ceb3337341fbde6" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetCaretLineVisible</name></member>
      <member refid="classwx_styled_text_ctrl_1af622e7fd53a681b16852ad2b270efe67" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetCaretPeriod</name></member>
      <member refid="classwx_styled_text_ctrl_1a3addf3bdc09f3af3462b226e1e347ccb" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetCaretSticky</name></member>
      <member refid="classwx_styled_text_ctrl_1a7f847f70c5765d926db06c5075980860" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetCaretWidth</name></member>
      <member refid="classwx_styled_text_ctrl_1a31cc5670870607ddc63acdedcad1ffbe" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetCharacterPointer</name></member>
      <member refid="classwx_styled_text_ctrl_1a0096c378b13a5198f0907e8e24e11f48" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetCharAt</name></member>
      <member refid="classwx_window_1a304b4446de399b240a3fa4aa83a2e468" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>GetCharHeight</name></member>
      <member refid="classwx_window_1aef2745df13435e913027107cab2a6286" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>GetCharWidth</name></member>
      <member refid="classwx_window_1ad500085ad0511879b5e018706c91a494" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetChildren</name></member>
      <member refid="classwx_window_1a666cfe7cc8eda6fcecfd39c67c50f609" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetChildren</name></member>
      <member refid="classwx_window_1a170d85e4aa0cbacbfcdd0728120e1417" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetClassDefaultAttributes</name></member>
      <member refid="classwx_object_1ab3a0c6f723cbaddb47be4e8dd98cc8e2" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>GetClassInfo</name></member>
      <member refid="classwx_window_1a8fd1c0fd88d63dfbf6fefb688b7fd19e" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>GetClientAreaOrigin</name></member>
      <member refid="classwx_evt_handler_1ad6e543115a9405962152630138645588" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetClientData</name></member>
      <member refid="classwx_evt_handler_1a2b3949eaba1f25cb48618163a7c0583b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetClientObject</name></member>
      <member refid="classwx_window_1a3928765a8dd3c5c3d6a689179c8005e0" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetClientRect</name></member>
      <member refid="classwx_window_1ae56fc53268b815b58570f66bfc33838f" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetClientSize</name></member>
      <member refid="classwx_window_1afb9fd4a3b3310b2e11049a5113f749fa" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetClientSize</name></member>
      <member refid="classwx_styled_text_ctrl_1a76be9141adfd1a2492a3debf00f88695" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetCodePage</name></member>
      <member refid="classwx_styled_text_ctrl_1a0d2ad91f9e17cbca470c65f7a9f074cc" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetColumn</name></member>
      <member refid="classwx_window_1ac5664c7cd26848b5eebfaded2ecde7be" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetConstraints</name></member>
      <member refid="classwx_window_1ade8de9a91bb5bf49c3a52e5262a5ffea" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetContainingSizer</name></member>
      <member refid="classwx_styled_text_ctrl_1a41011408381dd91273c176b0bc08c6bb" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetControlCharSymbol</name></member>
      <member refid="classwx_styled_text_ctrl_1af8885aaddb96738b8a9c182655c1892a" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetCurLine</name></member>
      <member refid="classwx_styled_text_ctrl_1a5229698886cd28f260bc14bd96b5ba93" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetCurLineRaw</name></member>
      <member refid="classwx_styled_text_ctrl_1ade127ac090240c41077de95ed8867462" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetCurrentLine</name></member>
      <member refid="classwx_styled_text_ctrl_1a1cf3d775e56d677b1bad2bf0975f776c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetCurrentPos</name></member>
      <member refid="classwx_window_1ad7ce1e9af33e6be0b608813eff2d349c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetCursor</name></member>
      <member refid="classwx_window_1a24e7b8f717e91f4590d148140e853dc5" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>GetDefaultAttributes</name></member>
      <member refid="classwx_styled_text_ctrl_1ad219b7936c07cce89938fe977706bf94" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetDocPointer</name></member>
      <member refid="classwx_window_1a4511e71affd926a47c5c320563ca2df5" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>GetDropTarget</name></member>
      <member refid="classwx_styled_text_ctrl_1a83661baa292c31b8689a154eebde4449" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetEdgeColour</name></member>
      <member refid="classwx_styled_text_ctrl_1a0bca95b451ddb72d83d54a1279290723" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetEdgeColumn</name></member>
      <member refid="classwx_styled_text_ctrl_1a39926c63151415f234c396a0de535a52" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetEdgeMode</name></member>
      <member refid="classwx_window_1a1a54fcda8d52986482e030bd54739e9f" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>GetEffectiveMinSize</name></member>
      <member refid="classwx_styled_text_ctrl_1aa52d0f6cde620310ced574e22ddd6d89" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetEndAtLastLine</name></member>
      <member refid="classwx_styled_text_ctrl_1a3b7488ceb72c142732d5f02d36b6c589" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetEndStyled</name></member>
      <member refid="classwx_styled_text_ctrl_1a97e64320abdb4197eeed9d981fe2a0b3" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetEOLMode</name></member>
      <member refid="classwx_window_1a72c2454cf309f30109da3cbfe237c760" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetEventHandler</name></member>
      <member refid="classwx_evt_handler_1a533e62afcb125abf1fcc8bb53fbc2e81" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetEvtHandlerEnabled</name></member>
      <member refid="classwx_styled_text_ctrl_1ae9de472b3cf14f4052b03320f16375de" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetExtraAscent</name></member>
      <member refid="classwx_styled_text_ctrl_1a5eacc57053552d5e35d9cdc568a45198" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetExtraDescent</name></member>
      <member refid="classwx_window_1a8da0e59017af368c062f11c9abe2c667" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetExtraStyle</name></member>
      <member refid="classwx_styled_text_ctrl_1ad1b55d7c46320c79dda10cea11acf0cb" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetFirstVisibleLine</name></member>
      <member refid="classwx_styled_text_ctrl_1a5220b8c01de2c65cf516e5dfb28cb827" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetFoldExpanded</name></member>
      <member refid="classwx_styled_text_ctrl_1aa8c57e36840d0df1f4f5473a9744a481" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetFoldLevel</name></member>
      <member refid="classwx_styled_text_ctrl_1af0dc2a5d3391584f74a6c2ab0b8a468e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetFoldParent</name></member>
      <member refid="classwx_window_1a0dcc6f6f7bda203a868ff10c413289fa" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetFont</name></member>
      <member refid="classwx_window_1acb8e9bd1c88f330bc9748255a5592964" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetForegroundColour</name></member>
      <member refid="classwx_window_1a55d3155d2d3139a84e8fb19a8900aa76" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetGrandParent</name></member>
      <member refid="classwx_window_1a185e6cd7065367b552748cb722651b27" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>GetHandle</name></member>
      <member refid="classwx_window_1a77f8a4bbee228ed333af2e6a06509cff" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetHelpText</name></member>
      <member refid="classwx_window_1afa448f4e01bedc4a5e3d4324929e5d5d" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>GetHelpTextAtPoint</name></member>
      <member refid="classwx_styled_text_ctrl_1a2a3b0a0c35d8b274f5a54935318412e1" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetHighlightGuide</name></member>
      <member refid="classwx_window_1a4633b6ad527c921598f55af5274156f0" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetId</name></member>
      <member refid="classwx_styled_text_ctrl_1ad0da05e7e0e917258aae56c749a96e47" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetIndent</name></member>
      <member refid="classwx_styled_text_ctrl_1a8e5f7075879adbd25d2448dcdad8690e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetIndentationGuides</name></member>
      <member refid="classwx_styled_text_ctrl_1ae03b5c512534635dd8511a9b3c44a30f" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetKeysUnicode</name></member>
      <member refid="classwx_control_1a0c15321992cfb77595db57cd4e4aec37" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>GetLabel</name></member>
      <member refid="classwx_control_1ad95895ecdd123dff35866db1d2430a76" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetLabelText</name></member>
      <member refid="classwx_control_1ae892fefe6b88168c158e11e975633665" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetLabelText</name></member>
      <member refid="classwx_styled_text_ctrl_1af350640033f08df4813bd1178ae37a31" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetLastChild</name></member>
      <member refid="classwx_styled_text_ctrl_1af742c2d4f39e67c156c91eb90ffb32a5" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetLastKeydownProcessed</name></member>
      <member refid="classwx_styled_text_ctrl_1aac27f508ec6cd93700be4b6020a36284" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetLayoutCache</name></member>
      <member refid="classwx_window_1a0a624f5fad4a603d58ffe94b058d4dda" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>GetLayoutDirection</name></member>
      <member refid="classwx_styled_text_ctrl_1ad0d9dcced4a367478933187c8954d75d" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetLength</name></member>
      <member refid="classwx_styled_text_ctrl_1a62a5d2c688c46fa11f356a8e60dadade" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetLexer</name></member>
      <member refid="classwx_styled_text_ctrl_1a79969628d9be422e5af9735e1aafdc00" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetLibraryVersionInfo</name></member>
      <member refid="classwx_styled_text_ctrl_1a7ccfe3f4bbfca85a15e1d2a9ae9ee70e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetLine</name></member>
      <member refid="classwx_styled_text_ctrl_1a141863da3c3c9819fcc7218df28b86d6" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetLineCount</name></member>
      <member refid="classwx_styled_text_ctrl_1aface63120e6ba948d33c60dd9fb2710c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetLineEndPosition</name></member>
      <member refid="classwx_styled_text_ctrl_1a451a9ad688222f7a912871c51da47767" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetLineIndentation</name></member>
      <member refid="classwx_styled_text_ctrl_1a239c61bf9f71adc1dc0707055b1aa246" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetLineIndentPosition</name></member>
      <member refid="classwx_styled_text_ctrl_1aa2440e99edc0184e6027227dfa58b86e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetLineRaw</name></member>
      <member refid="classwx_styled_text_ctrl_1ad5eebf78698683d465a9be9819d7f8b2" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetLineSelEndPosition</name></member>
      <member refid="classwx_styled_text_ctrl_1a232d7a6bead8dfdd9923fd3f1777b1aa" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetLineSelStartPosition</name></member>
      <member refid="classwx_styled_text_ctrl_1ac6c8072dd5ebc9fb5529eade45c25f66" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetLineState</name></member>
      <member refid="classwx_styled_text_ctrl_1a246e6fb68aa64ca9d05ae51d0ab33ee2" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetLineVisible</name></member>
      <member refid="classwx_styled_text_ctrl_1ad9a7822aa46eac8fe5fbbac0f250d5dc" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetMainSelection</name></member>
      <member refid="classwx_styled_text_ctrl_1a3504d706dae293c1fddb4014163929d9" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetMarginLeft</name></member>
      <member refid="classwx_styled_text_ctrl_1a7a1e3609b487cccbe90301d045a5dc3b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetMarginMask</name></member>
      <member refid="classwx_styled_text_ctrl_1a86abaedf0d231b5ed90436cc0cba9c92" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetMarginRight</name></member>
      <member refid="classwx_styled_text_ctrl_1a5464d236d7b3a4631d7510cfd460dd37" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetMarginSensitive</name></member>
      <member refid="classwx_styled_text_ctrl_1a81d3d69ce219c5a023230ad30a92fae0" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetMarginType</name></member>
      <member refid="classwx_styled_text_ctrl_1a07bb9178144f012698a7497a90a2b7f0" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetMarginWidth</name></member>
      <member refid="classwx_styled_text_ctrl_1a835511306369b74750c9421e7717a84d" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetMarkerSymbolDefined</name></member>
      <member refid="classwx_window_1aef9b71458720452374137cd20be24b97" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>GetMaxClientSize</name></member>
      <member refid="classwx_window_1a5cc2082eb5ddb27f97be191bd093709e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetMaxHeight</name></member>
      <member refid="classwx_styled_text_ctrl_1a9d28df186880080c42f74d565807c5fe" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetMaxLineState</name></member>
      <member refid="classwx_window_1a0a1672e81caf81a95eb5b48383d22065" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>GetMaxSize</name></member>
      <member refid="classwx_window_1a2e953a64c41131b87bdd7c513ced3687" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetMaxWidth</name></member>
      <member refid="classwx_window_1a8e88d1d38c2bf98a72d86b42cf3e35c0" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>GetMinClientSize</name></member>
      <member refid="classwx_window_1ae4dd9a046ff774ea3ef114caeb452681" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetMinHeight</name></member>
      <member refid="classwx_window_1a853c9a8443f996a368569a8fae551f5a" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>GetMinSize</name></member>
      <member refid="classwx_window_1a9f79aa07a1b82a9a738f6c1d9c17496f" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetMinWidth</name></member>
      <member refid="classwx_styled_text_ctrl_1ada95d37e0cc8206f6fbbe86558530e77" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetModEventMask</name></member>
      <member refid="classwx_styled_text_ctrl_1acbaa66a7085f8883854167b32abe8365" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetModify</name></member>
      <member refid="classwx_styled_text_ctrl_1a59a1e17a27e614968edb7eb62392c29c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetMouseDownCaptures</name></member>
      <member refid="classwx_styled_text_ctrl_1a9a5e7132f0f6914219df5af7ceed3bfc" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetMouseDwellTime</name></member>
      <member refid="classwx_styled_text_ctrl_1a1138b4de3d319596fe3df0b0cc31c6f1" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetMultipleSelection</name></member>
      <member refid="classwx_window_1aab1b302c4bdabd134ce8d401dbaaf990" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>GetName</name></member>
      <member refid="classwx_evt_handler_1a4b2f853f5c7a64432ae72f9b606698f9" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetNextHandler</name></member>
      <member refid="classwx_window_1a41608736affe2ff115d80d8f69dc832e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetNextSibling</name></member>
      <member refid="classwx_styled_text_ctrl_1a78182f797190bc0a9c78442a0c1f0ead" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetOvertype</name></member>
      <member refid="classwx_window_1a63871f881941b99b4b94328d1c4cd163" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetParent</name></member>
      <member refid="classwx_styled_text_ctrl_1a50e58196ef9a81257828279a7002c48b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetPasteConvertEndings</name></member>
      <member refid="classwx_window_1a9b7de6ea85ca926b668ba0682a61a93e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetPopupMenuSelectionFromUser</name></member>
      <member refid="classwx_window_1a00f5cb3cac003205317a565a33d4bb27" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetPopupMenuSelectionFromUser</name></member>
      <member refid="classwx_window_1a9f36392b289a1e567e95bee073d6533e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetPosition</name></member>
      <member refid="classwx_window_1ad9a883e20827fa717e92fc2f8bd99d6b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetPosition</name></member>
      <member refid="classwx_evt_handler_1aad1ba7fa9ccbf12ee2d80f5f12350adb" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetPreviousHandler</name></member>
      <member refid="classwx_window_1aa4cb912eb28be31279fa1b95747c6d02" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetPrevSibling</name></member>
      <member refid="classwx_styled_text_ctrl_1af972afdb9d0a39e34929f1089a947d15" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetPrintColourMode</name></member>
      <member refid="classwx_styled_text_ctrl_1ac2ccf9764d79cc83fa0b68ca048a23c2" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetPrintMagnification</name></member>
      <member refid="classwx_styled_text_ctrl_1a64f2900cdf038b8473747be098a7ae6c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetPrintWrapMode</name></member>
      <member refid="classwx_styled_text_ctrl_1a38337213208bf9d17d30b62561f9aff8" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetProperty</name></member>
      <member refid="classwx_styled_text_ctrl_1a51bce2c376bd674f31a84c9b7977082c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetPropertyExpanded</name></member>
      <member refid="classwx_styled_text_ctrl_1a7ae8e50a6a9729aae54b3816e11070a2" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetPropertyInt</name></member>
      <member refid="classwx_styled_text_ctrl_1a35b13bd2aa70df0d6058400c711c932b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetReadOnly</name></member>
      <member refid="classwx_window_1ac8809904bb379c32c33c79fbe38745eb" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetRect</name></member>
      <member refid="classwx_styled_text_ctrl_1ae60165a2cf98246075965c6c40ade6a4" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetRectangularSelectionAnchor</name></member>
      <member refid="classwx_styled_text_ctrl_1a8614807c4b20d5cd850146251eedd729" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetRectangularSelectionAnchorVirtualSpace</name></member>
      <member refid="classwx_styled_text_ctrl_1a3a83d54dc7edd11bf26f99d5f9d225e8" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetRectangularSelectionCaret</name></member>
      <member refid="classwx_styled_text_ctrl_1a94779b75ca8a4c1b9eb568f15649ef83" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetRectangularSelectionCaretVirtualSpace</name></member>
      <member refid="classwx_styled_text_ctrl_1a0e208a31a981da8a12fcaac3d9e94d23" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetRectangularSelectionModifier</name></member>
      <member refid="classwx_object_1aabdb4fc957226544a8408167844e4f42" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetRefData</name></member>
      <member refid="classwx_window_1abd39ef50fbc1ef3771f695e7322e8c1d" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetScreenPosition</name></member>
      <member refid="classwx_window_1a32074a2c677ebadb1ed6e92ab172656c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetScreenPosition</name></member>
      <member refid="classwx_window_1a5c0e45fac07ac4cf29eefa108337a110" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetScreenRect</name></member>
      <member refid="classwx_window_1a3e23d10c17943fd873d0acb472db0caa" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>GetScrollPos</name></member>
      <member refid="classwx_window_1a067d2a38efbf2f535f717f1027003281" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>GetScrollRange</name></member>
      <member refid="classwx_window_1a10d24c60525a1c612cd775fc44dd1953" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>GetScrollThumb</name></member>
      <member refid="classwx_styled_text_ctrl_1a6c26293a34244e7ba20449249c4abbe1" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetScrollWidth</name></member>
      <member refid="classwx_styled_text_ctrl_1a7123ac33c2388ad0f26b7e3db68c42ad" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetSearchFlags</name></member>
      <member refid="classwx_styled_text_ctrl_1aefb67c41c3c24cb37b3cddb15c2dfb19" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetSelAlpha</name></member>
      <member refid="classwx_styled_text_ctrl_1aeaa5b992311b6fd7ca4d5d18d19853d9" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetSelectedText</name></member>
      <member refid="classwx_styled_text_ctrl_1a740113ad3a6dbfbcb2627c70907f4455" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetSelectedTextRaw</name></member>
      <member refid="classwx_styled_text_ctrl_1abe9ad10c64ca4571e15df128ff501743" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetSelection</name></member>
      <member refid="classwx_styled_text_ctrl_1ae35d93d484ca96ffb6016e2a0921ede3" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetSelectionEnd</name></member>
      <member refid="classwx_styled_text_ctrl_1a4f78c05fdaa1b6205f65797a9b835ee7" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetSelectionMode</name></member>
      <member refid="classwx_styled_text_ctrl_1a3ae49554cf1564e357afcf4276aba3a9" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetSelectionNAnchor</name></member>
      <member refid="classwx_styled_text_ctrl_1a7bb73d0bcb61742e03e24fcfd99559ad" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetSelectionNAnchorVirtualSpace</name></member>
      <member refid="classwx_styled_text_ctrl_1a32de07d812552f5227c0f2f4992deda3" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetSelectionNCaret</name></member>
      <member refid="classwx_styled_text_ctrl_1a69e15ff1b9d015bcba01a4943fa0d85e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetSelectionNCaretVirtualSpace</name></member>
      <member refid="classwx_styled_text_ctrl_1a9215efa3e2e13edcbb9e3a9942e04f17" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetSelectionNEnd</name></member>
      <member refid="classwx_styled_text_ctrl_1a9919070dc0d6d730f323192c104dd16f" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetSelectionNStart</name></member>
      <member refid="classwx_styled_text_ctrl_1af42da665e889f8418ab19a4837474496" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetSelections</name></member>
      <member refid="classwx_styled_text_ctrl_1afbe22076a57019f3ad4694bb6e00c0c3" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetSelectionStart</name></member>
      <member refid="classwx_window_1a124c12cff1e7b6e96a5e1fd3e48dca34" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetSize</name></member>
      <member refid="classwx_window_1a66e144ed8ab9a20e080ae6c69fc7015c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetSize</name></member>
      <member refid="classwx_window_1ad8284cce1a2afe57724b52a89d7fac2f" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetSizer</name></member>
      <member refid="classwx_styled_text_ctrl_1af51257322913c6027d4651a6748e39a0" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetStatus</name></member>
      <member refid="classwx_styled_text_ctrl_1a486bf115bb38acdbca37e248bcec21ab" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetSTCCursor</name></member>
      <member refid="classwx_styled_text_ctrl_1a240b066df1bd57a004e02e8da8b5b134" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetSTCFocus</name></member>
      <member refid="classwx_styled_text_ctrl_1af57c77624882b8f94a61d252dd0e78a1" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetStyleAt</name></member>
      <member refid="classwx_styled_text_ctrl_1a49d5b9a734641a0b112c3ff75cfd0af9" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetStyleBits</name></member>
      <member refid="classwx_styled_text_ctrl_1aa8819958aea9de2ebec490b0646967dd" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetStyleBitsNeeded</name></member>
      <member refid="classwx_styled_text_ctrl_1a4d99c288fef906a6f31c4007a2526297" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetStyledText</name></member>
      <member refid="classwx_styled_text_ctrl_1ad08155d4b4df42ec9a69c5ce0676fbc4" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetTabIndents</name></member>
      <member refid="classwx_styled_text_ctrl_1a80c8231ab592cd0f39e04c97cfe60007" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetTabWidth</name></member>
      <member refid="classwx_styled_text_ctrl_1a5532b04ba5f1a3ffbf279267e3fda773" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetTargetEnd</name></member>
      <member refid="classwx_styled_text_ctrl_1ad8e81767c696ed238d681ee67a3151a9" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetTargetStart</name></member>
      <member refid="classwx_styled_text_ctrl_1a69a4d36bceba8fe605a424ac5d7e6675" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetText</name></member>
      <member refid="classwx_window_1ac9cd7b4472d5419e518f69311914466f" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetTextExtent</name></member>
      <member refid="classwx_window_1a79e5f88a2408871663d4ab0405cd35f6" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetTextExtent</name></member>
      <member refid="classwx_styled_text_ctrl_1a2c696a049f52f399dc9fad616740e77b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetTextLength</name></member>
      <member refid="classwx_styled_text_ctrl_1a4a1c9bb239d6d24e69675bbf4a1c7e99" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetTextRange</name></member>
      <member refid="classwx_styled_text_ctrl_1a88be62c7ec2c2d0075df9b4b35cbd1b0" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetTextRangeRaw</name></member>
      <member refid="classwx_styled_text_ctrl_1ace83fdced1ffe0cdf7e7fa5b13f53add" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetTextRaw</name></member>
      <member refid="classwx_window_1a0b31a21532407cf809d73aa09f34235c" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>GetThemeEnabled</name></member>
      <member refid="classwx_window_1aae94155ccf8a6e4e72ad08527c89ba89" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetToolTip</name></member>
      <member refid="classwx_window_1ad1a9c53c8e7e5010874f15b8ff4a6568" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetToolTipText</name></member>
      <member refid="classwx_styled_text_ctrl_1ac14e1e9f39e12ccae698b421261da198" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetTwoPhaseDraw</name></member>
      <member refid="classwx_styled_text_ctrl_1a444dd995d86c73147ff929b1313b7ad0" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetUndoCollection</name></member>
      <member refid="classwx_window_1a7e32d9a9ffd058c931db20416bc55baa" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetUpdateClientRect</name></member>
      <member refid="classwx_window_1aa982adbcebfa7bc73fbae7465132115b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetUpdateRegion</name></member>
      <member refid="classwx_styled_text_ctrl_1a65f22f8fa3b367846cd798be26815b68" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetUseAntiAliasing</name></member>
      <member refid="classwx_styled_text_ctrl_1a7eb640563c7c64d5d486607d87a84760" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetUseHorizontalScrollBar</name></member>
      <member refid="classwx_styled_text_ctrl_1a8e2c627c193968007e69e075e13c0beb" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetUseTabs</name></member>
      <member refid="classwx_styled_text_ctrl_1a748a585d6fa6ef8db95e6a809781a1e8" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetUseVerticalScrollBar</name></member>
      <member refid="classwx_window_1a6a332586346cb9ece4a8fe058a7b88c4" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>GetValidator</name></member>
      <member refid="classwx_styled_text_ctrl_1a12ba205b69a45e4fe011b18a769c553e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetViewEOL</name></member>
      <member refid="classwx_styled_text_ctrl_1a34c93c69d541ba7a1c3fbb18378bc0c6" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetViewWhiteSpace</name></member>
      <member refid="classwx_window_1a614d32c464296b7d6caabcafc18deb97" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetVirtualSize</name></member>
      <member refid="classwx_window_1a2628c6f1f4aecb790f0c86622ebf4d56" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetVirtualSize</name></member>
      <member refid="classwx_styled_text_ctrl_1a4c3ddf3fcd3fdb81b1dfef27b133cbdf" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetVirtualSpaceOptions</name></member>
      <member refid="classwx_styled_text_ctrl_1a635e119235cbc5bbeb843a73117f6933" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetWhitespaceSize</name></member>
      <member refid="classwx_window_1afd861e553190e22a76d3d40ee5e8d628" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>GetWindowBorderSize</name></member>
      <member refid="classwx_window_1a994147d8294bd7d5a32c825d5692af28" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetWindowStyle</name></member>
      <member refid="classwx_window_1a0a0e81677bf2f0de5982a634e11d9a69" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>GetWindowStyleFlag</name></member>
      <member refid="classwx_window_1aafcccd0d5d31651484df02453c53361c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetWindowVariant</name></member>
      <member refid="classwx_styled_text_ctrl_1a41cb053bb7c1a4190ccc1591f982b74e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetWrapIndentMode</name></member>
      <member refid="classwx_styled_text_ctrl_1a16cdb18f5be88498542f5204585aeb38" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetWrapMode</name></member>
      <member refid="classwx_styled_text_ctrl_1ad6589d2a8d0c49463c896b64ec348d36" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetWrapStartIndent</name></member>
      <member refid="classwx_styled_text_ctrl_1a5e7f8a8dfbbcc6ec7b41c936bce533bf" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetWrapVisualFlags</name></member>
      <member refid="classwx_styled_text_ctrl_1a4ab54283c8413c96545931cf12175286" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetWrapVisualFlagsLocation</name></member>
      <member refid="classwx_styled_text_ctrl_1a66becb498f88c970793112805375ac4f" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetXOffset</name></member>
      <member refid="classwx_styled_text_ctrl_1a91750e43b5c40ee885f3bd2e97a7a738" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GetZoom</name></member>
      <member refid="classwx_styled_text_ctrl_1a36755313b796f113224095c17c344934" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GotoLine</name></member>
      <member refid="classwx_styled_text_ctrl_1ae17f2704b5eba4ebfe520cff716107e2" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>GotoPos</name></member>
      <member refid="classwx_window_1a89d1b079de97aac170e999692095872c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>HandleAsNavigationKey</name></member>
      <member refid="classwx_window_1a665731bbfa46a72c215b04df60216ef1" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>HandleWindowEvent</name></member>
      <member refid="classwx_window_1a9b44f61543b77317f9820e06856c5514" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>HasCapture</name></member>
      <member refid="classwx_window_1ae30b415c1ef526563161efea5b78d640" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>HasExtraStyle</name></member>
      <member refid="classwx_window_1a62ba2fb9be6422bf06bb7db5871d551f" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>HasFlag</name></member>
      <member refid="classwx_window_1a4e0abff99d64d2a595ee0ab4b415bbd6" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>HasFocus</name></member>
      <member refid="classwx_window_1abe1522483478b1f777ad8ef34fa7c44a" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>HasMultiplePages</name></member>
      <member refid="classwx_window_1a950847ecf2d488d83c14a74a3906f668" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>HasScrollbar</name></member>
      <member refid="classwx_window_1ab9cbcb6d6f4a272c2f0342e69a13b59a" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>HasTransparentBackground</name></member>
      <member refid="classwx_window_1a7ed103df04014cb3c59c6a3fb4d95328" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Hide</name></member>
      <member refid="classwx_styled_text_ctrl_1a586b008abbe3b5030f0e877a5449f292" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>HideLines</name></member>
      <member refid="classwx_styled_text_ctrl_1a76b30f64c534b14d6010be9562d8d8c1" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>HideSelection</name></member>
      <member refid="classwx_window_1a5326fbb26557a224507a1c06e5640e89" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>HideWithEffect</name></member>
      <member refid="classwx_window_1a6a026b2a16a9f050deddd44e5586762c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>HitTest</name></member>
      <member refid="classwx_window_1a44f4d85f42fac6090a42cafd40f24ff5" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>HitTest</name></member>
      <member refid="classwx_styled_text_ctrl_1a81cc40177c35e47daa1cff8c0ba205cf" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Home</name></member>
      <member refid="classwx_styled_text_ctrl_1a86da232f299722eb400c3169fc5cf5b9" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>HomeDisplay</name></member>
      <member refid="classwx_styled_text_ctrl_1ae249dee11bd5ec8ac1bf7295996d0e1e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>HomeDisplayExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1ac86adda825a69f315a433f72c65a26a8" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>HomeExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1a09eda26be0d53e59128af4f8c3ce163d" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>HomeRectExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1aa9435194013564156570a17593883c7c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>HomeWrap</name></member>
      <member refid="classwx_styled_text_ctrl_1a2faea08698aba4ff0d35e82a7637a911" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>HomeWrapExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1a69edcaa53757325269f097487430dc8d" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>IndicatorGetAlpha</name></member>
      <member refid="classwx_styled_text_ctrl_1a48ad8e1845792e7aaa10652326d58259" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>IndicatorGetForeground</name></member>
      <member refid="classwx_styled_text_ctrl_1a78c1941e8a08b88856961528d417bde7" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>IndicatorGetStyle</name></member>
      <member refid="classwx_styled_text_ctrl_1aa5a90e1fec271eb4a6be5da6739d7d48" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>IndicatorSetAlpha</name></member>
      <member refid="classwx_styled_text_ctrl_1a65620aaff59fc9c0219926bedc8cf333" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>IndicatorSetForeground</name></member>
      <member refid="classwx_styled_text_ctrl_1a20fed79891b09e523138b6332ae2764b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>IndicatorSetStyle</name></member>
      <member refid="classwx_window_1a9fd5b6520c1b30eb8e82bb5d56bc24c0" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>InformFirstDirection</name></member>
      <member refid="classwx_window_1a6b1bf9e099704e7a493b8c4666b1f7f7" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>InheritAttributes</name></member>
      <member refid="classwx_window_1aa90a260c0a835a133043460b7d0024a8" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>InitDialog</name></member>
      <member refid="classwx_styled_text_ctrl_1a2fd8afea2355396a93b2b8ba99f1a559" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>InsertText</name></member>
      <member refid="classwx_styled_text_ctrl_1a04ac8c4c6e4cc8978b325f62e3991830" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>InsertTextRaw</name></member>
      <member refid="classwx_window_1ae1b56ca87d8590ee5e576012229a380a" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>InvalidateBestSize</name></member>
      <member refid="classwx_window_1af918e6fe8565c2d5235973cc3de84a43" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>IsBeingDeleted</name></member>
      <member refid="classwx_window_1a469f0881da248d37691440c9d4cc7200" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>IsDescendant</name></member>
      <member refid="classwx_window_1a9d1be1bbb625ebf87ad4ad47e49a0194" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>IsDoubleBuffered</name></member>
      <member refid="classwx_window_1a59452a5bd42f5ea4b31d7fc4aa59644f" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>IsEnabled</name></member>
      <member refid="classwx_window_1af27ef77c913e32050543f3b0ca435a0d" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1a31af79f647cbec4950ce31620db51753" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1a4a23e724619ec070f7d5c45ba21529d5" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1a4da9a2d13534535aaf7b45200ee8728e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1a866c62cc23d8de88e952aad5db4d1a61" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>IsFrozen</name></member>
      <member refid="classwx_object_1af40d580385cf4f8112fae7713404b01e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>IsKindOf</name></member>
      <member refid="classwx_window_1ae9b31dec54256b68574a4bba8cca94ab" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>IsRetained</name></member>
      <member refid="classwx_object_1a80a1a3fda7b14396a9ddd3d7a46a88bd" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>IsSameAs</name></member>
      <member refid="classwx_window_1aeeef7eaf8c8f1ec1a54e7a68d63923d0" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>IsScrollbarAlwaysShown</name></member>
      <member refid="classwx_window_1a95af3a39aa422580dae156ed281a7e88" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>IsShown</name></member>
      <member refid="classwx_window_1a72d70fd14e3565bf782fbcd3271d8930" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>IsShownOnScreen</name></member>
      <member refid="classwx_window_1a657ef8b6055eb06df894ac5e6ddfecf8" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>IsThisEnabled</name></member>
      <member refid="classwx_window_1a0002826ad05f2a5661b4c8995713f37f" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>IsTopLevel</name></member>
      <member refid="classwx_window_1a7940d510c5bdc062a2b109a1022dd8c2" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>IsTransparentBackgroundSupported</name></member>
      <member refid="classwx_evt_handler_1a360fdeefcf53b62fb49fb828406bb8a6" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>IsUnlinked</name></member>
      <member refid="classwx_window_1a1b143c3e72bd0af533b76db4830a6113" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>Layout</name></member>
      <member refid="classwx_styled_text_ctrl_1a65413d4c086ae8c0ef8380cff55773e6" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LineCopy</name></member>
      <member refid="classwx_styled_text_ctrl_1aa2afa8f527045e387838ca9465ae62c9" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LineCut</name></member>
      <member refid="classwx_styled_text_ctrl_1a7973166dc3a25e59f6da2679c40a0e77" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LineDelete</name></member>
      <member refid="classwx_styled_text_ctrl_1ac9515ecb49c5649c282222e5ca475d19" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LineDown</name></member>
      <member refid="classwx_styled_text_ctrl_1a0845a980da1cd5bb7d3aa075ddc17da4" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LineDownExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1a532132fa839732be1c4eb9cc60d8f9a3" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LineDownRectExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1a2313db2853adf1c0845e930edabae12c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LineDuplicate</name></member>
      <member refid="classwx_styled_text_ctrl_1a9b8793a79c0f76d377df68e7b5bd26ea" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LineEnd</name></member>
      <member refid="classwx_styled_text_ctrl_1a46f1b649c7c10362e2c03405300c71fe" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LineEndDisplay</name></member>
      <member refid="classwx_styled_text_ctrl_1afedadbabcd1c1b2467a695130b933393" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LineEndDisplayExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1a43f776d94819c2a4eed79adc62795b66" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LineEndExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1a3a1eb6fee3a2192ec1d08ca26703e7fa" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LineEndRectExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1ac8281133453c747409b60dc5acc3758a" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LineEndWrap</name></member>
      <member refid="classwx_styled_text_ctrl_1a8f52104fcc9e05711a864896475c7ad5" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LineEndWrapExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1a071d308ff8a8923946b28aa840db74b8" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LineFromPosition</name></member>
      <member refid="classwx_styled_text_ctrl_1a88684b7ed3252ad59c004f3fd8ccb8b8" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LineLength</name></member>
      <member refid="classwx_styled_text_ctrl_1a6368f884c5803294e3aedfe88fe3112a" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LineScroll</name></member>
      <member refid="classwx_styled_text_ctrl_1a9b53d6cfccf347333995a9a48c36029e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LineScrollDown</name></member>
      <member refid="classwx_styled_text_ctrl_1aab817bec123fc7ee32eb8dcbbfdc55a4" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LineScrollUp</name></member>
      <member refid="classwx_styled_text_ctrl_1a3f24817be6a8af9aa560fd1ee7c05b85" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LinesJoin</name></member>
      <member refid="classwx_styled_text_ctrl_1adbd3af9505c9bfb8f13aae5778015619" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LinesOnScreen</name></member>
      <member refid="classwx_styled_text_ctrl_1a591959bfee0a8353f70b1306ca7fe2eb" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LinesSplit</name></member>
      <member refid="classwx_styled_text_ctrl_1abcf0762da43a7f95b3fc2c5f9937614e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LineTranspose</name></member>
      <member refid="classwx_styled_text_ctrl_1a495f22e16a3471147b1cb925e8ce0ca5" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LineUp</name></member>
      <member refid="classwx_styled_text_ctrl_1a597babc365b24614d5a2998f25fa4458" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LineUpExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1aa74a9c0c48e4176bdd70d261637bb9c8" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LineUpRectExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1af45914416eb3c9372dcdeb26bdbc0534" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LoadFile</name></member>
      <member refid="classwx_window_1a124944524f36b71385dad8fddaad8ded" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>Lower</name></member>
      <member refid="classwx_styled_text_ctrl_1a69e0875a6d000351f6c6498de6310f4c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>LowerCase</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>m_refData</name></member>
      <member refid="classwx_styled_text_ctrl_1a89ed079381f546ef0719f02918506734" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MarginGetStyle</name></member>
      <member refid="classwx_styled_text_ctrl_1a6e4f08253296b1614aba0d34304f2e7b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MarginGetStyleOffset</name></member>
      <member refid="classwx_styled_text_ctrl_1acae15a86c4716929b7d38439668496cf" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MarginGetStyles</name></member>
      <member refid="classwx_styled_text_ctrl_1a38844cc95c2c74cc3de5821e78757146" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MarginGetText</name></member>
      <member refid="classwx_styled_text_ctrl_1ae552ef3d00be362facd155efdbb06644" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MarginSetStyle</name></member>
      <member refid="classwx_styled_text_ctrl_1a07193d7b379e085991b840344293f4b1" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MarginSetStyleOffset</name></member>
      <member refid="classwx_styled_text_ctrl_1a9b5d745fe8da43d83fed85baa7bfe0f0" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MarginSetStyles</name></member>
      <member refid="classwx_styled_text_ctrl_1ad66c7d820d12a5cc6f82aa72935fbbea" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MarginSetText</name></member>
      <member refid="classwx_styled_text_ctrl_1ade9ece6d3f3a4373283c12b77f6469c4" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MarginTextClearAll</name></member>
      <member refid="classwx_styled_text_ctrl_1a2bce811d7d23416b4aed7068f55f48a5" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MarkerAdd</name></member>
      <member refid="classwx_styled_text_ctrl_1ac1ebd9b3c385a00140f753d3b52d98cf" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MarkerAddSet</name></member>
      <member refid="classwx_styled_text_ctrl_1af4aff2744a8d3fc28f8f6f126e6da49b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MarkerDefine</name></member>
      <member refid="classwx_styled_text_ctrl_1adeefe5392b7394fb98ebf0291385c76a" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MarkerDefineBitmap</name></member>
      <member refid="classwx_styled_text_ctrl_1aea89da40e6dfdaa26a9a74a1067f651f" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MarkerDelete</name></member>
      <member refid="classwx_styled_text_ctrl_1a59e91381c363f396bd0c26ef9574515d" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MarkerDeleteAll</name></member>
      <member refid="classwx_styled_text_ctrl_1a0db2a7ba33d022a973f82bd21a6c6e41" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MarkerDeleteHandle</name></member>
      <member refid="classwx_styled_text_ctrl_1a681d408ab69cd6e63204b8359bb44605" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MarkerGet</name></member>
      <member refid="classwx_styled_text_ctrl_1a43af4651e826d2d92bc135fe8170c518" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MarkerLineFromHandle</name></member>
      <member refid="classwx_styled_text_ctrl_1ad2fed626190435a772aa5b00f725d2ef" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MarkerNext</name></member>
      <member refid="classwx_styled_text_ctrl_1a5dba6328004c17faaecacc2647ac043d" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MarkerPrevious</name></member>
      <member refid="classwx_styled_text_ctrl_1ae3d48bdff0d995bfbf35ea29cff7b5bc" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MarkerSetAlpha</name></member>
      <member refid="classwx_styled_text_ctrl_1ad11e02f4a07cdbd45c3627a0ce8fa5e8" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MarkerSetBackground</name></member>
      <member refid="classwx_styled_text_ctrl_1a7b038202798c153f2ba6c454dfa9f92b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MarkerSetForeground</name></member>
      <member refid="classwx_window_1ab1cb98c8d25b9e6ff7b706b1446c3df7" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Move</name></member>
      <member refid="classwx_window_1a22a22c1e23ca05776707e7999d8047fe" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Move</name></member>
      <member refid="classwx_window_1a79e66079125e8420de269811bdb6f2b6" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MoveAfterInTabOrder</name></member>
      <member refid="classwx_window_1af2b92f61cd9f9e2e0efe4cce307e25b1" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MoveBeforeInTabOrder</name></member>
      <member refid="classwx_styled_text_ctrl_1a88b9b807e250da28f23f26bf4dba09ff" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>MoveCaretInsideView</name></member>
      <member refid="classwx_window_1a86904f6785df4af6036b33383490a805" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Navigate</name></member>
      <member refid="classwx_window_1aa58039c8fc65e19160becf510ee1d1d5" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>NavigateIn</name></member>
      <member refid="classwx_window_1a8175da594e6045635a1d1cfe775cdddb" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>NewControlId</name></member>
      <member refid="classwx_styled_text_ctrl_1aafe614a7f6032598933112f1c6e4fb67" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>NewLine</name></member>
      <member refid="classwx_window_1a6b5654c0c6c6245d592c279521f7099c" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>OnInternalIdle</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>operator new</name></member>
      <member refid="classwx_styled_text_ctrl_1ae42da911681afee75d2782b410a8da6d" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>PageDown</name></member>
      <member refid="classwx_styled_text_ctrl_1a11834c1cd84c602aa2cd09a525ebb3cd" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>PageDownExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1a34ecf284fc1437ec8e57bc488c0e882d" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>PageDownRectExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1a51017ad326b639f505d0b2007d6fe0b6" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>PageUp</name></member>
      <member refid="classwx_styled_text_ctrl_1a41f991d2cf74d9695e3fb5ac2a00ca80" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>PageUpExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1a221fa3ba9842f8bca1698e5f228210ea" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>PageUpRectExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1aedfdbc2b174fdb0c229eec4d7a39961b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ParaDown</name></member>
      <member refid="classwx_styled_text_ctrl_1afff9fd76f788b03f1d88d4cf374ebd7d" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ParaDownExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1aead8c88e661579be7481fda7816aa569" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ParaUp</name></member>
      <member refid="classwx_styled_text_ctrl_1a85ff441f893aefba1fbbcf994eaa78b6" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ParaUpExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1a65c6bd6cfdf28259a9158b444cff443d" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>Paste</name></member>
      <member refid="classwx_styled_text_ctrl_1a9501d7575194cce280cfd8c3aef6eb88" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>PointFromPosition</name></member>
      <member refid="classwx_window_1ac45c1f4cf96c70779764c14cf528790b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>PopEventHandler</name></member>
      <member refid="classwx_window_1a8f715d238cf74a845488b0e2645e98df" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>PopupMenu</name></member>
      <member refid="classwx_window_1a834bcdfd41f5e5370ebd9ea401c92900" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>PopupMenu</name></member>
      <member refid="classwx_styled_text_ctrl_1a028c1147afb93e729a44712b01668a1e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>PositionAfter</name></member>
      <member refid="classwx_styled_text_ctrl_1a1d494a1101f6983d01d4727af5371398" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>PositionBefore</name></member>
      <member refid="classwx_styled_text_ctrl_1afdab99ccd4a54a0ef02cb42554ad7fd1" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>PositionFromLine</name></member>
      <member refid="classwx_styled_text_ctrl_1af3f952056236fa7e391c6416989799e9" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>PositionFromPoint</name></member>
      <member refid="classwx_styled_text_ctrl_1a892b27398a7b8d03923c86d1594280fe" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>PositionFromPointClose</name></member>
      <member refid="classwx_window_1ab1943463e6661f97e072b43337c6cc09" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>PostSizeEvent</name></member>
      <member refid="classwx_window_1aa080d8dcda58bcc6ea2abd8bea592e3e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>PostSizeEventToParent</name></member>
      <member refid="classwx_window_1a5ebdbd87c28644149a07f1742996df96" prot="protected" virt="virtual"><scope>wxStyledTextCtrl</scope><name>ProcessEvent</name></member>
      <member refid="classwx_evt_handler_1ac0f5d2cb29a04c1f7f82eb6b351f79fb" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ProcessEventLocally</name></member>
      <member refid="classwx_window_1a7cbee38944dab02d753a4dba74230443" prot="protected" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ProcessPendingEvents</name></member>
      <member refid="classwx_window_1a9350b3a9c2e380707eaea92cedad12a5" prot="protected" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ProcessThreadEvent</name></member>
      <member refid="classwx_window_1a0a76891d726ad5f9a729e27e4eab2b57" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ProcessWindowEvent</name></member>
      <member refid="classwx_window_1a0a11aa4a50491d051f947e2618e52178" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ProcessWindowEventLocally</name></member>
      <member refid="classwx_window_1a398c11ab9af7956067a964f560d1978c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>PushEventHandler</name></member>
      <member refid="classwx_window_1a69e450f21b0d7013269ec1a4771f043b" prot="protected" virt="virtual"><scope>wxStyledTextCtrl</scope><name>QueueEvent</name></member>
      <member refid="classwx_window_1a54808c933f22a891c5db646f6209fa4d" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>Raise</name></member>
      <member refid="classwx_styled_text_ctrl_1a129c1c9fedf006b6a8c4c150a576de27" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>Redo</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Ref</name></member>
      <member refid="classwx_window_1a29dc7251746154c821b17841b9877830" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>Refresh</name></member>
      <member refid="classwx_window_1ab0ae6b9898cd261c39ebeb2891aa3d67" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>RefreshRect</name></member>
      <member refid="classwx_window_1a53ca57872dac5851ea6ba55a494b899b" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>RegisterHotKey</name></member>
      <member refid="classwx_styled_text_ctrl_1a002a95831ec96515101922756d4d99e0" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>RegisterImage</name></member>
      <member refid="classwx_styled_text_ctrl_1a3b8edb39e182b3d095f5f5d4728319e8" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ReleaseDocument</name></member>
      <member refid="classwx_window_1adcc538819c11ecb3bd3e4e5d13c5ba7a" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ReleaseMouse</name></member>
      <member refid="classwx_window_1acee332ed4368d26e8bc3db5767c1240a" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>RemoveChild</name></member>
      <member refid="classwx_window_1aacbfe424fa527966b954229a1db96ab5" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>RemoveEventHandler</name></member>
      <member refid="classwx_evt_handler_1a67a57b759c447b121bf70a7c9804c8f2" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>RemoveFilter</name></member>
      <member refid="classwx_control_1ab7df4ca0dfde3a6409833cf470ee02e6" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>RemoveMnemonics</name></member>
      <member refid="classwx_window_1a7977b749284e65aecfed2ce146799cb9" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>Reparent</name></member>
      <member refid="classwx_styled_text_ctrl_1a781675a6c92f399e0cfe426fcf8ee13e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ReplaceSelection</name></member>
      <member refid="classwx_styled_text_ctrl_1a9f9600dbe5b828f493e323f0dabd67ca" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ReplaceTarget</name></member>
      <member refid="classwx_styled_text_ctrl_1ae6e45a7a50bb6e524b79fa3f730765e5" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ReplaceTargetRE</name></member>
      <member refid="classwx_styled_text_ctrl_1a152d87c865cd3683a018cbf6c9e4dfc4" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>RotateSelection</name></member>
      <member refid="classwx_window_1a0f9814efc50316b4c57b7ec2bf78b716" prot="protected" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SafelyProcessEvent</name></member>
      <member refid="classwx_styled_text_ctrl_1a92d360f9c11f8ad5648c630d573eabe7" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SaveFile</name></member>
      <member refid="classwx_window_1a65531bbc52f9508b0e31a9c08c97bd31" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ScreenToClient</name></member>
      <member refid="classwx_window_1a59d02b70a9107433836a977c4c0cd7a9" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ScreenToClient</name></member>
      <member refid="classwx_window_1aa5c5b683bd11a0d9771bd2fcdf643c64" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>ScrollLines</name></member>
      <member refid="classwx_window_1adc0ed5e1c4925223cb901ced14b8343d" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>ScrollPages</name></member>
      <member refid="classwx_styled_text_ctrl_1a4045083b0cd2cd28125d0f28d6734d6f" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ScrollToColumn</name></member>
      <member refid="classwx_styled_text_ctrl_1ac56e5bf9181625fe4b5b227c7f2b6920" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ScrollToLine</name></member>
      <member refid="classwx_window_1ab7be4956ff22da37fff2b8aaa581045c" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>ScrollWindow</name></member>
      <member refid="classwx_styled_text_ctrl_1a42100d4f60d5361099a18a036b2cbb06" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SearchAnchor</name></member>
      <member refid="classwx_evt_handler_1a3c07426130d2868a5ae7fa918a251f49" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SearchEventTable</name></member>
      <member refid="classwx_styled_text_ctrl_1a741f27ac90f15b36c172708e6b2276da" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SearchInTarget</name></member>
      <member refid="classwx_styled_text_ctrl_1a657c17cb2ed3afd10e286266c22786ec" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SearchNext</name></member>
      <member refid="classwx_styled_text_ctrl_1abc7c587fd096da6df84f245296343212" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SearchPrev</name></member>
      <member refid="classwx_styled_text_ctrl_1af2250b2b6bf00adf77f7bbcdcc3cc76b" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SelectAll</name></member>
      <member refid="classwx_styled_text_ctrl_1a4e384ad9646e25cf253b5c9bc611e5e6" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SelectionDuplicate</name></member>
      <member refid="classwx_styled_text_ctrl_1a3527677aac82ebd1733c4738d8326330" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SelectionIsRectangle</name></member>
      <member refid="classwx_window_1a7e21eb6a0819281b29134a6432d064fe" prot="protected" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SendDestroyEvent</name></member>
      <member refid="classwx_styled_text_ctrl_1a60bde35c437ac8edc081582fb06cd2da" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SendMsg</name></member>
      <member refid="classwx_window_1a237f739b21937d3e8f1bff5fa82ba4c2" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SendSizeEvent</name></member>
      <member refid="classwx_window_1af7987987978fd8a93df88b29b19a6388" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SendSizeEventToParent</name></member>
      <member refid="classwx_window_1a0af5e9aa4dee6a4e92c0700f92605642" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetAcceleratorTable</name></member>
      <member refid="classwx_window_1a413220ead41f05a2ec2cfe10b3d573df" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetAccessible</name></member>
      <member refid="classwx_styled_text_ctrl_1a3754bef6b4bcc2ab6929a63e864c35da" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetAdditionalCaretForeground</name></member>
      <member refid="classwx_styled_text_ctrl_1a559040550cb01c794a3dd23942823e46" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetAdditionalCaretsBlink</name></member>
      <member refid="classwx_styled_text_ctrl_1ad3a25f9dcf379c4aa0686ec22dd838b8" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetAdditionalCaretsVisible</name></member>
      <member refid="classwx_styled_text_ctrl_1a3b87020382f1b185c30cb40acfcbe66c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetAdditionalSelAlpha</name></member>
      <member refid="classwx_styled_text_ctrl_1a4aec08b338247133812c9657483242f3" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetAdditionalSelBackground</name></member>
      <member refid="classwx_styled_text_ctrl_1a0a915649ec8b7a95afa2eed7752804d8" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetAdditionalSelectionTyping</name></member>
      <member refid="classwx_styled_text_ctrl_1a1db22a164853318d8f10e249651cc119" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetAdditionalSelForeground</name></member>
      <member refid="classwx_styled_text_ctrl_1aae65c9177c7e04cc56db92ee2a82c30d" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetAnchor</name></member>
      <member refid="classwx_window_1ad369fe1db5c20f9d9edff7b5eb1f7226" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetAutoLayout</name></member>
      <member refid="classwx_window_1a37219df52734626e23401fd83b25d8a0" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetBackgroundColour</name></member>
      <member refid="classwx_window_1af14f8fd2ed2d30a9bbb5d4f9fd6594ec" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetBackgroundStyle</name></member>
      <member refid="classwx_styled_text_ctrl_1acb9871f499cc49f222199ce17858be78" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetBackSpaceUnIndents</name></member>
      <member refid="classwx_styled_text_ctrl_1a625ec429c30103b60c3c3683008b98ae" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetBufferedDraw</name></member>
      <member refid="classwx_window_1a2b8b2e99231a0ec1a05f5066f1b7f3d8" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetCanFocus</name></member>
      <member refid="classwx_window_1acfef5e1cada92c73e2937b84ff57ff57" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetCaret</name></member>
      <member refid="classwx_styled_text_ctrl_1a8b9df9c761aac1e0b7ef2457b09415d1" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetCaretForeground</name></member>
      <member refid="classwx_styled_text_ctrl_1ac5979bd0c78c7cd6176b1294ea620027" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetCaretLineBackAlpha</name></member>
      <member refid="classwx_styled_text_ctrl_1a10b9b644790f1a9ca287df6f527d6e63" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetCaretLineBackground</name></member>
      <member refid="classwx_styled_text_ctrl_1af1ed9a3be0fdda376f6b4ab819508f4e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetCaretLineVisible</name></member>
      <member refid="classwx_styled_text_ctrl_1aad5817f223b594770fec0cc83fcd88e2" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetCaretPeriod</name></member>
      <member refid="classwx_styled_text_ctrl_1a3ae097b42f3b5b3d2569796a09b075d4" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetCaretSticky</name></member>
      <member refid="classwx_styled_text_ctrl_1a9c89012c8781311f4aa8d8bb0e78a087" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetCaretWidth</name></member>
      <member refid="classwx_styled_text_ctrl_1a76bbfb8faf5016f90aef3df1d068ad86" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetCharsDefault</name></member>
      <member refid="classwx_evt_handler_1a82c74f2cebfa02cb3c1563d459c872bf" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetClientData</name></member>
      <member refid="classwx_evt_handler_1af1e33a06087b8b2ddc43c7d15a91b326" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetClientObject</name></member>
      <member refid="classwx_window_1aa59f715217fffa5bcf14cd97f92e7840" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetClientSize</name></member>
      <member refid="classwx_window_1ab2aadc857ee7f55f47ab9a8669e3beb7" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetClientSize</name></member>
      <member refid="classwx_window_1a582d4d1f60a3f777627773b2da0bb2ef" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetClientSize</name></member>
      <member refid="classwx_styled_text_ctrl_1a1f453da45a1621528f258700cf462a6e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetCodePage</name></member>
      <member refid="classwx_window_1afa75d111bbd9a68f837101a5fbed60a7" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetConstraints</name></member>
      <member refid="classwx_window_1a0ccf78fe06722b500adfb7f36b8ce443" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetContainingSizer</name></member>
      <member refid="classwx_styled_text_ctrl_1a65eeb943df8d89628c047caeb89c4413" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetControlCharSymbol</name></member>
      <member refid="classwx_styled_text_ctrl_1aff888113834dedbd7779784f1e84412a" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetCurrentPos</name></member>
      <member refid="classwx_window_1ad83f9c51c6f31e0e05f598b47a19ed98" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetCursor</name></member>
      <member refid="classwx_styled_text_ctrl_1aab3d63cf95c36142160589ee9a8fbcde" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetDocPointer</name></member>
      <member refid="classwx_window_1a5477a89c17fdcc3ec6c90274796eb1c3" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetDoubleBuffered</name></member>
      <member refid="classwx_window_1ae34b4d45433ca8287df0e47d46411e58" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetDropTarget</name></member>
      <member refid="classwx_styled_text_ctrl_1a9118716e17cfe2de2390be4b784f5d28" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetEdgeColour</name></member>
      <member refid="classwx_styled_text_ctrl_1a5bcd5249910c4c7c41118da5d49858b3" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetEdgeColumn</name></member>
      <member refid="classwx_styled_text_ctrl_1af8183c56a932b0b06ac475109a14ce9c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetEdgeMode</name></member>
      <member refid="classwx_styled_text_ctrl_1a5af5606b6edbb85b554a03ecdfffa2db" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetEndAtLastLine</name></member>
      <member refid="classwx_styled_text_ctrl_1a9f2ea01c2fa3fdeb7021c071b1f0a7bd" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetEOLMode</name></member>
      <member refid="classwx_window_1af6c84b7679183b377ba27a52a2f708b4" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetEventHandler</name></member>
      <member refid="classwx_evt_handler_1a7388ae19c8657e5656471b658c320036" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetEvtHandlerEnabled</name></member>
      <member refid="classwx_styled_text_ctrl_1a095a5dc7299ff340410621baf3636597" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetExtraAscent</name></member>
      <member refid="classwx_styled_text_ctrl_1adbb77f11a6ada3ae989ea37e58f3b15e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetExtraDescent</name></member>
      <member refid="classwx_window_1ae9655f7c35ce7ac89cac2f6c0054b103" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetExtraStyle</name></member>
      <member refid="classwx_styled_text_ctrl_1ac446ba410b79acc1c9eaa42584dff055" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetFirstVisibleLine</name></member>
      <member refid="classwx_window_1a697f9f8d3ff389790f1c74b59bcb1d75" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetFocus</name></member>
      <member refid="classwx_window_1a6fa03f82d7917dff482754d0d2e2b1c8" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetFocusFromKbd</name></member>
      <member refid="classwx_styled_text_ctrl_1a36532e6641aafb97a7254ab285896ff2" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetFoldExpanded</name></member>
      <member refid="classwx_styled_text_ctrl_1a9f8281c84a1f6c945f4b41e566ec3b47" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetFoldFlags</name></member>
      <member refid="classwx_styled_text_ctrl_1a3a7717a0e33eac50428ea764786c3e1e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetFoldLevel</name></member>
      <member refid="classwx_styled_text_ctrl_1a213204145ccb740cca7eb816210e6ebe" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetFoldMarginColour</name></member>
      <member refid="classwx_styled_text_ctrl_1a318338d67d375dd4408b281b55fd3699" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetFoldMarginHiColour</name></member>
      <member refid="classwx_window_1a9ab11e7da57a1d08918aa75fc33f6ad3" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetFont</name></member>
      <member refid="classwx_window_1a69f1e1c7ddd370d72e68c70f13ac8de9" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetForegroundColour</name></member>
      <member refid="classwx_window_1a4c1a2cbc7363237b3a7c70af4e702c72" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetHelpText</name></member>
      <member refid="classwx_styled_text_ctrl_1ab7a2411d02d4fb900f7847f81a0bf9cf" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetHighlightGuide</name></member>
      <member refid="classwx_styled_text_ctrl_1aa3697a1a89bff16a98fc4b648d2a25ca" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetHotspotActiveBackground</name></member>
      <member refid="classwx_styled_text_ctrl_1a0f9e6a38b3f57612406f587dce145a31" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetHotspotActiveForeground</name></member>
      <member refid="classwx_styled_text_ctrl_1a543946a4c1705ea1f94fbc7b3b901239" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetHotspotActiveUnderline</name></member>
      <member refid="classwx_styled_text_ctrl_1a905c2e7323b7712084f84cb37399ea4a" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetHotspotSingleLine</name></member>
      <member refid="classwx_styled_text_ctrl_1a8a41c511c916ac59c486900eabfac5b4" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetHScrollBar</name></member>
      <member refid="classwx_window_1a7f27d0faed14effa013381bdc40e1bcd" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetId</name></member>
      <member refid="classwx_styled_text_ctrl_1ab0a658b03734d81d23d4654b35e88785" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetIndent</name></member>
      <member refid="classwx_styled_text_ctrl_1ac4ed86f4730dcbcd2a8272f33f74778b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetIndentationGuides</name></member>
      <member refid="classwx_window_1ae6dfe0b0d4a8c666b21ce8df8d96727b" prot="protected" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetInitialBestSize</name></member>
      <member refid="classwx_window_1a1b309ca50ba87e34f968c83b79af1397" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetInitialSize</name></member>
      <member refid="classwx_styled_text_ctrl_1a32d78b92db52a312d533dccafc6048f7" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetKeysUnicode</name></member>
      <member refid="classwx_styled_text_ctrl_1abdb42d7d41e71172d5e2939ead1ceb87" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetKeyWords</name></member>
      <member refid="classwx_control_1a2c2ae20554e7db5e765f163022ce09c0" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetLabel</name></member>
      <member refid="classwx_control_1afeb308dc3b54d8d735b33cb250395503" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetLabelMarkup</name></member>
      <member refid="classwx_control_1ae092899c3fe658831a9c796755a65eb7" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetLabelText</name></member>
      <member refid="classwx_styled_text_ctrl_1ac810f3a881221a261d95d701d080dda7" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetLastKeydownProcessed</name></member>
      <member refid="classwx_styled_text_ctrl_1a37c956d74a6daeb5ddfe40d98c3f6dfe" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetLayoutCache</name></member>
      <member refid="classwx_window_1a7d494549f7fcfed44af95f8ee364c1f9" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetLayoutDirection</name></member>
      <member refid="classwx_styled_text_ctrl_1ac19aeb2585c3794168611a9c097a00c3" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetLexer</name></member>
      <member refid="classwx_styled_text_ctrl_1aa55e15f075e652c051ed9f1ad4d2f4c6" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetLexerLanguage</name></member>
      <member refid="classwx_styled_text_ctrl_1a418944f7b93cb56fb2e70d1b623ae682" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetLineIndentation</name></member>
      <member refid="classwx_styled_text_ctrl_1af6a83c6573c60b12fd6aa3376349cf36" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetLineState</name></member>
      <member refid="classwx_styled_text_ctrl_1a4ebdadcd64a90f09c20ffc47226f4690" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetMainSelection</name></member>
      <member refid="classwx_styled_text_ctrl_1a66195611508b5ca6f3a191b4e5433fd0" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetMarginLeft</name></member>
      <member refid="classwx_styled_text_ctrl_1a6e164c4c454eb75d9082c55159572fcd" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetMarginMask</name></member>
      <member refid="classwx_styled_text_ctrl_1a20a270a0adafd05fdac58bb34e6748da" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetMarginRight</name></member>
      <member refid="classwx_styled_text_ctrl_1a18a3037d50ee82d355294c8c347a08c4" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetMargins</name></member>
      <member refid="classwx_styled_text_ctrl_1ae70bbd7ab233d7d8b3ffc6b7e8de1920" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetMarginSensitive</name></member>
      <member refid="classwx_styled_text_ctrl_1a79eaf23fc0c1b80a6b3cf4e9dc928461" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetMarginType</name></member>
      <member refid="classwx_styled_text_ctrl_1ab506524159db11a54ffd3fde2e4f601d" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetMarginWidth</name></member>
      <member refid="classwx_window_1a664e5b2ddd817d9c58788269fe1d8479" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetMaxClientSize</name></member>
      <member refid="classwx_window_1a38b496214d728a3212afadee5ed51606" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetMaxSize</name></member>
      <member refid="classwx_window_1a6e35ba44b97e374dfffa460d41d94b31" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetMinClientSize</name></member>
      <member refid="classwx_window_1a3fc066f4d8083319f004ac43811d545d" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetMinSize</name></member>
      <member refid="classwx_styled_text_ctrl_1a641d575d56ef4de4a2256184eecc86cf" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetModEventMask</name></member>
      <member refid="classwx_styled_text_ctrl_1adb7c207ea2bc0d74eb96aef2075084df" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetMouseDownCaptures</name></member>
      <member refid="classwx_styled_text_ctrl_1a8cbdb87eac5f4edd2bf78703192255fc" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetMouseDwellTime</name></member>
      <member refid="classwx_styled_text_ctrl_1ab747e3dc90cc75b4d706c2e7ee2a102e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetMultipleSelection</name></member>
      <member refid="classwx_window_1af80875cda5e1af98dcd7c8e712e3c800" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetName</name></member>
      <member refid="classwx_window_1aeab905f61df7004c1b76a3351dca9e96" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetNextHandler</name></member>
      <member refid="classwx_styled_text_ctrl_1ac6990933ca1f9dacd92ce73e6c34dc24" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetOvertype</name></member>
      <member refid="classwx_window_1a9a3f9d8477aab1d9176cd66ee56e75d9" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetOwnBackgroundColour</name></member>
      <member refid="classwx_window_1a89a4f62f23c1e7c845b8d07cecae4c43" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetOwnFont</name></member>
      <member refid="classwx_window_1a53f4a878e4e2d440bd00543f8014aaaa" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetOwnForegroundColour</name></member>
      <member refid="classwx_window_1aee57358435d6bd33f598c81354b47425" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetPalette</name></member>
      <member refid="classwx_styled_text_ctrl_1abab994f4de37a9d7c7286351577d19ea" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetPasteConvertEndings</name></member>
      <member refid="classwx_window_1a81f23590239934fa10fded0566a65d8c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetPosition</name></member>
      <member refid="classwx_window_1a07f5f7ed3f78e0ef7b3dee3f4da81001" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetPreviousHandler</name></member>
      <member refid="classwx_styled_text_ctrl_1a8422f36721ddac36265458c447125cbb" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetPrintColourMode</name></member>
      <member refid="classwx_styled_text_ctrl_1a9dfa04a9474c70abc36af50eca990883" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetPrintMagnification</name></member>
      <member refid="classwx_styled_text_ctrl_1a05bffeaf1d82befd6402cad5ca40bf29" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetPrintWrapMode</name></member>
      <member refid="classwx_styled_text_ctrl_1a503b51248a736de0aace8cac98cdd634" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetProperty</name></member>
      <member refid="classwx_styled_text_ctrl_1a8e0234fe76281a6645798c47a34c2ecd" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetReadOnly</name></member>
      <member refid="classwx_styled_text_ctrl_1a0872a1fb54b5e28e4e841809b821f830" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetRectangularSelectionAnchor</name></member>
      <member refid="classwx_styled_text_ctrl_1ab5fdb7c5973a2f4585027b426430c573" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetRectangularSelectionAnchorVirtualSpace</name></member>
      <member refid="classwx_styled_text_ctrl_1a0b69b45c7ae0dbe9765e4fe662c6630e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetRectangularSelectionCaret</name></member>
      <member refid="classwx_styled_text_ctrl_1ad762ea42339e7d3faea6ff8b71773e39" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetRectangularSelectionCaretVirtualSpace</name></member>
      <member refid="classwx_styled_text_ctrl_1a30441f30d7a1cce818205f819f1c7c91" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetRectangularSelectionModifier</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetRefData</name></member>
      <member refid="classwx_styled_text_ctrl_1ab6d036ea6ab7a6389eca1d8d1fa19430" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetSavePoint</name></member>
      <member refid="classwx_window_1aa842d59529f873683e55cd8392ec46e9" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetScrollbar</name></member>
      <member refid="classwx_window_1afbf4dc9064cf70cfe6884554b97a27bf" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetScrollPos</name></member>
      <member refid="classwx_styled_text_ctrl_1a8b1ad6a0f9d0b59e4b71f0b5eab69238" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetScrollWidth</name></member>
      <member refid="classwx_styled_text_ctrl_1a800c6ee3cc908f9ed5d0a6701afb43c6" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetSearchFlags</name></member>
      <member refid="classwx_styled_text_ctrl_1aff181c7ff3f55b66d1cd1fc2b9fb4b4b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetSelAlpha</name></member>
      <member refid="classwx_styled_text_ctrl_1a22825ff4a852af2798dffca897b3063f" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetSelBackground</name></member>
      <member refid="classwx_styled_text_ctrl_1a93a0b8b0c54846b064f010ae999296d9" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetSelection</name></member>
      <member refid="classwx_styled_text_ctrl_1a0c762f147dda831832b10e9b42ac74cf" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetSelectionEnd</name></member>
      <member refid="classwx_styled_text_ctrl_1a9bdcb970e3fa01b7e4f51c96b6132784" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetSelectionMode</name></member>
      <member refid="classwx_styled_text_ctrl_1af1555d1ff8f5e75be3a0b2ce17de2791" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetSelectionNAnchor</name></member>
      <member refid="classwx_styled_text_ctrl_1ac2be62fa3b37860deb4225fa45bb9205" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetSelectionNAnchorVirtualSpace</name></member>
      <member refid="classwx_styled_text_ctrl_1a197a8be506adcd0fd011fd265150dbbf" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetSelectionNCaret</name></member>
      <member refid="classwx_styled_text_ctrl_1ab287c51b65add3b900a23b11c4f2b04f" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetSelectionNCaretVirtualSpace</name></member>
      <member refid="classwx_styled_text_ctrl_1a9ad8211f8909203df9e6b9cabe132815" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetSelectionNEnd</name></member>
      <member refid="classwx_styled_text_ctrl_1af1cc7f008b6d8727c581ef7311ccec97" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetSelectionNStart</name></member>
      <member refid="classwx_styled_text_ctrl_1a4f8891026178d5cf2ba69a77b4846b9c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetSelectionStart</name></member>
      <member refid="classwx_styled_text_ctrl_1a8700f308a77dc08a2cd857e44ee0a194" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetSelForeground</name></member>
      <member refid="classwx_window_1a180312d5ad4a4a5ad805b8d52d67a74e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a8e383bc6d5ca008965922a36c676aea0" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a030a928cd854de3def97c5720f14695b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a2ea9b25296d591aea4470c8fd99ff7cb" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a307329dc3b10f5584aeb2cbce9293ffd" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetSizeHints</name></member>
      <member refid="classwx_window_1ae813c640e1e2bc6014423247050846cf" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetSizeHints</name></member>
      <member refid="classwx_window_1abc95691b45e29a52c24aa9d33d46dec1" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetSizer</name></member>
      <member refid="classwx_window_1a29938af9828fd35da666536cdfb6b73c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetSizerAndFit</name></member>
      <member refid="classwx_styled_text_ctrl_1a6298a2fcb9d04e53a1521e6966c9900a" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetStatus</name></member>
      <member refid="classwx_styled_text_ctrl_1a05df936f0003d9df7a24762120901b96" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetSTCCursor</name></member>
      <member refid="classwx_styled_text_ctrl_1a6b835a56a1a870fc46e3b8bc005bcc07" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetSTCFocus</name></member>
      <member refid="classwx_styled_text_ctrl_1a9d9f2fc0cc7f4f10e437139602f69b18" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetStyleBits</name></member>
      <member refid="classwx_styled_text_ctrl_1a879088a9c2e207f2664b2b558eceabb8" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetStyleBytes</name></member>
      <member refid="classwx_styled_text_ctrl_1a177842bba7bc31bf5a000382f2a258be" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetStyling</name></member>
      <member refid="classwx_styled_text_ctrl_1a7180670a48c8e3512a7b81fbfe4534c8" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetTabIndents</name></member>
      <member refid="classwx_styled_text_ctrl_1a3b762d0f295c136f78826335c871fabb" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetTabWidth</name></member>
      <member refid="classwx_styled_text_ctrl_1a6945abe1ceba12c3aa69a13fc3ecd3bb" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetTargetEnd</name></member>
      <member refid="classwx_styled_text_ctrl_1ab6dc546a539447d354bfbe60ac023021" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetTargetStart</name></member>
      <member refid="classwx_styled_text_ctrl_1a404eb5101b0c1602f29dec04ef6e4394" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetText</name></member>
      <member refid="classwx_styled_text_ctrl_1a393c04f71bc68ec711a82232d440d4bc" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetTextRaw</name></member>
      <member refid="classwx_window_1a41dd19ed8809fd8ec662e2aa2a9579c3" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetThemeEnabled</name></member>
      <member refid="classwx_window_1a81a9fb74e3c6c7f4416e882f5e589b8c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetToolTip</name></member>
      <member refid="classwx_window_1a494e0b7cfca9299caa40e847767e7357" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetToolTip</name></member>
      <member refid="classwx_window_1ac8cf4398cec50ac36634760f45a0656f" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetTransparent</name></member>
      <member refid="classwx_styled_text_ctrl_1a905908a4ba6cb09a938c42e8b1b58142" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetTwoPhaseDraw</name></member>
      <member refid="classwx_styled_text_ctrl_1a67e1aba75c768fee4acf078ccf1b25f5" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetUndoCollection</name></member>
      <member refid="classwx_styled_text_ctrl_1a9c2d1af466e2e5279215b90ca02c2d88" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetUseAntiAliasing</name></member>
      <member refid="classwx_styled_text_ctrl_1ae809308836c2071e8624db5fc610f040" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetUseHorizontalScrollBar</name></member>
      <member refid="classwx_styled_text_ctrl_1a0ed22fd1d4945a917156b4b53d8829b0" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetUseTabs</name></member>
      <member refid="classwx_styled_text_ctrl_1a5fe6d6b2b0ebf05ff197c77254d8e594" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetUseVerticalScrollBar</name></member>
      <member refid="classwx_window_1a00066c70049a7be3ce6b648d206e6432" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetValidator</name></member>
      <member refid="classwx_styled_text_ctrl_1abcdd147640044f0b589ad41e01de3b69" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetViewEOL</name></member>
      <member refid="classwx_styled_text_ctrl_1a4fa5fc715d380567796e41f220729c16" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetViewWhiteSpace</name></member>
      <member refid="classwx_window_1a37f293b7904bc6668b86cccb0aea5669" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetVirtualSize</name></member>
      <member refid="classwx_window_1a8e95201edebe43b9623bd3bdc555af4d" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetVirtualSize</name></member>
      <member refid="classwx_styled_text_ctrl_1a555832e34d6394ca922dc9ad0341f84d" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetVirtualSpaceOptions</name></member>
      <member refid="classwx_styled_text_ctrl_1a1307ace5a86483b5c05dc6b980ec3b99" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetVisiblePolicy</name></member>
      <member refid="classwx_styled_text_ctrl_1a44acbd82ce7e4c351a6f7dec387769e1" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetVScrollBar</name></member>
      <member refid="classwx_styled_text_ctrl_1a2ac8e962f6d64eec9ca2402f805afc6f" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetWhitespaceBackground</name></member>
      <member refid="classwx_styled_text_ctrl_1a90386e4db2515b09ad1927b4ee77a5ee" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetWhitespaceChars</name></member>
      <member refid="classwx_styled_text_ctrl_1a503a80587f9ff5f2b96c2a1f0e294378" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetWhitespaceForeground</name></member>
      <member refid="classwx_styled_text_ctrl_1ab58a13a90a65b2870dc7918aaf1c9f64" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetWhitespaceSize</name></member>
      <member refid="classwx_window_1a306af30adec68689f74ed537b4f9d5fd" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetWindowStyle</name></member>
      <member refid="classwx_window_1aee2cf342f80523432e7f2299d299451b" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>SetWindowStyleFlag</name></member>
      <member refid="classwx_window_1acd955418c336e73b3e32cadf1ca46e29" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetWindowVariant</name></member>
      <member refid="classwx_styled_text_ctrl_1a91d5c9df3ecc79aa75a518cc4a4aa856" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetWordChars</name></member>
      <member refid="classwx_styled_text_ctrl_1af5409c5666f48c330eb52f992a000f79" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetWrapIndentMode</name></member>
      <member refid="classwx_styled_text_ctrl_1ad009f046db17691b308000409b004918" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetWrapMode</name></member>
      <member refid="classwx_styled_text_ctrl_1ae69e2a7978cfe4ab7ff843f6bf59ef77" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetWrapStartIndent</name></member>
      <member refid="classwx_styled_text_ctrl_1af7b68c16eadf74c929a0a14923cfe785" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetWrapVisualFlags</name></member>
      <member refid="classwx_styled_text_ctrl_1a5910f52bfa080616ca49306b73725c86" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetWrapVisualFlagsLocation</name></member>
      <member refid="classwx_styled_text_ctrl_1a675c4a537ad6f35101057a745ded1c66" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetXCaretPolicy</name></member>
      <member refid="classwx_styled_text_ctrl_1af0366b19a354f80f12fc73b9ecd10024" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetXOffset</name></member>
      <member refid="classwx_styled_text_ctrl_1ab0105eadf06fb58b01eec70d1c5b3f2d" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetYCaretPolicy</name></member>
      <member refid="classwx_styled_text_ctrl_1a689b6d6fd77a45f2759d24165234c092" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SetZoom</name></member>
      <member refid="classwx_window_1a0c43a27fa04f9c17cc28fde71fdba490" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>ShouldInheritColours</name></member>
      <member refid="classwx_window_1a7fbc92ce240a8d4f6956b6e0276ef07f" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>Show</name></member>
      <member refid="classwx_styled_text_ctrl_1a6c1bc19d97321b1bfa272f8e9b07b75c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ShowLines</name></member>
      <member refid="classwx_window_1a596b1715edfc7609f352b2e000ecbaec" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>ShowWithEffect</name></member>
      <member refid="classwx_styled_text_ctrl_1a3d712a9a418ef6d8de896bd5a39375db" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StartRecord</name></member>
      <member refid="classwx_styled_text_ctrl_1a6ca352cb6a20c69a9f4bc5001d0fdf25" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StartStyling</name></member>
      <member refid="classwx_styled_text_ctrl_1a27ad57e2f03a339b2759f1cae22b1651" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StopRecord</name></member>
      <member refid="classwx_styled_text_ctrl_1a007d2175a04dedd349cf44a7625ca72d" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StutteredPageDown</name></member>
      <member refid="classwx_styled_text_ctrl_1ac42d4ddbb20357422e2581e054f1e6b5" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StutteredPageDownExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1a52ae7d5d4cb62bfc9fdf01eb1855dc5f" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StutteredPageUp</name></member>
      <member refid="classwx_styled_text_ctrl_1a15f422b87392daaae228fdf5a305a780" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StutteredPageUpExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1a599a5c4fcc4af55c173492d8b0839afd" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StyleClearAll</name></member>
      <member refid="classwx_styled_text_ctrl_1aa0a453c7c4fa4b65d4095d676d0831b2" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StyleResetDefault</name></member>
      <member refid="classwx_styled_text_ctrl_1a5a5157388e230ccfe1cefeaa2334346e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StyleSetBackground</name></member>
      <member refid="classwx_styled_text_ctrl_1ab666a9627aef3a3fe7f0a67736f1c0e8" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StyleSetBold</name></member>
      <member refid="classwx_styled_text_ctrl_1a31ce6e8b277eff27b43733ff4002469f" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StyleSetCase</name></member>
      <member refid="classwx_styled_text_ctrl_1a34ce1df694a712a9ad19227b19d82f09" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StyleSetChangeable</name></member>
      <member refid="classwx_styled_text_ctrl_1a8e9996a37a1c1a93a39a29f928fc87ac" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StyleSetCharacterSet</name></member>
      <member refid="classwx_styled_text_ctrl_1ab25f02ee7215ce6fb98abd07e80410dd" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StyleSetEOLFilled</name></member>
      <member refid="classwx_styled_text_ctrl_1aba42c64b450953bbdad03aee33b3730f" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StyleSetFaceName</name></member>
      <member refid="classwx_styled_text_ctrl_1a23bcfd5c7d2c1e445cf801b77217531f" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StyleSetFont</name></member>
      <member refid="classwx_styled_text_ctrl_1a5eb90aa07d1eb7b08b17b0865a9a9f7c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StyleSetFontAttr</name></member>
      <member refid="classwx_styled_text_ctrl_1ab5305d9d20766a67a040325cd2140b25" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StyleSetFontEncoding</name></member>
      <member refid="classwx_styled_text_ctrl_1a340519113f1ce71d5fbf5ad857fd2775" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StyleSetForeground</name></member>
      <member refid="classwx_styled_text_ctrl_1aa4445d605000f0da8f45c3fa6ee693f2" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StyleSetHotSpot</name></member>
      <member refid="classwx_styled_text_ctrl_1a48e18a2aaa345af6d5c40b592aec496f" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StyleSetItalic</name></member>
      <member refid="classwx_styled_text_ctrl_1a9b620f2c97f5040a720fa41cecd83b8b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StyleSetSize</name></member>
      <member refid="classwx_styled_text_ctrl_1ae2e8e43d16a25898b11972de8772044e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StyleSetSpec</name></member>
      <member refid="classwx_styled_text_ctrl_1a3e86b2923933019f77f0cc4c1d597ca8" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StyleSetUnderline</name></member>
      <member refid="classwx_styled_text_ctrl_1ade9c9f8dedd0a1501368b1c04c6f487b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>StyleSetVisible</name></member>
      <member refid="classwx_styled_text_ctrl_1aa22a09d093a4ac8e91b1aa8dfc743ddb" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>SwapMainAnchorCaret</name></member>
      <member refid="classwx_styled_text_ctrl_1a2e1952f8b5c3dff0c1522465bc9ae109" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Tab</name></member>
      <member refid="classwx_styled_text_ctrl_1ab943ccce1bf3a135bea42becef9d5653" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>TargetFromSelection</name></member>
      <member refid="classwx_styled_text_ctrl_1ae955348ccf4efd231357c6d96f299589" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>TextHeight</name></member>
      <member refid="classwx_styled_text_ctrl_1a52586525a7af5c901828ca8a44ae71ba" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>TextWidth</name></member>
      <member refid="classwx_window_1a279a532124073261b28131b6afb59a1e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Thaw</name></member>
      <member refid="classwx_styled_text_ctrl_1adfc2b57b5e8d2f1fb512437344aab923" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ToggleCaretSticky</name></member>
      <member refid="classwx_styled_text_ctrl_1a41820dbb85f0b04756552982f276e621" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ToggleFold</name></member>
      <member refid="classwx_window_1a8a4fa47129de552bfec37db8c69688a2" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ToggleWindowStyle</name></member>
      <member refid="classwx_window_1ab8e51f36e7d8790b361c8d8c6f37b1ad" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>TransferDataFromWindow</name></member>
      <member refid="classwx_window_1a88cc65e424a129d9b0057756cdb67ec9" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>TransferDataToWindow</name></member>
      <member refid="classwx_evt_handler_1a5e25fece1cb6cbc11fd1d41ec140319c" prot="protected" virt="virtual"><scope>wxStyledTextCtrl</scope><name>TryAfter</name></member>
      <member refid="classwx_evt_handler_1ad4b0eac704dd005ac6a88fdb1e673c13" prot="protected" virt="virtual"><scope>wxStyledTextCtrl</scope><name>TryBefore</name></member>
      <member refid="classwx_evt_handler_1a5d3854b4dfb6230fd9d3cf3871c6a607" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Unbind</name></member>
      <member refid="classwx_evt_handler_1a9992b15750a133127d76ad6e9be7e11f" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Unbind</name></member>
      <member refid="classwx_styled_text_ctrl_1af95f2c228d605f5d22afb14e8a61acbb" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>Undo</name></member>
      <member refid="classwx_evt_handler_1a22e5db2ec1d19c8252c056fd116975d7" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>Unlink</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>UnRef</name></member>
      <member refid="classwx_window_1a695f60d65f8f6c12e3c3645ad9c0c35b" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>UnregisterHotKey</name></member>
      <member refid="classwx_window_1ad9bc342d1e38d221e37f0f6396950c8c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>UnreserveControlId</name></member>
      <member refid="classwx_window_1ae75712451673658b0a533480bf5eeaa4" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>UnsetToolTip</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>UnShare</name></member>
      <member refid="classwx_window_1abaf28f1a075fd1b10f761a8febe597ec" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>Update</name></member>
      <member refid="classwx_window_1adf0a4987728bd0bf69f922641b3efbfc" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>UpdateWindowUI</name></member>
      <member refid="classwx_styled_text_ctrl_1ab33c702836fe7f5bd001f9750781c8fb" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>UpperCase</name></member>
      <member refid="classwx_styled_text_ctrl_1a66f2c0277170bca26e3da29a5cde193b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>UsePopUp</name></member>
      <member refid="classwx_styled_text_ctrl_1aca26323e7a482fb4fe2651ef2158f2c1" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>UserListShow</name></member>
      <member refid="classwx_window_1ac87f253253a0c5eb498871c83afa40fd" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>Validate</name></member>
      <member refid="classwx_styled_text_ctrl_1a7f1a7f3ea35f58e5b9bc5227f5833400" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>VCHome</name></member>
      <member refid="classwx_styled_text_ctrl_1af4e34f2bbdca94ccbd89960a7e765dd5" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>VCHomeExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1a7675ef1a8905fad08e50d1c72fdfdfa5" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>VCHomeRectExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1ae2ae99a185d56fe6b9b631c099e1ca55" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>VCHomeWrap</name></member>
      <member refid="classwx_styled_text_ctrl_1ae56149308008de97ad52f2cc0fbc3834" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>VCHomeWrapExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1a7fce59582d5c0d1100860f4f2c7aeac0" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>VisibleFromDocLine</name></member>
      <member refid="classwx_window_1ac500152d1eca3a2ee98a68e7ea7372b5" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>WarpPointer</name></member>
      <member refid="classwx_window_1aa456f800c9dde3b2361cad0abf54bc27" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>WindowToClientSize</name></member>
      <member refid="classwx_styled_text_ctrl_1a53f125206f4228bbd121cb2ff220b341" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>WordEndPosition</name></member>
      <member refid="classwx_styled_text_ctrl_1a4ca6f1c3ca419de400ebe39ab35f51f3" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>WordLeft</name></member>
      <member refid="classwx_styled_text_ctrl_1a1c6fa64a1f9cd980d1788113a54d27ed" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>WordLeftEnd</name></member>
      <member refid="classwx_styled_text_ctrl_1af8aa311e02e87ce6afc74168253b5926" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>WordLeftEndExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1a3fd89d0457dba6ec11dc251084b023ca" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>WordLeftExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1a7a0cd4c5aa77fc3b9a4e64a56075a22c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>WordPartLeft</name></member>
      <member refid="classwx_styled_text_ctrl_1a542c023362fd69ed830312205d1765b6" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>WordPartLeftExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1a17f07b597ba6f78edba3299d55cd8f0a" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>WordPartRight</name></member>
      <member refid="classwx_styled_text_ctrl_1a2fc12c9c741688bde4aaebb31c72e5d9" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>WordPartRightExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1ab2d591e26e64d471b6bf23670747f7a1" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>WordRight</name></member>
      <member refid="classwx_styled_text_ctrl_1a76f215ddde10790de36f62b2075dc169" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>WordRightEnd</name></member>
      <member refid="classwx_styled_text_ctrl_1a94e2562fd4feb6c60aef3b84ed672e01" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>WordRightEndExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1a0bb6af61d66ca7459d52ed451aad939a" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>WordRightExtend</name></member>
      <member refid="classwx_styled_text_ctrl_1aafea98346c64fce7375232412010adb4" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>WordStartPosition</name></member>
      <member refid="classwx_styled_text_ctrl_1afe6db16c2e8b1c7422c23989044d66e5" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>WrapCount</name></member>
      <member refid="classwx_control_1adb8f3edf807efa9159de826bf92d6a44" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>wxControl</name></member>
      <member refid="classwx_control_1a08428de2ba5cc988a86fe17071d49522" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>wxControl</name></member>
      <member refid="classwx_evt_handler_1a3f0166c4154227d05575b01eb2c8d4be" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>wxEvtHandler</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>wxObject</name></member>
      <member refid="classwx_styled_text_ctrl_1a0a55567d3331ee6cb8271d183be7a737" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>wxStyledTextCtrl</name></member>
      <member refid="classwx_window_1a695200a4915b934926dcf32afa44544c" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>wxWindow</name></member>
      <member refid="classwx_window_1a7799009b10d1765d1bbb6db4994f922e" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>wxWindow</name></member>
      <member refid="classwx_styled_text_ctrl_1ad5d6fc9fc4a1362dfb1d048d77e0210b" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ZoomIn</name></member>
      <member refid="classwx_styled_text_ctrl_1a08c90b90ddb67c6bdb362474e294eba6" prot="public" virt="non-virtual"><scope>wxStyledTextCtrl</scope><name>ZoomOut</name></member>
      <member refid="classwx_evt_handler_1a372d2239d91521eddc8fd2715fcab584" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>~wxEvtHandler</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>~wxObject</name></member>
      <member refid="classwx_window_1a0c2a46181a89c349327f0b276f5ef8d7" prot="public" virt="virtual"><scope>wxStyledTextCtrl</scope><name>~wxWindow</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
