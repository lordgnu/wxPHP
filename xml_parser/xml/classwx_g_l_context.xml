<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_g_l_context" kind="class" prot="public">
    <compoundname>wxGLContext</compoundname>
    <basecompoundref refid="classwx_object" prot="public" virt="non-virtual">wxObject</basecompoundref>
    <includes local="no">wx/glcanvas.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_g_l_context_1a2c7dc9b612514bd3ffaf331ce0668661" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxGLContext::wxGLContext</definition>
        <argsstring>(wxGLCanvas *win, const wxGLContext *other=NULL)</argsstring>
        <name>wxGLContext</name>
        <param>
          <type><ref refid="classwx_g_l_canvas" kindref="compound">wxGLCanvas</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_g_l_context" kindref="compound">wxGLContext</ref> *</type>
          <declname>other</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>The canvas that is used to initialize this context. This parameter is needed only temporarily, and the caller may do anything with it (e.g. destroy the window) after the constructor returned. <linebreak/>
 It will be possible to bind (make current) this context to any other <ref refid="classwx_g_l_canvas" kindref="compound">wxGLCanvas</ref> that has been created with equivalent attributes as win. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Context to share display lists with or NULL (the default) for no sharing. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/glcanvas.h" line="61"/>
      </memberdef>
      <memberdef kind="function" id="classwx_g_l_context_1a64f2df7d615cbd76093590194867f6ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxGLContext::SetCurrent</definition>
        <argsstring>(const wxGLCanvas &amp;win) const </argsstring>
        <name>SetCurrent</name>
        <param>
          <type>const <ref refid="classwx_g_l_canvas" kindref="compound">wxGLCanvas</ref> &amp;</type>
          <declname>win</declname>
        </param>
        <briefdescription>
<para>Makes the OpenGL state that is represented by this rendering context current with the <ref refid="classwx_g_l_canvas" kindref="compound">wxGLCanvas</ref> <emphasis>win</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><emphasis>win</emphasis> can be a different <ref refid="classwx_g_l_canvas" kindref="compound">wxGLCanvas</ref> window than the one that was passed to the constructor of this rendering context. If <emphasis>RC</emphasis> is an object of type <ref refid="classwx_g_l_context" kindref="compound">wxGLContext</ref>, the statements <emphasis>&quot;RC.SetCurrent(win);&quot;</emphasis> and <emphasis>&quot;win.SetCurrent(RC);&quot;</emphasis> are equivalent, see <ref refid="classwx_g_l_canvas_1a9f9ab3909606484e717904064d4e7b4f" kindref="member">wxGLCanvas::SetCurrent()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/glcanvas.h" line="73"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An instance of a <ref refid="classwx_g_l_context" kindref="compound">wxGLContext</ref> represents the state of an OpenGL state machine and the connection between OpenGL and the system. </para>    </briefdescription>
    <detaileddescription>
<para>The OpenGL state includes everything that can be set with the OpenGL API: colors, rendering variables, display lists, texture objects, etc. Although it is possible to have multiple rendering contexts share display lists in order to save resources, this method is hardly used today any more, because display lists are only a tiny fraction of the overall state.</para><para>Therefore, one rendering context is usually used with or bound to multiple output windows in turn, so that the application has access to the complete and identical state while rendering into each window.</para><para>Binding (making current) a rendering context with another instance of a <ref refid="classwx_g_l_canvas" kindref="compound">wxGLCanvas</ref> however works only if the other <ref refid="classwx_g_l_canvas" kindref="compound">wxGLCanvas</ref> was created with the same attributes as the <ref refid="classwx_g_l_canvas" kindref="compound">wxGLCanvas</ref> from which the <ref refid="classwx_g_l_context" kindref="compound">wxGLContext</ref> was initialized. (This applies to sharing display lists among contexts analogously.)</para><para>Note that some <ref refid="classwx_g_l_context" kindref="compound">wxGLContext</ref> features are extremely platform-specific - its best to check your native platform&apos;s glcanvas header (on windows include/wx/msw/glcanvas.h) to see what features your native platform provides.</para><para>wxHAS_OPENGL_ES is defined on platforms that only have this implementation available (eg the iPhone) und don&apos;t support the full specification.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxgl" kindref="member">wxGL</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__gl" kindref="compound">OpenGL</ref></para><para><simplesect kind="see"><para><ref refid="classwx_g_l_canvas" kindref="compound">wxGLCanvas</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="6719">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="6718">
        <label>wxGLContext</label>
        <link refid="classwx_g_l_context"/>
        <childnode refid="6719" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6721">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="6722" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="6720">
        <label>wxGLContext</label>
        <link refid="classwx_g_l_context"/>
        <childnode refid="6721" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6722">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/glcanvas.h" line="45" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/glcanvas.h" bodystart="44" bodyend="74"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxGLContext</scope><name>AllocExclusive</name></member>
      <member refid="classwx_object_1a1d39f1d3650fe0982c9a1abe7f9fe7b7" prot="protected" virt="virtual"><scope>wxGLContext</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a95c6a5e4e1e03ff23c7b9efe4cff0c1a" prot="protected" virt="virtual"><scope>wxGLContext</scope><name>CreateRefData</name></member>
      <member refid="classwx_object_1ab3a0c6f723cbaddb47be4e8dd98cc8e2" prot="public" virt="virtual"><scope>wxGLContext</scope><name>GetClassInfo</name></member>
      <member refid="classwx_object_1aabdb4fc957226544a8408167844e4f42" prot="public" virt="non-virtual"><scope>wxGLContext</scope><name>GetRefData</name></member>
      <member refid="classwx_object_1af40d580385cf4f8112fae7713404b01e" prot="public" virt="non-virtual"><scope>wxGLContext</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a80a1a3fda7b14396a9ddd3d7a46a88bd" prot="public" virt="non-virtual"><scope>wxGLContext</scope><name>IsSameAs</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxGLContext</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxGLContext</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxGLContext</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxGLContext</scope><name>Ref</name></member>
      <member refid="classwx_g_l_context_1a64f2df7d615cbd76093590194867f6ce" prot="public" virt="virtual"><scope>wxGLContext</scope><name>SetCurrent</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxGLContext</scope><name>SetRefData</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxGLContext</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxGLContext</scope><name>UnShare</name></member>
      <member refid="classwx_g_l_context_1a2c7dc9b612514bd3ffaf331ce0668661" prot="public" virt="non-virtual"><scope>wxGLContext</scope><name>wxGLContext</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxGLContext</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxGLContext</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxGLContext</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
