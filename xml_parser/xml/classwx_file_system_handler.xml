<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_file_system_handler" kind="class" prot="public">
    <compoundname>wxFileSystemHandler</compoundname>
    <basecompoundref refid="classwx_object" prot="public" virt="non-virtual">wxObject</basecompoundref>
    <derivedcompoundref refid="classwx_archive_f_s_handler" prot="public" virt="non-virtual">wxArchiveFSHandler</derivedcompoundref>
    <derivedcompoundref refid="classwx_filter_f_s_handler" prot="public" virt="non-virtual">wxFilterFSHandler</derivedcompoundref>
    <derivedcompoundref refid="classwx_internet_f_s_handler" prot="public" virt="non-virtual">wxInternetFSHandler</derivedcompoundref>
    <derivedcompoundref refid="classwx_memory_f_s_handler" prot="public" virt="non-virtual">wxMemoryFSHandler</derivedcompoundref>
    <includes local="no">wx/filesys.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_file_system_handler_1a81ce16c40bb1309cae25493e90c1bc88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxFileSystemHandler::wxFileSystemHandler</definition>
        <argsstring>()</argsstring>
        <name>wxFileSystemHandler</name>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/filesys.h" line="358"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_system_handler_1a421720c382a63c7117076757567c762f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool wxFileSystemHandler::CanOpen</definition>
        <argsstring>(const wxString &amp;location)=0</argsstring>
        <name>CanOpen</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>location</declname>
        </param>
        <briefdescription>
<para>Returns true if the handler is able to open this file. </para>        </briefdescription>
        <detaileddescription>
<para>This function doesn&apos;t check whether the file exists or not, it only checks if it knows the protocol. Example:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classwx_file_system_handler_1a421720c382a63c7117076757567c762f" kindref="member" tooltip="Returns true if the handler is able to open this file.">MyHand::CanOpen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classwx_string" kindref="compound" tooltip="The wxString class has been completely rewritten for wxWidgets 3.0 and this change was actually the m...">wxString</ref>&amp;<sp/>location)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classwx_file_system_handler_1adf6e84f1ba33f047c15fb33f343b523a" kindref="member" tooltip="Returns the protocol string extracted from location.">GetProtocol</ref>(location)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;http&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
</programlisting></para><para>Must be overridden in derived handlers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/filesys.h" line="374"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_system_handler_1a90b7fe424e6c5cd53c9900806b3cacaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxFileSystemHandler::FindFirst</definition>
        <argsstring>(const wxString &amp;wildcard, int flags=0)</argsstring>
        <name>FindFirst</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>wildcard</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Works like <ref refid="group__group__funcmacro__file_1gab136c4ed6c3d71262d12780b723479ce" kindref="member">wxFindFirstFile()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the name of the first filename (within filesystem&apos;s current path) that matches <emphasis>wildcard</emphasis>. <emphasis>flags</emphasis> may be one of wxFILE (only files), wxDIR (only directories) or 0 (both).</para><para>This method is only called if <ref refid="classwx_file_system_handler_1a421720c382a63c7117076757567c762f" kindref="member">CanOpen()</ref> returns true. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/filesys.h" line="386"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_system_handler_1a0c07370b4135460f39228d49c3d297a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxFileSystemHandler::FindNext</definition>
        <argsstring>()</argsstring>
        <name>FindNext</name>
        <briefdescription>
<para>Returns next filename that matches parameters passed to <ref refid="classwx_file_system_1a93f5d9fc8fe388213f8ed7dddc55db71" kindref="member">wxFileSystem::FindFirst</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>This method is only called if <ref refid="classwx_file_system_handler_1a421720c382a63c7117076757567c762f" kindref="member">CanOpen()</ref> returns true and <ref refid="classwx_file_system_handler_1a90b7fe424e6c5cd53c9900806b3cacaa" kindref="member">FindFirst()</ref> returned a non-empty string. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/filesys.h" line="394"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_system_handler_1a1295897a496f83c538d4dcf8897301e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classwx_f_s_file" kindref="compound">wxFSFile</ref> *</type>
        <definition>virtual wxFSFile* wxFileSystemHandler::OpenFile</definition>
        <argsstring>(wxFileSystem &amp;fs, const wxString &amp;location)=0</argsstring>
        <name>OpenFile</name>
        <param>
          <type><ref refid="classwx_file_system" kindref="compound">wxFileSystem</ref> &amp;</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>location</declname>
        </param>
        <briefdescription>
<para>Opens the file and returns <ref refid="classwx_f_s_file" kindref="compound">wxFSFile</ref> pointer or NULL if failed. </para>        </briefdescription>
        <detaileddescription>
<para>Must be overridden in derived handlers.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fs</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent FS (the FS from that OpenFile was called). See the ZIP handler for details of how to use it. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>The absolute location of file. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/filesys.h" line="418"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_file_system_handler_1a95c04756cd89cc2a5d66116bbbb3acdc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>static wxString wxFileSystemHandler::GetMimeTypeFromExt</definition>
        <argsstring>(const wxString &amp;location)</argsstring>
        <name>GetMimeTypeFromExt</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>location</declname>
        </param>
        <briefdescription>
<para>Returns the MIME type based on <bold>extension</bold> of <emphasis>location</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>(While <ref refid="classwx_f_s_file_1a85fc1cc7032d21d27457d0ee6824b398" kindref="member">wxFSFile::GetMimeType()</ref> returns real MIME type - either extension-based or queried from HTTP.)</para><para>Example: <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_file_system_handler_1a95c04756cd89cc2a5d66116bbbb3acdc" kindref="member" tooltip="Returns the MIME type based on extension of location.">GetMimeTypeFromExt</ref>(</highlight><highlight class="stringliteral">&quot;index.htm&quot;</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;text/html&quot;</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/filesys.h" line="406"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classwx_file_system_handler_1a3b928b08cc72f225b94fed6077c37d52" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>static wxString wxFileSystemHandler::GetAnchor</definition>
        <argsstring>(const wxString &amp;location)</argsstring>
        <name>GetAnchor</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>location</declname>
        </param>
        <briefdescription>
<para>Returns the anchor if present in the location. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_f_s_file_1acba1c1772723faac368d0f0e9f002745" kindref="member">wxFSFile::GetAnchor</ref> for details.</para><para>Example: <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_file_system_handler_1a3b928b08cc72f225b94fed6077c37d52" kindref="member" tooltip="Returns the anchor if present in the location.">GetAnchor</ref>(</highlight><highlight class="stringliteral">&quot;index.htm#chapter2&quot;</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;chapter2&quot;</highlight></codeline>
</programlisting></para><para><simplesect kind="note"><para>the anchor is NOT part of the left location. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/filesys.h" line="433"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_system_handler_1a3f56ed8be86e2ddaf3af0d20c17aa067" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>static wxString wxFileSystemHandler::GetLeftLocation</definition>
        <argsstring>(const wxString &amp;location)</argsstring>
        <name>GetLeftLocation</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>location</declname>
        </param>
        <briefdescription>
<para>Returns the left location string extracted from <emphasis>location</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Example: <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_file_system_handler_1a3f56ed8be86e2ddaf3af0d20c17aa067" kindref="member" tooltip="Returns the left location string extracted from location.">GetLeftLocation</ref>(</highlight><highlight class="stringliteral">&quot;file:myzipfile.zip#zip:index.htm&quot;</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;file:myzipfile.zip&quot;</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/filesys.h" line="443"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_system_handler_1adf6e84f1ba33f047c15fb33f343b523a" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>static wxString wxFileSystemHandler::GetProtocol</definition>
        <argsstring>(const wxString &amp;location)</argsstring>
        <name>GetProtocol</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>location</declname>
        </param>
        <briefdescription>
<para>Returns the protocol string extracted from <emphasis>location</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Example: <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_file_system_handler_1adf6e84f1ba33f047c15fb33f343b523a" kindref="member" tooltip="Returns the protocol string extracted from location.">GetProtocol</ref>(</highlight><highlight class="stringliteral">&quot;file:myzipfile.zip#zip:index.htm&quot;</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;zip&quot;</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/filesys.h" line="453"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_system_handler_1a759935b4792339bf97d6c6529bffb966" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>static wxString wxFileSystemHandler::GetRightLocation</definition>
        <argsstring>(const wxString &amp;location)</argsstring>
        <name>GetRightLocation</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>location</declname>
        </param>
        <briefdescription>
<para>Returns the right location string extracted from <emphasis>location</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Example: <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_file_system_handler_1a759935b4792339bf97d6c6529bffb966" kindref="member" tooltip="Returns the right location string extracted from location.">GetRightLocation</ref>(</highlight><highlight class="stringliteral">&quot;file:myzipfile.zip#zip:index.htm&quot;</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;index.htm&quot;</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/filesys.h" line="463"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Classes derived from <ref refid="classwx_file_system_handler" kindref="compound">wxFileSystemHandler</ref> are used to access virtual file systems. </para>    </briefdescription>
    <detaileddescription>
<para>Its public interface consists of two methods: <ref refid="classwx_file_system_handler_1a421720c382a63c7117076757567c762f" kindref="member">wxFileSystemHandler::CanOpen</ref> and <ref refid="classwx_file_system_handler_1a1295897a496f83c538d4dcf8897301e2" kindref="member">wxFileSystemHandler::OpenFile</ref>.</para><para>It provides additional protected methods to simplify the process of opening the <ulink url="file:">file:</ulink> <ref refid="classwx_file_system_handler_1adf6e84f1ba33f047c15fb33f343b523a" kindref="member">GetProtocol()</ref>, <ref refid="classwx_file_system_handler_1a3f56ed8be86e2ddaf3af0d20c17aa067" kindref="member">GetLeftLocation()</ref>, <ref refid="classwx_file_system_handler_1a759935b4792339bf97d6c6529bffb966" kindref="member">GetRightLocation()</ref>, <ref refid="classwx_file_system_handler_1a3b928b08cc72f225b94fed6077c37d52" kindref="member">GetAnchor()</ref>, <ref refid="classwx_file_system_handler_1a95c04756cd89cc2a5d66116bbbb3acdc" kindref="member">GetMimeTypeFromExt()</ref>.</para><para>Please have a look at overview (see <ref refid="classwx_file_system" kindref="compound">wxFileSystem</ref>) if you don&apos;t know how locations are constructed.</para><para>Also consult the <ref refid="overview_fs_1overview_fs_wxhtmlfs" kindref="member">list of available handlers</ref>.</para><para>Note that the handlers are shared by all instances of <ref refid="classwx_file_system" kindref="compound">wxFileSystem</ref>.</para><para><simplesect kind="remark"><para>wxHTML library provides handlers for local files and HTTP or FTP protocol.</para></simplesect>
<simplesect kind="note"><para>The location parameter passed to <ref refid="classwx_file_system_handler_1a1295897a496f83c538d4dcf8897301e2" kindref="member">OpenFile()</ref> or <ref refid="classwx_file_system_handler_1a421720c382a63c7117076757567c762f" kindref="member">CanOpen()</ref> methods is always an absolute path. You don&apos;t need to check the FS&apos;s current path.</para></simplesect>
<bold>wxPerl Note:</bold> In wxPerl, you need to derive your file system handler class from <computeroutput>Wx::PlFileSystemHandler</computeroutput>.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__vfs" kindref="compound">Virtual File System</ref></para><para><simplesect kind="see"><para><ref refid="classwx_file_system" kindref="compound">wxFileSystem</ref>, <ref refid="classwx_f_s_file" kindref="compound">wxFSFile</ref>, <ref refid="overview_fs" kindref="compound">wxFileSystem Overview</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="6375">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="6378">
        <label>wxInternetFSHandler</label>
        <link refid="classwx_internet_f_s_handler"/>
        <childnode refid="6374" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6376">
        <label>wxArchiveFSHandler</label>
        <link refid="classwx_archive_f_s_handler"/>
        <childnode refid="6374" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6379">
        <label>wxMemoryFSHandler</label>
        <link refid="classwx_memory_f_s_handler"/>
        <childnode refid="6374" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6377">
        <label>wxFilterFSHandler</label>
        <link refid="classwx_filter_f_s_handler"/>
        <childnode refid="6374" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6374">
        <label>wxFileSystemHandler</label>
        <link refid="classwx_file_system_handler"/>
        <childnode refid="6375" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6381">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="6382" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="6380">
        <label>wxFileSystemHandler</label>
        <link refid="classwx_file_system_handler"/>
        <childnode refid="6381" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6382">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/filesys.h" line="353" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/filesys.h" bodystart="352" bodyend="464"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxFileSystemHandler</scope><name>AllocExclusive</name></member>
      <member refid="classwx_file_system_handler_1a421720c382a63c7117076757567c762f" prot="public" virt="pure-virtual"><scope>wxFileSystemHandler</scope><name>CanOpen</name></member>
      <member refid="classwx_object_1a1d39f1d3650fe0982c9a1abe7f9fe7b7" prot="protected" virt="virtual"><scope>wxFileSystemHandler</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a95c6a5e4e1e03ff23c7b9efe4cff0c1a" prot="protected" virt="virtual"><scope>wxFileSystemHandler</scope><name>CreateRefData</name></member>
      <member refid="classwx_file_system_handler_1a90b7fe424e6c5cd53c9900806b3cacaa" prot="public" virt="virtual"><scope>wxFileSystemHandler</scope><name>FindFirst</name></member>
      <member refid="classwx_file_system_handler_1a0c07370b4135460f39228d49c3d297a4" prot="public" virt="virtual"><scope>wxFileSystemHandler</scope><name>FindNext</name></member>
      <member refid="classwx_file_system_handler_1a3b928b08cc72f225b94fed6077c37d52" prot="protected" virt="non-virtual"><scope>wxFileSystemHandler</scope><name>GetAnchor</name></member>
      <member refid="classwx_object_1ab3a0c6f723cbaddb47be4e8dd98cc8e2" prot="public" virt="virtual"><scope>wxFileSystemHandler</scope><name>GetClassInfo</name></member>
      <member refid="classwx_file_system_handler_1a3f56ed8be86e2ddaf3af0d20c17aa067" prot="protected" virt="non-virtual"><scope>wxFileSystemHandler</scope><name>GetLeftLocation</name></member>
      <member refid="classwx_file_system_handler_1a95c04756cd89cc2a5d66116bbbb3acdc" prot="public" virt="non-virtual"><scope>wxFileSystemHandler</scope><name>GetMimeTypeFromExt</name></member>
      <member refid="classwx_file_system_handler_1adf6e84f1ba33f047c15fb33f343b523a" prot="protected" virt="non-virtual"><scope>wxFileSystemHandler</scope><name>GetProtocol</name></member>
      <member refid="classwx_object_1aabdb4fc957226544a8408167844e4f42" prot="public" virt="non-virtual"><scope>wxFileSystemHandler</scope><name>GetRefData</name></member>
      <member refid="classwx_file_system_handler_1a759935b4792339bf97d6c6529bffb966" prot="protected" virt="non-virtual"><scope>wxFileSystemHandler</scope><name>GetRightLocation</name></member>
      <member refid="classwx_object_1af40d580385cf4f8112fae7713404b01e" prot="public" virt="non-virtual"><scope>wxFileSystemHandler</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a80a1a3fda7b14396a9ddd3d7a46a88bd" prot="public" virt="non-virtual"><scope>wxFileSystemHandler</scope><name>IsSameAs</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxFileSystemHandler</scope><name>m_refData</name></member>
      <member refid="classwx_file_system_handler_1a1295897a496f83c538d4dcf8897301e2" prot="public" virt="pure-virtual"><scope>wxFileSystemHandler</scope><name>OpenFile</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxFileSystemHandler</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxFileSystemHandler</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxFileSystemHandler</scope><name>Ref</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxFileSystemHandler</scope><name>SetRefData</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxFileSystemHandler</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxFileSystemHandler</scope><name>UnShare</name></member>
      <member refid="classwx_file_system_handler_1a81ce16c40bb1309cae25493e90c1bc88" prot="public" virt="non-virtual"><scope>wxFileSystemHandler</scope><name>wxFileSystemHandler</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxFileSystemHandler</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxFileSystemHandler</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxFileSystemHandler</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
