<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_busy_info" kind="class" prot="public">
    <compoundname>wxBusyInfo</compoundname>
    <includes local="no">wx/busyinfo.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_busy_info_1aa53bff52ae401bab878169e7d04b86d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxBusyInfo::wxBusyInfo</definition>
        <argsstring>(const wxString &amp;msg, wxWindow *parent=NULL)</argsstring>
        <name>wxBusyInfo</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>parent</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Constructs a busy info window as child of <emphasis>parent</emphasis> and displays <emphasis>msg</emphasis> in it. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If <emphasis>parent</emphasis> is not NULL you must ensure that it is not closed while the busy info is shown. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/busyinfo.h" line="66"/>
      </memberdef>
      <memberdef kind="function" id="classwx_busy_info_1af6d67f322ed46bc4eb1148d41f5c129b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxBusyInfo::~wxBusyInfo</definition>
        <argsstring>()</argsstring>
        <name>~wxBusyInfo</name>
        <briefdescription>
<para>Hides and closes the window containing the information text. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/busyinfo.h" line="71"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class makes it easy to tell your user that the program is temporarily busy. </para>    </briefdescription>
    <detaileddescription>
<para>Just create a <ref refid="classwx_busy_info" kindref="compound">wxBusyInfo</ref> object on the stack, and within the current scope, a message window will be shown.</para><para>For example:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_busy_info" kindref="compound" tooltip="This class makes it easy to tell your user that the program is temporarily busy.">wxBusyInfo</ref><sp/>wait(</highlight><highlight class="stringliteral">&quot;Please<sp/>wait,<sp/>working...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>100000;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DoACalculation();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
</programlisting></para><para>It works by creating a window in the constructor, and deleting it in the destructor.</para><para>You may also want to call wxTheApp-&gt;Yield() to refresh the window periodically (in case it had been obscured by other windows, for example) like this:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_window_disabler" kindref="compound" tooltip="This class disables all windows of the application (may be with the exception of one of them) in its ...">wxWindowDisabler</ref><sp/>disableAll;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_busy_info" kindref="compound" tooltip="This class makes it easy to tell your user that the program is temporarily busy.">wxBusyInfo</ref><sp/>wait(</highlight><highlight class="stringliteral">&quot;Please<sp/>wait,<sp/>working...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>100000;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DoACalculation();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!(i<sp/>%<sp/>1000)<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interface_2wx_2app_8h_1a01fd2cb0a8fbaade87800e71a50e855d" kindref="member" tooltip="The global pointer to the singleton wxApp object.">wxTheApp</ref>-&gt;<ref refid="classwx_app_console_1a302adeb701f247bf8cac1570efc25020" kindref="member">Yield</ref>();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
</programlisting></para><para>but take care to not cause undesirable reentrancies when doing it (see <ref refid="classwx_app_console_1a302adeb701f247bf8cac1570efc25020" kindref="member">wxApp::Yield</ref> for more details). The simplest way to do it is to use <ref refid="classwx_window_disabler" kindref="compound">wxWindowDisabler</ref> class as illustrated in the above example.</para><para>Note that a <ref refid="classwx_busy_info" kindref="compound">wxBusyInfo</ref> is always built with the <computeroutput>wxSTAY_ON_TOP</computeroutput> window style (see <ref refid="classwx_frame" kindref="compound">wxFrame</ref> window styles for more info).</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__cmndlg" kindref="compound">Common Dialogs</ref> </para>    </detaileddescription>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/busyinfo.h" line="58" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/busyinfo.h" bodystart="57" bodyend="72"/>
    <listofallmembers>
      <member refid="classwx_busy_info_1aa53bff52ae401bab878169e7d04b86d3" prot="public" virt="non-virtual"><scope>wxBusyInfo</scope><name>wxBusyInfo</name></member>
      <member refid="classwx_busy_info_1af6d67f322ed46bc4eb1148d41f5c129b" prot="public" virt="virtual"><scope>wxBusyInfo</scope><name>~wxBusyInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
