<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_grid_update_locker" kind="class" prot="public">
    <compoundname>wxGridUpdateLocker</compoundname>
    <includes local="no">wx/grid.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_grid_update_locker_1a13605827243de9ed1c0864fbd055cb8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxGridUpdateLocker::wxGridUpdateLocker</definition>
        <argsstring>(wxGrid *grid=NULL)</argsstring>
        <name>wxGridUpdateLocker</name>
        <param>
          <type><ref refid="classwx_grid" kindref="compound">wxGrid</ref> *</type>
          <declname>grid</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Creates an object preventing the updates of the specified <emphasis>grid</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>The parameter could be NULL in which case nothing is done. If <emphasis>grid</emphasis> is non-NULL then the grid must exist for longer than this <ref refid="classwx_grid_update_locker" kindref="compound">wxGridUpdateLocker</ref> object itself.</para><para>The default constructor could be followed by a call to <ref refid="classwx_grid_update_locker_1a43089db17a5ef1a315c6700e20cf71ac" kindref="member">Create()</ref> to set the grid object later. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/grid.h" line="4253"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_update_locker_1a113526734475b92e808dc474d8cb89a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxGridUpdateLocker::~wxGridUpdateLocker</definition>
        <argsstring>()</argsstring>
        <name>~wxGridUpdateLocker</name>
        <briefdescription>
<para>Destructor reenables updates for the grid this object is associated with. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/grid.h" line="4259"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_update_locker_1a43089db17a5ef1a315c6700e20cf71ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxGridUpdateLocker::Create</definition>
        <argsstring>(wxGrid *grid)</argsstring>
        <name>Create</name>
        <param>
          <type><ref refid="classwx_grid" kindref="compound">wxGrid</ref> *</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
<para>This method can be called if the object had been constructed using the default constructor. </para>        </briefdescription>
        <detaileddescription>
<para>It must not be called more than once. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/grid.h" line="4265"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This small class can be used to prevent <ref refid="classwx_grid" kindref="compound">wxGrid</ref> from redrawing during its lifetime by calling <ref refid="classwx_grid_1ae51929a4e2843e246abe01d79c5a9183" kindref="member">wxGrid::BeginBatch()</ref> in its constructor and <ref refid="classwx_grid_1a2f1a59dabc5875761c81b588604451ff" kindref="member">wxGrid::EndBatch()</ref> in its destructor. </para>    </briefdescription>
    <detaileddescription>
<para>It is typically used in a function performing several operations with a grid which would otherwise result in flicker. For example:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MyFrame::Foo()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_grid<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classwx_grid" kindref="compound" tooltip="wxGrid and its related classes are used for displaying and editing tabular data.">wxGrid</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>...);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_grid_update_locker" kindref="compound" tooltip="This small class can be used to prevent wxGrid from redrawing during its lifetime by calling wxGrid::...">wxGridUpdateLocker</ref><sp/>noUpdates(m_grid);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_grid-AppendColumn();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>many<sp/>other<sp/>operations<sp/>with<sp/>m_grid<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_grid-AppendRow();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>destructor<sp/>called,<sp/>grid<sp/>refreshed</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
</programlisting></para><para>Using this class is easier and safer than calling <ref refid="classwx_grid_1ae51929a4e2843e246abe01d79c5a9183" kindref="member">wxGrid::BeginBatch()</ref> and <ref refid="classwx_grid_1a2f1a59dabc5875761c81b588604451ff" kindref="member">wxGrid::EndBatch()</ref> because you don&apos;t risk missing the call the latter (due to an exception for example).</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxadv" kindref="member">wxAdvanced</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__grid" kindref="compound">Grid Related Classes</ref> </para>    </detaileddescription>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/grid.h" line="4242" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/grid.h" bodystart="4241" bodyend="4266"/>
    <listofallmembers>
      <member refid="classwx_grid_update_locker_1a43089db17a5ef1a315c6700e20cf71ac" prot="public" virt="non-virtual"><scope>wxGridUpdateLocker</scope><name>Create</name></member>
      <member refid="classwx_grid_update_locker_1a13605827243de9ed1c0864fbd055cb8f" prot="public" virt="non-virtual"><scope>wxGridUpdateLocker</scope><name>wxGridUpdateLocker</name></member>
      <member refid="classwx_grid_update_locker_1a113526734475b92e808dc474d8cb89a1" prot="public" virt="non-virtual"><scope>wxGridUpdateLocker</scope><name>~wxGridUpdateLocker</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
