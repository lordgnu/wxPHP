<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_var_scroll_helper_base" kind="class" prot="public">
    <compoundname>wxVarScrollHelperBase</compoundname>
    <derivedcompoundref refid="classwx_var_h_scroll_helper" prot="public" virt="non-virtual">wxVarHScrollHelper</derivedcompoundref>
    <derivedcompoundref refid="classwx_var_v_scroll_helper" prot="public" virt="non-virtual">wxVarVScrollHelper</derivedcompoundref>
    <includes local="no">wx/vscroll.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_var_scroll_helper_base_1a51c4f935ffef35e38d800b5fb1aea20b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxVarScrollHelperBase::wxVarScrollHelperBase</definition>
        <argsstring>(wxWindow *winToScroll)</argsstring>
        <name>wxVarScrollHelperBase</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>winToScroll</declname>
        </param>
        <briefdescription>
<para>Constructor taking the target window to be scrolled by this helper class. </para>        </briefdescription>
        <detaileddescription>
<para>This will attach scroll event handlers to the target window to catch and handle scroll events appropriately. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/vscroll.h" line="37"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_scroll_helper_base_1a1d98424cb2af1db02e326c5c7065c12d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxVarScrollHelperBase::~wxVarScrollHelperBase</definition>
        <argsstring>()</argsstring>
        <name>~wxVarScrollHelperBase</name>
        <briefdescription>
<para>Virtual destructor for detaching scroll event handlers attached with this helper class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/vscroll.h" line="43"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_scroll_helper_base_1aed909bbbec82269f2c53dad5e7da8ed7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxVarScrollHelperBase::CalcScrolledPosition</definition>
        <argsstring>(int coord) const </argsstring>
        <name>CalcScrolledPosition</name>
        <param>
          <type>int</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Translates the logical coordinate given to the current device coordinate. </para>        </briefdescription>
        <detaileddescription>
<para>For example, if the window is scrolled 10 units and each scroll unit represents 10 device units (which may not be the case since this class allows for variable scroll unit sizes), a call to this function with a coordinate of 15 will return -85.</para><para><simplesect kind="see"><para><ref refid="classwx_var_scroll_helper_base_1a8b2142bd630ec007036d2d826fa25b4a" kindref="member">CalcUnscrolledPosition()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/vscroll.h" line="54"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_scroll_helper_base_1a8b2142bd630ec007036d2d826fa25b4a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxVarScrollHelperBase::CalcUnscrolledPosition</definition>
        <argsstring>(int coord) const </argsstring>
        <name>CalcUnscrolledPosition</name>
        <param>
          <type>int</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Translates the device coordinate given to the corresponding logical coordinate. </para>        </briefdescription>
        <detaileddescription>
<para>For example, if the window is scrolled 10 units and each scroll unit represents 10 device units (which may not be the case since this class allows for variable scroll unit sizes), a call to this function with a coordinate of 15 will return 115.</para><para><simplesect kind="see"><para><ref refid="classwx_var_scroll_helper_base_1aed909bbbec82269f2c53dad5e7da8ed7" kindref="member">CalcScrolledPosition()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/vscroll.h" line="65"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_scroll_helper_base_1acdcec3046de7670eb2d448463a011b81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxVarScrollHelperBase::EnablePhysicalScrolling</definition>
        <argsstring>(bool scrolling=true)</argsstring>
        <name>EnablePhysicalScrolling</name>
        <param>
          <type>bool</type>
          <declname>scrolling</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>With physical scrolling on (when this is true), the device origin is changed properly when a <ref refid="classwx_paint_d_c" kindref="compound">wxPaintDC</ref> is prepared, children are actually moved and laid out properly, and the contents of the window (pixels) are actually moved. </para>        </briefdescription>
        <detaileddescription>
<para>When this is false, you are responsible for repainting any invalidated areas of the window yourself to account for the new scroll position. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/vscroll.h" line="75"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_scroll_helper_base_1a5b9316fbade3450efdc359ac049a7839" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int wxVarScrollHelperBase::GetNonOrientationTargetSize</definition>
        <argsstring>() const =0</argsstring>
        <name>GetNonOrientationTargetSize</name>
        <briefdescription>
<para>This function needs to be overridden in the in the derived class to return the window size with respect to the opposing orientation. </para>        </briefdescription>
        <detaileddescription>
<para>If this is a vertical scrolled window, it should return the height.</para><para><simplesect kind="see"><para><ref refid="classwx_var_scroll_helper_base_1a5d195a4216200894fc3e843c01ec4e54" kindref="member">GetOrientationTargetSize()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/vscroll.h" line="84"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_scroll_helper_base_1addff4d4e4e099adac7abfe56fbb50682" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="defs_8h_1a1e6994f40bd9cb140e292afb165af971" kindref="member">wxOrientation</ref></type>
        <definition>virtual wxOrientation wxVarScrollHelperBase::GetOrientation</definition>
        <argsstring>() const =0</argsstring>
        <name>GetOrientation</name>
        <briefdescription>
<para>This function need to be overridden to return the orientation that this helper is working with, either <computeroutput>wxHORIZONTAL</computeroutput> or <computeroutput>wxVERTICAL</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/vscroll.h" line="90"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_scroll_helper_base_1a5d195a4216200894fc3e843c01ec4e54" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int wxVarScrollHelperBase::GetOrientationTargetSize</definition>
        <argsstring>() const =0</argsstring>
        <name>GetOrientationTargetSize</name>
        <briefdescription>
<para>This function needs to be overridden in the in the derived class to return the window size with respect to the orientation this helper is working with. </para>        </briefdescription>
        <detaileddescription>
<para>If this is a vertical scrolled window, it should return the width.</para><para><simplesect kind="see"><para><ref refid="classwx_var_scroll_helper_base_1a5b9316fbade3450efdc359ac049a7839" kindref="member">GetNonOrientationTargetSize()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/vscroll.h" line="100"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_scroll_helper_base_1afcd2d4890fcc4ea1128e67dc2faf4c2c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
        <definition>virtual wxWindow* wxVarScrollHelperBase::GetTargetWindow</definition>
        <argsstring>() const </argsstring>
        <name>GetTargetWindow</name>
        <briefdescription>
<para>This function will return the target window this helper class is currently scrolling. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_var_scroll_helper_base_1af79bfa4aac18be344d5dbcf7932cf1f7" kindref="member">SetTargetWindow()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/vscroll.h" line="108"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_scroll_helper_base_1a3a95eda4e88e6444e33a37b8bb0fcd91" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxVarScrollHelperBase::GetVisibleBegin</definition>
        <argsstring>() const </argsstring>
        <name>GetVisibleBegin</name>
        <reimplementedby refid="classwx_var_h_v_scroll_helper_1a0d1e8c7d434b4e2820af06dae6b7fe0a">GetVisibleBegin</reimplementedby>
        <briefdescription>
<para>Returns the index of the first visible unit based on the scroll position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/vscroll.h" line="114"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_scroll_helper_base_1aaa6b3959f6dbf90329c1c98a64735334" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxVarScrollHelperBase::GetVisibleEnd</definition>
        <argsstring>() const </argsstring>
        <name>GetVisibleEnd</name>
        <reimplementedby refid="classwx_var_h_v_scroll_helper_1a04e3bed9499e60fcea9301137e54a7b8">GetVisibleEnd</reimplementedby>
        <briefdescription>
<para>Returns the index of the last visible unit based on the scroll position. </para>        </briefdescription>
        <detaileddescription>
<para>This includes the last unit even if it is only partially visible. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/vscroll.h" line="121"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_scroll_helper_base_1aeb032c41e1436c630b9fadf3c198c91d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxVarScrollHelperBase::IsVisible</definition>
        <argsstring>(size_t unit) const </argsstring>
        <name>IsVisible</name>
        <param>
          <type>size_t</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Returns true if the given scroll unit is currently visible (even if only partially visible) or false otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/vscroll.h" line="127"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_scroll_helper_base_1aeae3e1b16c52dc5227b439cb6ffacf59" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxVarScrollHelperBase::RefreshAll</definition>
        <argsstring>()</argsstring>
        <name>RefreshAll</name>
        <briefdescription>
<para>Recalculate all parameters and repaint all units. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/vscroll.h" line="132"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_scroll_helper_base_1af79bfa4aac18be344d5dbcf7932cf1f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxVarScrollHelperBase::SetTargetWindow</definition>
        <argsstring>(wxWindow *target)</argsstring>
        <name>SetTargetWindow</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>Normally the window will scroll itself, but in some rare occasions you might want it to scroll (part of) another window (e.g. </para>        </briefdescription>
        <detaileddescription>
<para>a child of it in order to scroll only a portion the area between the scrollbars like a spreadsheet where only the cell area will move).</para><para><simplesect kind="see"><para><ref refid="classwx_var_scroll_helper_base_1afcd2d4890fcc4ea1128e67dc2faf4c2c" kindref="member">GetTargetWindow()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/vscroll.h" line="142"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_scroll_helper_base_1a0b05466ede3d27fa28daf2f62ae2ecb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxVarScrollHelperBase::UpdateScrollbar</definition>
        <argsstring>()</argsstring>
        <name>UpdateScrollbar</name>
        <briefdescription>
<para>Update the thumb size shown by the scrollbar. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/vscroll.h" line="147"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_scroll_helper_base_1ab17ffa8dd9790d7ffc789ea080816518" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxVarScrollHelperBase::VirtualHitTest</definition>
        <argsstring>(wxCoord coord) const </argsstring>
        <name>VirtualHitTest</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Returns the virtual scroll unit under the device unit given accounting for scroll position or <computeroutput>wxNOT_FOUND</computeroutput> if none (i.e. </para>        </briefdescription>
        <detaileddescription>
<para>if it is below the last item). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/vscroll.h" line="154"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classwx_var_scroll_helper_base_1a03bf97869b5668218ecc0a1dbe6a77af" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxVarScrollHelperBase::OnGetUnitsSizeHint</definition>
        <argsstring>(size_t unitMin, size_t unitMax) const </argsstring>
        <name>OnGetUnitsSizeHint</name>
        <param>
          <type>size_t</type>
          <declname>unitMin</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>unitMax</declname>
        </param>
        <briefdescription>
<para>This function doesn&apos;t have to be overridden but it may be useful to do so if calculating the units&apos; sizes is a relatively expensive operation as it gives your code a chance to calculate several of them at once and cache the result if necessary. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="classwx_var_scroll_helper_base_1a03bf97869b5668218ecc0a1dbe6a77af" kindref="member">OnGetUnitsSizeHint()</ref> is normally called just before <ref refid="classwx_var_scroll_helper_base_1a1f31e727d5db972c2227790eb9174034" kindref="member">OnGetUnitSize()</ref> but you shouldn&apos;t rely on the latter being called for all units in the interval specified here. It is also possible that <ref refid="classwx_var_scroll_helper_base_1a1f31e727d5db972c2227790eb9174034" kindref="member">OnGetUnitSize()</ref> will be called for units outside of this interval, so this is really just a hint, not a promise.</para><para>Finally, note that <emphasis>unitMin</emphasis> is inclusive, while <emphasis>unitMax</emphasis> is exclusive. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/vscroll.h" line="174"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_scroll_helper_base_1a050ecc5ed309e58f2e47563546a09d2c" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
        <definition>virtual wxCoord wxVarScrollHelperBase::EstimateTotalSize</definition>
        <argsstring>() const </argsstring>
        <name>EstimateTotalSize</name>
        <briefdescription>
<para>When the number of scroll units change, we try to estimate the total size of all units when the full window size is needed (i.e. </para>        </briefdescription>
        <detaileddescription>
<para>to calculate the scrollbar thumb size). This is a rather expensive operation in terms of unit access, so if the user code may estimate the average size better or faster than we do, it should override this function to implement its own logic. This function should return the best guess for the total virtual window size.</para><para><simplesect kind="note"><para>Although returning a totally wrong value would still work, it risks resulting in very strange scrollbar behaviour so this function should really try to make the best guess possible. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/vscroll.h" line="189"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_scroll_helper_base_1a1f31e727d5db972c2227790eb9174034" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
        <definition>virtual wxCoord wxVarScrollHelperBase::OnGetUnitSize</definition>
        <argsstring>(size_t unit) const =0</argsstring>
        <name>OnGetUnitSize</name>
        <param>
          <type>size_t</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>This function must be overridden in the derived class, and should return the size of the given unit in pixels. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/vscroll.h" line="195"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class provides all common base functionality for scroll calculations shared among all variable scrolled window implementations as well as automatic scrollbar functionality, saved scroll positions, controlling target windows to be scrolled, as well as defining all required virtual functions that need to be implemented for any orientation specific work. </para>    </briefdescription>
    <detaileddescription>
<para>Documentation of this class is provided specifically for referencing use of the functions provided by this class for use with the variable scrolled windows that derive from here. You will likely want to derive your window from one of the already implemented variable scrolled windows rather than from <ref refid="classwx_var_scroll_helper_base" kindref="compound">wxVarScrollHelperBase</ref> directly.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__miscwnd" kindref="compound">Miscellaneous Windows</ref></para><para><simplesect kind="see"><para><ref refid="classwx_h_scrolled_window" kindref="compound">wxHScrolledWindow</ref>, <ref refid="classwx_h_v_scrolled_window" kindref="compound">wxHVScrolledWindow</ref>, <ref refid="classwx_v_scrolled_window" kindref="compound">wxVScrolledWindow</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="11514">
        <label>wxHScrolledWindow</label>
        <link refid="classwx_h_scrolled_window"/>
        <childnode refid="11513" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11512">
        <label>wxVarScrollHelperBase</label>
        <link refid="classwx_var_scroll_helper_base"/>
      </node>
      <node id="11515">
        <label>wxVarHVScrollHelper</label>
        <link refid="classwx_var_h_v_scroll_helper"/>
        <childnode refid="11513" relation="public-inheritance">
        </childnode>
        <childnode refid="11517" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11519">
        <label>wxVListBox</label>
        <link refid="classwx_v_list_box"/>
        <childnode refid="11518" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11522">
        <label>wxSimpleHtmlListBox</label>
        <link refid="classwx_simple_html_list_box"/>
        <childnode refid="11520" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11518">
        <label>wxVScrolledWindow</label>
        <link refid="classwx_v_scrolled_window"/>
        <childnode refid="11517" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11521">
        <label>wxRichTextStyleListBox</label>
        <link refid="classwx_rich_text_style_list_box"/>
        <childnode refid="11520" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11520">
        <label>wxHtmlListBox</label>
        <link refid="classwx_html_list_box"/>
        <childnode refid="11519" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11516">
        <label>wxHVScrolledWindow</label>
        <link refid="classwx_h_v_scrolled_window"/>
        <childnode refid="11515" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11513">
        <label>wxVarHScrollHelper</label>
        <link refid="classwx_var_h_scroll_helper"/>
        <childnode refid="11512" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11517">
        <label>wxVarVScrollHelper</label>
        <link refid="classwx_var_v_scroll_helper"/>
        <childnode refid="11512" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/vscroll.h" line="30" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/vscroll.h" bodystart="29" bodyend="196"/>
    <listofallmembers>
      <member refid="classwx_var_scroll_helper_base_1aed909bbbec82269f2c53dad5e7da8ed7" prot="public" virt="non-virtual"><scope>wxVarScrollHelperBase</scope><name>CalcScrolledPosition</name></member>
      <member refid="classwx_var_scroll_helper_base_1a8b2142bd630ec007036d2d826fa25b4a" prot="public" virt="non-virtual"><scope>wxVarScrollHelperBase</scope><name>CalcUnscrolledPosition</name></member>
      <member refid="classwx_var_scroll_helper_base_1acdcec3046de7670eb2d448463a011b81" prot="public" virt="non-virtual"><scope>wxVarScrollHelperBase</scope><name>EnablePhysicalScrolling</name></member>
      <member refid="classwx_var_scroll_helper_base_1a050ecc5ed309e58f2e47563546a09d2c" prot="protected" virt="virtual"><scope>wxVarScrollHelperBase</scope><name>EstimateTotalSize</name></member>
      <member refid="classwx_var_scroll_helper_base_1a5b9316fbade3450efdc359ac049a7839" prot="public" virt="pure-virtual"><scope>wxVarScrollHelperBase</scope><name>GetNonOrientationTargetSize</name></member>
      <member refid="classwx_var_scroll_helper_base_1addff4d4e4e099adac7abfe56fbb50682" prot="public" virt="pure-virtual"><scope>wxVarScrollHelperBase</scope><name>GetOrientation</name></member>
      <member refid="classwx_var_scroll_helper_base_1a5d195a4216200894fc3e843c01ec4e54" prot="public" virt="pure-virtual"><scope>wxVarScrollHelperBase</scope><name>GetOrientationTargetSize</name></member>
      <member refid="classwx_var_scroll_helper_base_1afcd2d4890fcc4ea1128e67dc2faf4c2c" prot="public" virt="virtual"><scope>wxVarScrollHelperBase</scope><name>GetTargetWindow</name></member>
      <member refid="classwx_var_scroll_helper_base_1a3a95eda4e88e6444e33a37b8bb0fcd91" prot="public" virt="non-virtual"><scope>wxVarScrollHelperBase</scope><name>GetVisibleBegin</name></member>
      <member refid="classwx_var_scroll_helper_base_1aaa6b3959f6dbf90329c1c98a64735334" prot="public" virt="non-virtual"><scope>wxVarScrollHelperBase</scope><name>GetVisibleEnd</name></member>
      <member refid="classwx_var_scroll_helper_base_1aeb032c41e1436c630b9fadf3c198c91d" prot="public" virt="non-virtual"><scope>wxVarScrollHelperBase</scope><name>IsVisible</name></member>
      <member refid="classwx_var_scroll_helper_base_1a1f31e727d5db972c2227790eb9174034" prot="protected" virt="pure-virtual"><scope>wxVarScrollHelperBase</scope><name>OnGetUnitSize</name></member>
      <member refid="classwx_var_scroll_helper_base_1a03bf97869b5668218ecc0a1dbe6a77af" prot="protected" virt="virtual"><scope>wxVarScrollHelperBase</scope><name>OnGetUnitsSizeHint</name></member>
      <member refid="classwx_var_scroll_helper_base_1aeae3e1b16c52dc5227b439cb6ffacf59" prot="public" virt="virtual"><scope>wxVarScrollHelperBase</scope><name>RefreshAll</name></member>
      <member refid="classwx_var_scroll_helper_base_1af79bfa4aac18be344d5dbcf7932cf1f7" prot="public" virt="virtual"><scope>wxVarScrollHelperBase</scope><name>SetTargetWindow</name></member>
      <member refid="classwx_var_scroll_helper_base_1a0b05466ede3d27fa28daf2f62ae2ecb9" prot="public" virt="virtual"><scope>wxVarScrollHelperBase</scope><name>UpdateScrollbar</name></member>
      <member refid="classwx_var_scroll_helper_base_1ab17ffa8dd9790d7ffc789ea080816518" prot="public" virt="non-virtual"><scope>wxVarScrollHelperBase</scope><name>VirtualHitTest</name></member>
      <member refid="classwx_var_scroll_helper_base_1a51c4f935ffef35e38d800b5fb1aea20b" prot="public" virt="non-virtual"><scope>wxVarScrollHelperBase</scope><name>wxVarScrollHelperBase</name></member>
      <member refid="classwx_var_scroll_helper_base_1a1d98424cb2af1db02e326c5c7065c12d" prot="public" virt="virtual"><scope>wxVarScrollHelperBase</scope><name>~wxVarScrollHelperBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
