<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_text_entry" kind="class" prot="public">
    <compoundname>wxTextEntry</compoundname>
    <derivedcompoundref refid="classwx_combo_box" prot="public" virt="non-virtual">wxComboBox</derivedcompoundref>
    <derivedcompoundref refid="classwx_combo_ctrl" prot="public" virt="non-virtual">wxComboCtrl</derivedcompoundref>
    <derivedcompoundref refid="classwx_text_ctrl" prot="public" virt="non-virtual">wxTextCtrl</derivedcompoundref>
    <includes local="no">wx/textentry.h</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_text_entry_1af2f9684123d3f4d7233945016b2d5c1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextEntry::SetMargins</definition>
        <argsstring>(const wxPoint &amp;pt)</argsstring>
        <name>SetMargins</name>
        <reimplementedby refid="classwx_combo_ctrl_1ae2b983f401d92ccc38f2bed47fb4d76b">SetMargins</reimplementedby>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>Attempts to set the control margins. </para>        </briefdescription>
        <detaileddescription>
<para>When margins are given as <ref refid="classwx_point" kindref="compound">wxPoint</ref>, x indicates the left and y the top margin. Use -1 to indicate that an existing value should be used.</para><para><simplesect kind="return"><para>true if setting of all requested margins was successful.</para></simplesect>
<simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="474"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1ad8dc1eb9633c73d26c968b337525c6c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextEntry::SetMargins</definition>
        <argsstring>(wxCoord left, wxCoord top=-1)</argsstring>
        <name>SetMargins</name>
        <reimplementedby refid="classwx_combo_ctrl_1a61fb396d486c81bcb733ff0b35301904">SetMargins</reimplementedby>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>left</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>top</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Attempts to set the control margins. </para>        </briefdescription>
        <detaileddescription>
<para>When margins are given as <ref refid="classwx_point" kindref="compound">wxPoint</ref>, x indicates the left and y the top margin. Use -1 to indicate that an existing value should be used.</para><para><simplesect kind="return"><para>true if setting of all requested margins was successful.</para></simplesect>
<simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="475"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_text_entry_1af80b5a51906ca9c65fa6cdaa9640768b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTextEntry::AppendText</definition>
        <argsstring>(const wxString &amp;text)</argsstring>
        <name>AppendText</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Appends the text to the end of the text control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>Text to write to the text control.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>After the text is appended, the insertion point will be at the end of the text control. If this behaviour is not desired, the programmer should use <ref refid="classwx_text_entry_1a396c9bc8cbf6adb7e69dcf035d31efbe" kindref="member">GetInsertionPoint()</ref> and <ref refid="classwx_text_entry_1a6e5460ec6e893ecb3e3ce90300373de8" kindref="member">SetInsertionPoint()</ref>.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_text_entry_1aa1b9419f95878c44234ff812b528c17b" kindref="member">WriteText()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="50"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1ad911d59d6b381a20b0a6c34df2ac1d9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextEntry::AutoComplete</definition>
        <argsstring>(const wxArrayString &amp;choices)</argsstring>
        <name>AutoComplete</name>
        <param>
          <type>const <ref refid="classwx_array_string" kindref="compound">wxArrayString</ref> &amp;</type>
          <declname>choices</declname>
        </param>
        <briefdescription>
<para>Call this function to enable auto-completion of the text typed in a single-line text control using the given <emphasis>choices</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Notice that currently this function is only implemented in wxGTK2, wxMSW and wxOSX/Cocoa ports and does nothing under the other platforms.</para><para><simplesect kind="since"><para>2.9.0</para></simplesect>
<simplesect kind="return"><para>true if the auto-completion was enabled or false if the operation failed, typically because auto-completion is not supported by the current platform.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_text_entry_1ad40d7e35d8bb9c9ab8e4ffa1b801a5d5" kindref="member">AutoCompleteFileNames()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="68"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1ae8ca40185ba6bbaacb4715039d73342b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextEntry::AutoComplete</definition>
        <argsstring>(wxTextCompleter *completer)</argsstring>
        <name>AutoComplete</name>
        <param>
          <type><ref refid="classwx_text_completer" kindref="compound">wxTextCompleter</ref> *</type>
          <declname>completer</declname>
        </param>
        <briefdescription>
<para>Enable auto-completion using the provided completer object. </para>        </briefdescription>
        <detaileddescription>
<para>This method should be used instead of <ref refid="classwx_text_entry_1ad911d59d6b381a20b0a6c34df2ac1d9f" kindref="member">AutoComplete()</ref> overload taking the array of possible completions if the total number of strings is too big as it allows to return the completions dynamically, depending on the text already entered by user and so is more efficient.</para><para>The specified <emphasis>completer</emphasis> object will be used to retrieve the list of possible completions for the already entered text and will be deleted by <ref refid="classwx_text_entry" kindref="compound">wxTextEntry</ref> itself when it&apos;s not needed any longer.</para><para>Notice that you need to include <computeroutput><ref refid="textcompleter_8h" kindref="compound">wx/textcompleter.h</ref></computeroutput> in order to define your class inheriting from <ref refid="classwx_text_completer" kindref="compound">wxTextCompleter</ref>.</para><para>Currently this method is only implemented in wxMSW and wxOSX/Cocoa.</para><para><simplesect kind="since"><para>2.9.2</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>completer</parametername>
</parameternamelist>
<parameterdescription>
<para>The object to be used for generating completions if non-NULL. If it is NULL, auto-completion is disabled. The <ref refid="classwx_text_entry" kindref="compound">wxTextEntry</ref> object takes ownership of this pointer and will delete it in any case (i.e. even if this method returns false).</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the auto-completion was enabled or false if the operation failed, typically because auto-completion is not supported by the current platform.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_text_completer" kindref="compound">wxTextCompleter</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="102"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1ad40d7e35d8bb9c9ab8e4ffa1b801a5d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextEntry::AutoCompleteFileNames</definition>
        <argsstring>()</argsstring>
        <name>AutoCompleteFileNames</name>
        <briefdescription>
<para>Call this function to enable auto-completion of the text typed in a single-line text control using all valid file system paths. </para>        </briefdescription>
        <detaileddescription>
<para>Notice that currently this function is only implemented in wxMSW port and does nothing under the other platforms.</para><para><simplesect kind="since"><para>2.9.0</para></simplesect>
<simplesect kind="return"><para>true if the auto-completion was enabled or false if the operation failed, typically because auto-completion is not supported by the current platform.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_text_entry_1ad911d59d6b381a20b0a6c34df2ac1d9f" kindref="member">AutoComplete()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="120"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1ab02338d68d51f103551454298578851c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextEntry::AutoCompleteDirectories</definition>
        <argsstring>()</argsstring>
        <name>AutoCompleteDirectories</name>
        <briefdescription>
<para>Call this function to enable auto-completion of the text using the file system directories. </para>        </briefdescription>
        <detaileddescription>
<para>Unlike <ref refid="classwx_text_entry_1ad40d7e35d8bb9c9ab8e4ffa1b801a5d5" kindref="member">AutoCompleteFileNames()</ref> which completes both file names and directories, this function only completes the directory names.</para><para>Notice that currently this function is only implemented in wxMSW port and does nothing under the other platforms.</para><para><simplesect kind="since"><para>2.9.3</para></simplesect>
<simplesect kind="return"><para>true if the auto-completion was enabled or false if the operation failed, typically because auto-completion is not supported by the current platform.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_text_entry_1ad911d59d6b381a20b0a6c34df2ac1d9f" kindref="member">AutoComplete()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="141"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1a5cc88c6714d37e089404d9d60fe512b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTextEntry::CanCopy</definition>
        <argsstring>() const </argsstring>
        <name>CanCopy</name>
        <briefdescription>
<para>Returns true if the selection can be copied to the clipboard. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="146"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1a9cdfb37ccaeda4c11ca1062fea0d476d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTextEntry::CanCut</definition>
        <argsstring>() const </argsstring>
        <name>CanCut</name>
        <briefdescription>
<para>Returns true if the selection can be cut to the clipboard. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="151"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1a0c000d10a56732e6f0835a2c9339c0fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTextEntry::CanPaste</definition>
        <argsstring>() const </argsstring>
        <name>CanPaste</name>
        <briefdescription>
<para>Returns true if the contents of the clipboard can be pasted into the text control. </para>        </briefdescription>
        <detaileddescription>
<para>On some platforms (Motif, GTK) this is an approximation and returns true if the control is editable, false otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="160"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1ac6024b11e35d0dab403c22c18a937ad4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTextEntry::CanRedo</definition>
        <argsstring>() const </argsstring>
        <name>CanRedo</name>
        <briefdescription>
<para>Returns true if there is a redo facility available and the last operation can be redone. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="166"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1a58757a503d496a06d0c744949b2e0a33" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTextEntry::CanUndo</definition>
        <argsstring>() const </argsstring>
        <name>CanUndo</name>
        <briefdescription>
<para>Returns true if there is an undo facility available and the last operation can be undone. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="172"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1a8c52ab71f51c8f80556c2c8e763cbca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTextEntry::ChangeValue</definition>
        <argsstring>(const wxString &amp;value)</argsstring>
        <name>ChangeValue</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the new text control value. </para>        </briefdescription>
        <detaileddescription>
<para>It also marks the control as not-modified which means that IsModified() would return false immediately after the call to <ref refid="classwx_text_entry_1a8c52ab71f51c8f80556c2c8e763cbca1" kindref="member">ChangeValue()</ref>.</para><para>The insertion point is set to the start of the control (i.e. position 0) by this function.</para><para>This functions does not generate the <computeroutput>wxEVT_COMMAND_TEXT_UPDATED</computeroutput> event but otherwise is identical to <ref refid="classwx_text_entry_1a90f876b2dd83ba5c97ba0c193b386e9f" kindref="member">SetValue()</ref>.</para><para>See <ref refid="overview_events_1overview_events_prog" kindref="member">User Generated Events vs Programmatically Generated Events</ref> for more information.</para><para><simplesect kind="since"><para>2.7.1</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value to set. It may contain newline characters if the text control is multi-line. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="194"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1a98b8e3fab8a5ac9944c2cefbb09ab3a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTextEntry::Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <briefdescription>
<para>Clears the text in the control. </para>        </briefdescription>
        <detaileddescription>
<para>Note that this function will generate a <computeroutput>wxEVT_COMMAND_TEXT_UPDATED</computeroutput> event, i.e. its effect is identical to calling <computeroutput>SetValue</computeroutput>(&quot;&quot;). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="202"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1a94675646b91a2d5a18e3ca7395cafe77" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTextEntry::Copy</definition>
        <argsstring>()</argsstring>
        <name>Copy</name>
        <reimplementedby refid="classwx_combo_ctrl_1a6feecca8942afd49ac29ff62936299c4">Copy</reimplementedby>
        <briefdescription>
<para>Copies the selected text to the clipboard. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="207"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1a396c9bc8cbf6adb7e69dcf035d31efbe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>long</type>
        <definition>virtual long wxTextEntry::GetInsertionPoint</definition>
        <argsstring>() const </argsstring>
        <name>GetInsertionPoint</name>
        <reimplementedby refid="classwx_combo_box_1a33052efce3da8a48cdda17c524997955">GetInsertionPoint</reimplementedby>
        <reimplementedby refid="classwx_combo_ctrl_1a71260046ce8c1450d021ce183136d7a6">GetInsertionPoint</reimplementedby>
        <briefdescription>
<para>Returns the insertion point, or cursor, position. </para>        </briefdescription>
        <detaileddescription>
<para>This is defined as the zero based index of the character position to the right of the insertion point. For example, if the insertion point is at the end of the single-line text control, it is equal to both <ref refid="classwx_text_entry_1a0d31704b5bc0b8cfe2502a66409d05c9" kindref="member">GetLastPosition()</ref> and <computeroutput>&quot;GetValue().Length()&quot;</computeroutput> (but notice that the latter equality is not necessarily true for multiline edit controls which may use multiple new line characters).</para><para>The following code snippet safely returns the character at the insertion point or the zero character if the point is at the end of the control.</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>GetCurrentChar(<ref refid="classwx_text_ctrl" kindref="compound" tooltip="A text control allows text to be displayed and edited.">wxTextCtrl</ref><sp/>*tc)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tc-&gt;<ref refid="classwx_text_entry_1a396c9bc8cbf6adb7e69dcf035d31efbe" kindref="member" tooltip="Returns the insertion point, or cursor, position.">GetInsertionPoint</ref>()<sp/>==<sp/>tc-&gt;<ref refid="classwx_text_entry_1a0d31704b5bc0b8cfe2502a66409d05c9" kindref="member" tooltip="Returns the zero based index of the last position in the text control, which is equal to the number o...">GetLastPosition</ref>())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tc-&gt;<ref refid="classwx_text_entry_1af234557ffcbfefb3ea45358c4f2a5283" kindref="member" tooltip="Gets the contents of the control.">GetValue</ref>[tc-&gt;<ref refid="classwx_text_entry_1a396c9bc8cbf6adb7e69dcf035d31efbe" kindref="member" tooltip="Returns the insertion point, or cursor, position.">GetInsertionPoint</ref>()];</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="230"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1a0d31704b5bc0b8cfe2502a66409d05c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="textentry_8h_1aa28063825bda6771b3b9434698747e52" kindref="member">wxTextPos</ref></type>
        <definition>virtual wxTextPos wxTextEntry::GetLastPosition</definition>
        <argsstring>() const </argsstring>
        <name>GetLastPosition</name>
        <reimplementedby refid="classwx_combo_ctrl_1a0f89b94190f5eee5e497dc0fd8679f99">GetLastPosition</reimplementedby>
        <briefdescription>
<para>Returns the zero based index of the last position in the text control, which is equal to the number of characters in the control. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="236"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1a60d7bdf8e8a3ace5cdae716f527d57c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxTextEntry::GetRange</definition>
        <argsstring>(long from, long to) const </argsstring>
        <name>GetRange</name>
        <param>
          <type>long</type>
          <declname>from</declname>
        </param>
        <param>
          <type>long</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>Returns the string containing the text starting in the positions <emphasis>from</emphasis> and up to <emphasis>to</emphasis> in the control. </para>        </briefdescription>
        <detaileddescription>
<para>The positions must have been returned by another <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> method. Please note that the positions in a multiline <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> do <bold>not</bold> correspond to the indices in the string returned by <ref refid="classwx_text_entry_1af234557ffcbfefb3ea45358c4f2a5283" kindref="member">GetValue()</ref> because of the different new line representations (<computeroutput>CR</computeroutput> or <computeroutput>CR</computeroutput> LF) and so this method should be used to obtain the correct results instead of extracting parts of the entire value. It may also be more efficient, especially if the control contains a lot of data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="250"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1a9ca06a599c45ea3ad7690cc3aca288e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTextEntry::GetSelection</definition>
        <argsstring>(long *from, long *to) const </argsstring>
        <name>GetSelection</name>
        <reimplementedby refid="classwx_combo_box_1a201248c40379b5ab8d8cca80cc98b764">GetSelection</reimplementedby>
        <param>
          <type>long *</type>
          <declname>from</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>Gets the current selection span. </para>        </briefdescription>
        <detaileddescription>
<para>If the returned values are equal, there was no selection. Please note that the indices returned may be used with the other <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> methods but don&apos;t necessarily represent the correct indices into the string returned by <ref refid="classwx_text_entry_1af234557ffcbfefb3ea45358c4f2a5283" kindref="member">GetValue()</ref> for multiline controls under Windows (at least,) you should use <ref refid="classwx_text_entry_1a8e9a9f73eb6d2a59e52fba31b472182a" kindref="member">GetStringSelection()</ref> to get the selected text.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The returned first position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>The returned last position.</para></parameterdescription>
</parameteritem>
</parameterlist>
<bold>wxPerl Note:</bold> In wxPerl this method takes no parameters and returns a 2-element list (from, to). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="271"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1a8e9a9f73eb6d2a59e52fba31b472182a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxTextEntry::GetStringSelection</definition>
        <argsstring>() const </argsstring>
        <name>GetStringSelection</name>
        <reimplementedby refid="classwx_combo_box_1aae0a8a3adfb51a5dd44cf03c0fd20d1c">GetStringSelection</reimplementedby>
        <briefdescription>
<para>Gets the text currently selected in the control. </para>        </briefdescription>
        <detaileddescription>
<para>If there is no selection, the returned string is empty. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="278"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1af234557ffcbfefb3ea45358c4f2a5283" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxTextEntry::GetValue</definition>
        <argsstring>() const </argsstring>
        <name>GetValue</name>
        <reimplementedby refid="classwx_combo_ctrl_1af2c8a92d3a2b1f387432633bed397ef8">GetValue</reimplementedby>
        <briefdescription>
<para>Gets the contents of the control. </para>        </briefdescription>
        <detaileddescription>
<para>Notice that for a multiline text control, the lines will be separated by (Unix-style) <computeroutput>\n</computeroutput> characters, even under Windows where they are separated by a <computeroutput>\r\n</computeroutput> sequence in the native control. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="287"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1a2bb43512241850ba7cef54dee029fb86" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTextEntry::IsEditable</definition>
        <argsstring>() const </argsstring>
        <name>IsEditable</name>
        <briefdescription>
<para>Returns true if the controls contents may be edited by user (note that it always can be changed by the program). </para>        </briefdescription>
        <detaileddescription>
<para>In other words, this functions returns true if the control hasn&apos;t been put in read-only mode by a previous call to <ref refid="classwx_text_entry_1a7d95c0f42b5e1dc0559ae1ec56cb8b86" kindref="member">SetEditable()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="296"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1a84d0559b6e7720cc230ba35e74e1e158" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTextEntry::IsEmpty</definition>
        <argsstring>() const </argsstring>
        <name>IsEmpty</name>
        <reimplementedby refid="classwx_combo_box_1a41789d188664ce4d05500b8452798c8f">IsEmpty</reimplementedby>
        <briefdescription>
<para>Returns true if the control is currently empty. </para>        </briefdescription>
        <detaileddescription>
<para>This is the same as <computeroutput><ref refid="classwx_text_entry_1af234557ffcbfefb3ea45358c4f2a5283" kindref="member">GetValue()</ref></computeroutput>.empty() but can be much more efficient for the multiline controls containing big amounts of text.</para><para><simplesect kind="since"><para>2.7.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="306"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1a5889d0d240e603e32c11bd580b65b3d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTextEntry::Paste</definition>
        <argsstring>()</argsstring>
        <name>Paste</name>
        <reimplementedby refid="classwx_combo_ctrl_1a361e1a0db2dceb5aa7749ad5a158e49c">Paste</reimplementedby>
        <briefdescription>
<para>Pastes text from the clipboard to the text item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="311"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1a3aa0d89ddb8a922c941818dafe4852a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTextEntry::Redo</definition>
        <argsstring>()</argsstring>
        <name>Redo</name>
        <briefdescription>
<para>If there is a redo facility and the last operation can be redone, redoes the last operation. </para>        </briefdescription>
        <detaileddescription>
<para>Does nothing if there is no redo facility. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="319"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1ab38f2786becabdacf27c7e31a2922bcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTextEntry::Remove</definition>
        <argsstring>(long from, long to)</argsstring>
        <name>Remove</name>
        <reimplementedby refid="classwx_combo_ctrl_1a20b2fecf36f2c5559fe1333f706681ce">Remove</reimplementedby>
        <param>
          <type>long</type>
          <declname>from</declname>
        </param>
        <param>
          <type>long</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>Removes the text starting at the first given position up to (but not including) the character at the last position. </para>        </briefdescription>
        <detaileddescription>
<para>This function puts the current insertion point position at <emphasis>to</emphasis> as a side effect.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The first position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>The last position. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="333"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1a1fb3ac76d270b2c64cff595497815f8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTextEntry::Replace</definition>
        <argsstring>(long from, long to, const wxString &amp;value)</argsstring>
        <name>Replace</name>
        <reimplementedby refid="classwx_combo_ctrl_1ab3c5214e81069bb594fa230a77b02da8">Replace</reimplementedby>
        <param>
          <type>long</type>
          <declname>from</declname>
        </param>
        <param>
          <type>long</type>
          <declname>to</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Replaces the text starting at the first position up to (but not including) the character at the last position with the given text. </para>        </briefdescription>
        <detaileddescription>
<para>This function puts the current insertion point position at <emphasis>to</emphasis> as a side effect.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The first position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>The last position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to replace the existing text with. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="349"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1a7d95c0f42b5e1dc0559ae1ec56cb8b86" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTextEntry::SetEditable</definition>
        <argsstring>(bool editable)</argsstring>
        <name>SetEditable</name>
        <param>
          <type>bool</type>
          <declname>editable</declname>
        </param>
        <briefdescription>
<para>Makes the text item editable or read-only, overriding the <bold>wxTE_READONLY</bold> flag. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>editable</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, the control is editable. If false, the control is read-only.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classwx_text_entry_1a2bb43512241850ba7cef54dee029fb86" kindref="member">IsEditable()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="361"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1a6e5460ec6e893ecb3e3ce90300373de8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTextEntry::SetInsertionPoint</definition>
        <argsstring>(long pos)</argsstring>
        <name>SetInsertionPoint</name>
        <reimplementedby refid="classwx_combo_ctrl_1a9ac49217e13edeb905cf640aac627bba">SetInsertionPoint</reimplementedby>
        <param>
          <type>long</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Sets the insertion point at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Position to set, in the range from 0 to <ref refid="classwx_text_entry_1a0d31704b5bc0b8cfe2502a66409d05c9" kindref="member">GetLastPosition()</ref> inclusive. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="369"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1a954a065a2f20da350ae830faff1fff95" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTextEntry::SetInsertionPointEnd</definition>
        <argsstring>()</argsstring>
        <name>SetInsertionPointEnd</name>
        <reimplementedby refid="classwx_combo_ctrl_1a3b4d25c9166d51a95973176df1b05be4">SetInsertionPointEnd</reimplementedby>
        <briefdescription>
<para>Sets the insertion point at the end of the text control. </para>        </briefdescription>
        <detaileddescription>
<para>This is equivalent to calling <ref refid="classwx_text_entry_1a6e5460ec6e893ecb3e3ce90300373de8" kindref="member">wxTextCtrl::SetInsertionPoint()</ref> with <ref refid="classwx_text_entry_1a0d31704b5bc0b8cfe2502a66409d05c9" kindref="member">wxTextCtrl::GetLastPosition()</ref> argument. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="377"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1a5b9dea0d1adeb9cc14309600de6aff50" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTextEntry::SetMaxLength</definition>
        <argsstring>(unsigned long len)</argsstring>
        <name>SetMaxLength</name>
        <param>
          <type>unsigned long</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>This function sets the maximum number of characters the user can enter into the control. </para>        </briefdescription>
        <detaileddescription>
<para>In other words, it allows to limit the text value length to <emphasis>len</emphasis> not counting the terminating <computeroutput>NUL</computeroutput> character.</para><para>If <emphasis>len</emphasis> is 0, the previously set max length limit, if any, is discarded and the user may enter as much text as the underlying native text control widget supports (typically at least 32Kb). If the user tries to enter more characters into the text control when it already is filled up to the maximal length, a <computeroutput>wxEVT_COMMAND_TEXT_MAXLEN</computeroutput> event is sent to notify the program about it (giving it the possibility to show an explanatory message, for example) and the extra input is discarded.</para><para>Note that in wxGTK this function may only be used with single line text controls. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="396"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1af7e298bc2a34bd646328f53efab766aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTextEntry::SetSelection</definition>
        <argsstring>(long from, long to)</argsstring>
        <name>SetSelection</name>
        <reimplementedby refid="classwx_combo_box_1a110d8b94ae2655ab28488b22843b47b1">SetSelection</reimplementedby>
        <reimplementedby refid="classwx_combo_ctrl_1a62f78126cae07f006685349851340b29">SetSelection</reimplementedby>
        <param>
          <type>long</type>
          <declname>from</declname>
        </param>
        <param>
          <type>long</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>Selects the text starting at the first position up to (but not including) the character at the last position. </para>        </briefdescription>
        <detaileddescription>
<para>If both parameters are equal to -1 all text in the control is selected.</para><para>Notice that the insertion point will be moved to <emphasis>from</emphasis> by this function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The first position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>The last position.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classwx_text_entry_1a2f7cb6fe4a1c2d1cd79edec6391ea91e" kindref="member">SelectAll()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="414"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1a2f7cb6fe4a1c2d1cd79edec6391ea91e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTextEntry::SelectAll</definition>
        <argsstring>()</argsstring>
        <name>SelectAll</name>
        <briefdescription>
<para>Selects all text in the control. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_text_entry_1af7e298bc2a34bd646328f53efab766aa" kindref="member">SetSelection()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="421"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1a4e9dfe958dbd1918c54b45be83f1bed4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTextEntry::SetHint</definition>
        <argsstring>(const wxString &amp;hint)</argsstring>
        <name>SetHint</name>
        <reimplementedby refid="classwx_combo_ctrl_1a68221bdd4af63abfd9840e5de13f4ba6">SetHint</reimplementedby>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>hint</declname>
        </param>
        <briefdescription>
<para>Sets a hint shown in an empty unfocused text control. </para>        </briefdescription>
        <detaileddescription>
<para>The hints are usually used to indicate to the user what is supposed to be entered into the given entry field, e.g. a common use of them is to show an explanation of what can be entered in a <ref refid="classwx_search_ctrl" kindref="compound">wxSearchCtrl</ref>.</para><para>The hint is shown (usually greyed out) for an empty control until it gets focus and is shown again if the control loses it and remains empty. It won&apos;t be shown once the control has a non-empty value, although it will be shown again if the control contents is cleared. Because of this, it generally only makes sense to use hints with the controls which are initially empty.</para><para>Notice that hints are known as <emphasis>cue banners</emphasis> under MSW or <emphasis>placeholder strings</emphasis> under OS X.</para><para><simplesect kind="remark"><para>For the platforms without native hints support (and currently only the MSW port does have it and even there it is only used under Windows Vista and later only), the implementation has several known limitations. Notably, the hint display will not be properly updated if you change <ref refid="classwx_text_entry" kindref="compound">wxTextEntry</ref> contents programmatically when the hint is displayed using methods other than <ref refid="classwx_text_entry_1a90f876b2dd83ba5c97ba0c193b386e9f" kindref="member">SetValue()</ref> or <ref refid="classwx_text_entry_1a8c52ab71f51c8f80556c2c8e763cbca1" kindref="member">ChangeValue()</ref> or others which use them internally (e.g. <ref refid="classwx_text_entry_1a98b8e3fab8a5ac9944c2cefbb09ab3a7" kindref="member">Clear()</ref>). In other words, currently you should avoid calling methods such as <ref refid="classwx_text_entry_1aa1b9419f95878c44234ff812b528c17b" kindref="member">WriteText()</ref> or <ref refid="classwx_text_entry_1a1fb3ac76d270b2c64cff595497815f8d" kindref="member">Replace()</ref> when using hints and the text control is empty.</para></simplesect>
<simplesect kind="since"><para>2.9.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="452"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1a9b5deb6db1bd97c746bc0d2637d7f466" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxTextEntry::GetHint</definition>
        <argsstring>() const </argsstring>
        <name>GetHint</name>
        <reimplementedby refid="classwx_combo_ctrl_1ac43e88ba57753e939fc60af6ce60aae9">GetHint</reimplementedby>
        <briefdescription>
<para>Returns the current hint string. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_text_entry_1a4e9dfe958dbd1918c54b45be83f1bed4" kindref="member">SetHint()</ref> for more information about hints.</para><para><simplesect kind="since"><para>2.9.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="461"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1ae95ebc42453130e7ae0def8f5434d937" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
        <definition>wxPoint wxTextEntry::GetMargins</definition>
        <argsstring>() const </argsstring>
        <name>GetMargins</name>
        <reimplementedby refid="classwx_combo_ctrl_1aee42bf65d60931df1e9f7a26fcfdf377">GetMargins</reimplementedby>
        <briefdescription>
<para>Returns the margins used by the control. </para>        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>x</computeroutput> field of the returned point is the horizontal margin and the <computeroutput>y</computeroutput> field is the vertical one.</para><para><simplesect kind="remark"><para>If given margin cannot be accurately determined, its value will be set to -1. On some platforms you cannot obtain valid margin values until you have called <ref refid="classwx_text_entry_1af2f9684123d3f4d7233945016b2d5c1d" kindref="member">SetMargins()</ref>.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_text_entry_1af2f9684123d3f4d7233945016b2d5c1d" kindref="member">SetMargins()</ref></para></simplesect>
<simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="490"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1a90f876b2dd83ba5c97ba0c193b386e9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTextEntry::SetValue</definition>
        <argsstring>(const wxString &amp;value)</argsstring>
        <name>SetValue</name>
        <reimplementedby refid="classwx_combo_box_1aa784b34330fee87b27cbe64bf0ce41b6">SetValue</reimplementedby>
        <reimplementedby refid="classwx_combo_ctrl_1a4202edbc9fc83623c658a83fe4c6d7be">SetValue</reimplementedby>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the new text control value. </para>        </briefdescription>
        <detaileddescription>
<para>It also marks the control as not-modified which means that IsModified() would return false immediately after the call to <ref refid="classwx_text_entry_1a90f876b2dd83ba5c97ba0c193b386e9f" kindref="member">SetValue()</ref>.</para><para>The insertion point is set to the start of the control (i.e. position 0) by this function.</para><para>Note that, unlike most other functions changing the controls values, this function generates a <computeroutput>wxEVT_COMMAND_TEXT_UPDATED</computeroutput> event. To avoid this you can use <ref refid="classwx_text_entry_1a8c52ab71f51c8f80556c2c8e763cbca1" kindref="member">ChangeValue()</ref> instead.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value to set. It may contain newline characters if the text control is multi-line. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="509"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1ad3784d539a2554c6eec76c80aa6d97de" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTextEntry::Undo</definition>
        <argsstring>()</argsstring>
        <name>Undo</name>
        <reimplementedby refid="classwx_combo_ctrl_1a9da1ff37488b9c33ed02ba2064ad6d85">Undo</reimplementedby>
        <briefdescription>
<para>If there is an undo facility and the last operation can be undone, undoes the last operation. </para>        </briefdescription>
        <detaileddescription>
<para>Does nothing if there is no undo facility. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="517"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_entry_1aa1b9419f95878c44234ff812b528c17b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTextEntry::WriteText</definition>
        <argsstring>(const wxString &amp;text)</argsstring>
        <name>WriteText</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Writes the text into the text control at the current insertion position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>Text to write to the text control.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>Newlines in the text string are the only control characters allowed, and they will cause appropriate line breaks. See operator&lt;&lt;() and <ref refid="classwx_text_entry_1af80b5a51906ca9c65fa6cdaa9640768b" kindref="member">AppendText()</ref> for more convenient ways of writing to the window. After the write operation, the insertion point will be at the end of the inserted text, so subsequent write operations will be appended. To append text after the user may have interacted with the control, call <ref refid="classwx_text_entry_1a954a065a2f20da350ae830faff1fff95" kindref="member">wxTextCtrl::SetInsertionPointEnd()</ref> before writing. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="535"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Common base class for single line text entry fields. </para>    </briefdescription>
    <detaileddescription>
<para>This class is not a control itself, as it doesn&apos;t derive from <ref refid="classwx_window" kindref="compound">wxWindow</ref>. Instead it is used as a base class by other controls, notably <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> and <ref refid="classwx_combo_box" kindref="compound">wxComboBox</ref> and gathers the methods common to both of them.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__ctrl" kindref="compound">Controls</ref></para><para><simplesect kind="see"><para><ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref>, <ref refid="classwx_combo_box" kindref="compound">wxComboBox</ref></para></simplesect>
<simplesect kind="since"><para>2.9.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="10994">
        <label>wxSearchCtrl</label>
        <link refid="classwx_search_ctrl"/>
        <childnode refid="10993" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10989">
        <label>wxBitmapComboBox</label>
        <link refid="classwx_bitmap_combo_box"/>
        <childnode refid="10988" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10993">
        <label>wxTextCtrl</label>
        <link refid="classwx_text_ctrl"/>
        <childnode refid="10987" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10987">
        <label>wxTextEntry</label>
        <link refid="classwx_text_entry"/>
      </node>
      <node id="10990">
        <label>wxComboCtrl</label>
        <link refid="classwx_combo_ctrl"/>
        <childnode refid="10987" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10988">
        <label>wxComboBox</label>
        <link refid="classwx_combo_box"/>
        <childnode refid="10987" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10991">
        <label>wxOwnerDrawnComboBox</label>
        <link refid="classwx_owner_drawn_combo_box"/>
        <childnode refid="10990" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10992">
        <label>wxRichTextStyleComboCtrl</label>
        <link refid="classwx_rich_text_style_combo_ctrl"/>
        <childnode refid="10990" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" line="35" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/textentry.h" bodystart="34" bodyend="536"/>
    <listofallmembers>
      <member refid="classwx_text_entry_1af80b5a51906ca9c65fa6cdaa9640768b" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>AppendText</name></member>
      <member refid="classwx_text_entry_1ad911d59d6b381a20b0a6c34df2ac1d9f" prot="public" virt="non-virtual"><scope>wxTextEntry</scope><name>AutoComplete</name></member>
      <member refid="classwx_text_entry_1ae8ca40185ba6bbaacb4715039d73342b" prot="public" virt="non-virtual"><scope>wxTextEntry</scope><name>AutoComplete</name></member>
      <member refid="classwx_text_entry_1ab02338d68d51f103551454298578851c" prot="public" virt="non-virtual"><scope>wxTextEntry</scope><name>AutoCompleteDirectories</name></member>
      <member refid="classwx_text_entry_1ad40d7e35d8bb9c9ab8e4ffa1b801a5d5" prot="public" virt="non-virtual"><scope>wxTextEntry</scope><name>AutoCompleteFileNames</name></member>
      <member refid="classwx_text_entry_1a5cc88c6714d37e089404d9d60fe512b7" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>CanCopy</name></member>
      <member refid="classwx_text_entry_1a9cdfb37ccaeda4c11ca1062fea0d476d" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>CanCut</name></member>
      <member refid="classwx_text_entry_1a0c000d10a56732e6f0835a2c9339c0fc" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>CanPaste</name></member>
      <member refid="classwx_text_entry_1ac6024b11e35d0dab403c22c18a937ad4" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>CanRedo</name></member>
      <member refid="classwx_text_entry_1a58757a503d496a06d0c744949b2e0a33" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>CanUndo</name></member>
      <member refid="classwx_text_entry_1a8c52ab71f51c8f80556c2c8e763cbca1" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>ChangeValue</name></member>
      <member refid="classwx_text_entry_1a98b8e3fab8a5ac9944c2cefbb09ab3a7" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>Clear</name></member>
      <member refid="classwx_text_entry_1a94675646b91a2d5a18e3ca7395cafe77" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>Copy</name></member>
      <member refid="classwx_text_entry_1a9b5deb6db1bd97c746bc0d2637d7f466" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>GetHint</name></member>
      <member refid="classwx_text_entry_1a396c9bc8cbf6adb7e69dcf035d31efbe" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>GetInsertionPoint</name></member>
      <member refid="classwx_text_entry_1a0d31704b5bc0b8cfe2502a66409d05c9" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>GetLastPosition</name></member>
      <member refid="classwx_text_entry_1ae95ebc42453130e7ae0def8f5434d937" prot="public" virt="non-virtual"><scope>wxTextEntry</scope><name>GetMargins</name></member>
      <member refid="classwx_text_entry_1a60d7bdf8e8a3ace5cdae716f527d57c7" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>GetRange</name></member>
      <member refid="classwx_text_entry_1a9ca06a599c45ea3ad7690cc3aca288e3" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>GetSelection</name></member>
      <member refid="classwx_text_entry_1a8e9a9f73eb6d2a59e52fba31b472182a" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>GetStringSelection</name></member>
      <member refid="classwx_text_entry_1af234557ffcbfefb3ea45358c4f2a5283" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>GetValue</name></member>
      <member refid="classwx_text_entry_1a2bb43512241850ba7cef54dee029fb86" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>IsEditable</name></member>
      <member refid="classwx_text_entry_1a84d0559b6e7720cc230ba35e74e1e158" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>IsEmpty</name></member>
      <member refid="classwx_text_entry_1a5889d0d240e603e32c11bd580b65b3d7" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>Paste</name></member>
      <member refid="classwx_text_entry_1a3aa0d89ddb8a922c941818dafe4852a4" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>Redo</name></member>
      <member refid="classwx_text_entry_1ab38f2786becabdacf27c7e31a2922bcc" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>Remove</name></member>
      <member refid="classwx_text_entry_1a1fb3ac76d270b2c64cff595497815f8d" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>Replace</name></member>
      <member refid="classwx_text_entry_1a2f7cb6fe4a1c2d1cd79edec6391ea91e" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>SelectAll</name></member>
      <member refid="classwx_text_entry_1a7d95c0f42b5e1dc0559ae1ec56cb8b86" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>SetEditable</name></member>
      <member refid="classwx_text_entry_1a4e9dfe958dbd1918c54b45be83f1bed4" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>SetHint</name></member>
      <member refid="classwx_text_entry_1a6e5460ec6e893ecb3e3ce90300373de8" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>SetInsertionPoint</name></member>
      <member refid="classwx_text_entry_1a954a065a2f20da350ae830faff1fff95" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>SetInsertionPointEnd</name></member>
      <member refid="classwx_text_entry_1af2f9684123d3f4d7233945016b2d5c1d" prot="public" virt="non-virtual"><scope>wxTextEntry</scope><name>SetMargins</name></member>
      <member refid="classwx_text_entry_1ad8dc1eb9633c73d26c968b337525c6c2" prot="public" virt="non-virtual"><scope>wxTextEntry</scope><name>SetMargins</name></member>
      <member refid="classwx_text_entry_1a5b9dea0d1adeb9cc14309600de6aff50" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>SetMaxLength</name></member>
      <member refid="classwx_text_entry_1af7e298bc2a34bd646328f53efab766aa" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>SetSelection</name></member>
      <member refid="classwx_text_entry_1a90f876b2dd83ba5c97ba0c193b386e9f" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>SetValue</name></member>
      <member refid="classwx_text_entry_1ad3784d539a2554c6eec76c80aa6d97de" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>Undo</name></member>
      <member refid="classwx_text_entry_1aa1b9419f95878c44234ff812b528c17b" prot="public" virt="virtual"><scope>wxTextEntry</scope><name>WriteText</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
