<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="overview_xrc" kind="page">
    <compoundname>overview_xrc</compoundname>
    <title>XML Based Resource System (XRC)</title>
    <detaileddescription>
<para>Classes: <ref refid="classwx_xml_resource" kindref="compound">wxXmlResource</ref>, <ref refid="classwx_xml_resource_handler" kindref="compound">wxXmlResourceHandler</ref></para><para>The XML-based resource system, known as XRC, allows user interface elements such as dialogs, menu bars and toolbars, to be stored in text files and loaded into the application at run-time. XRC files can also be compiled into binary XRS files or C++ code (the former makes it possible to store all resources in a single file and the latter is useful when you want to embed the resources into the executable).</para><para>There are several advantages to using XRC resources:</para><para><itemizedlist>
<listitem><para>Recompiling and linking an application is not necessary if the resources change. </para></listitem>
<listitem><para>If you use a dialog designer that generates C++ code, it can be hard to reintegrate this into existing C++ code. Separation of resources and code is a more elegant solution. </para></listitem>
<listitem><para>You can choose between different alternative resource files at run time, if necessary. </para></listitem>
<listitem><para>The XRC format uses sizers for flexibility, allowing dialogs to be resizable and highly portable. </para></listitem>
<listitem><para>The XRC format is a wxWidgets standard, and can be generated or postprocessed by any program that understands it. As it is based on the XML standard, existing XML editors can be used for simple editing purposes.</para></listitem>
</itemizedlist>
XRC was written by Vaclav Slavik.</para><para><itemizedlist>
<listitem><para><ref refid="overview_xrc_1overview_xrc_gettingstarted" kindref="member">Getting Started with XRC</ref> </para></listitem>
<listitem><para><ref refid="overview_xrc_1overview_xrc_xrcsample" kindref="member">The XRC sample</ref> </para></listitem>
<listitem><para><ref refid="overview_xrc_1overview_xrc_binaryresourcefiles" kindref="member">Binary Resource Files</ref> </para></listitem>
<listitem><para><ref refid="overview_xrc_1overview_xrc_embeddedresource" kindref="member">Using Embedded Resources</ref> </para></listitem>
<listitem><para><ref refid="overview_xrc_1overview_xrc_cppheader" kindref="member">C++ header file generation</ref> </para></listitem>
<listitem><para><ref refid="overview_xrc_1overview_xrc_newresourcehandlers" kindref="member">Adding New Resource Handlers</ref></para></listitem>
</itemizedlist>
See also the separate <ref refid="overview_xrcformat" kindref="compound">XRC File Format</ref> page for more information, and details about the XRC file format.</para><sect1 id="overview_xrc_1overview_xrc_gettingstarted">
<title>Getting Started with XRC</title>
<para><bold> Creating an XRC file </bold></para><para>You will need to write an XRC file. Though this <emphasis>can</emphasis> be done by hand in a text editor, for all but the smallest files it is advisable to use a specialised tool. Examples of these include:</para><para><emphasis>Non-free</emphasis>: <itemizedlist>
<listitem><para>wxDesigner &lt;<ulink url="http://www.wxdesigner-software.de/">http://www.wxdesigner-software.de/</ulink>&gt;, a commercial dialog designer/RAD tool. </para></listitem>
<listitem><para>DialogBlocks &lt;<ulink url="http://www.anthemion.co.uk/dialogblocks/">http://www.anthemion.co.uk/dialogblocks/</ulink>&gt;, a commercial dialog editor.</para></listitem>
</itemizedlist>
<emphasis>Free:</emphasis> <itemizedlist>
<listitem><para>XRCed &lt;<ulink url="http://xrced.sf.net/">http://xrced.sf.net/</ulink>&gt;, a wxPython-based dialog editor that you can find in the wxPython/tools subdirectory of the wxWidgets SVN archive. </para></listitem>
<listitem><para>wxFormBuilder &lt;<ulink url="http://wxformbuilder.org/">http://wxformbuilder.org/</ulink>&gt;, a C++-based dialog editor that can output C++, XRC or python.</para></listitem>
</itemizedlist>
There&apos;s a more complete list at &lt;<ulink url="http://www.wxwidgets.org/wiki/index.php/Tools">http://www.wxwidgets.org/wiki/index.php/Tools</ulink>&gt;</para><para>This small demonstration XRC file contains a simple dialog: <programlisting><codeline><highlight class="normal">&lt;?xml<sp/>version=</highlight><highlight class="stringliteral">&quot;1.0&quot;</highlight><highlight class="normal"><sp/>?&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;resource<sp/>version=</highlight><highlight class="stringliteral">&quot;2.3.0.1&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&lt;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;wxDialog&quot;</highlight><highlight class="normal"><sp/>name=</highlight><highlight class="stringliteral">&quot;SimpleDialog&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;title&gt;Simple<sp/>dialog&lt;/title&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;wxBoxSizer&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;orient&gt;<ref refid="defs_8h_1a1e6994f40bd9cb140e292afb165af971a2134d1cb8cf605532880c118190695b5" kindref="member">wxVERTICAL</ref>&lt;/orient&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;sizeritem&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;wxTextCtrl&quot;</highlight><highlight class="normal"><sp/>name=</highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;option&gt;1&lt;/option&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;flag&gt;<ref refid="defs_8h_1ac0f30319732dcceda470516918ff3556a066863c82a2c08f6f53b663de87c60b6" kindref="member">wxALL</ref>|<ref refid="defs_8h_1a27b6b668631a5f79f24d474af7d9b388a0d831bd6985c81f9bbc4830cc0c2e7df" kindref="member">wxEXPAND</ref>&lt;/flag&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;border&gt;10&lt;/border&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;sizeritem&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;wxBoxSizer&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;sizeritem&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;wxButton&quot;</highlight><highlight class="normal"><sp/>name=</highlight><highlight class="stringliteral">&quot;clickme_btn&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;label&gt;Click&lt;/label&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;flag&gt;<ref refid="defs_8h_1ac0f30319732dcceda470516918ff3556a2b2d18b748d21a493f82e589f1a05746" kindref="member">wxRIGHT</ref>&lt;/flag&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;border&gt;10&lt;/border&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;sizeritem&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;wxButton&quot;</highlight><highlight class="normal"><sp/>name=</highlight><highlight class="stringliteral">&quot;wxID_OK&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;label&gt;OK&lt;/label&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;flag&gt;<ref refid="defs_8h_1ac0f30319732dcceda470516918ff3556aab66c1f81b54102c884b1307840d323c" kindref="member">wxLEFT</ref>&lt;/flag&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;border&gt;10&lt;/border&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;orient&gt;<ref refid="defs_8h_1a1e6994f40bd9cb140e292afb165af971ab96154c324ed87cc17e9b227f9248c77" kindref="member">wxHORIZONTAL</ref>&lt;/orient&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;flag&gt;<ref refid="defs_8h_1ac0f30319732dcceda470516918ff3556a066863c82a2c08f6f53b663de87c60b6" kindref="member">wxALL</ref>|<ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9a8f3585b9e89360459fa853740a351015" kindref="member">wxALIGN_CENTRE</ref>&lt;/flag&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;border&gt;10&lt;/border&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/resource&gt;</highlight></codeline>
</programlisting></para><para>You can keep all your XRC elements together in one file, or split them between several.</para><para><bold> Loading XRC files </bold></para><para>Before you can use XRC in an app, it must first be loaded. This code fragment shows how to load a single XRC file &quot;resource.xrc&quot; from the current working directory, plus all the *.xrc files contained in the subdirectory &quot;rc&quot;.</para><para><programlisting><codeline><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xmlres_8h" kindref="compound">wx/xrc/xmlres.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classwx_app_console_1a99953775a2fd83fa2456e390779afe15" kindref="member" tooltip="This must be provided by the application, and will usually create the application&amp;#39;s main window...">MyApp::OnInit</ref>()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwx_xml_resource_1ae9a487479dcd6204d12fbbf7be497561" kindref="member" tooltip="Gets the global resources object or creates one if none exists.">wxXmlResource::Get</ref>()-&gt;<ref refid="classwx_xml_resource_1a1fea48a0061b93247b4869a55877862b" kindref="member" tooltip="Initializes handlers for all supported controls/windows.">InitAllHandlers</ref>();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwx_xml_resource_1ae9a487479dcd6204d12fbbf7be497561" kindref="member" tooltip="Gets the global resources object or creates one if none exists.">wxXmlResource::Get</ref>()-&gt;<ref refid="classwx_xml_resource_1ac44a714ff459b7f3bd6c78d27482bb60" kindref="member" tooltip="Loads resources from XML files that match given filemask.">Load</ref>(</highlight><highlight class="stringliteral">&quot;resource.xrc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwx_xml_resource_1ae9a487479dcd6204d12fbbf7be497561" kindref="member" tooltip="Gets the global resources object or creates one if none exists.">wxXmlResource::Get</ref>()-&gt;<ref refid="classwx_xml_resource_1abd3231181713edc32ecbeef72807baf8" kindref="member" tooltip="Loads all .xrc files from directory dirname.">LoadAllFiles</ref>(</highlight><highlight class="stringliteral">&quot;rc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para>It&apos;s normal to load any XRC files at the beginning of an app. Though it is possible to unload a file later, it&apos;s seldom necessary.</para><para><bold> Using an XRC item </bold></para><para>The XRC file(s) are now loaded into the app&apos;s virtual filesystem. From there, you must do another sort of load when you want to use an individual object. Yes, it&apos;s confusingly named, but you first Load() the file, and later load each top-level object when its needed.</para><para>This is how you would use the above simple dialog in your code.</para><para><programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MyClass::ShowDialog()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwx_dialog" kindref="compound" tooltip="A dialog box is a window with a title bar and sometimes a system menu, which can be moved around the ...">wxDialog</ref><sp/>dlg;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classwx_xml_resource_1ae9a487479dcd6204d12fbbf7be497561" kindref="member" tooltip="Gets the global resources object or creates one if none exists.">wxXmlResource::Get</ref>()-&gt;LoadDialog(&amp;dlg,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;SimpleDialog&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg.<ref refid="classwx_dialog_1a6e078c3d0653f75ad3c34a37c0b54637" kindref="member" tooltip="Shows an application-modal dialog.">ShowModal</ref>();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para>See how simple the code is. All the instantiation is done invisibly by the XRC system.</para><para>Though you&apos;ll most often use <ref refid="classwx_xml_resource_1aa9f2603cb55bfb2c696972be9875e229" kindref="member">wxXmlResource::LoadDialog</ref>, there are also equivalents that load a frame, a menu etc; and the generic <ref refid="classwx_xml_resource_1a92fb76bed2c93c283c940c0a02e0a543" kindref="member">wxXmlResource::LoadObject</ref>. See <ref refid="classwx_xml_resource" kindref="compound">wxXmlResource</ref> for more details.</para><para><bold> Accessing XRC child controls </bold></para><para>The last section showed how to load top-level windows like dialogs, but what about child windows like the <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> named &quot;text&quot; that the dialog contains? You can&apos;t &apos;load&apos; an individual child control in the same way. Instead you use the XRCCTRL macro to get a pointer to the child. To expand the previous code:</para><para><programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MyClass::ShowDialog()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwx_dialog" kindref="compound" tooltip="A dialog box is a window with a title bar and sometimes a system menu, which can be moved around the ...">wxDialog</ref><sp/>dlg;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classwx_xml_resource_1ae9a487479dcd6204d12fbbf7be497561" kindref="member" tooltip="Gets the global resources object or creates one if none exists.">wxXmlResource::Get</ref>()-&gt;LoadDialog(&amp;dlg,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;SimpleDialog&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwx_text_ctrl" kindref="compound" tooltip="A text control allows text to be displayed and edited.">wxTextCtrl</ref>*<sp/>pText<sp/>=<sp/>XRCCTRL(dlg,<sp/></highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">,<sp/><ref refid="classwx_text_ctrl" kindref="compound" tooltip="A text control allows text to be displayed and edited.">wxTextCtrl</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pText)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pText-&gt;<ref refid="classwx_text_entry_1a8c52ab71f51c8f80556c2c8e763cbca1" kindref="member" tooltip="Sets the new text control value.">ChangeValue</ref>(</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>a<sp/>simple<sp/>dialog&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>dlg.<ref refid="classwx_dialog_1a6e078c3d0653f75ad3c34a37c0b54637" kindref="member" tooltip="Shows an application-modal dialog.">ShowModal</ref>();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para>XRCCTRL takes a reference to the parent container and uses <ref refid="classwx_window_1a3468ef382c612b5f8e91c7c18d00a69f" kindref="member">wxWindow::FindWindow</ref> to search inside it for a <ref refid="classwx_window" kindref="compound">wxWindow</ref> with the supplied name (here &quot;text&quot;). It returns a pointer to that control, cast to the type in the third parameter; so a similar effect could be obtained by writing:</para><para><programlisting><codeline><highlight class="normal">pText<sp/>=<sp/>(<ref refid="classwx_text_ctrl" kindref="compound" tooltip="A text control allows text to be displayed and edited.">wxTextCtrl</ref>*)(dlg.<ref refid="classwx_window_1adbe4eea02f615313c12a2c00557a44c3" kindref="member" tooltip="Find a window by its name (as given in a window constructor or Create() function call).">FindWindowByName</ref>(</highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">));</highlight></codeline>
</programlisting></para><para><bold> XRC and IDs </bold></para><para>The ID of a control is often needed, e.g. for use in an event table or with <ref refid="classwx_evt_handler_1a84b1e446053bda8f76f13336839e8b64" kindref="member">wxEvtHandler::Bind</ref>. It can easily be found by passing the name of the control to the XRCID macro:</para><para><programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MyClass::ShowDialog()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwx_dialog" kindref="compound" tooltip="A dialog box is a window with a title bar and sometimes a system menu, which can be moved around the ...">wxDialog</ref><sp/>dlg;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classwx_xml_resource_1ae9a487479dcd6204d12fbbf7be497561" kindref="member" tooltip="Gets the global resources object or creates one if none exists.">wxXmlResource::Get</ref>()-&gt;LoadDialog(&amp;dlg,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;SimpleDialog&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>XRCCTRL(dlg,<sp/></highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">,<sp/><ref refid="classwx_text_ctrl" kindref="compound" tooltip="A text control allows text to be displayed and edited.">wxTextCtrl</ref>)-&gt;<ref refid="classwx_evt_handler_1a84b1e446053bda8f76f13336839e8b64" kindref="member" tooltip="Binds the given function, functor or method dynamically with the event.">Bind</ref>(<ref refid="group__group__funcmacro__events_1ga97aa55789599be3be897fdb8fa9e3fed" kindref="member">wxEVT_COMMAND_TEXT_UPDATED</ref>,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxTextEventHandler(MyClass::OnTextEntered),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>XRCID(</highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>XRCCTRL(dlg,<sp/></highlight><highlight class="stringliteral">&quot;clickme_btn&quot;</highlight><highlight class="normal">,<sp/><ref refid="classwx_button" kindref="compound" tooltip="A button is a control that contains a text string, and is one of the most common elements of a GUI...">wxButton</ref>)-&gt;Bind(<ref refid="group__group__funcmacro__events_1gad4219768fc12379d138fc7dbba84118a" kindref="member">wxEVT_COMMAND_BUTTON_CLICKED</ref>,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxCommandEventHandler(MyClass::OnClickme),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>XRCID(</highlight><highlight class="stringliteral">&quot;clickme_btn&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>dlg.<ref refid="classwx_dialog_1a6e078c3d0653f75ad3c34a37c0b54637" kindref="member" tooltip="Shows an application-modal dialog.">ShowModal</ref>();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para>A few points to note: <itemizedlist>
<listitem><para>The value of the int returned by XRCID(&quot;foo&quot;) is guaranteed to be unique within an app. </para></listitem>
<listitem><para>However that value isn&apos;t predictable, and you shouldn&apos;t rely on it being consistent between runs. It certainly won&apos;t be the same in different apps. </para></listitem>
<listitem><para><ref refid="page_stockitems" kindref="compound">Stock items</ref> such as wxID_OK work correctly without requiring XRCID (because, internally, XRCID(&quot;wxID_OK&quot;) is mapped to wxID_OK). </para></listitem>
<listitem><para>Both XRCID and XRCCTRL use the &apos;name&apos; of the control (as in <ref refid="classwx_window_1aab1b302c4bdabd134ce8d401dbaaf990" kindref="member">wxWindow::GetName</ref>). This is different from the label that the user sees on e.g. a <ref refid="classwx_button" kindref="compound">wxButton</ref>.</para></listitem>
</itemizedlist>
<bold> Subclassing in XRC </bold></para><para>You will often want to use subclassed wx controls in your code. There are three ways to do this from XRC: <itemizedlist>
<listitem><para>Very rarely you might need to <ref refid="overview_xrcformat_1overview_xrcformat_extending_custom" kindref="member">create your own wxXmlResourceHandler</ref> </para></listitem>
<listitem><para>Occasionally <ref refid="classwx_xml_resource_1ab550cd29efdc7afdf72fd0a1990d0074" kindref="member">wxXmlResource::AttachUnknownControl</ref> may be best. See <ref refid="overview_xrcformat_1overview_xrcformat_extending_unknown" kindref="member">Unknown Objects</ref> </para></listitem>
<listitem><para>Usually though, the simple &apos;subclass&apos; keyword will suffice.</para></listitem>
</itemizedlist>
Suppose you wanted the <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> named &quot;text&quot; to be created as your derived class MyTextCtrl. The only change needed in the XRC file would be in this line:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;wxTextCtrl&quot;</highlight><highlight class="normal"><sp/>name=</highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal"><sp/>subclass=</highlight><highlight class="stringliteral">&quot;MyTextCtrl&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
</programlisting></para><para>The only change in your code would be to use MyTextCtrl in XRCCTRL. However for the subclass to be created successfully, it&apos;s important to ensure that it uses wxWidget&apos;s RTTI mechanism: see <ref refid="overview_xrcformat_1overview_xrcformat_extending_subclass" kindref="member">Subclassing</ref> for the details.</para></sect1>
<sect1 id="overview_xrc_1overview_xrc_xrcsample">
<title>The XRC sample</title>
<para>A major resource for learning how to use XRC is the <ref refid="page_samples_1page_samples_xrc" kindref="member">XRC Sample</ref>. This demonstrates all of the standard uses of XRC, and some of the less common ones. It is strongly suggested that you run it, and look at the well-commented source code to see how it works.</para></sect1>
<sect1 id="overview_xrc_1overview_xrc_binaryresourcefiles">
<title>Binary Resource Files</title>
<para>To compile binary resource files, use the command-line <computeroutput>wxrc</computeroutput> utility. It takes one or more file parameters (the input XRC files) and the following switches and options:</para><para><itemizedlist>
<listitem><para>-h (--help): Show a help message. </para></listitem>
<listitem><para>-v (--verbose): Show verbose logging information. </para></listitem>
<listitem><para>-c (--cpp-code): Write C++ source rather than a XRS file. </para></listitem>
<listitem><para>-e (--extra-cpp-code): If used together with -c, generates C++ header file containing class definitions for the windows defined by the XRC file (see special subsection). </para></listitem>
<listitem><para>-u (--uncompressed): Do not compress XML files (C++ only). </para></listitem>
<listitem><para>-g (--gettext): Output underscore-wrapped strings that poEdit or gettext can scan. Outputs to stdout, or a file if -o is used. </para></listitem>
<listitem><para>-n (--function) &lt;name&gt;: Specify C++ function name (use with -c). </para></listitem>
<listitem><para>-o (--output) &lt;filename&gt;: Specify the output file, such as resource.xrs or resource.cpp. </para></listitem>
<listitem><para>-l (--list-of-handlers) &lt;filename&gt;: Output a list of necessary handlers to this file.</para></listitem>
</itemizedlist>
For example:</para><para><programlisting><codeline><highlight class="normal">$<sp/>wxrc<sp/>resource.xrc</highlight></codeline>
<codeline><highlight class="normal">$<sp/>wxrc<sp/>resource.xrc<sp/>-o<sp/>resource.xrs</highlight></codeline>
<codeline><highlight class="normal">$<sp/>wxrc<sp/>resource.xrc<sp/>-v<sp/>-c<sp/>-o<sp/>resource.cpp</highlight></codeline>
</programlisting></para><para><simplesect kind="note"><para>XRS file is essentially a renamed ZIP archive which means that you can manipulate it with standard ZIP tools. Note that if you are using XRS files, you have to initialize the <ref refid="classwx_file_system" kindref="compound">wxFileSystem</ref> archive handler first! It is a simple thing to do:</para></simplesect>
<programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;<ref refid="filesys_8h" kindref="compound">wx/filesys.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="fs__arc_8h" kindref="compound">wx/fs_arc.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline><highlight class="normal">wxFileSystem::AddHandler(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classwx_archive_f_s_handler" kindref="compound" tooltip="A file system handler for accessing files inside of archives.">wxArchiveFSHandler</ref>);</highlight></codeline>
</programlisting></para></sect1>
<sect1 id="overview_xrc_1overview_xrc_embeddedresource">
<title>Using Embedded Resources</title>
<para>It is sometimes useful to embed resources in the executable itself instead of loading an external file (e.g. when your app is small and consists only of one exe file). XRC provides means to convert resources into regular C++ file that can be compiled and included in the executable.</para><para>Use the <computeroutput>-c</computeroutput> switch to <computeroutput>wxrc</computeroutput> utility to produce C++ file with embedded resources. This file will contain a function called <computeroutput>InitXmlResource</computeroutput> (unless you override this with a command line switch). Use it to load the resource:</para><para><programlisting><codeline><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InitXmlResource();<sp/></highlight><highlight class="comment">//<sp/>defined<sp/>in<sp/>generated<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline><highlight class="normal">wxXmlResource::Get()-&gt;InitAllHandlers();</highlight></codeline>
<codeline><highlight class="normal">InitXmlResource();</highlight></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
</programlisting></para></sect1>
<sect1 id="overview_xrc_1overview_xrc_cppheader">
<title>C++ header file generation</title>
<para>Using the <computeroutput>-e</computeroutput> switch together with <computeroutput>-c</computeroutput>, a C++ header file is written containing class definitions for the GUI windows defined in the XRC file. This code generation can make it easier to use XRC and automate program development. The classes can be used as basis for development, freeing the programmer from dealing with most of the XRC specifics (e.g. <computeroutput>XRCCTRL</computeroutput>).</para><para>For each top level window defined in the XRC file a C++ class definition is generated, containing as class members the named widgets of the window. A default constructor for each class is also generated. Inside the constructor all XRC loading is done and all class members representing widgets are initialized.</para><para>A simple example will help understand how the scheme works. Suppose you have a XRC file defining a top level window <computeroutput>TestWnd_Base</computeroutput>, which subclasses <ref refid="classwx_frame" kindref="compound">wxFrame</ref> (any other class like <computeroutput><ref refid="classwx_dialog" kindref="compound">wxDialog</ref></computeroutput> will do also), and has subwidgets <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> A and <ref refid="classwx_button" kindref="compound">wxButton</ref> B.</para><para>The XRC file and corresponding class definition in the header file will be something like:</para><para><programlisting><codeline><highlight class="normal">&lt;?xml<sp/>version=</highlight><highlight class="stringliteral">&quot;1.0&quot;</highlight><highlight class="normal">?&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;resource<sp/>version=</highlight><highlight class="stringliteral">&quot;2.3.0.1&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;wxFrame&quot;</highlight><highlight class="normal"><sp/>name=</highlight><highlight class="stringliteral">&quot;TestWnd_Base&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;size&gt;-1,-1&lt;/size&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;title&gt;Test&lt;/title&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;wxBoxSizer&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;orient&gt;<ref refid="defs_8h_1a1e6994f40bd9cb140e292afb165af971ab96154c324ed87cc17e9b227f9248c77" kindref="member">wxHORIZONTAL</ref>&lt;/orient&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;sizeritem&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;wxTextCtrl&quot;</highlight><highlight class="normal"><sp/>name=</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;label&gt;Test<sp/>label&lt;/label&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;sizeritem&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;wxButton&quot;</highlight><highlight class="normal"><sp/>name=</highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;label&gt;Test<sp/>button&lt;/label&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/resource&gt;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TestWnd_Base<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classwx_frame" kindref="compound" tooltip="A frame is a window whose size and position can (usually) be changed by the user.">wxFrame</ref></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwx_text_ctrl" kindref="compound" tooltip="A text control allows text to be displayed and edited.">wxTextCtrl</ref>*<sp/>A;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwx_button" kindref="compound" tooltip="A button is a control that contains a text string, and is one of the most common elements of a GUI...">wxButton</ref>*<sp/>B;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InitWidgetsFromXRC()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_xml_resource_1ae9a487479dcd6204d12fbbf7be497561" kindref="member" tooltip="Gets the global resources object or creates one if none exists.">wxXmlResource::Get</ref>()-&gt;<ref refid="classwx_xml_resource_1a92fb76bed2c93c283c940c0a02e0a543" kindref="member" tooltip="Load an object from the resource specifying both the resource name and the class name.">LoadObject</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;TestWnd&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;wxFrame&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>=<sp/>XRCCTRL(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/><ref refid="classwx_text_ctrl" kindref="compound" tooltip="A text control allows text to be displayed and edited.">wxTextCtrl</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B<sp/>=<sp/>XRCCTRL(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,<sp/><ref refid="classwx_button" kindref="compound" tooltip="A button is a control that contains a text string, and is one of the most common elements of a GUI...">wxButton</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TestWnd::TestWnd()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitWidgetsFromXRC();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting></para><para>The generated window class can be used as basis for the full window class. The class members which represent widgets may be accessed by name instead of using <computeroutput>XRCCTRL</computeroutput> every time you wish to reference them (note that they are <computeroutput>protected</computeroutput> class members), though you must still use <computeroutput>XRCID</computeroutput> to refer to widget IDs in the event table.</para><para>Example:</para><para><programlisting><codeline><highlight class="preprocessor">#include<sp/>&quot;resource.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TestWnd<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>TestWnd_Base</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TestWnd()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A,<sp/>B<sp/>already<sp/>initialised<sp/>at<sp/>this<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A-&gt;SetValue(</highlight><highlight class="stringliteral">&quot;Updated<sp/>in<sp/>TestWnd::TestWnd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B-&gt;SetValue(</highlight><highlight class="stringliteral">&quot;Nice<sp/>:)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnBPressed(<ref refid="classwx_event" kindref="compound" tooltip="An event is a structure holding information about an event passed to a callback or member function...">wxEvent</ref>&amp;<sp/>event)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Close();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>DECLARE_EVENT_TABLE();</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">BEGIN_EVENT_TABLE(TestWnd,TestWnd_Base)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>EVT_BUTTON(XRCID(&quot;B&quot;),<sp/>TestWnd::OnBPressed)</highlight></codeline>
<codeline><highlight class="normal">END_EVENT_TABLE()</highlight></codeline>
</programlisting></para><para>It is also possible to access the <ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> of a sizer that is part of a resource. This can be done using <computeroutput>XRCSIZERITEM</computeroutput> as shown.</para><para>The resource file can have something like this for a sizer item.</para><para><programlisting><codeline><highlight class="normal">&lt;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;spacer&quot;</highlight><highlight class="normal"><sp/>name=</highlight><highlight class="stringliteral">&quot;area&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&lt;size&gt;400,<sp/>300&lt;/size&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&gt;</highlight></codeline>
</programlisting></para><para>The code can then access the sizer item by using <computeroutput>XRCSIZERITEM</computeroutput> and <computeroutput>XRCID</computeroutput> together.</para><para><programlisting><codeline><highlight class="normal"><ref refid="classwx_sizer_item" kindref="compound" tooltip="The wxSizerItem class is used to track the position, size and other attributes of each item managed b...">wxSizerItem</ref>*<sp/>item<sp/>=<sp/>XRCSIZERITEM(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;area&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para></sect1>
<sect1 id="overview_xrc_1overview_xrc_newresourcehandlers">
<title>Adding New Resource Handlers</title>
<para>Adding a new resource handler is pretty easy.</para><para>Typically, to add an handler for the <computeroutput>MyControl</computeroutput> class, you&apos;ll want to create the <computeroutput>xh_mycontrol.h</computeroutput> and <computeroutput>xh_mycontrol.cpp</computeroutput> files.</para><para>The header needs to contains the <computeroutput>MyControlXmlHandler</computeroutput> class definition:</para><para><programlisting><codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">MyControlXmlHandler<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classwx_xml_resource_handler" kindref="compound" tooltip="wxSizerXmlHandler is a class for resource handlers capable of creating a wxSizer object from an XML n...">wxXmlResourceHandler</ref></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>MyControlXmlHandler();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Creates<sp/>the<sp/>control<sp/>and<sp/>returns<sp/>a<sp/>pointer<sp/>to<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classwx_object" kindref="compound" tooltip="This is the root class of many of the wxWidgets classes.">wxObject</ref><sp/>*<ref refid="classwx_xml_resource_handler_1aea4c926eb4842302568d4d063960e2fc" kindref="member" tooltip="Called from CreateResource after variables were filled.">DoCreateResource</ref>();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>we<sp/>know<sp/>how<sp/>to<sp/>create<sp/>a<sp/>control<sp/>for<sp/>the<sp/>given<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classwx_xml_resource_handler_1af0c078bc565c86b6ba33f860bfc053ed" kindref="member" tooltip="Returns true if it understands this node and can create a resource from it, false otherwise...">CanHandle</ref>(<ref refid="classwx_xml_node" kindref="compound" tooltip="Represents a node in an XML document.">wxXmlNode</ref><sp/>*node);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>with<sp/>wxWidgets&apos;<sp/>dynamic<sp/>class<sp/>subsystem.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>DECLARE_DYNAMIC_CLASS(MyControlXmlHandler)</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting></para><para>The implementation of your custom XML handler will typically look as:</para><para><programlisting><codeline><highlight class="comment">//<sp/>Register<sp/>with<sp/>wxWidgets&apos;<sp/>dynamic<sp/>class<sp/>subsystem.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">IMPLEMENT_DYNAMIC_CLASS(MyControlXmlHandler,<sp/><ref refid="classwx_xml_resource_handler" kindref="compound" tooltip="wxSizerXmlHandler is a class for resource handlers capable of creating a wxSizer object from an XML n...">wxXmlResourceHandler</ref>)</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">MyControlXmlHandler::MyControlXmlHandler()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>call<sp/>adds<sp/>support<sp/>for<sp/>all<sp/>wxWindows<sp/>class<sp/>styles</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(e.g.<sp/>wxBORDER_SIMPLE,<sp/>wxBORDER_SUNKEN,<sp/>wxWS_EX_*<sp/>etc<sp/>etc)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>AddWindowStyles();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>MyControl<sp/>class<sp/>supports<sp/>e.g.<sp/>MYCONTROL_DEFAULT_STYLE</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>you<sp/>should<sp/>use:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>XRC_ADD_STYLE(MYCONTROL_DEFAULT_STYLE);</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="classwx_object" kindref="compound" tooltip="This is the root class of many of the wxWidgets classes.">wxObject</ref><sp/>*<ref refid="classwx_xml_resource_handler_1aea4c926eb4842302568d4d063960e2fc" kindref="member" tooltip="Called from CreateResource after variables were filled.">MyControlXmlHandler::DoCreateResource</ref>()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>following<sp/>macro<sp/>will<sp/>init<sp/>a<sp/>pointer<sp/>named<sp/>&quot;control&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>a<sp/>new<sp/>instance<sp/>of<sp/>the<sp/>MyControl<sp/>class,<sp/>but<sp/>will<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create()<sp/>it!</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>XRC_MAKE_INSTANCE(control,<sp/>MyControl)</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>the<sp/>point<sp/>where<sp/>you&apos;ll<sp/>typically<sp/>need<sp/>to<sp/>do<sp/>the<sp/>most</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>important<sp/>changes:<sp/>here<sp/>the<sp/>control<sp/>is<sp/>created<sp/>and<sp/>initialized.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>You&apos;ll<sp/>want<sp/>to<sp/>use<sp/>the<sp/>wxXmlResourceHandler&apos;s<sp/>getters<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>most<sp/>of<sp/>your<sp/>work.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>e.g.<sp/>the<sp/>MyControl::Create<sp/>function<sp/>looks<sp/>like:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bool<sp/>MyControl::Create(wxWindow<sp/>*parent,<sp/>int<sp/>id,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>wxBitmap<sp/>&amp;first,<sp/>const<sp/>wxPoint<sp/>&amp;posFirst,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>wxBitmap<sp/>&amp;second,<sp/>const<sp/>wxPoint<sp/>&amp;posSecond,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>wxString<sp/>&amp;theTitle,<sp/>const<sp/>wxFont<sp/>&amp;titleFont,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>wxPoint<sp/>&amp;pos,<sp/>const<sp/>wxSize<sp/>&amp;size,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>style<sp/>=<sp/>MYCONTROL_DEFAULT_STYLE,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>wxString<sp/>&amp;name<sp/>=<sp/>wxT(&quot;MyControl&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>the<sp/>XRC<sp/>for<sp/>your<sp/>component<sp/>should<sp/>look<sp/>like:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>&lt;object<sp/>class=&quot;MyControl&quot;<sp/>name=&quot;some_name&quot;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>&lt;first-bitmap&gt;first.xpm&lt;/first-bitmap&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>&lt;second-bitmap&gt;text.xpm&lt;/second-bitmap&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>&lt;first-pos&gt;3,3&lt;/first-pos&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>&lt;second-pos&gt;4,4&lt;/second-pos&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>&lt;the-title&gt;a<sp/>title&lt;/the-title&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>&lt;title-font&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;!--<sp/>Standard<sp/>XRC<sp/>tags<sp/>for<sp/>a<sp/>font:<sp/>&lt;size&gt;,<sp/>&lt;style&gt;,<sp/>&lt;weight&gt;,<sp/>etc<sp/>--&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>&lt;/title-font&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>&lt;!--<sp/>XRC<sp/>also<sp/>accepts<sp/>other<sp/>usual<sp/>tags<sp/>for<sp/>wxWindow-derived<sp/>classes:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>like<sp/>e.g.<sp/>&lt;name&gt;,<sp/>&lt;style&gt;,<sp/>&lt;size&gt;,<sp/>&lt;position&gt;,<sp/>etc<sp/>--&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>&lt;/object&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>the<sp/>code<sp/>to<sp/>read<sp/>your<sp/>custom<sp/>tags<sp/>from<sp/>the<sp/>XRC<sp/>file<sp/>is<sp/>just:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>control-&gt;Create(m_parentAsWindow,<sp/>GetID(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetBitmap(<ref refid="group__group__funcmacro__string_1ga437ea6ba615b75dac8603e96ec864160" kindref="member" tooltip="This macro can be used with character and string literals (in other words, &amp;#39;x&amp;#39; or &amp;quot;foo&amp;quot;) to automatic...">wxT</ref>(&quot;first-bitmap&quot;)),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetPosition(<ref refid="group__group__funcmacro__string_1ga437ea6ba615b75dac8603e96ec864160" kindref="member" tooltip="This macro can be used with character and string literals (in other words, &amp;#39;x&amp;#39; or &amp;quot;foo&amp;quot;) to automatic...">wxT</ref>(&quot;first-pos&quot;)),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetBitmap(<ref refid="group__group__funcmacro__string_1ga437ea6ba615b75dac8603e96ec864160" kindref="member" tooltip="This macro can be used with character and string literals (in other words, &amp;#39;x&amp;#39; or &amp;quot;foo&amp;quot;) to automatic...">wxT</ref>(&quot;second-bitmap&quot;)),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetPosition(<ref refid="group__group__funcmacro__string_1ga437ea6ba615b75dac8603e96ec864160" kindref="member" tooltip="This macro can be used with character and string literals (in other words, &amp;#39;x&amp;#39; or &amp;quot;foo&amp;quot;) to automatic...">wxT</ref>(&quot;second-pos&quot;)),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetText(<ref refid="group__group__funcmacro__string_1ga437ea6ba615b75dac8603e96ec864160" kindref="member" tooltip="This macro can be used with character and string literals (in other words, &amp;#39;x&amp;#39; or &amp;quot;foo&amp;quot;) to automatic...">wxT</ref>(&quot;the-title&quot;)),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetFont(<ref refid="group__group__funcmacro__string_1ga437ea6ba615b75dac8603e96ec864160" kindref="member" tooltip="This macro can be used with character and string literals (in other words, &amp;#39;x&amp;#39; or &amp;quot;foo&amp;quot;) to automatic...">wxT</ref>(&quot;title-font&quot;)),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetPosition(),<sp/>GetSize(),<sp/>GetStyle(),<sp/>GetName());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SetupWindow(control);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>control;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MyControlXmlHandler::CanHandle(<ref refid="classwx_xml_node" kindref="compound" tooltip="Represents a node in an XML document.">wxXmlNode</ref><sp/>*node)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>function<sp/>tells<sp/>XRC<sp/>system<sp/>that<sp/>this<sp/>handler<sp/>can<sp/>parse</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>&lt;object<sp/>class=&quot;MyControl&quot;&gt;<sp/>tags</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IsOfClass(node,<sp/><ref refid="group__group__funcmacro__string_1ga437ea6ba615b75dac8603e96ec864160" kindref="member" tooltip="This macro can be used with character and string literals (in other words, &amp;#39;x&amp;#39; or &amp;quot;foo&amp;quot;) to automatic...">wxT</ref>(</highlight><highlight class="stringliteral">&quot;MyControl&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para>You may want to check the <ref refid="classwx_xml_resource_handler" kindref="compound">wxXmlResourceHandler</ref> documentation to see how many built-in getters it contains. It&apos;s very easy to retrieve also complex structures out of XRC files using them. </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
