<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_semaphore" kind="class" prot="public">
    <compoundname>wxSemaphore</compoundname>
    <includes local="no">wx/thread.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_semaphore_1ac3cd6a6d45363c878f366a128294e22c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxSemaphore::wxSemaphore</definition>
        <argsstring>(int initialcount=0, int maxcount=0)</argsstring>
        <name>wxSemaphore</name>
        <param>
          <type>int</type>
          <declname>initialcount</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>maxcount</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Specifying a <emphasis>maxcount</emphasis> of 0 actually makes <ref refid="classwx_semaphore" kindref="compound">wxSemaphore</ref> behave as if there is no upper limit. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>maxcount</emphasis> is 1, the semaphore behaves almost as a mutex (but unlike a mutex it can be released by a thread different from the one which acquired it).</para><para><emphasis>initialcount</emphasis> is the initial value of the semaphore which must be between 0 and <emphasis>maxcount</emphasis> (if it is not set to 0). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/thread.h" line="1416"/>
      </memberdef>
      <memberdef kind="function" id="classwx_semaphore_1a6192d18717c270bed9ec3a7e7842ef3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxSemaphore::~wxSemaphore</definition>
        <argsstring>()</argsstring>
        <name>~wxSemaphore</name>
        <briefdescription>
<para>Destructor is not virtual, don&apos;t use this class polymorphically. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/thread.h" line="1421"/>
      </memberdef>
      <memberdef kind="function" id="classwx_semaphore_1af258c7e7a626fec8a9fc3ff718c960d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interface_2wx_2thread_8h_1a47100c8fbaa57b192696bec84197398e" kindref="member">wxSemaError</ref></type>
        <definition>wxSemaError wxSemaphore::Post</definition>
        <argsstring>()</argsstring>
        <name>Post</name>
        <briefdescription>
<para>Increments the semaphore count and signals one of the waiting threads in an atomic way. </para>        </briefdescription>
        <detaileddescription>
<para>Returns <emphasis>wxSEMA_OVERFLOW</emphasis> if the count would increase the counter past the maximum.</para><para><simplesect kind="return"><para>One of:<itemizedlist>
<listitem><para>wxSEMA_NO_ERROR: There was no error.</para></listitem><listitem><para>wxSEMA_INVALID : Semaphore hasn&apos;t been initialized successfully.</para></listitem><listitem><para>wxSEMA_OVERFLOW: <ref refid="classwx_semaphore_1af258c7e7a626fec8a9fc3ff718c960d6" kindref="member">Post()</ref> would increase counter past the max.</para></listitem><listitem><para>wxSEMA_MISC_ERROR: Miscellaneous error. </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/thread.h" line="1434"/>
      </memberdef>
      <memberdef kind="function" id="classwx_semaphore_1a578840a5c04cea87b0121c8e43d480a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interface_2wx_2thread_8h_1a47100c8fbaa57b192696bec84197398e" kindref="member">wxSemaError</ref></type>
        <definition>wxSemaError wxSemaphore::TryWait</definition>
        <argsstring>()</argsstring>
        <name>TryWait</name>
        <briefdescription>
<para>Same as <ref refid="classwx_semaphore_1a4a54b5fbb2b80b7ca3b8da55e8fa790c" kindref="member">Wait()</ref>, but returns immediately. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>One of:<itemizedlist>
<listitem><para>wxSEMA_NO_ERROR: There was no error.</para></listitem><listitem><para>wxSEMA_INVALID: Semaphore hasn&apos;t been initialized successfully.</para></listitem><listitem><para>wxSEMA_BUSY: Returned by <ref refid="classwx_semaphore_1a578840a5c04cea87b0121c8e43d480a2" kindref="member">TryWait()</ref> if <ref refid="classwx_semaphore_1a4a54b5fbb2b80b7ca3b8da55e8fa790c" kindref="member">Wait()</ref> would block, i.e. the count is zero.</para></listitem><listitem><para>wxSEMA_MISC_ERROR: Miscellaneous error. </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/thread.h" line="1445"/>
      </memberdef>
      <memberdef kind="function" id="classwx_semaphore_1a4a54b5fbb2b80b7ca3b8da55e8fa790c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interface_2wx_2thread_8h_1a47100c8fbaa57b192696bec84197398e" kindref="member">wxSemaError</ref></type>
        <definition>wxSemaError wxSemaphore::Wait</definition>
        <argsstring>()</argsstring>
        <name>Wait</name>
        <briefdescription>
<para>Wait indefinitely until the semaphore count becomes strictly positive and then decrement it and return. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>One of:<itemizedlist>
<listitem><para>wxSEMA_NO_ERROR: There was no error.</para></listitem><listitem><para>wxSEMA_INVALID: Semaphore hasn&apos;t been initialized successfully.</para></listitem><listitem><para>wxSEMA_MISC_ERROR: Miscellaneous error. </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/thread.h" line="1456"/>
      </memberdef>
      <memberdef kind="function" id="classwx_semaphore_1a4bef53c549148e807fbf729129ba7572" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interface_2wx_2thread_8h_1a47100c8fbaa57b192696bec84197398e" kindref="member">wxSemaError</ref></type>
        <definition>wxSemaError wxSemaphore::WaitTimeout</definition>
        <argsstring>(unsigned long timeout_millis)</argsstring>
        <name>WaitTimeout</name>
        <param>
          <type>unsigned long</type>
          <declname>timeout_millis</declname>
        </param>
        <briefdescription>
<para>Same as <ref refid="classwx_semaphore_1a4a54b5fbb2b80b7ca3b8da55e8fa790c" kindref="member">Wait()</ref>, but with a timeout limit. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>One of:<itemizedlist>
<listitem><para>wxSEMA_NO_ERROR: There was no error.</para></listitem><listitem><para>wxSEMA_INVALID: Semaphore hasn&apos;t been initialized successfully.</para></listitem><listitem><para>wxSEMA_TIMEOUT: Timeout occurred without receiving semaphore.</para></listitem><listitem><para>wxSEMA_MISC_ERROR: Miscellaneous error. </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/thread.h" line="1467"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classwx_semaphore" kindref="compound">wxSemaphore</ref> is a counter limiting the number of threads concurrently accessing a shared resource. </para>    </briefdescription>
    <detaileddescription>
<para>This counter is always between 0 and the maximum value specified during the semaphore creation. When the counter is strictly greater than 0, a call to <ref refid="classwx_semaphore_1a4a54b5fbb2b80b7ca3b8da55e8fa790c" kindref="member">wxSemaphore::Wait()</ref> returns immediately and decrements the counter. As soon as it reaches 0, any subsequent calls to <ref refid="classwx_semaphore_1a4a54b5fbb2b80b7ca3b8da55e8fa790c" kindref="member">wxSemaphore::Wait</ref> block and only return when the semaphore counter becomes strictly positive again as the result of calling <ref refid="classwx_semaphore_1af258c7e7a626fec8a9fc3ff718c960d6" kindref="member">wxSemaphore::Post</ref> which increments the counter.</para><para>In general, semaphores are useful to restrict access to a shared resource which can only be accessed by some fixed number of clients at the same time. For example, when modeling a hotel reservation system a semaphore with the counter equal to the total number of available rooms could be created. Each time a room is reserved, the semaphore should be acquired by calling <ref refid="classwx_semaphore_1a4a54b5fbb2b80b7ca3b8da55e8fa790c" kindref="member">wxSemaphore::Wait</ref> and each time a room is freed it should be released by calling <ref refid="classwx_semaphore_1af258c7e7a626fec8a9fc3ff718c960d6" kindref="member">wxSemaphore::Post</ref>.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__threading" kindref="compound">Threading</ref> </para>    </detaileddescription>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/thread.h" line="1405" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/thread.h" bodystart="1404" bodyend="1468"/>
    <listofallmembers>
      <member refid="classwx_semaphore_1af258c7e7a626fec8a9fc3ff718c960d6" prot="public" virt="non-virtual"><scope>wxSemaphore</scope><name>Post</name></member>
      <member refid="classwx_semaphore_1a578840a5c04cea87b0121c8e43d480a2" prot="public" virt="non-virtual"><scope>wxSemaphore</scope><name>TryWait</name></member>
      <member refid="classwx_semaphore_1a4a54b5fbb2b80b7ca3b8da55e8fa790c" prot="public" virt="non-virtual"><scope>wxSemaphore</scope><name>Wait</name></member>
      <member refid="classwx_semaphore_1a4bef53c549148e807fbf729129ba7572" prot="public" virt="non-virtual"><scope>wxSemaphore</scope><name>WaitTimeout</name></member>
      <member refid="classwx_semaphore_1ac3cd6a6d45363c878f366a128294e22c" prot="public" virt="non-virtual"><scope>wxSemaphore</scope><name>wxSemaphore</name></member>
      <member refid="classwx_semaphore_1a6192d18717c270bed9ec3a7e7842ef3f" prot="public" virt="non-virtual"><scope>wxSemaphore</scope><name>~wxSemaphore</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
