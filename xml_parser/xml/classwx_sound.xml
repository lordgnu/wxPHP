<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_sound" kind="class" prot="public">
    <compoundname>wxSound</compoundname>
    <basecompoundref refid="classwx_object" prot="public" virt="non-virtual">wxObject</basecompoundref>
    <includes local="no">wx/sound.h</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_sound_1aca197e390cb89d6654bd3b368afbc681" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSound::Play</definition>
        <argsstring>(unsigned flags=wxSOUND_ASYNC) const </argsstring>
        <name>Play</name>
        <param>
          <type>unsigned</type>
          <declname>flags</declname>
          <defval>wxSOUND_ASYNC</defval>
        </param>
        <briefdescription>
<para>Plays the sound file. </para>        </briefdescription>
        <detaileddescription>
<para>If another sound is playing, it will be interrupted.</para><para>Returns true on success, false otherwise. Note that in general it is possible to delete the object which is being asynchronously played any time after calling this function and the sound would continue playing, however this currently doesn&apos;t work under Windows for sound objects loaded from memory data.</para><para>The possible values for <emphasis>flags</emphasis> are:<itemizedlist>
<listitem><para>wxSOUND_SYNC: <computeroutput>Play</computeroutput> will block and wait until the sound is replayed.</para></listitem><listitem><para>wxSOUND_ASYNC: Sound is played asynchronously, <computeroutput>Play</computeroutput> returns immediately.</para></listitem><listitem><para>wxSOUND_ASYNC|wxSOUND_LOOP: Sound is played asynchronously and loops until another sound is played, <ref refid="classwx_sound_1a0999a172494bdd3e73b6e3420e9e4637" kindref="member">Stop()</ref> is called or the program terminates.</para></listitem></itemizedlist>
</para><para>The static form is shorthand for this code: <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_sound_1accb80df0895b63e21404b2f4f997918f" kindref="member" tooltip="Default ctor.">wxSound</ref>(filename).Play(flags);</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sound.h" line="105"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sound_1a00fbfa024e5a40764553315fc731bb9f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool wxSound::Play</definition>
        <argsstring>(const wxString &amp;filename, unsigned flags=wxSOUND_ASYNC)</argsstring>
        <name>Play</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>flags</declname>
          <defval>wxSOUND_ASYNC</defval>
        </param>
        <briefdescription>
<para>Plays the sound file. </para>        </briefdescription>
        <detaileddescription>
<para>If another sound is playing, it will be interrupted.</para><para>Returns true on success, false otherwise. Note that in general it is possible to delete the object which is being asynchronously played any time after calling this function and the sound would continue playing, however this currently doesn&apos;t work under Windows for sound objects loaded from memory data.</para><para>The possible values for <emphasis>flags</emphasis> are:<itemizedlist>
<listitem><para>wxSOUND_SYNC: <computeroutput>Play</computeroutput> will block and wait until the sound is replayed.</para></listitem><listitem><para>wxSOUND_ASYNC: Sound is played asynchronously, <computeroutput>Play</computeroutput> returns immediately.</para></listitem><listitem><para>wxSOUND_ASYNC|wxSOUND_LOOP: Sound is played asynchronously and loops until another sound is played, <ref refid="classwx_sound_1a0999a172494bdd3e73b6e3420e9e4637" kindref="member">Stop()</ref> is called or the program terminates.</para></listitem></itemizedlist>
</para><para>The static form is shorthand for this code: <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_sound_1accb80df0895b63e21404b2f4f997918f" kindref="member" tooltip="Default ctor.">wxSound</ref>(filename).Play(flags);</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sound.h" line="107"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_sound_1accb80df0895b63e21404b2f4f997918f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxSound::wxSound</definition>
        <argsstring>()</argsstring>
        <name>wxSound</name>
        <briefdescription>
<para>Default ctor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sound.h" line="27"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sound_1a4600f58647b99e6c43a2875031b47f04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxSound::wxSound</definition>
        <argsstring>(const wxString &amp;fileName, bool isResource=false)</argsstring>
        <name>wxSound</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>fileName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isResource</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructs a wave object from a file or, under Windows, from a Windows resource. </para>        </briefdescription>
        <detaileddescription>
<para>Call <ref refid="classwx_sound_1ac63033709ec767b57602342a3c86f166" kindref="member">IsOk()</ref> to determine whether this succeeded.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>The filename or Windows resource. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isResource</parametername>
</parameternamelist>
<parameterdescription>
<para>true if fileName is a resource, false if it is a filename. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sound.h" line="38"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sound_1a4be271de3f10b93320059d8775d04741" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxSound::wxSound</definition>
        <argsstring>(size_t size, const void *data)</argsstring>
        <name>wxSound</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Constructs a wave object from in-memory data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the buffer pointer to by <emphasis>data</emphasis>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer containing the sound data in WAV format. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sound.h" line="48"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sound_1a89b804b39bc36bdf5c876aca0965845b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxSound::~wxSound</definition>
        <argsstring>()</argsstring>
        <name>~wxSound</name>
        <briefdescription>
<para>Destroys the <ref refid="classwx_sound" kindref="compound">wxSound</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sound.h" line="53"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sound_1aef8cb7594ef4df2e3a5f88c0091c1f63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSound::Create</definition>
        <argsstring>(const wxString &amp;fileName, bool isResource=false)</argsstring>
        <name>Create</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>fileName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isResource</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructs a wave object from a file or resource. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>The filename or Windows resource. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isResource</parametername>
</parameternamelist>
<parameterdescription>
<para>true if fileName is a resource, false if it is a filename.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the call was successful, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sound.h" line="65"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sound_1ac63033709ec767b57602342a3c86f166" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSound::IsOk</definition>
        <argsstring>() const </argsstring>
        <name>IsOk</name>
        <briefdescription>
<para>Returns true if the object contains a successfully loaded file or resource, false otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sound.h" line="71"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_sound_1a06c968f7167221025114095186f800d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool wxSound::IsPlaying</definition>
        <argsstring>()</argsstring>
        <name>IsPlaying</name>
        <briefdescription>
<para>Returns true if a sound is played at the moment. </para>        </briefdescription>
        <detaileddescription>
<para>This method is currently not available under Windows and may not be always implemented in Unix ports depending on the compilation options used (in this case it just always returns false).</para><para>Availability:<nonbreakablespace/><nonbreakablespace/>only available for the <ref refid="page_port_1page_port_wxgtk" kindref="member">wxGTK</ref>, <ref refid="page_port_1page_port_wxosx" kindref="member">wxOSX</ref> ports.  <onlyfor>wxgtk,wxosx</onlyfor>  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sound.h" line="82"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sound_1a0999a172494bdd3e73b6e3420e9e4637" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wxSound::Stop</definition>
        <argsstring>()</argsstring>
        <name>Stop</name>
        <briefdescription>
<para>If a sound is played, this function stops it. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sound.h" line="113"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class represents a short sound (loaded from Windows WAV file), that can be stored in memory and played. </para>    </briefdescription>
    <detaileddescription>
<para>Currently this class is implemented on Windows and Unix (and uses either Open Sound System or Simple DirectMedia Layer).</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxadv" kindref="member">wxAdvanced</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__media" kindref="compound">Multimedia</ref> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="10516">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="10515">
        <label>wxSound</label>
        <link refid="classwx_sound"/>
        <childnode refid="10516" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10518">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="10519" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="10517">
        <label>wxSound</label>
        <link refid="classwx_sound"/>
        <childnode refid="10518" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10519">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sound.h" line="22" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/sound.h" bodystart="21" bodyend="114"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxSound</scope><name>AllocExclusive</name></member>
      <member refid="classwx_object_1a1d39f1d3650fe0982c9a1abe7f9fe7b7" prot="protected" virt="virtual"><scope>wxSound</scope><name>CloneRefData</name></member>
      <member refid="classwx_sound_1aef8cb7594ef4df2e3a5f88c0091c1f63" prot="public" virt="non-virtual"><scope>wxSound</scope><name>Create</name></member>
      <member refid="classwx_object_1a95c6a5e4e1e03ff23c7b9efe4cff0c1a" prot="protected" virt="virtual"><scope>wxSound</scope><name>CreateRefData</name></member>
      <member refid="classwx_object_1ab3a0c6f723cbaddb47be4e8dd98cc8e2" prot="public" virt="virtual"><scope>wxSound</scope><name>GetClassInfo</name></member>
      <member refid="classwx_object_1aabdb4fc957226544a8408167844e4f42" prot="public" virt="non-virtual"><scope>wxSound</scope><name>GetRefData</name></member>
      <member refid="classwx_object_1af40d580385cf4f8112fae7713404b01e" prot="public" virt="non-virtual"><scope>wxSound</scope><name>IsKindOf</name></member>
      <member refid="classwx_sound_1ac63033709ec767b57602342a3c86f166" prot="public" virt="non-virtual"><scope>wxSound</scope><name>IsOk</name></member>
      <member refid="classwx_sound_1a06c968f7167221025114095186f800d0" prot="public" virt="non-virtual"><scope>wxSound</scope><name>IsPlaying</name></member>
      <member refid="classwx_object_1a80a1a3fda7b14396a9ddd3d7a46a88bd" prot="public" virt="non-virtual"><scope>wxSound</scope><name>IsSameAs</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxSound</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxSound</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxSound</scope><name>operator new</name></member>
      <member refid="classwx_sound_1aca197e390cb89d6654bd3b368afbc681" prot="public" virt="non-virtual"><scope>wxSound</scope><name>Play</name></member>
      <member refid="classwx_sound_1a00fbfa024e5a40764553315fc731bb9f" prot="public" virt="non-virtual"><scope>wxSound</scope><name>Play</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxSound</scope><name>Ref</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxSound</scope><name>SetRefData</name></member>
      <member refid="classwx_sound_1a0999a172494bdd3e73b6e3420e9e4637" prot="public" virt="non-virtual"><scope>wxSound</scope><name>Stop</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxSound</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxSound</scope><name>UnShare</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxSound</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxSound</scope><name>wxObject</name></member>
      <member refid="classwx_sound_1accb80df0895b63e21404b2f4f997918f" prot="public" virt="non-virtual"><scope>wxSound</scope><name>wxSound</name></member>
      <member refid="classwx_sound_1a4600f58647b99e6c43a2875031b47f04" prot="public" virt="non-virtual"><scope>wxSound</scope><name>wxSound</name></member>
      <member refid="classwx_sound_1a4be271de3f10b93320059d8775d04741" prot="public" virt="non-virtual"><scope>wxSound</scope><name>wxSound</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxSound</scope><name>~wxObject</name></member>
      <member refid="classwx_sound_1a89b804b39bc36bdf5c876aca0965845b" prot="public" virt="virtual"><scope>wxSound</scope><name>~wxSound</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
