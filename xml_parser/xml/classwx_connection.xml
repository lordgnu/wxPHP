<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_connection" kind="class" prot="public">
    <compoundname>wxConnection</compoundname>
    <basecompoundref refid="classwx_object" prot="public" virt="non-virtual">wxObject</basecompoundref>
    <includes local="no">wx/ipc.h</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_connection_1a8ec46f3aa50b038514059f8578a8cb3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxConnection::wxConnection</definition>
        <argsstring>()</argsstring>
        <name>wxConnection</name>
        <briefdescription>
<para>Constructs a connection object. </para>        </briefdescription>
        <detaileddescription>
<para>If no user-defined connection object is to be derived from <ref refid="classwx_connection" kindref="compound">wxConnection</ref>, then the constructor should not be called directly, since the default connection object will be provided on requesting (or accepting) a connection.</para><para>However, if the user defines his or her own derived connection object, the <ref refid="classwx_server_1ae04dd9aa98b7a0a3cfce1333d80b0713" kindref="member">wxServer::OnAcceptConnection</ref> and/or <ref refid="classwx_client_1a71328614681f8f50de8a561b5dcfbbde" kindref="member">wxClient::OnMakeConnection</ref> members should be replaced by functions which construct the new connection object.</para><para>If the arguments of the <ref refid="classwx_connection" kindref="compound">wxConnection</ref> constructor are void then the <ref refid="classwx_connection" kindref="compound">wxConnection</ref> object manages its own connection buffer, allocating memory as needed. A programmer-supplied buffer cannot be increased if necessary, and the program will assert if it is not large enough.</para><para>The programmer-supplied buffer is included mainly for backwards compatibility. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="54"/>
      </memberdef>
      <memberdef kind="function" id="classwx_connection_1a922d075c343b97c08ff718449521c7bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxConnection::wxConnection</definition>
        <argsstring>(void *buffer, size_t size)</argsstring>
        <name>wxConnection</name>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Constructs a connection object. </para>        </briefdescription>
        <detaileddescription>
<para>If no user-defined connection object is to be derived from <ref refid="classwx_connection" kindref="compound">wxConnection</ref>, then the constructor should not be called directly, since the default connection object will be provided on requesting (or accepting) a connection.</para><para>However, if the user defines his or her own derived connection object, the <ref refid="classwx_server_1ae04dd9aa98b7a0a3cfce1333d80b0713" kindref="member">wxServer::OnAcceptConnection</ref> and/or <ref refid="classwx_client_1a71328614681f8f50de8a561b5dcfbbde" kindref="member">wxClient::OnMakeConnection</ref> members should be replaced by functions which construct the new connection object.</para><para>If the arguments of the <ref refid="classwx_connection" kindref="compound">wxConnection</ref> constructor are void then the <ref refid="classwx_connection" kindref="compound">wxConnection</ref> object manages its own connection buffer, allocating memory as needed. A programmer-supplied buffer cannot be increased if necessary, and the program will assert if it is not large enough.</para><para>The programmer-supplied buffer is included mainly for backwards compatibility. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="55"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_connection_1a21a78690ee1ae3649ea1ecd292f7f453" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxConnection::Advise</definition>
        <argsstring>(const wxString &amp;item, const void *data, size_t size, wxIPCFormat format=wxIPC_PRIVATE)</argsstring>
        <name>Advise</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="ipcbase_8h_1a95e8d5059caf54ddbaabdaf8224fe3f2" kindref="member">wxIPCFormat</ref></type>
          <declname>format</declname>
          <defval>wxIPC_PRIVATE</defval>
        </param>
        <briefdescription>
<para>Called by the server application to advise the client of a change in the data associated with the given item. </para>        </briefdescription>
        <detaileddescription>
<para>Causes the client connection&apos;s <ref refid="classwx_connection_1a9dddf8014802c9643378b9bdb34bfc48" kindref="member">OnAdvise()</ref> member to be called.</para><para><simplesect kind="return"><para>true if successful. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="67"/>
      </memberdef>
      <memberdef kind="function" id="classwx_connection_1adc2134e6040120d214e9c58946fb7b87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxConnection::Advise</definition>
        <argsstring>(const wxString &amp;item, const char *data)</argsstring>
        <name>Advise</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Called by the server application to advise the client of a change in the data associated with the given item. </para>        </briefdescription>
        <detaileddescription>
<para>Causes the client connection&apos;s <ref refid="classwx_connection_1a9dddf8014802c9643378b9bdb34bfc48" kindref="member">OnAdvise()</ref> member to be called.</para><para><simplesect kind="return"><para>true if successful. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="68"/>
      </memberdef>
      <memberdef kind="function" id="classwx_connection_1a6b9c26fb7a98ad9cf9533943ecc34f30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxConnection::Advise</definition>
        <argsstring>(const wxString &amp;item, const wchar_t *data)</argsstring>
        <name>Advise</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Called by the server application to advise the client of a change in the data associated with the given item. </para>        </briefdescription>
        <detaileddescription>
<para>Causes the client connection&apos;s <ref refid="classwx_connection_1a9dddf8014802c9643378b9bdb34bfc48" kindref="member">OnAdvise()</ref> member to be called.</para><para><simplesect kind="return"><para>true if successful. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="69"/>
      </memberdef>
      <memberdef kind="function" id="classwx_connection_1ab879420b12ec8b085cdbc4bd1411b7fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxConnection::Advise</definition>
        <argsstring>(const wxString &amp;item, const wxString data)</argsstring>
        <name>Advise</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref></type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Called by the server application to advise the client of a change in the data associated with the given item. </para>        </briefdescription>
        <detaileddescription>
<para>Causes the client connection&apos;s <ref refid="classwx_connection_1a9dddf8014802c9643378b9bdb34bfc48" kindref="member">OnAdvise()</ref> member to be called.</para><para><simplesect kind="return"><para>true if successful. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="70"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_connection_1aedb1028c9578f04f2c5b084271b54e4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxConnection::Execute</definition>
        <argsstring>(const void *data, size_t size, wxIPCFormat format=wxIPC_PRIVATE)</argsstring>
        <name>Execute</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="ipcbase_8h_1a95e8d5059caf54ddbaabdaf8224fe3f2" kindref="member">wxIPCFormat</ref></type>
          <declname>format</declname>
          <defval>wxIPC_PRIVATE</defval>
        </param>
        <briefdescription>
<para>Called by the client application to execute a command on the server. </para>        </briefdescription>
        <detaileddescription>
<para>Can also be used to transfer arbitrary data to the server (similar to <ref refid="classwx_connection_1a1a3e3fccd19a0ee3aa2ac89f5ecb8d1d" kindref="member">Poke()</ref> in that respect). Causes the server connection&apos;s <ref refid="classwx_connection_1a3995d44a885eccc26820262a35b11cd3" kindref="member">OnExec()</ref> member to be called. Returns true if successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="92"/>
      </memberdef>
      <memberdef kind="function" id="classwx_connection_1a6b6ca69abb25e74bcc25a3f70a482b6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxConnection::Execute</definition>
        <argsstring>(const char *data)</argsstring>
        <name>Execute</name>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Called by the client application to execute a command on the server. </para>        </briefdescription>
        <detaileddescription>
<para>Can also be used to transfer arbitrary data to the server (similar to <ref refid="classwx_connection_1a1a3e3fccd19a0ee3aa2ac89f5ecb8d1d" kindref="member">Poke()</ref> in that respect). Causes the server connection&apos;s <ref refid="classwx_connection_1a3995d44a885eccc26820262a35b11cd3" kindref="member">OnExec()</ref> member to be called. Returns true if successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="93"/>
      </memberdef>
      <memberdef kind="function" id="classwx_connection_1aab34b313bf5cd8ec6c071bbec33f48a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxConnection::Execute</definition>
        <argsstring>(const wchar_t *data)</argsstring>
        <name>Execute</name>
        <param>
          <type>const wchar_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Called by the client application to execute a command on the server. </para>        </briefdescription>
        <detaileddescription>
<para>Can also be used to transfer arbitrary data to the server (similar to <ref refid="classwx_connection_1a1a3e3fccd19a0ee3aa2ac89f5ecb8d1d" kindref="member">Poke()</ref> in that respect). Causes the server connection&apos;s <ref refid="classwx_connection_1a3995d44a885eccc26820262a35b11cd3" kindref="member">OnExec()</ref> member to be called. Returns true if successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="94"/>
      </memberdef>
      <memberdef kind="function" id="classwx_connection_1af1ef17a196c6d1d40d2b060be0690fd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxConnection::Execute</definition>
        <argsstring>(const wxString data)</argsstring>
        <name>Execute</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref></type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Called by the client application to execute a command on the server. </para>        </briefdescription>
        <detaileddescription>
<para>Can also be used to transfer arbitrary data to the server (similar to <ref refid="classwx_connection_1a1a3e3fccd19a0ee3aa2ac89f5ecb8d1d" kindref="member">Poke()</ref> in that respect). Causes the server connection&apos;s <ref refid="classwx_connection_1a3995d44a885eccc26820262a35b11cd3" kindref="member">OnExec()</ref> member to be called. Returns true if successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="95"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_connection_1a1a3e3fccd19a0ee3aa2ac89f5ecb8d1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxConnection::Poke</definition>
        <argsstring>(const wxString &amp;item, const void *data, size_t size, wxIPCFormat format=wxIPC_PRIVATE)</argsstring>
        <name>Poke</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="ipcbase_8h_1a95e8d5059caf54ddbaabdaf8224fe3f2" kindref="member">wxIPCFormat</ref></type>
          <declname>format</declname>
          <defval>wxIPC_PRIVATE</defval>
        </param>
        <briefdescription>
<para>Called by the client application to poke data into the server. </para>        </briefdescription>
        <detaileddescription>
<para>Can be used to transfer arbitrary data to the server. Causes the server connection&apos;s <ref refid="classwx_connection_1a34e3b471ab151be9356acdf583ba8997" kindref="member">OnPoke()</ref> member to be called. If size is -1 the size is computed from the string length of data.</para><para>Returns true if successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="175"/>
      </memberdef>
      <memberdef kind="function" id="classwx_connection_1aecd75b4c449b0f684fe355d511494f52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxConnection::Poke</definition>
        <argsstring>(const wxString &amp;item, const char *data)</argsstring>
        <name>Poke</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Called by the client application to poke data into the server. </para>        </briefdescription>
        <detaileddescription>
<para>Can be used to transfer arbitrary data to the server. Causes the server connection&apos;s <ref refid="classwx_connection_1a34e3b471ab151be9356acdf583ba8997" kindref="member">OnPoke()</ref> member to be called. If size is -1 the size is computed from the string length of data.</para><para>Returns true if successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="176"/>
      </memberdef>
      <memberdef kind="function" id="classwx_connection_1a8f3b561683c4a05858aef37b690d01bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxConnection::Poke</definition>
        <argsstring>(const wxString &amp;item, const wchar_t *data)</argsstring>
        <name>Poke</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Called by the client application to poke data into the server. </para>        </briefdescription>
        <detaileddescription>
<para>Can be used to transfer arbitrary data to the server. Causes the server connection&apos;s <ref refid="classwx_connection_1a34e3b471ab151be9356acdf583ba8997" kindref="member">OnPoke()</ref> member to be called. If size is -1 the size is computed from the string length of data.</para><para>Returns true if successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="177"/>
      </memberdef>
      <memberdef kind="function" id="classwx_connection_1abb26402299fbb2db2ae19810148062b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxConnection::Poke</definition>
        <argsstring>(const wxString &amp;item, const wxString data)</argsstring>
        <name>Poke</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref></type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Called by the client application to poke data into the server. </para>        </briefdescription>
        <detaileddescription>
<para>Can be used to transfer arbitrary data to the server. Causes the server connection&apos;s <ref refid="classwx_connection_1a34e3b471ab151be9356acdf583ba8997" kindref="member">OnPoke()</ref> member to be called. If size is -1 the size is computed from the string length of data.</para><para>Returns true if successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="178"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_connection_1a685d3d8b0b5220afdc3dda2aa7a37e03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxConnection::Disconnect</definition>
        <argsstring>()</argsstring>
        <name>Disconnect</name>
        <briefdescription>
<para>Called by the client or server application to disconnect from the other program; it causes the <ref refid="classwx_connection_1a69dadd11a2a7b07acfbab20c82719651" kindref="member">OnDisconnect()</ref> message to be sent to the corresponding connection object in the other program. </para>        </briefdescription>
        <detaileddescription>
<para>Returns true if successful or already disconnected. The application that calls <ref refid="classwx_connection_1a685d3d8b0b5220afdc3dda2aa7a37e03" kindref="member">Disconnect()</ref> must explicitly delete its side of the connection. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="82"/>
      </memberdef>
      <memberdef kind="function" id="classwx_connection_1a9dddf8014802c9643378b9bdb34bfc48" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxConnection::OnAdvise</definition>
        <argsstring>(const wxString &amp;topic, const wxString &amp;item, const void *data, size_t size, wxIPCFormat format)</argsstring>
        <name>OnAdvise</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>topic</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="ipcbase_8h_1a95e8d5059caf54ddbaabdaf8224fe3f2" kindref="member">wxIPCFormat</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Message sent to the client application when the server notifies it of a change in the data associated with the given item, using <ref refid="classwx_connection_1a21a78690ee1ae3649ea1ecd292f7f453" kindref="member">Advise()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="106"/>
      </memberdef>
      <memberdef kind="function" id="classwx_connection_1a69dadd11a2a7b07acfbab20c82719651" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxConnection::OnDisconnect</definition>
        <argsstring>()</argsstring>
        <name>OnDisconnect</name>
        <briefdescription>
<para>Message sent to the client or server application when the other application notifies it to end the connection. </para>        </briefdescription>
        <detaileddescription>
<para>The default behaviour is to delete the connection object and return true, so applications should generally override <ref refid="classwx_connection_1a69dadd11a2a7b07acfbab20c82719651" kindref="member">OnDisconnect()</ref> (finally calling the inherited method as well) so that they know the connection object is no longer available. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="117"/>
      </memberdef>
      <memberdef kind="function" id="classwx_connection_1a3995d44a885eccc26820262a35b11cd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxConnection::OnExec</definition>
        <argsstring>(const wxString &amp;topic, const wxString &amp;data)</argsstring>
        <name>OnExec</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>topic</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Message sent to the server application when the client notifies it to execute the given data, using <ref refid="classwx_connection_1aedb1028c9578f04f2c5b084271b54e4d" kindref="member">Execute()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Note that there is no item associated with this message. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="125"/>
      </memberdef>
      <memberdef kind="function" id="classwx_connection_1a34e3b471ab151be9356acdf583ba8997" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxConnection::OnPoke</definition>
        <argsstring>(const wxString &amp;topic, const wxString &amp;item, const void *data, size_t size, wxIPCFormat format)</argsstring>
        <name>OnPoke</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>topic</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="ipcbase_8h_1a95e8d5059caf54ddbaabdaf8224fe3f2" kindref="member">wxIPCFormat</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Message sent to the server application when the client notifies it to accept the given data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="134"/>
      </memberdef>
      <memberdef kind="function" id="classwx_connection_1a646a4fe944f63edb338c987e461fec95" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>const void *</type>
        <definition>virtual const void* wxConnection::OnRequest</definition>
        <argsstring>(const wxString &amp;topic, const wxString &amp;item, size_t *size, wxIPCFormat format)</argsstring>
        <name>OnRequest</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>topic</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="ipcbase_8h_1a95e8d5059caf54ddbaabdaf8224fe3f2" kindref="member">wxIPCFormat</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Message sent to the server application when the client calls <ref refid="classwx_connection_1ad692904420977e68c7a6311d96059a8f" kindref="member">Request()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>The server&apos;s <ref refid="classwx_connection_1a646a4fe944f63edb338c987e461fec95" kindref="member">OnRequest()</ref> method should respond by returning a character string, or NULL to indicate no data, and setting *size.</para><para>The character string must of course persist after the call returns. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="146"/>
      </memberdef>
      <memberdef kind="function" id="classwx_connection_1a6c50178f8a0da930a49f6fc68c17c9c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxConnection::OnStartAdvise</definition>
        <argsstring>(const wxString &amp;topic, const wxString &amp;item)</argsstring>
        <name>OnStartAdvise</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>topic</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Message sent to the server application by the client, when the client wishes to start an &apos;advise loop&apos; for the given topic and item. </para>        </briefdescription>
        <detaileddescription>
<para>The server can refuse to participate by returning false. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="154"/>
      </memberdef>
      <memberdef kind="function" id="classwx_connection_1ad3f6d06404e75a35f83870cce83ded81" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxConnection::OnStopAdvise</definition>
        <argsstring>(const wxString &amp;topic, const wxString &amp;item)</argsstring>
        <name>OnStopAdvise</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>topic</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Message sent to the server application by the client, when the client wishes to stop an &apos;advise loop&apos; for the given topic and item. </para>        </briefdescription>
        <detaileddescription>
<para>The server can refuse to stop the advise loop by returning false, although this doesn&apos;t have much meaning in practice. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="163"/>
      </memberdef>
      <memberdef kind="function" id="classwx_connection_1ad692904420977e68c7a6311d96059a8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* wxConnection::Request</definition>
        <argsstring>(const wxString &amp;item, size_t *size, wxIPCFormat format=wxIPC_TEXT)</argsstring>
        <name>Request</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="ipcbase_8h_1a95e8d5059caf54ddbaabdaf8224fe3f2" kindref="member">wxIPCFormat</ref></type>
          <declname>format</declname>
          <defval>wxIPC_TEXT</defval>
        </param>
        <briefdescription>
<para>Called by the client application to request data from the server. </para>        </briefdescription>
        <detaileddescription>
<para>Causes the server connection&apos;s <ref refid="classwx_connection_1a646a4fe944f63edb338c987e461fec95" kindref="member">OnRequest()</ref> member to be called. Size may be NULL or a pointer to a variable to receive the size of the requested item.</para><para>Returns a character string (actually a pointer to the connection&apos;s buffer) if successful, NULL otherwise. This buffer does not need to be deleted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="191"/>
      </memberdef>
      <memberdef kind="function" id="classwx_connection_1a28a3851ff97bf155727c8a0ccc478c5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxConnection::StartAdvise</definition>
        <argsstring>(const wxString &amp;item)</argsstring>
        <name>StartAdvise</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Called by the client application to ask if an advise loop can be started with the server. </para>        </briefdescription>
        <detaileddescription>
<para>Causes the server connection&apos;s <ref refid="classwx_connection_1a6c50178f8a0da930a49f6fc68c17c9c1" kindref="member">OnStartAdvise()</ref> member to be called. Returns true if the server okays it, false otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="199"/>
      </memberdef>
      <memberdef kind="function" id="classwx_connection_1a4dd918c1cc033d83c73c6783d1e2c64a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxConnection::StopAdvise</definition>
        <argsstring>(const wxString &amp;item)</argsstring>
        <name>StopAdvise</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Called by the client application to ask if an advise loop can be stopped. </para>        </briefdescription>
        <detaileddescription>
<para>Causes the server connection&apos;s <ref refid="classwx_connection_1ad3f6d06404e75a35f83870cce83ded81" kindref="member">OnStopAdvise()</ref> member to be called. Returns true if the server okays it, false otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="206"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_connection_1a72fca87909792a15c09c11d72f2dc6c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool wxConnection::IsTextFormat</definition>
        <argsstring>(wxIPCFormat format)</argsstring>
        <name>IsTextFormat</name>
        <param>
          <type><ref refid="ipcbase_8h_1a95e8d5059caf54ddbaabdaf8224fe3f2" kindref="member">wxIPCFormat</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Returns true if the format is one of the text formats. </para>        </briefdescription>
        <detaileddescription>
<para>The text formats are wxIPC_TEXT, wxIPC_UNICODETEXT and wxIPC_UTF8TEXT. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="213"/>
      </memberdef>
      <memberdef kind="function" id="classwx_connection_1acf4f913152774d0b5eff1397cfd8890c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>static wxString wxConnection::GetTextFromData</definition>
        <argsstring>(const void *data, size_t size, wxIPCFormat format)</argsstring>
        <name>GetTextFromData</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="ipcbase_8h_1a95e8d5059caf54ddbaabdaf8224fe3f2" kindref="member">wxIPCFormat</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Returns the data in any of the text formats as string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The raw data pointer as used with any of the other methods of this class. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the data buffer pointed to by <emphasis>data</emphasis>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>The format of the data. It must be a text one, i.e. such that <ref refid="classwx_connection_1a72fca87909792a15c09c11d72f2dc6c8" kindref="member">IsTextFormat()</ref> returns true for it. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The string representation of the data. If the format is not text, an assertion failure is triggered and empty string is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="231"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A <ref refid="classwx_connection" kindref="compound">wxConnection</ref> object represents the connection between a client and a server. </para>    </briefdescription>
    <detaileddescription>
<para>It is created by making a connection using a <ref refid="classwx_client" kindref="compound">wxClient</ref> object, or by the acceptance of a connection by a <ref refid="classwx_server" kindref="compound">wxServer</ref> object.</para><para>The bulk of a DDE-like (Dynamic Data Exchange) conversation is controlled by calling members in a <bold><ref refid="classwx_connection" kindref="compound">wxConnection</ref></bold> object or by overriding its members. The actual DDE-based implementation using <ref refid="classwx_d_d_e_connection" kindref="compound">wxDDEConnection</ref> is available on Windows only, but a platform-independent, socket-based version of this API is available using <ref refid="classwx_t_c_p_connection" kindref="compound">wxTCPConnection</ref>, which has the same API.</para><para>An application should normally derive a new connection class from <ref refid="classwx_connection" kindref="compound">wxConnection</ref>, in order to override the communication event handlers to do something interesting.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__ipc" kindref="compound">Interprocess Communication</ref></para><para><simplesect kind="see"><para><ref refid="classwx_client" kindref="compound">wxClient</ref>, <ref refid="classwx_server" kindref="compound">wxServer</ref>, <ref refid="overview_ipc" kindref="compound">Interprocess Communication</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="5138">
        <label>wxConnection</label>
        <link refid="classwx_connection"/>
        <childnode refid="5139" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5139">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5140">
        <label>wxConnection</label>
        <link refid="classwx_connection"/>
        <childnode refid="5141" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5141">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="5142" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="5142">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" line="31" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/ipc.h" bodystart="30" bodyend="232"/>
    <listofallmembers>
      <member refid="classwx_connection_1a21a78690ee1ae3649ea1ecd292f7f453" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>Advise</name></member>
      <member refid="classwx_connection_1adc2134e6040120d214e9c58946fb7b87" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>Advise</name></member>
      <member refid="classwx_connection_1a6b9c26fb7a98ad9cf9533943ecc34f30" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>Advise</name></member>
      <member refid="classwx_connection_1ab879420b12ec8b085cdbc4bd1411b7fa" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>Advise</name></member>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxConnection</scope><name>AllocExclusive</name></member>
      <member refid="classwx_object_1a1d39f1d3650fe0982c9a1abe7f9fe7b7" prot="protected" virt="virtual"><scope>wxConnection</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a95c6a5e4e1e03ff23c7b9efe4cff0c1a" prot="protected" virt="virtual"><scope>wxConnection</scope><name>CreateRefData</name></member>
      <member refid="classwx_connection_1a685d3d8b0b5220afdc3dda2aa7a37e03" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>Disconnect</name></member>
      <member refid="classwx_connection_1aedb1028c9578f04f2c5b084271b54e4d" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>Execute</name></member>
      <member refid="classwx_connection_1a6b6ca69abb25e74bcc25a3f70a482b6b" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>Execute</name></member>
      <member refid="classwx_connection_1aab34b313bf5cd8ec6c071bbec33f48a9" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>Execute</name></member>
      <member refid="classwx_connection_1af1ef17a196c6d1d40d2b060be0690fd8" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>Execute</name></member>
      <member refid="classwx_object_1ab3a0c6f723cbaddb47be4e8dd98cc8e2" prot="public" virt="virtual"><scope>wxConnection</scope><name>GetClassInfo</name></member>
      <member refid="classwx_object_1aabdb4fc957226544a8408167844e4f42" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>GetRefData</name></member>
      <member refid="classwx_connection_1acf4f913152774d0b5eff1397cfd8890c" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>GetTextFromData</name></member>
      <member refid="classwx_object_1af40d580385cf4f8112fae7713404b01e" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a80a1a3fda7b14396a9ddd3d7a46a88bd" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>IsSameAs</name></member>
      <member refid="classwx_connection_1a72fca87909792a15c09c11d72f2dc6c8" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>IsTextFormat</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxConnection</scope><name>m_refData</name></member>
      <member refid="classwx_connection_1a9dddf8014802c9643378b9bdb34bfc48" prot="public" virt="virtual"><scope>wxConnection</scope><name>OnAdvise</name></member>
      <member refid="classwx_connection_1a69dadd11a2a7b07acfbab20c82719651" prot="public" virt="virtual"><scope>wxConnection</scope><name>OnDisconnect</name></member>
      <member refid="classwx_connection_1a3995d44a885eccc26820262a35b11cd3" prot="public" virt="virtual"><scope>wxConnection</scope><name>OnExec</name></member>
      <member refid="classwx_connection_1a34e3b471ab151be9356acdf583ba8997" prot="public" virt="virtual"><scope>wxConnection</scope><name>OnPoke</name></member>
      <member refid="classwx_connection_1a646a4fe944f63edb338c987e461fec95" prot="public" virt="virtual"><scope>wxConnection</scope><name>OnRequest</name></member>
      <member refid="classwx_connection_1a6c50178f8a0da930a49f6fc68c17c9c1" prot="public" virt="virtual"><scope>wxConnection</scope><name>OnStartAdvise</name></member>
      <member refid="classwx_connection_1ad3f6d06404e75a35f83870cce83ded81" prot="public" virt="virtual"><scope>wxConnection</scope><name>OnStopAdvise</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>operator new</name></member>
      <member refid="classwx_connection_1a1a3e3fccd19a0ee3aa2ac89f5ecb8d1d" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>Poke</name></member>
      <member refid="classwx_connection_1aecd75b4c449b0f684fe355d511494f52" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>Poke</name></member>
      <member refid="classwx_connection_1a8f3b561683c4a05858aef37b690d01bd" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>Poke</name></member>
      <member refid="classwx_connection_1abb26402299fbb2db2ae19810148062b8" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>Poke</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>Ref</name></member>
      <member refid="classwx_connection_1ad692904420977e68c7a6311d96059a8f" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>Request</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>SetRefData</name></member>
      <member refid="classwx_connection_1a28a3851ff97bf155727c8a0ccc478c5b" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>StartAdvise</name></member>
      <member refid="classwx_connection_1a4dd918c1cc033d83c73c6783d1e2c64a" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>StopAdvise</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>UnShare</name></member>
      <member refid="classwx_connection_1a8ec46f3aa50b038514059f8578a8cb3b" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>wxConnection</name></member>
      <member refid="classwx_connection_1a922d075c343b97c08ff718449521c7bf" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>wxConnection</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxConnection</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxConnection</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
