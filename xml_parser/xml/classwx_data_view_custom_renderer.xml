<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_data_view_custom_renderer" kind="class" prot="public">
    <compoundname>wxDataViewCustomRenderer</compoundname>
    <basecompoundref refid="classwx_data_view_renderer" prot="public" virt="non-virtual">wxDataViewRenderer</basecompoundref>
    <derivedcompoundref refid="classwx_data_view_spin_renderer" prot="public" virt="non-virtual">wxDataViewSpinRenderer</derivedcompoundref>
    <includes local="no">wx/dataview.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1a7a3b80fb80625673704abfc97dbb764b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxDataViewCustomRenderer::wxDataViewCustomRenderer</definition>
        <argsstring>(const wxString &amp;varianttype=&quot;string&quot;, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int align=-1, bool no_init=false)</argsstring>
        <name>wxDataViewCustomRenderer</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>varianttype</declname>
          <defval>&quot;string&quot;</defval>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval>wxDATAVIEW_CELL_INERT</defval>
        </param>
        <param>
          <type>int</type>
          <declname>align</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>no_init</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dataview.h" line="1773"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1a66c5554b962ec195279a51b1b7d3cac4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxDataViewCustomRenderer::~wxDataViewCustomRenderer</definition>
        <argsstring>()</argsstring>
        <name>~wxDataViewCustomRenderer</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dataview.h" line="1778"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1a76e85467c89adae6612236d803a552fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxDataViewCustomRenderer::ActivateCell</definition>
        <argsstring>(const wxRect &amp;cell, wxDataViewModel *model, const wxDataViewItem &amp;item, unsigned int col, const wxMouseEvent *mouseEvent)</argsstring>
        <name>ActivateCell</name>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>cell</declname>
        </param>
        <param>
          <type><ref refid="classwx_data_view_model" kindref="compound">wxDataViewModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>col</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_mouse_event" kindref="compound">wxMouseEvent</ref> *</type>
          <declname>mouseEvent</declname>
        </param>
        <briefdescription>
<para>Override this to react to cell <emphasis>activation</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Activating a cell is an alternative to showing inline editor when the value can be edited in a simple way that doesn&apos;t warrant full editor control. The most typical use of cell activation is toggling the checkbox in <ref refid="classwx_data_view_toggle_renderer" kindref="compound">wxDataViewToggleRenderer</ref>; others would be e.g. an embedded volume slider or a five-star rating column.</para><para>The exact means of activating a cell are platform-dependent, but they are usually similar to those used for inline editing of values. Typically, a cell would be activated by Space or Enter keys or by left mouse click.</para><para>This method will only be called if the cell has the wxDATAVIEW_CELL_ACTIVATABLE mode.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinates of the activated cell&apos;s area. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>The model to manipulate in response. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>Activated item. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>Activated column of <emphasis>item</emphasis>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mouseEvent</parametername>
</parameternamelist>
<parameterdescription>
<para>If the activation was triggered by mouse click, contains the corresponding event. Is NULL otherwise (for keyboard activation). Mouse coordinates are adjusted to be relative to the cell.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>2.9.3</para></simplesect>
<simplesect kind="note"><para>Do not confuse this method with item activation in <ref refid="classwx_data_view_ctrl" kindref="compound">wxDataViewCtrl</ref> and the wxEVT_COMMAND_DATAVIEW_ITEM_ACTIVATED event. That one is used for activating the item (or, to put it differently, the entire row) similarly to analogous messages in <ref refid="classwx_tree_ctrl" kindref="compound">wxTreeCtrl</ref> and <ref refid="classwx_list_ctrl" kindref="compound">wxListCtrl</ref>, and the effect differs (play a song, open a file etc.). Cell activation, on the other hand, is all about interacting with the individual cell.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_data_view_custom_renderer_1a4fb670400e9c1a430a6d28231a3c6d4f" kindref="member">CreateEditorCtrl()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dataview.h" line="1825"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1a4fb670400e9c1a430a6d28231a3c6d4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
        <definition>virtual wxWindow* wxDataViewCustomRenderer::CreateEditorCtrl</definition>
        <argsstring>(wxWindow *parent, wxRect labelRect, const wxVariant &amp;value)</argsstring>
        <name>CreateEditorCtrl</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="classwx_rect" kindref="compound">wxRect</ref></type>
          <declname>labelRect</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_variant" kindref="compound">wxVariant</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Override this to create the actual editor control once editing is about to start. </para>        </briefdescription>
        <detaileddescription>
<para>This method will only be called if the cell has the wxDATAVIEW_CELL_EDITABLE mode. Editing is typically triggered by slowly double-clicking the cell or by a platform-dependent keyboard shortcut (F2 is typical on Windows, Space and/or Enter is common elsewhere and supported on Windows too).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent of the editor control. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labelRect</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates the position and size of the editor control. The control should be created in place of the cell and <emphasis>labelRect</emphasis> should be respected as much as possible. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial value of the editor.</para></parameterdescription>
</parameteritem>
</parameterlist>
An example: <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classwx_spin_ctrl" kindref="compound" tooltip="wxSpinCtrl combines wxTextCtrl and wxSpinButton in one control.">wxSpinCtrl</ref>(<sp/>parent,<sp/><ref refid="defs_8h_1ac66d0a09761e7d86b2ac0b2e0c6a8cbba1f375b01ea03a713bbb7e32a36a2589c" kindref="member" tooltip="Any id: means that we don&amp;#39;t care about the id, whether when installing an event handler or when creat...">wxID_ANY</ref>,<sp/><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member" tooltip="The global wxString instance of an empty string.">wxEmptyString</ref>,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labelRect.GetTopLeft(),<sp/>labelRect.GetSize(),<sp/>0,<sp/>0,<sp/>100,<sp/>l<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
</programlisting></para><para><simplesect kind="see"><para><ref refid="classwx_data_view_custom_renderer_1a76e85467c89adae6612236d803a552fc" kindref="member">ActivateCell()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dataview.h" line="1859"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1ab785d5968da6d6c1da4fde83c974c049" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_data_view_item_attr" kindref="compound">wxDataViewItemAttr</ref> &amp;</type>
        <definition>const wxDataViewItemAttr&amp; wxDataViewCustomRenderer::GetAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetAttr</name>
        <briefdescription>
<para>Return the attribute to be used for rendering. </para>        </briefdescription>
        <detaileddescription>
<para>This function may be called from <ref refid="classwx_data_view_custom_renderer_1a0884c149dac5ff57137a5803eb6f72da" kindref="member">Render()</ref> implementation to use the attributes defined for the item if the renderer supports them.</para><para>Notice that when <ref refid="classwx_data_view_custom_renderer_1a0884c149dac5ff57137a5803eb6f72da" kindref="member">Render()</ref> is called, the <ref refid="classwx_d_c" kindref="compound">wxDC</ref> object passed to it is already set up to use the correct attributes (e.g. its font is set to bold or italic version if wxDataViewItemAttr::GetBold() or GetItalic() returns true) so it may not be necessary to call it explicitly if you only want to render text using the items attributes.</para><para><simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dataview.h" line="1875"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1a0c5e1d559b46c9456836c27dce0ffa4d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>virtual wxSize wxDataViewCustomRenderer::GetSize</definition>
        <argsstring>() const =0</argsstring>
        <name>GetSize</name>
        <briefdescription>
<para>Return size required to show content. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dataview.h" line="1880"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1a903359019fcc481b7b6a359d7f3845f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxDataViewCustomRenderer::GetValueFromEditorCtrl</definition>
        <argsstring>(wxWindow *editor, wxVariant &amp;value)</argsstring>
        <name>GetValueFromEditorCtrl</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>editor</declname>
        </param>
        <param>
          <type><ref refid="classwx_variant" kindref="compound">wxVariant</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Override this so that the renderer can get the value from the editor control (pointed to by <emphasis>editor</emphasis>): </para>        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_spin_ctrl" kindref="compound" tooltip="wxSpinCtrl combines wxTextCtrl and wxSpinButton in one control.">wxSpinCtrl</ref><sp/>*sc<sp/>=<sp/>(<ref refid="classwx_spin_ctrl" kindref="compound" tooltip="wxSpinCtrl combines wxTextCtrl and wxSpinButton in one control.">wxSpinCtrl</ref>*)<sp/>editor;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>sc-&gt;<ref refid="classwx_spin_ctrl_1aa604212b73deb894ce28ad3b0e790879" kindref="member" tooltip="Gets the value of the spin control.">GetValue</ref>();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>l;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dataview.h" line="1895"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1a91856e7bfa815b392866b6728ca4e820" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxDataViewCustomRenderer::HasEditorCtrl</definition>
        <argsstring>() const </argsstring>
        <name>HasEditorCtrl</name>
        <briefdescription>
<para>Override this and make it return true in order to indicate that this renderer supports in-place editing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dataview.h" line="1901"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1a2240666e806e64228f235d5cfb33c0c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxDataViewCustomRenderer::LeftClick</definition>
        <argsstring>(const wxPoint &amp;cursor, const wxRect &amp;cell, wxDataViewModel *model, const wxDataViewItem &amp;item, unsigned int col)</argsstring>
        <name>LeftClick</name>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>cursor</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>cell</declname>
        </param>
        <param>
          <type><ref refid="classwx_data_view_model" kindref="compound">wxDataViewModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Override this to react to a left click. </para>        </briefdescription>
        <detaileddescription>
<para>This method will only be called in <computeroutput>wxDATAVIEW_CELL_ACTIVATABLE</computeroutput> mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dataview.h" line="1911"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1a0884c149dac5ff57137a5803eb6f72da" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool wxDataViewCustomRenderer::Render</definition>
        <argsstring>(wxRect cell, wxDC *dc, int state)=0</argsstring>
        <name>Render</name>
        <param>
          <type><ref refid="classwx_rect" kindref="compound">wxRect</ref></type>
          <declname>cell</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> *</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Override this to render the cell. </para>        </briefdescription>
        <detaileddescription>
<para>Before this is called, <ref refid="classwx_data_view_renderer_1ac4494f39d056c1b0976481647b24117f" kindref="member">wxDataViewRenderer::SetValue</ref> was called so that this instance knows what to render. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dataview.h" line="1918"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1a87f09758076f3fc8b859655212d330ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDataViewCustomRenderer::RenderText</definition>
        <argsstring>(const wxString &amp;text, int xoffset, wxRect cell, wxDC *dc, int state)</argsstring>
        <name>RenderText</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xoffset</declname>
        </param>
        <param>
          <type><ref refid="classwx_rect" kindref="compound">wxRect</ref></type>
          <declname>cell</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> *</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>This method should be called from within <ref refid="classwx_data_view_custom_renderer_1a0884c149dac5ff57137a5803eb6f72da" kindref="member">Render()</ref> whenever you need to render simple text. </para>        </briefdescription>
        <detaileddescription>
<para>This will ensure that the correct colour, font and vertical alignment will be chosen so the text will look the same as text drawn by native renderers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dataview.h" line="1927"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1a36d6d5c64097bb48f67a712ddb7f97bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxDataViewCustomRenderer::StartDrag</definition>
        <argsstring>(const wxPoint &amp;cursor, const wxRect &amp;cell, wxDataViewModel *model, const wxDataViewItem &amp;item, unsigned int col)</argsstring>
        <name>StartDrag</name>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>cursor</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>cell</declname>
        </param>
        <param>
          <type><ref refid="classwx_data_view_model" kindref="compound">wxDataViewModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Override this to start a drag operation. </para>        </briefdescription>
        <detaileddescription>
<para>Not yet supported. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dataview.h" line="1936"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>You need to derive a new class from <ref refid="classwx_data_view_custom_renderer" kindref="compound">wxDataViewCustomRenderer</ref> in order to write a new renderer. </para>    </briefdescription>
    <detaileddescription>
<para>You need to override at least <ref refid="classwx_data_view_renderer_1ac4494f39d056c1b0976481647b24117f" kindref="member">wxDataViewRenderer::SetValue</ref>, <ref refid="classwx_data_view_renderer_1ad7c52082d76074cae4ceaf94e55cf604" kindref="member">wxDataViewRenderer::GetValue</ref>, <ref refid="classwx_data_view_custom_renderer_1a0c5e1d559b46c9456836c27dce0ffa4d" kindref="member">wxDataViewCustomRenderer::GetSize</ref> and <ref refid="classwx_data_view_custom_renderer_1a0884c149dac5ff57137a5803eb6f72da" kindref="member">wxDataViewCustomRenderer::Render</ref>.</para><para>If you want your renderer to support in-place editing then you also need to override <ref refid="classwx_data_view_custom_renderer_1a91856e7bfa815b392866b6728ca4e820" kindref="member">wxDataViewCustomRenderer::HasEditorCtrl</ref>, <ref refid="classwx_data_view_custom_renderer_1a4fb670400e9c1a430a6d28231a3c6d4f" kindref="member">wxDataViewCustomRenderer::CreateEditorCtrl</ref> and <ref refid="classwx_data_view_custom_renderer_1a903359019fcc481b7b6a359d7f3845f2" kindref="member">wxDataViewCustomRenderer::GetValueFromEditorCtrl</ref>.</para><para>Note that a special event handler will be pushed onto that editor control which handles <emphasis>&lt;ENTER&gt;</emphasis> and focus out events in order to end the editing.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxadv" kindref="member">wxAdvanced</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__dvc" kindref="compound">wxDataViewCtrl Related Classes</ref> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="5398">
        <label>wxDataViewRenderer</label>
        <link refid="classwx_data_view_renderer"/>
        <childnode refid="5399" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5399">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="5400">
        <label>wxDataViewSpinRenderer</label>
        <link refid="classwx_data_view_spin_renderer"/>
        <childnode refid="5397" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5397">
        <label>wxDataViewCustomRenderer</label>
        <link refid="classwx_data_view_custom_renderer"/>
        <childnode refid="5398" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5402">
        <label>wxDataViewRenderer</label>
        <link refid="classwx_data_view_renderer"/>
        <childnode refid="5403" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5403">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="5404" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="5401">
        <label>wxDataViewCustomRenderer</label>
        <link refid="classwx_data_view_custom_renderer"/>
        <childnode refid="5402" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5404">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/dataview.h" line="1766" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/dataview.h" bodystart="1765" bodyend="1937"/>
    <listofallmembers>
      <member refid="classwx_data_view_custom_renderer_1a76e85467c89adae6612236d803a552fc" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>ActivateCell</name></member>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>AllocExclusive</name></member>
      <member refid="classwx_object_1a1d39f1d3650fe0982c9a1abe7f9fe7b7" prot="protected" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>CloneRefData</name></member>
      <member refid="classwx_data_view_custom_renderer_1a4fb670400e9c1a430a6d28231a3c6d4f" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>CreateEditorCtrl</name></member>
      <member refid="classwx_object_1a95c6a5e4e1e03ff23c7b9efe4cff0c1a" prot="protected" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>CreateRefData</name></member>
      <member refid="classwx_data_view_renderer_1ad88c4e7dcf842d1ac56544ca85e72f9a" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>DisableEllipsize</name></member>
      <member refid="classwx_data_view_renderer_1aeea4804c641149896b8e213bba672e64" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>EnableEllipsize</name></member>
      <member refid="classwx_data_view_renderer_1af77226c361846ad168ff8bc921317429" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>GetAlignment</name></member>
      <member refid="classwx_data_view_custom_renderer_1ab785d5968da6d6c1da4fde83c974c049" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>GetAttr</name></member>
      <member refid="classwx_object_1ab3a0c6f723cbaddb47be4e8dd98cc8e2" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>GetClassInfo</name></member>
      <member refid="classwx_data_view_renderer_1a93b4f4418b3a762856e2a7f0789edde9" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>GetEllipsizeMode</name></member>
      <member refid="classwx_data_view_renderer_1a3a27d87356d02d8d4f2a1c3d3168c7d2" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>GetMode</name></member>
      <member refid="classwx_data_view_renderer_1a1f82555c918bf620fa09116bba111cfc" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>GetOwner</name></member>
      <member refid="classwx_object_1aabdb4fc957226544a8408167844e4f42" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>GetRefData</name></member>
      <member refid="classwx_data_view_custom_renderer_1a0c5e1d559b46c9456836c27dce0ffa4d" prot="public" virt="pure-virtual"><scope>wxDataViewCustomRenderer</scope><name>GetSize</name></member>
      <member refid="classwx_data_view_renderer_1ad7c52082d76074cae4ceaf94e55cf604" prot="public" virt="pure-virtual"><scope>wxDataViewCustomRenderer</scope><name>GetValue</name></member>
      <member refid="classwx_data_view_custom_renderer_1a903359019fcc481b7b6a359d7f3845f2" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>GetValueFromEditorCtrl</name></member>
      <member refid="classwx_data_view_renderer_1ad2eaa791c222f9f02692a95b216b6f05" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>GetVariantType</name></member>
      <member refid="classwx_data_view_custom_renderer_1a91856e7bfa815b392866b6728ca4e820" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>HasEditorCtrl</name></member>
      <member refid="classwx_object_1af40d580385cf4f8112fae7713404b01e" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a80a1a3fda7b14396a9ddd3d7a46a88bd" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>IsSameAs</name></member>
      <member refid="classwx_data_view_custom_renderer_1a2240666e806e64228f235d5cfb33c0c4" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>LeftClick</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>Ref</name></member>
      <member refid="classwx_data_view_custom_renderer_1a0884c149dac5ff57137a5803eb6f72da" prot="public" virt="pure-virtual"><scope>wxDataViewCustomRenderer</scope><name>Render</name></member>
      <member refid="classwx_data_view_custom_renderer_1a87f09758076f3fc8b859655212d330ee" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>RenderText</name></member>
      <member refid="classwx_data_view_renderer_1a2c67ceb437b6c2d2280ca651712dec1c" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>SetAlignment</name></member>
      <member refid="classwx_data_view_renderer_1a388da7afbbf86971c1e945255344666c" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>SetOwner</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>SetRefData</name></member>
      <member refid="classwx_data_view_renderer_1ac4494f39d056c1b0976481647b24117f" prot="public" virt="pure-virtual"><scope>wxDataViewCustomRenderer</scope><name>SetValue</name></member>
      <member refid="classwx_data_view_custom_renderer_1a36d6d5c64097bb48f67a712ddb7f97bf" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>StartDrag</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>UnShare</name></member>
      <member refid="classwx_data_view_renderer_1a64c9df3410623498956ce5ed7524a9cf" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>Validate</name></member>
      <member refid="classwx_data_view_custom_renderer_1a7a3b80fb80625673704abfc97dbb764b" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>wxDataViewCustomRenderer</name></member>
      <member refid="classwx_data_view_renderer_1ada4b068514a9732e32e03aae8b4581e6" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>wxDataViewRenderer</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>wxObject</name></member>
      <member refid="classwx_data_view_custom_renderer_1a66c5554b962ec195279a51b1b7d3cac4" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>~wxDataViewCustomRenderer</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
