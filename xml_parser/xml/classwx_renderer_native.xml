<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_renderer_native" kind="class" prot="public">
    <compoundname>wxRendererNative</compoundname>
    <derivedcompoundref refid="classwx_delegate_renderer_native" prot="public" virt="non-virtual">wxDelegateRendererNative</derivedcompoundref>
    <includes local="no">wx/renderer.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_renderer_native_1a3b5f285195f6d00e060658d3c209ac62" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxRendererNative::~wxRendererNative</definition>
        <argsstring>()</argsstring>
        <name>~wxRendererNative</name>
        <briefdescription>
<para>Virtual destructor as for any base class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="302"/>
      </memberdef>
      <memberdef kind="function" id="classwx_renderer_native_1af5a80f13e6b7a20affd26b0becd9856b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxRendererNative::DrawCheckBox</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxRect &amp;rect, int flags=0)=0</argsstring>
        <name>DrawCheckBox</name>
        <reimplementedby refid="classwx_delegate_renderer_native_1ab1851301b3a176eb6ccba1ab0ac61d97">DrawCheckBox</reimplementedby>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draw a check box. </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>flags</emphasis> may have the <computeroutput>wxCONTROL_CHECKED</computeroutput>, <computeroutput>wxCONTROL_CURRENT</computeroutput> or <computeroutput>wxCONTROL_UNDETERMINED</computeroutput> bit set, see <ref refid="renderer_8h_1wxCONTROL_FLAGS" kindref="member">wxCONTROL_FLAGS</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="311"/>
      </memberdef>
      <memberdef kind="function" id="classwx_renderer_native_1a9495db526d637f854a3436e1d17bb472" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxRendererNative::DrawComboBoxDropButton</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxRect &amp;rect, int flags=0)=0</argsstring>
        <name>DrawComboBoxDropButton</name>
        <reimplementedby refid="classwx_delegate_renderer_native_1ad5f90483ab97283cdc7af41a37ddba0f">DrawComboBoxDropButton</reimplementedby>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draw a button like the one used by <ref refid="classwx_combo_box" kindref="compound">wxComboBox</ref> to show a drop down window. </para>        </briefdescription>
        <detaileddescription>
<para>The usual appearance is a downwards pointing arrow.</para><para><emphasis>flags</emphasis> may have the <computeroutput>wxCONTROL_PRESSED</computeroutput> or <computeroutput>wxCONTROL_CURRENT</computeroutput> bit set, see <ref refid="renderer_8h_1wxCONTROL_FLAGS" kindref="member">wxCONTROL_FLAGS</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="321"/>
      </memberdef>
      <memberdef kind="function" id="classwx_renderer_native_1a0c16016c310cec4d3d2f53574741df05" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxRendererNative::DrawDropArrow</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxRect &amp;rect, int flags=0)=0</argsstring>
        <name>DrawDropArrow</name>
        <reimplementedby refid="classwx_delegate_renderer_native_1aead3836f3a96a7e1bc23feb83febc3e9">DrawDropArrow</reimplementedby>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draw a drop down arrow that is suitable for use outside a combo box. </para>        </briefdescription>
        <detaileddescription>
<para>Arrow will have transparent background.</para><para><emphasis>rect</emphasis> is not entirely filled by the arrow. Instead, you should use bounding rectangle of a drop down button which arrow matches the size you need.</para><para><emphasis>flags</emphasis> may have the <computeroutput>wxCONTROL_PRESSED</computeroutput> or <computeroutput>wxCONTROL_CURRENT</computeroutput> bit set, see <ref refid="renderer_8h_1wxCONTROL_FLAGS" kindref="member">wxCONTROL_FLAGS</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="334"/>
      </memberdef>
      <memberdef kind="function" id="classwx_renderer_native_1a365bc24e598ce64e3a8d2b9559a8c4c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxRendererNative::DrawFocusRect</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxRect &amp;rect, int flags=0)=0</argsstring>
        <name>DrawFocusRect</name>
        <reimplementedby refid="classwx_delegate_renderer_native_1af88adc13d5efe94b29fbcfa3d61dfa26">DrawFocusRect</reimplementedby>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draw a focus rectangle using the specified rectangle. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="classwx_list_ctrl" kindref="compound">wxListCtrl</ref>.</para><para>The only supported flags is <computeroutput>wxCONTROL_SELECTED</computeroutput> for items which are selected. see <ref refid="renderer_8h_1wxCONTROL_FLAGS" kindref="member">wxCONTROL_FLAGS</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="344"/>
      </memberdef>
      <memberdef kind="function" id="classwx_renderer_native_1a65c10b87b311b5278890026b26c525b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int wxRendererNative::DrawHeaderButton</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxRect &amp;rect, int flags=0, wxHeaderSortIconType sortArrow=wxHDR_SORT_ICON_NONE, wxHeaderButtonParams *params=NULL)=0</argsstring>
        <name>DrawHeaderButton</name>
        <reimplementedby refid="classwx_delegate_renderer_native_1ac910b4ed8daf2381d806c18b217dd9f8">DrawHeaderButton</reimplementedby>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="renderer_8h_1a9902390625d1f5ae05a28f6b5ff56f5e" kindref="member">wxHeaderSortIconType</ref></type>
          <declname>sortArrow</declname>
          <defval>wxHDR_SORT_ICON_NONE</defval>
        </param>
        <param>
          <type><ref refid="structwx_header_button_params" kindref="compound">wxHeaderButtonParams</ref> *</type>
          <declname>params</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Draw the header control button (used, for example, by <ref refid="classwx_list_ctrl" kindref="compound">wxListCtrl</ref>). </para>        </briefdescription>
        <detaileddescription>
<para>Depending on platforms the <emphasis>flags</emphasis> parameter may support the <computeroutput>wxCONTROL_SELECTED</computeroutput> <computeroutput>wxCONTROL_DISABLED</computeroutput> and <computeroutput>wxCONTROL_CURRENT</computeroutput> bits, see <ref refid="renderer_8h_1wxCONTROL_FLAGS" kindref="member">wxCONTROL_FLAGS</ref>.</para><para><simplesect kind="return"><para>The optimal width to contain the unabbreviated label text or bitmap, the sort arrow if present, and internal margins. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="358"/>
      </memberdef>
      <memberdef kind="function" id="classwx_renderer_native_1a7abc86c94cc688f59dc01a21f7b0db94" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int wxRendererNative::DrawHeaderButtonContents</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxRect &amp;rect, int flags=0, wxHeaderSortIconType sortArrow=wxHDR_SORT_ICON_NONE, wxHeaderButtonParams *params=NULL)=0</argsstring>
        <name>DrawHeaderButtonContents</name>
        <reimplementedby refid="classwx_delegate_renderer_native_1a1e8e5f9bf7466fef835582df85abafa0">DrawHeaderButtonContents</reimplementedby>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="renderer_8h_1a9902390625d1f5ae05a28f6b5ff56f5e" kindref="member">wxHeaderSortIconType</ref></type>
          <declname>sortArrow</declname>
          <defval>wxHDR_SORT_ICON_NONE</defval>
        </param>
        <param>
          <type><ref refid="structwx_header_button_params" kindref="compound">wxHeaderButtonParams</ref> *</type>
          <declname>params</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Draw the contents of a header control button (label, sort arrows, etc.). </para>        </briefdescription>
        <detaileddescription>
<para>This function is normally only called by <ref refid="classwx_renderer_native_1a65c10b87b311b5278890026b26c525b1" kindref="member">DrawHeaderButton()</ref>.</para><para>Depending on platforms the <emphasis>flags</emphasis> parameter may support the <computeroutput>wxCONTROL_SELECTED</computeroutput> <computeroutput>wxCONTROL_DISABLED</computeroutput> and <computeroutput>wxCONTROL_CURRENT</computeroutput> bits, see <ref refid="renderer_8h_1wxCONTROL_FLAGS" kindref="member">wxCONTROL_FLAGS</ref>.</para><para><simplesect kind="return"><para>The optimal width to contain the unabbreviated label text or bitmap, the sort arrow if present, and internal margins. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="373"/>
      </memberdef>
      <memberdef kind="function" id="classwx_renderer_native_1a5d0ab3cbc0dbcf90a91a4e6ed400ff8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxRendererNative::DrawItemSelectionRect</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxRect &amp;rect, int flags=0)=0</argsstring>
        <name>DrawItemSelectionRect</name>
        <reimplementedby refid="classwx_delegate_renderer_native_1accb2c7ceb0364736feeb4d631368f3c1">DrawItemSelectionRect</reimplementedby>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draw a selection rectangle underneath the text as used e.g. </para>        </briefdescription>
        <detaileddescription>
<para>in a <ref refid="classwx_list_ctrl" kindref="compound">wxListCtrl</ref>.</para><para>The supported <emphasis>flags</emphasis> are <computeroutput>wxCONTROL_SELECTED</computeroutput> for items which are selected (e.g. often a blue rectangle) and <computeroutput>wxCONTROL_CURRENT</computeroutput> for the item that has the focus (often a dotted line around the item&apos;s text). <computeroutput>wxCONTROL_FOCUSED</computeroutput> may be used to indicate if the control has the focus (otherwise the selection rectangle is e.g. often grey and not blue). This may be ignored by the renderer or deduced by the code directly from the <emphasis>win</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="388"/>
      </memberdef>
      <memberdef kind="function" id="classwx_renderer_native_1a866a6e77f5f302e7fbb50819268de331" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxRendererNative::DrawPushButton</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxRect &amp;rect, int flags=0)=0</argsstring>
        <name>DrawPushButton</name>
        <reimplementedby refid="classwx_delegate_renderer_native_1aef079b02758509abad5d52186ef092b4">DrawPushButton</reimplementedby>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draw a blank push button that looks very similar to <ref refid="classwx_button" kindref="compound">wxButton</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>flags</emphasis> may have the <computeroutput>wxCONTROL_PRESSED</computeroutput>, <computeroutput>wxCONTROL_CURRENT</computeroutput> or <computeroutput>wxCONTROL_ISDEFAULT</computeroutput> bit set, see <ref refid="renderer_8h_1wxCONTROL_FLAGS" kindref="member">wxCONTROL_FLAGS</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="397"/>
      </memberdef>
      <memberdef kind="function" id="classwx_renderer_native_1a42ec07b63b3c38ab7309fe87932cfcb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxRendererNative::DrawSplitterBorder</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxRect &amp;rect, int flags=0)=0</argsstring>
        <name>DrawSplitterBorder</name>
        <reimplementedby refid="classwx_delegate_renderer_native_1a75a9c27ea848e5eaba778927e469306d">DrawSplitterBorder</reimplementedby>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draw the border for sash window: this border must be such that the sash drawn by <ref refid="classwx_renderer_native_1ac9eedbd75f63fb4b99a2a93ca08612c1" kindref="member">DrawSplitterSash()</ref> blends into it well. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="404"/>
      </memberdef>
      <memberdef kind="function" id="classwx_renderer_native_1ac9eedbd75f63fb4b99a2a93ca08612c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxRendererNative::DrawSplitterSash</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxSize &amp;size, wxCoord position, wxOrientation orient, int flags=0)=0</argsstring>
        <name>DrawSplitterSash</name>
        <reimplementedby refid="classwx_delegate_renderer_native_1af49e23a1eb34dbd75751eb5c6740ce75">DrawSplitterSash</reimplementedby>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a1e6994f40bd9cb140e292afb165af971" kindref="member">wxOrientation</ref></type>
          <declname>orient</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draw a sash. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>orient</emphasis> parameter defines whether the sash should be vertical or horizontal and how the <emphasis>position</emphasis> should be interpreted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="412"/>
      </memberdef>
      <memberdef kind="function" id="classwx_renderer_native_1a2b66a74d44ffc6a36a8bd1e15c83e77c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxRendererNative::DrawTreeItemButton</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxRect &amp;rect, int flags=0)=0</argsstring>
        <name>DrawTreeItemButton</name>
        <reimplementedby refid="classwx_delegate_renderer_native_1a9118555100e615c5d84a7894110025a2">DrawTreeItemButton</reimplementedby>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draw the expanded/collapsed icon for a tree control item. </para>        </briefdescription>
        <detaileddescription>
<para>To draw an expanded button the <emphasis>flags</emphasis> parameter must contain <computeroutput>wxCONTROL_EXPANDED</computeroutput> bit, see <ref refid="renderer_8h_1wxCONTROL_FLAGS" kindref="member">wxCONTROL_FLAGS</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="421"/>
      </memberdef>
      <memberdef kind="function" id="classwx_renderer_native_1a54bc38596a1ff8f37aa2a4f97d208a2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxRendererNative::DrawChoice</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxRect &amp;rect, int flags=0)=0</argsstring>
        <name>DrawChoice</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draw a native <ref refid="classwx_choice" kindref="compound">wxChoice</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="426"/>
      </memberdef>
      <memberdef kind="function" id="classwx_renderer_native_1ab9e724dd0441e511a75aee96fb7ddcd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxRendererNative::DrawComboBox</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxRect &amp;rect, int flags=0)=0</argsstring>
        <name>DrawComboBox</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draw a native <ref refid="classwx_combo_box" kindref="compound">wxComboBox</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="431"/>
      </memberdef>
      <memberdef kind="function" id="classwx_renderer_native_1a35e49075d3a7e748953660101252a892" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxRendererNative::DrawTextCtrl</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxRect &amp;rect, int flags=0)=0</argsstring>
        <name>DrawTextCtrl</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draw a native <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> frame. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="436"/>
      </memberdef>
      <memberdef kind="function" id="classwx_renderer_native_1af62a5a4bd85f1d2f26ae72d5feb4469c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxRendererNative::DrawRadioBitmap</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxRect &amp;rect, int flags=0)=0</argsstring>
        <name>DrawRadioBitmap</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draw a native <ref refid="classwx_radio_button" kindref="compound">wxRadioButton</ref> bitmap. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="441"/>
      </memberdef>
      <memberdef kind="function" id="classwx_renderer_native_1a0bfb492af0725bd49a1402baa5f68e12" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxRendererNative::DrawTitleBarBitmap</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxRect &amp;rect, wxTitleBarButton button, int flags=0)=0</argsstring>
        <name>DrawTitleBarBitmap</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type><ref refid="renderer_8h_1ae435532b3f5fb0268b6c0375621eb180" kindref="member">wxTitleBarButton</ref></type>
          <declname>button</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draw a title bar button in the given state. </para>        </briefdescription>
        <detaileddescription>
<para>This function is currently only available under MSW and OS X (and only for wxTITLEBAR_BUTTON_CLOSE under the latter), its best replacement for the other platforms is to use <ref refid="classwx_art_provider" kindref="compound">wxArtProvider</ref> to retrieve the bitmaps for <computeroutput>wxART_HELP</computeroutput> and <computeroutput>wxART_CLOSE</computeroutput> (but not any other title bar buttons and not for any state but normal, i.e. not pressed and not current one).</para><para>The presence of this function is indicated by <computeroutput>wxHAS_DRAW_TITLE_BAR_BITMAP</computeroutput> symbol being defined.</para><para>Also notice that PNG handler must be enabled using <ref refid="classwx_image_1ab39fb3747dfb8c2d444eff9fe41fa205" kindref="member">wxImage::AddHandler()</ref> to use this function under OS X currently as the bitmaps are embedded in the library itself in PNG format.</para><para><simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="465"/>
      </memberdef>
      <memberdef kind="function" id="classwx_renderer_native_1aae69eead8c4e298acf97a6bd4848a45c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>virtual wxSize wxRendererNative::GetCheckBoxSize</definition>
        <argsstring>(wxWindow *win)=0</argsstring>
        <name>GetCheckBoxSize</name>
        <reimplementedby refid="classwx_delegate_renderer_native_1a958fad461eb562edcd215f263cda91f8">GetCheckBoxSize</reimplementedby>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
<para>Returns the size of a check box. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>win</emphasis> parameter is not used currently and can be NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="491"/>
      </memberdef>
      <memberdef kind="function" id="classwx_renderer_native_1a7318ee160cf6810d5fbcfa3383a0562f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int wxRendererNative::GetHeaderButtonHeight</definition>
        <argsstring>(wxWindow *win)=0</argsstring>
        <name>GetHeaderButtonHeight</name>
        <reimplementedby refid="classwx_delegate_renderer_native_1ac3e965692b37194e4333f25a1b113b17">GetHeaderButtonHeight</reimplementedby>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
<para>Returns the height of a header button, either a fixed platform height if available, or a generic height based on the <emphasis>win</emphasis> window&apos;s font. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="497"/>
      </memberdef>
      <memberdef kind="function" id="classwx_renderer_native_1afede2d2f77c54cd443b1be09dbe2f9e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int wxRendererNative::GetHeaderButtonMargin</definition>
        <argsstring>(wxWindow *win)=0</argsstring>
        <name>GetHeaderButtonMargin</name>
        <reimplementedby refid="classwx_delegate_renderer_native_1a08d3b128ece58037c36ee675e25b41ab">GetHeaderButtonMargin</reimplementedby>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
<para>Returns the horizontal margin on the left and right sides of header button&apos;s label. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.9.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="505"/>
      </memberdef>
      <memberdef kind="function" id="classwx_renderer_native_1a4c5673f91bfd18792710ca133ca2e3f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="structwx_splitter_render_params" kindref="compound">wxSplitterRenderParams</ref></type>
        <definition>virtual wxSplitterRenderParams wxRendererNative::GetSplitterParams</definition>
        <argsstring>(const wxWindow *win)=0</argsstring>
        <name>GetSplitterParams</name>
        <reimplementedby refid="classwx_delegate_renderer_native_1afde38ab84be55382f0bba8cf4ddd5713">GetSplitterParams</reimplementedby>
        <param>
          <type>const <ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
<para>Get the splitter parameters, see <ref refid="structwx_splitter_render_params" kindref="compound">wxSplitterRenderParams</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>win</emphasis> parameter should be a <ref refid="classwx_splitter_window" kindref="compound">wxSplitterWindow</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="511"/>
      </memberdef>
      <memberdef kind="function" id="classwx_renderer_native_1af42af0da60489f1f54c8883f68bfdd42" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="structwx_renderer_version" kindref="compound">wxRendererVersion</ref></type>
        <definition>virtual wxRendererVersion wxRendererNative::GetVersion</definition>
        <argsstring>() const =0</argsstring>
        <name>GetVersion</name>
        <reimplementedby refid="classwx_delegate_renderer_native_1af9b226f3ea9857618116931d9a8cd04a">GetVersion</reimplementedby>
        <briefdescription>
<para>This function is used for version checking: <ref refid="classwx_renderer_native_1a0536cd4ed40c392859d2e8ae37a3eaca" kindref="member">Load()</ref> refuses to load any shared libraries implementing an older or incompatible version. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>The implementation of this method is always the same in all renderers (simply construct <ref refid="structwx_renderer_version" kindref="compound">wxRendererVersion</ref> using the <computeroutput>wxRendererVersion::Current_XXX</computeroutput> values), but it has to be in the derived, not base, class, to detect mismatches between the renderers versions and so you have to implement it anew in all renderers. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="524"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_renderer_native_1a4eeacb56d2a1cd9146994d6e213d0163" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_renderer_native" kindref="compound">wxRendererNative</ref> &amp;</type>
        <definition>static wxRendererNative&amp; wxRendererNative::Get</definition>
        <argsstring>()</argsstring>
        <name>Get</name>
        <briefdescription>
<para>Return the currently used renderer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="470"/>
      </memberdef>
      <memberdef kind="function" id="classwx_renderer_native_1a53078a525d6a53dea7bcdb83cf43a840" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_renderer_native" kindref="compound">wxRendererNative</ref> &amp;</type>
        <definition>static wxRendererNative&amp; wxRendererNative::GetDefault</definition>
        <argsstring>()</argsstring>
        <name>GetDefault</name>
        <briefdescription>
<para>Return the default (native) implementation for this platform -- this is also the one used by default but this may be changed by calling <ref refid="classwx_renderer_native_1ace3f6d878be2e967f886397c26181c82" kindref="member">Set()</ref> in which case the return value of this method may be different from the return value of <ref refid="classwx_renderer_native_1a4eeacb56d2a1cd9146994d6e213d0163" kindref="member">Get()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="478"/>
      </memberdef>
      <memberdef kind="function" id="classwx_renderer_native_1afa11498932e1c8c56e2ef2e2ca33ddc6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_renderer_native" kindref="compound">wxRendererNative</ref> &amp;</type>
        <definition>static wxRendererNative&amp; wxRendererNative::GetGeneric</definition>
        <argsstring>()</argsstring>
        <name>GetGeneric</name>
        <briefdescription>
<para>Return the generic implementation of the renderer. </para>        </briefdescription>
        <detaileddescription>
<para>Under some platforms, this is the default renderer implementation, others have platform-specific default renderer which can be retrieved by calling <ref refid="classwx_renderer_native_1a53078a525d6a53dea7bcdb83cf43a840" kindref="member">GetDefault()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="485"/>
      </memberdef>
      <memberdef kind="function" id="classwx_renderer_native_1a0536cd4ed40c392859d2e8ae37a3eaca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_renderer_native" kindref="compound">wxRendererNative</ref> *</type>
        <definition>static wxRendererNative* wxRendererNative::Load</definition>
        <argsstring>(const wxString &amp;name)</argsstring>
        <name>Load</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Load the renderer from the specified DLL, the returned pointer must be deleted by caller if not NULL when it is not used any more. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>name</emphasis> should be just the base name of the renderer and not the full name of the DLL file which is constructed differently (using <ref refid="classwx_dynamic_library_1a36a523c77c4bbc8dbe43bb35b070ed1d" kindref="member">wxDynamicLibrary::CanonicalizePluginName()</ref>) on different systems. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="535"/>
      </memberdef>
      <memberdef kind="function" id="classwx_renderer_native_1ace3f6d878be2e967f886397c26181c82" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_renderer_native" kindref="compound">wxRendererNative</ref> *</type>
        <definition>static wxRendererNative* wxRendererNative::Set</definition>
        <argsstring>(wxRendererNative *renderer)</argsstring>
        <name>Set</name>
        <param>
          <type><ref refid="classwx_renderer_native" kindref="compound">wxRendererNative</ref> *</type>
          <declname>renderer</declname>
        </param>
        <briefdescription>
<para>Set the renderer to use, passing NULL reverts to using the default renderer (the global renderer must always exist). </para>        </briefdescription>
        <detaileddescription>
<para>Return the previous renderer used with <ref refid="classwx_renderer_native_1ace3f6d878be2e967f886397c26181c82" kindref="member">Set()</ref> or NULL if none. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="543"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>First, a brief introduction to <ref refid="classwx_renderer_native" kindref="compound">wxRendererNative</ref> and why it is needed. </para>    </briefdescription>
    <detaileddescription>
<para>Usually wxWidgets uses the underlying low level GUI system to draw all the controls - this is what we mean when we say that it is a &quot;native&quot; framework. However not all controls exist under all (or even any) platforms and in this case wxWidgets provides a default, generic, implementation of them written in wxWidgets itself.</para><para>These controls don&apos;t have the native appearance if only the standard line drawing and other graphics primitives are used, because the native appearance is different under different platforms while the lines are always drawn in the same way.</para><para>This is why we have renderers: <ref refid="classwx_renderer_native" kindref="compound">wxRendererNative</ref> is a class which virtualizes the drawing, i.e. it abstracts the drawing operations and allows you to draw say, a button, without caring about exactly how this is done. Of course, as we can draw the button differently in different renderers, this also allows us to emulate the native look and feel.</para><para>So the renderers work by exposing a large set of high-level drawing functions which are used by the generic controls. There is always a default global renderer but it may be changed or extended by the user, see <ref refid="page_samples_1page_samples_render" kindref="member">Render Sample</ref>.</para><para>All drawing functions take some standard parameters:</para><para><itemizedlist>
<listitem><para><emphasis>win</emphasis> - The window being drawn. It is normally not used and when it is it should only be used as a generic <ref refid="classwx_window" kindref="compound">wxWindow</ref> (in order to get its low level handle, for example), but you should not assume that it is of some given type as the same renderer function may be reused for drawing different kinds of control. </para></listitem>
<listitem><para><emphasis>dc</emphasis> - The <ref refid="classwx_d_c" kindref="compound">wxDC</ref> to draw on. Only this device context should be used for drawing. It is not necessary to restore pens and brushes for it on function exit but, on the other hand, you shouldn&apos;t assume that it is in any specific state on function entry: the rendering functions should always prepare it. </para></listitem>
<listitem><para><emphasis>rect</emphasis> - The bounding rectangle for the element to be drawn. </para></listitem>
<listitem><para><emphasis>flags</emphasis> - The optional flags (none by default) which can be a combination of the <ref refid="renderer_8h_1wxCONTROL_FLAGS" kindref="member">wxCONTROL_FLAGS</ref>.</para></listitem>
</itemizedlist>
Note that each drawing function restores the <ref refid="classwx_d_c" kindref="compound">wxDC</ref> attributes if it changes them, so it is safe to assume that the same pen, brush and colours that were active before the call to this function are still in effect after it.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__gdi" kindref="compound">Graphics Device Interface (GDI)</ref> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="9261">
        <label>wxDelegateRendererNative</label>
        <link refid="classwx_delegate_renderer_native"/>
        <childnode refid="9260" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9260">
        <label>wxRendererNative</label>
        <link refid="classwx_renderer_native"/>
      </node>
    </inheritancegraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="297" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" bodystart="296" bodyend="544"/>
    <listofallmembers>
      <member refid="classwx_renderer_native_1af5a80f13e6b7a20affd26b0becd9856b" prot="public" virt="pure-virtual"><scope>wxRendererNative</scope><name>DrawCheckBox</name></member>
      <member refid="classwx_renderer_native_1a54bc38596a1ff8f37aa2a4f97d208a2d" prot="public" virt="pure-virtual"><scope>wxRendererNative</scope><name>DrawChoice</name></member>
      <member refid="classwx_renderer_native_1ab9e724dd0441e511a75aee96fb7ddcd2" prot="public" virt="pure-virtual"><scope>wxRendererNative</scope><name>DrawComboBox</name></member>
      <member refid="classwx_renderer_native_1a9495db526d637f854a3436e1d17bb472" prot="public" virt="pure-virtual"><scope>wxRendererNative</scope><name>DrawComboBoxDropButton</name></member>
      <member refid="classwx_renderer_native_1a0c16016c310cec4d3d2f53574741df05" prot="public" virt="pure-virtual"><scope>wxRendererNative</scope><name>DrawDropArrow</name></member>
      <member refid="classwx_renderer_native_1a365bc24e598ce64e3a8d2b9559a8c4c9" prot="public" virt="pure-virtual"><scope>wxRendererNative</scope><name>DrawFocusRect</name></member>
      <member refid="classwx_renderer_native_1a65c10b87b311b5278890026b26c525b1" prot="public" virt="pure-virtual"><scope>wxRendererNative</scope><name>DrawHeaderButton</name></member>
      <member refid="classwx_renderer_native_1a7abc86c94cc688f59dc01a21f7b0db94" prot="public" virt="pure-virtual"><scope>wxRendererNative</scope><name>DrawHeaderButtonContents</name></member>
      <member refid="classwx_renderer_native_1a5d0ab3cbc0dbcf90a91a4e6ed400ff8a" prot="public" virt="pure-virtual"><scope>wxRendererNative</scope><name>DrawItemSelectionRect</name></member>
      <member refid="classwx_renderer_native_1a866a6e77f5f302e7fbb50819268de331" prot="public" virt="pure-virtual"><scope>wxRendererNative</scope><name>DrawPushButton</name></member>
      <member refid="classwx_renderer_native_1af62a5a4bd85f1d2f26ae72d5feb4469c" prot="public" virt="pure-virtual"><scope>wxRendererNative</scope><name>DrawRadioBitmap</name></member>
      <member refid="classwx_renderer_native_1a42ec07b63b3c38ab7309fe87932cfcb3" prot="public" virt="pure-virtual"><scope>wxRendererNative</scope><name>DrawSplitterBorder</name></member>
      <member refid="classwx_renderer_native_1ac9eedbd75f63fb4b99a2a93ca08612c1" prot="public" virt="pure-virtual"><scope>wxRendererNative</scope><name>DrawSplitterSash</name></member>
      <member refid="classwx_renderer_native_1a35e49075d3a7e748953660101252a892" prot="public" virt="pure-virtual"><scope>wxRendererNative</scope><name>DrawTextCtrl</name></member>
      <member refid="classwx_renderer_native_1a0bfb492af0725bd49a1402baa5f68e12" prot="public" virt="pure-virtual"><scope>wxRendererNative</scope><name>DrawTitleBarBitmap</name></member>
      <member refid="classwx_renderer_native_1a2b66a74d44ffc6a36a8bd1e15c83e77c" prot="public" virt="pure-virtual"><scope>wxRendererNative</scope><name>DrawTreeItemButton</name></member>
      <member refid="classwx_renderer_native_1a4eeacb56d2a1cd9146994d6e213d0163" prot="public" virt="non-virtual"><scope>wxRendererNative</scope><name>Get</name></member>
      <member refid="classwx_renderer_native_1aae69eead8c4e298acf97a6bd4848a45c" prot="public" virt="pure-virtual"><scope>wxRendererNative</scope><name>GetCheckBoxSize</name></member>
      <member refid="classwx_renderer_native_1a53078a525d6a53dea7bcdb83cf43a840" prot="public" virt="non-virtual"><scope>wxRendererNative</scope><name>GetDefault</name></member>
      <member refid="classwx_renderer_native_1afa11498932e1c8c56e2ef2e2ca33ddc6" prot="public" virt="non-virtual"><scope>wxRendererNative</scope><name>GetGeneric</name></member>
      <member refid="classwx_renderer_native_1a7318ee160cf6810d5fbcfa3383a0562f" prot="public" virt="pure-virtual"><scope>wxRendererNative</scope><name>GetHeaderButtonHeight</name></member>
      <member refid="classwx_renderer_native_1afede2d2f77c54cd443b1be09dbe2f9e4" prot="public" virt="pure-virtual"><scope>wxRendererNative</scope><name>GetHeaderButtonMargin</name></member>
      <member refid="classwx_renderer_native_1a4c5673f91bfd18792710ca133ca2e3f8" prot="public" virt="pure-virtual"><scope>wxRendererNative</scope><name>GetSplitterParams</name></member>
      <member refid="classwx_renderer_native_1af42af0da60489f1f54c8883f68bfdd42" prot="public" virt="pure-virtual"><scope>wxRendererNative</scope><name>GetVersion</name></member>
      <member refid="classwx_renderer_native_1a0536cd4ed40c392859d2e8ae37a3eaca" prot="public" virt="non-virtual"><scope>wxRendererNative</scope><name>Load</name></member>
      <member refid="classwx_renderer_native_1ace3f6d878be2e967f886397c26181c82" prot="public" virt="non-virtual"><scope>wxRendererNative</scope><name>Set</name></member>
      <member refid="classwx_renderer_native_1a3b5f285195f6d00e060658d3c209ac62" prot="public" virt="virtual"><scope>wxRendererNative</scope><name>~wxRendererNative</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
