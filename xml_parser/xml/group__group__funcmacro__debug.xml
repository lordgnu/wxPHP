<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="group__group__funcmacro__debug" kind="group">
    <compoundname>group_funcmacro_debug</compoundname>
    <title>Debugging macros</title>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__group__funcmacro__debug_1ga5677dae639575c2d7e76edff69271fa9" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* wxAssertHandler_t)(const wxString &amp;file, int line, const wxString &amp;func, const wxString &amp;cond, const wxString &amp;msg)</definition>
        <argsstring>)(const wxString &amp;file, int line, const wxString &amp;func, const wxString &amp;cond, const wxString &amp;msg)</argsstring>
        <name>wxAssertHandler_t</name>
        <briefdescription>
<para>Type for the function called in case of assert failure. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__group__funcmacro__debug_1ga7a8443c97e45d2943f03769aaa787376" kindref="member">wxSetAssertHandler()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" line="66" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__group__funcmacro__debug_1ga992a93c797d5777f5adc2353c35d4c47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxAbort</definition>
        <argsstring>()</argsstring>
        <name>wxAbort</name>
        <briefdescription>
<para>Exits the program immediately. </para>        </briefdescription>
        <detaileddescription>
<para>This is a simple wrapper for the standard abort() function which is not available under all platforms (currently only Windows CE doesn&apos;t provide it).</para><para><simplesect kind="since"><para>2.9.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" line="21"/>
      </memberdef>
      <memberdef kind="function" id="group__group__funcmacro__debug_1ga36a77b1afdfcac5d30beeb7c727b797c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDisableAsserts</definition>
        <argsstring>()</argsstring>
        <name>wxDisableAsserts</name>
        <briefdescription>
<para>Disable the condition checks in the assertions. </para>        </briefdescription>
        <detaileddescription>
<para>This is the same as calling <ref refid="group__group__funcmacro__debug_1ga7a8443c97e45d2943f03769aaa787376" kindref="member">wxSetAssertHandler()</ref> with NULL handler.</para><para><simplesect kind="since"><para>2.9.0</para></simplesect>
Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/debug.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" line="257"/>
      </memberdef>
      <memberdef kind="function" id="group__group__funcmacro__debug_1gaeb7e13193cb75f59c70a40bdc595a545" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxIsDebuggerRunning</definition>
        <argsstring>()</argsstring>
        <name>wxIsDebuggerRunning</name>
        <briefdescription>
<para>Returns true if the program is running under debugger, false otherwise. </para>        </briefdescription>
        <detaileddescription>
<para>Please note that this function is currently only implemented for Win32 and always returns false elsewhere.</para><para>Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/debug.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" line="324"/>
      </memberdef>
      <memberdef kind="function" id="group__group__funcmacro__debug_1ga7a8443c97e45d2943f03769aaa787376" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__group__funcmacro__debug_1ga5677dae639575c2d7e76edff69271fa9" kindref="member">wxAssertHandler_t</ref></type>
        <definition>wxAssertHandler_t wxSetAssertHandler</definition>
        <argsstring>(wxAssertHandler_t handler)</argsstring>
        <name>wxSetAssertHandler</name>
        <param>
          <type><ref refid="group__group__funcmacro__debug_1ga5677dae639575c2d7e76edff69271fa9" kindref="member">wxAssertHandler_t</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Sets the function to be called in case of assertion failure. </para>        </briefdescription>
        <detaileddescription>
<para>The default assert handler forwards to <ref refid="classwx_app_console_1a5f91d78bbfe3c9ef28e8e3c8fdf29989" kindref="member">wxApp::OnAssertFailure()</ref> whose default behaviour is, in turn, to show the standard assertion failure dialog if a <ref refid="classwx_app" kindref="compound">wxApp</ref> object exists or shows the same dialog itself directly otherwise.</para><para>While usually it is enough -- and more convenient -- to just override OnAssertFailure(), to handle all assertion failures, including those occurring even before <ref refid="classwx_app" kindref="compound">wxApp</ref> object creation of after its destruction you need to provide your assertion handler function.</para><para>This function also provides a simple way to disable all asserts: simply pass NULL pointer to it. Doing this will result in not even evaluating assert conditions at all, avoiding almost all run-time cost of asserts.</para><para>Notice that this function is not MT-safe, so you should call it before starting any other threads.</para><para>The return value of this function is the previous assertion handler. It can be called after any pre-processing by your handler and can also be restored later if you uninstall your handler.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The function to call in case of assertion failure or NULL. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previous assert handler which is not NULL by default but could be NULL if it had been previously set to this value using this function.</para></simplesect>
<simplesect kind="since"><para>2.9.0</para></simplesect>
Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/debug.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" line="360"/>
      </memberdef>
      <memberdef kind="function" id="group__group__funcmacro__debug_1ga56835907381132cfc64135d7fbf9d883" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSetDefaultAssertHandler</definition>
        <argsstring>()</argsstring>
        <name>wxSetDefaultAssertHandler</name>
        <briefdescription>
<para>Reset the assert handler to default function which shows a message box when an assert happens. </para>        </briefdescription>
        <detaileddescription>
<para>This can be useful for the applications compiled in release build (with <computeroutput>NDEBUG</computeroutput> defined) for which the asserts are by default disabled: if you wish to enable them even in this case you need to call this function.</para><para><simplesect kind="since"><para>2.9.1</para></simplesect>
Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/debug.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" line="374"/>
      </memberdef>
      <memberdef kind="function" id="group__group__funcmacro__debug_1ga982e43add2be6c375904de61dcb9f852" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTrap</definition>
        <argsstring>()</argsstring>
        <name>wxTrap</name>
        <briefdescription>
<para>Generate a debugger exception meaning that the control is passed to the debugger if one is attached to the process. </para>        </briefdescription>
        <detaileddescription>
<para>Otherwise the program just terminates abnormally.</para><para>If <computeroutput>wxDEBUG_LEVEL</computeroutput> is 0 (which is not the default) this function does nothing.</para><para>Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/debug.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" line="387"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__group__funcmacro__debug_1ga8db18cbe95b3b42c3017a8bf048b0839" prot="public" static="no">
        <name>wxDISABLE_DEBUG_SUPPORT</name>
        <param></param>
        <initializer>wxDISABLE_ASSERTS_IN_RELEASE_BUILD(); \
    wxDISABLE_DEBUG_LOGGING_IN_RELEASE_BUILD()</initializer>
        <briefdescription>
<para>Use this macro to disable all debugging code in release build when not using <ref refid="group__group__funcmacro__rtti_1ga967aafaa261481fe2d2e1cf599e3e003" kindref="member">wxIMPLEMENT_APP()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Currently this macro disables assert checking and debug and trace level logging messages in release build (i.e. when <computeroutput>NDEBUG</computeroutput> is defined). It is used by <ref refid="group__group__funcmacro__rtti_1ga967aafaa261481fe2d2e1cf599e3e003" kindref="member">wxIMPLEMENT_APP()</ref> macro so you only need to use it explicitly if you don&apos;t use this macro but initialize wxWidgets directly (e.g. calls <ref refid="group__group__funcmacro__appinitterm_1ga7d3eefb35631a5d8dfce97eb17340b21" kindref="member">wxEntry()</ref> or <ref refid="group__group__funcmacro__appinitterm_1gac81f7fea72a17cc744d8c8785864c78a" kindref="member">wxEntryStart()</ref> itself).</para><para>If you do not want to disable debugging code even in release build of your application, you can use <ref refid="group__group__funcmacro__debug_1ga56835907381132cfc64135d7fbf9d883" kindref="member">wxSetDefaultAssertHandler()</ref> and <ref refid="classwx_log_1a4ea68379469ca27f645d5f91c2d42b3b" kindref="member">wxLog::SetLogLevel()</ref> with <computeroutput>wxLOG_Max</computeroutput> parameter to enable assertions and debug logging respectively.</para><para><simplesect kind="see"><para><ref refid="group__group__funcmacro__debug_1ga96e17e1bb37bec44a6608d0521abe22e" kindref="member">wxDISABLE_ASSERTS_IN_RELEASE_BUILD()</ref>, <ref refid="group__group__funcmacro__debug_1gac3ef2e94c74050aa3098ae22a49bf7c7" kindref="member">wxDISABLE_DEBUG_LOGGING_IN_RELEASE_BUILD()</ref>, <ref refid="overview_debugging" kindref="compound">Debugging</ref></para></simplesect>
<simplesect kind="since"><para>2.9.1</para></simplesect>
Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/app.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/app.h" line="1102" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/app.h" bodystart="1100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__funcmacro__debug_1ga7ce424d27d39bb92c26c80b6a1903725" prot="public" static="no">
        <name>wxDEBUG_LEVEL</name>
        <briefdescription>
<para>Preprocessor symbol defining the level of debug support available. </para>        </briefdescription>
        <detaileddescription>
<para>This symbol is defined to 1 by default meaning that asserts are compiled in (although they may be disabled by a call to <ref refid="group__group__funcmacro__debug_1ga36a77b1afdfcac5d30beeb7c727b797c" kindref="member">wxDisableAsserts()</ref>). You may predefine it as 0 prior to including any wxWidgets headers to omit the calls to <ref refid="group__group__funcmacro__debug_1ga204cc264ee560b67e6c6467ba8ffee5f" kindref="member">wxASSERT()</ref> and related macros entirely in your own code and you may also predefine it as 0 when building wxWidgets to also avoid including any asserts in wxWidgets itself.</para><para>Alternatively, you may predefine it as 2 to include <ref refid="group__group__funcmacro__debug_1ga9ff90708a7b76e926493ac0860f6854c" kindref="member">wxASSERT_LEVEL_2()</ref> and similar macros which are used for asserts which have non-trivial run-time costs and so are disabled by default.</para><para><simplesect kind="since"><para>2.9.1</para></simplesect>
Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/debug.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" line="43" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__funcmacro__debug_1ga30ad68c25d4f7a731f60eb07419c2960" prot="public" static="no">
        <name>__WXDEBUG__</name>
        <briefdescription>
<para>Compatibility macro indicating presence of debug support. </para>        </briefdescription>
        <detaileddescription>
<para>This symbol is defined if wxDEBUG_LEVEL is greater than 0 and undefined otherwise.</para><para>Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/debug.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" line="55" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__funcmacro__debug_1ga204cc264ee560b67e6c6467ba8ffee5f" prot="public" static="no">
        <name>wxASSERT</name>
        <param><defname>condition</defname></param>
        <briefdescription>
<para>Assert macro. </para>        </briefdescription>
        <detaileddescription>
<para>An error message will be generated if the condition is false in debug mode, but nothing will be done in the release build.</para><para>Please note that the condition in <ref refid="group__group__funcmacro__debug_1ga204cc264ee560b67e6c6467ba8ffee5f" kindref="member">wxASSERT()</ref> should have no side effects because it will not be executed in release mode at all.</para><para>This macro should be used to catch (in debug builds) logical errors done by the programmer.</para><para><simplesect kind="see"><para><ref refid="group__group__funcmacro__debug_1ga0224638a009ef6a78e09c0d3bb61c379" kindref="member">wxASSERT_MSG()</ref>, <ref refid="group__group__funcmacro__debug_1gade23c9c38d065845dc040e31525befdc" kindref="member">wxCOMPILE_TIME_ASSERT()</ref></para></simplesect>
Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/debug.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" line="82" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__funcmacro__debug_1ga9ff90708a7b76e926493ac0860f6854c" prot="public" static="no">
        <name>wxASSERT_LEVEL_2</name>
        <param><defname>condition</defname></param>
        <briefdescription>
<para>Assert macro for expensive run-time checks. </para>        </briefdescription>
        <detaileddescription>
<para>This macro does nothing unless wxDEBUG_LEVEL is 2 or more and is meant to be used for the assertions with noticeable performance impact and which, hence, should be disabled during run-time.</para><para>If wxDEBUG_LEVEL is 2 or more, it becomes the same as <ref refid="group__group__funcmacro__debug_1ga204cc264ee560b67e6c6467ba8ffee5f" kindref="member">wxASSERT()</ref>.</para><para>Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/debug.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" line="95" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__funcmacro__debug_1gaf924de21e1d2b51a97886367b99851e7" prot="public" static="no">
        <name>wxASSERT_LEVEL_2_MSG</name>
        <param><defname>condition</defname></param>
        <param><defname>msg</defname></param>
        <briefdescription>
<para>Assert macro with a custom message for expensive run-time checks. </para>        </briefdescription>
        <detaileddescription>
<para>If wxDEBUG_LEVEL is 2 or more, this is the same as <ref refid="group__group__funcmacro__debug_1ga0224638a009ef6a78e09c0d3bb61c379" kindref="member">wxASSERT_MSG()</ref>, otherwise it doesn&apos;t do anything at all.</para><para><simplesect kind="see"><para><ref refid="group__group__funcmacro__debug_1ga9ff90708a7b76e926493ac0860f6854c" kindref="member">wxASSERT_LEVEL_2()</ref></para></simplesect>
Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/debug.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" line="107" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__funcmacro__debug_1gabcdb0bf7c5499469b40a8fe8206e2cbf" prot="public" static="no">
        <name>wxASSERT_MIN_BITSIZE</name>
        <param><defname>type</defname></param>
        <param><defname>size</defname></param>
        <briefdescription>
<para>This macro results in a <ref refid="group__group__funcmacro__debug_1gade23c9c38d065845dc040e31525befdc" kindref="member">compile time assertion failure</ref> if the size of the given <computeroutput>type</computeroutput> is less than <computeroutput>size</computeroutput> bits. </para>        </briefdescription>
        <detaileddescription>
<para>This macro should be used to catch (in debug builds) logical errors done by the programmer.</para><para>You may use it like this, for example:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>rely<sp/>on<sp/>the<sp/>int<sp/>being<sp/>able<sp/>to<sp/>hold<sp/>values<sp/>up<sp/>to<sp/>2^32</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__funcmacro__debug_1gabcdb0bf7c5499469b40a8fe8206e2cbf" kindref="member" tooltip="This macro results in a compile time assertion failure if the size of the given type is less than siz...">wxASSERT_MIN_BITSIZE</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>32);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>work<sp/>with<sp/>the<sp/>platforms<sp/>using<sp/>UTF-8<sp/>for<sp/>wchar_t</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__funcmacro__debug_1gabcdb0bf7c5499469b40a8fe8206e2cbf" kindref="member" tooltip="This macro results in a compile time assertion failure if the size of the given type is less than siz...">wxASSERT_MIN_BITSIZE</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">,<sp/>16);</highlight></codeline>
</programlisting></para><para>Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/debug.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" line="129" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__funcmacro__debug_1ga0224638a009ef6a78e09c0d3bb61c379" prot="public" static="no">
        <name>wxASSERT_MSG</name>
        <param><defname>condition</defname></param>
        <param><defname>message</defname></param>
        <briefdescription>
<para>Assert macro with message. </para>        </briefdescription>
        <detaileddescription>
<para>An error message will be generated if the condition is false.</para><para>This macro should be used to catch (in debug builds) logical errors done by the programmer.</para><para><simplesect kind="see"><para><ref refid="group__group__funcmacro__debug_1ga204cc264ee560b67e6c6467ba8ffee5f" kindref="member">wxASSERT()</ref>, <ref refid="group__group__funcmacro__debug_1gade23c9c38d065845dc040e31525befdc" kindref="member">wxCOMPILE_TIME_ASSERT()</ref></para></simplesect>
Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/debug.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" line="142" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__funcmacro__debug_1gacce4d688e56d4de1bbef692e7df2e3e3" prot="public" static="no">
        <name>wxCHECK</name>
        <param><defname>condition</defname></param>
        <param><defname>retValue</defname></param>
        <briefdescription>
<para>Checks that the condition is true, returns with the given return value if not (stops execution in debug mode). </para>        </briefdescription>
        <detaileddescription>
<para>This check is done even in release mode.</para><para>This macro should be used to catch (both in debug and release builds) logical errors done by the programmer.</para><para>Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/debug.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" line="153" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__funcmacro__debug_1ga4822a2ea9fdd0bc98caa3ff42587743e" prot="public" static="no">
        <name>wxCHECK_MSG</name>
        <param><defname>condition</defname></param>
        <param><defname>retValue</defname></param>
        <param><defname>message</defname></param>
        <briefdescription>
<para>Checks that the condition is true, returns with the given return value if not (stops execution in debug mode). </para>        </briefdescription>
        <detaileddescription>
<para>This check is done even in release mode.</para><para>This macro may be only used in non-void functions, see also <ref refid="group__group__funcmacro__debug_1ga0cf2ca7d7ff0107197e51e6b434fd0bd" kindref="member">wxCHECK_RET()</ref>.</para><para>This macro should be used to catch (both in debug and release builds) logical errors done by the programmer.</para><para>Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/debug.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" line="166" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__funcmacro__debug_1ga0cf2ca7d7ff0107197e51e6b434fd0bd" prot="public" static="no">
        <name>wxCHECK_RET</name>
        <param><defname>condition</defname></param>
        <param><defname>message</defname></param>
        <briefdescription>
<para>Checks that the condition is true, and returns if not (stops execution with the given error message in debug mode). </para>        </briefdescription>
        <detaileddescription>
<para>This check is done even in release mode.</para><para>This macro should be used in void functions instead of <ref refid="group__group__funcmacro__debug_1ga4822a2ea9fdd0bc98caa3ff42587743e" kindref="member">wxCHECK_MSG()</ref>.</para><para>This macro should be used to catch (both in debug and release builds) logical errors done by the programmer.</para><para>Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/debug.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" line="180" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__funcmacro__debug_1ga2a551ae1dcd439257d35a9b0b6ed483c" prot="public" static="no">
        <name>wxCHECK2</name>
        <param><defname>condition</defname></param>
        <param><defname>operation</defname></param>
        <briefdescription>
<para>Checks that the condition is true, and if not, it will <ref refid="group__group__funcmacro__debug_1gaa5b456751cd8c71e9a787fba16ecbd68" kindref="member">wxFAIL()</ref> and execute the given <computeroutput>operation</computeroutput> if it is not. </para>        </briefdescription>
        <detaileddescription>
<para>This is a generalisation of <ref refid="group__group__funcmacro__debug_1gacce4d688e56d4de1bbef692e7df2e3e3" kindref="member">wxCHECK()</ref> and may be used when something else than just returning from the function must be done when the <computeroutput>condition</computeroutput> is false. This check is done even in release mode.</para><para>This macro should be used to catch (both in debug and release builds) logical errors done by the programmer.</para><para>Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/debug.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" line="194" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__funcmacro__debug_1gad9673fe2c9e69d6b41f0175b151060d0" prot="public" static="no">
        <name>wxCHECK2_MSG</name>
        <param><defname>condition</defname></param>
        <param><defname>operation</defname></param>
        <param><defname>message</defname></param>
        <briefdescription>
<para>This is the same as <ref refid="group__group__funcmacro__debug_1ga2a551ae1dcd439257d35a9b0b6ed483c" kindref="member">wxCHECK2()</ref>, but <ref refid="group__group__funcmacro__debug_1ga4d129eca8fff062a65dec065edca085e" kindref="member">wxFAIL_MSG()</ref> with the specified <computeroutput>message</computeroutput> is called instead of <ref refid="group__group__funcmacro__debug_1gaa5b456751cd8c71e9a787fba16ecbd68" kindref="member">wxFAIL()</ref> if the <computeroutput>condition</computeroutput> is false. </para>        </briefdescription>
        <detaileddescription>
<para>This macro should be used to catch (both in debug and release builds) logical errors done by the programmer.</para><para>Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/debug.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" line="205" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__funcmacro__debug_1gade23c9c38d065845dc040e31525befdc" prot="public" static="no">
        <name>wxCOMPILE_TIME_ASSERT</name>
        <param><defname>condition</defname></param>
        <param><defname>message</defname></param>
        <briefdescription>
<para>Using <ref refid="group__group__funcmacro__debug_1gade23c9c38d065845dc040e31525befdc" kindref="member">wxCOMPILE_TIME_ASSERT()</ref> results in a compilation error if the specified <computeroutput>condition</computeroutput> is false. </para>        </briefdescription>
        <detaileddescription>
<para>The compiler error message should include the <computeroutput>message</computeroutput> identifier - please note that it must be a valid C++ identifier and not a string unlike in the other cases.</para><para>This macro is mostly useful for testing the expressions involving the <computeroutput>sizeof</computeroutput> operator as they can&apos;t be tested by the preprocessor but it is sometimes desirable to test them at the compile time.</para><para>Note that this macro internally declares a struct whose name it tries to make unique by using the <computeroutput>__LINE__</computeroutput> in it but it may still not work if you use it on the same line in two different source files. In this case you may either change the line in which either of them appears on or use the <ref refid="group__group__funcmacro__debug_1gaf12b2bda7fcd1b1df041f426d245b17f" kindref="member">wxCOMPILE_TIME_ASSERT2()</ref> macro.</para><para>Also note that Microsoft Visual C++ has a bug which results in compiler errors if you use this macro with &apos;Program Database For Edit And Continue&apos; (<computeroutput>/ZI</computeroutput>) option, so you shouldn&apos;t use it (&apos;Program Database&apos; (<computeroutput>/Zi</computeroutput>) is ok though) for the code making use of this macro.</para><para>This macro should be used to catch misconfigurations at compile-time.</para><para><simplesect kind="see"><para><ref refid="group__group__funcmacro__debug_1ga0224638a009ef6a78e09c0d3bb61c379" kindref="member">wxASSERT_MSG()</ref>, <ref refid="group__group__funcmacro__debug_1gabcdb0bf7c5499469b40a8fe8206e2cbf" kindref="member">wxASSERT_MIN_BITSIZE()</ref></para></simplesect>
Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/debug.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" line="234" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__funcmacro__debug_1gaf12b2bda7fcd1b1df041f426d245b17f" prot="public" static="no">
        <name>wxCOMPILE_TIME_ASSERT2</name>
        <param><defname>condition</defname></param>
        <param><defname>message</defname></param>
        <param><defname>name</defname></param>
        <briefdescription>
<para>This macro is identical to <ref refid="group__group__funcmacro__debug_1gade23c9c38d065845dc040e31525befdc" kindref="member">wxCOMPILE_TIME_ASSERT()</ref> except that it allows you to specify a unique <computeroutput>name</computeroutput> for the struct internally defined by this macro to avoid getting the compilation errors described for <ref refid="group__group__funcmacro__debug_1gade23c9c38d065845dc040e31525befdc" kindref="member">wxCOMPILE_TIME_ASSERT()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>This macro should be used to catch misconfigurations at compile-time.</para><para>Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/debug.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" line="246" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__funcmacro__debug_1ga96e17e1bb37bec44a6608d0521abe22e" prot="public" static="no">
        <name>wxDISABLE_ASSERTS_IN_RELEASE_BUILD</name>
        <param></param>
        <initializer>wxDisableAsserts()</initializer>
        <briefdescription>
<para>Use this macro to disable asserts in release build when not using <ref refid="group__group__funcmacro__rtti_1ga967aafaa261481fe2d2e1cf599e3e003" kindref="member">wxIMPLEMENT_APP()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>By default, assert message boxes are suppressed in release build by <ref refid="group__group__funcmacro__rtti_1ga967aafaa261481fe2d2e1cf599e3e003" kindref="member">wxIMPLEMENT_APP()</ref> which uses this macro. If you don&apos;t use <ref refid="group__group__funcmacro__rtti_1ga967aafaa261481fe2d2e1cf599e3e003" kindref="member">wxIMPLEMENT_APP()</ref> because your application initializes wxWidgets directly (e.g. calls <ref refid="group__group__funcmacro__appinitterm_1ga7d3eefb35631a5d8dfce97eb17340b21" kindref="member">wxEntry()</ref> or <ref refid="group__group__funcmacro__appinitterm_1gac81f7fea72a17cc744d8c8785864c78a" kindref="member">wxEntryStart()</ref> itself) but still want to suppress assert notifications in release build you need to use this macro directly.</para><para><simplesect kind="see"><para><ref refid="group__group__funcmacro__debug_1ga8db18cbe95b3b42c3017a8bf048b0839" kindref="member">wxDISABLE_DEBUG_SUPPORT()</ref></para></simplesect>
<simplesect kind="since"><para>2.9.1</para></simplesect>
Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/debug.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" line="277" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__funcmacro__debug_1gaa5b456751cd8c71e9a787fba16ecbd68" prot="public" static="no">
        <name>wxFAIL</name>
        <briefdescription>
<para>Will always generate an assert error if this code is reached (in debug mode). </para>        </briefdescription>
        <detaileddescription>
<para>Note that you don&apos;t have to (and cannot) use brackets when invoking this macro:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(...some<sp/>condition...)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__funcmacro__debug_1gaa5b456751cd8c71e9a787fba16ecbd68" kindref="member" tooltip="Will always generate an assert error if this code is reached (in debug mode).">wxFAIL</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
</programlisting></para><para>This macro should be used to catch (in debug builds) logical errors done by the programmer.</para><para><simplesect kind="see"><para><ref refid="group__group__funcmacro__debug_1ga4d129eca8fff062a65dec065edca085e" kindref="member">wxFAIL_MSG()</ref></para></simplesect>
Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/debug.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" line="297" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__funcmacro__debug_1ga4d129eca8fff062a65dec065edca085e" prot="public" static="no">
        <name>wxFAIL_MSG</name>
        <param><defname>message</defname></param>
        <briefdescription>
<para>Will always generate an assert error with specified message if this code is reached (in debug mode). </para>        </briefdescription>
        <detaileddescription>
<para>This macro is useful for marking &quot;unreachable&quot; code areas, for example it may be used in the &quot;default:&quot; branch of a switch statement if all possible cases are processed above.</para><para>This macro should be used to catch (in debug builds) logical errors done by the programmer.</para><para><simplesect kind="see"><para><ref refid="group__group__funcmacro__debug_1gaa5b456751cd8c71e9a787fba16ecbd68" kindref="member">wxFAIL()</ref></para></simplesect>
Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/debug.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" line="314" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/debug.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__funcmacro__debug_1gac3ef2e94c74050aa3098ae22a49bf7c7" prot="public" static="no">
        <name>wxDISABLE_DEBUG_LOGGING_IN_RELEASE_BUILD</name>
        <param></param>
        <briefdescription>
<para>Use this macro to disable logging at debug and trace levels in release build when not using <ref refid="group__group__funcmacro__rtti_1ga967aafaa261481fe2d2e1cf599e3e003" kindref="member">wxIMPLEMENT_APP()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__group__funcmacro__debug_1ga8db18cbe95b3b42c3017a8bf048b0839" kindref="member">wxDISABLE_DEBUG_SUPPORT()</ref>, <ref refid="group__group__funcmacro__debug_1ga96e17e1bb37bec44a6608d0521abe22e" kindref="member">wxDISABLE_ASSERTS_IN_RELEASE_BUILD()</ref>, <ref refid="overview_debugging" kindref="compound">Debugging</ref></para></simplesect>
<simplesect kind="since"><para>2.9.1</para></simplesect>
Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/log.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/log.h" line="1446" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/log.h" bodystart="1446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__funcmacro__debug_1ga217a048b9e879488505a8c44cb83cc0e" prot="public" static="no">
        <name>WXDEBUG_NEW</name>
        <param><defname>arg</defname></param>
        <briefdescription>
<para>This is defined in debug mode to be call the redefined new operator with filename and line number arguments. </para>        </briefdescription>
        <detaileddescription>
<para>The definition is:</para><para><programlisting><codeline><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>WXDEBUG_NEW<sp/>new(__FILE__,__LINE__)</highlight></codeline>
</programlisting></para><para>In non-debug mode, this is defined as the normal new operator.</para><para>Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/object.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/object.h" line="923" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/object.h" bodystart="923" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Useful macros and functions for error checking and defensive programming. </para>    </briefdescription>
    <detaileddescription>
<para>wxWidgets defines three families of the assert-like macros: the <ref refid="group__group__funcmacro__debug_1ga204cc264ee560b67e6c6467ba8ffee5f" kindref="member">wxASSERT()</ref> and <ref refid="group__group__funcmacro__debug_1gaa5b456751cd8c71e9a787fba16ecbd68" kindref="member">wxFAIL()</ref> macros only do anything if __WXDEBUG__ is defined (in other words, in the debug build) but disappear completely in the release build. On the other hand, the <ref refid="group__group__funcmacro__debug_1gacce4d688e56d4de1bbef692e7df2e3e3" kindref="member">wxCHECK()</ref> macros stay in release builds but a check failure doesn&apos;t generate any user-visible effects. Finally, the compile time assertions don&apos;t happen during the run-time but result in the compilation error messages if the condition they check fail.</para><para>Related class group: <ref refid="group__group__class__debugging" kindref="compound">Debugging</ref>. </para>    </detaileddescription>
  </compounddef>
</doxygen>
