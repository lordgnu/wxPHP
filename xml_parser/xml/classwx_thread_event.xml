<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_thread_event" kind="class" prot="public">
    <compoundname>wxThreadEvent</compoundname>
    <basecompoundref refid="classwx_event" prot="public" virt="non-virtual">wxEvent</basecompoundref>
    <includes local="no">wx/event.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_thread_event_1a50cc3932b1aae4ade4d6fa57c0eb2e73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxThreadEvent::wxThreadEvent</definition>
        <argsstring>(wxEventType eventType=wxEVT_THREAD, int id=wxID_ANY)</argsstring>
        <name>wxThreadEvent</name>
        <param>
          <type><ref refid="group__group__funcmacro__events_1ga6a7fd172612c0d6d9029bfa3aa91aca0" kindref="member">wxEventType</ref></type>
          <declname>eventType</declname>
          <defval><ref refid="group__group__funcmacro__events_1gaaeb89fb4f0db5dec9ea914f39dd9b531" kindref="member">wxEVT_THREAD</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>wxID_ANY</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="3163"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thread_event_1af8d1c4ec499415d84680c1a52a68513a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_event" kindref="compound">wxEvent</ref> *</type>
        <definition>virtual wxEvent* wxThreadEvent::Clone</definition>
        <argsstring>() const </argsstring>
        <name>Clone</name>
        <reimplements refid="classwx_event_1a26878097a702e8d0368da150125d4158">Clone</reimplements>
        <briefdescription>
<para>Clones this event making sure that all internal members which use COW (only <computeroutput>m_commandString</computeroutput> for now; see <ref refid="overview_refcount" kindref="compound">Reference Counting</ref>) are unshared (see <ref refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" kindref="member">wxObject::UnShare</ref>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="3170"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thread_event_1a21a87c9ffaa750f3daf05fb628fe9251" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="event_8h_1a685cc8dc6176be3ab0d40e3f72719e7d" kindref="member">wxEventCategory</ref></type>
        <definition>virtual wxEventCategory wxThreadEvent::GetEventCategory</definition>
        <argsstring>() const </argsstring>
        <name>GetEventCategory</name>
        <reimplements refid="classwx_event_1a525e5c576e64090af493cb81db2da59b">GetEventCategory</reimplements>
        <briefdescription>
<para>Returns <computeroutput>wxEVT_CATEGORY_THREAD</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This is important to avoid unwanted processing of thread events when calling <ref refid="classwx_event_loop_base_1afb5ed08160c7e6b1364170af6115af55" kindref="member">wxEventLoopBase::YieldFor()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="3178"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thread_event_1ae337f284728dfe2493240d6df5c73440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void wxThreadEvent::SetPayload</definition>
        <argsstring>(const T &amp;payload)</argsstring>
        <name>SetPayload</name>
        <param>
          <type>const T &amp;</type>
          <declname>payload</declname>
        </param>
        <briefdescription>
<para>Sets custom data payload. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>payload</emphasis> argument may be of any type that <ref refid="classwx_any" kindref="compound">wxAny</ref> can handle (i.e. pretty much anything). Note that T&apos;s copy constructor must be thread-safe, i.e. create a copy that doesn&apos;t share anything with the original (see <ref refid="classwx_thread_event_1af8d1c4ec499415d84680c1a52a68513a" kindref="member">Clone()</ref>).</para><para><simplesect kind="note"><para>This method is not available with Visual C++ 6.</para></simplesect>
<simplesect kind="since"><para>2.9.1</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_thread_event_1aea4df23d8997a416f56a65c809e99181" kindref="member">GetPayload()</ref>, <ref refid="classwx_any" kindref="compound">wxAny</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="3195"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thread_event_1aea4df23d8997a416f56a65c809e99181" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T wxThreadEvent::GetPayload</definition>
        <argsstring>() const </argsstring>
        <name>GetPayload</name>
        <briefdescription>
<para>Get custom data payload. </para>        </briefdescription>
        <detaileddescription>
<para>Correct type is checked in debug builds.</para><para><simplesect kind="note"><para>This method is not available with Visual C++ 6.</para></simplesect>
<simplesect kind="since"><para>2.9.1</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_thread_event_1ae337f284728dfe2493240d6df5c73440" kindref="member">SetPayload()</ref>, <ref refid="classwx_any" kindref="compound">wxAny</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="3209"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thread_event_1ac41090bf73b758da00fbcbfc2d31bda4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long wxThreadEvent::GetExtraLong</definition>
        <argsstring>() const </argsstring>
        <name>GetExtraLong</name>
        <briefdescription>
<para>Returns extra information integer value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="3214"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thread_event_1afcaf153304f3538396581c72c9ae5a05" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxThreadEvent::GetInt</definition>
        <argsstring>() const </argsstring>
        <name>GetInt</name>
        <briefdescription>
<para>Returns stored integer value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="3219"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thread_event_1a61df14280f0761625285335a95cd3760" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxThreadEvent::GetString</definition>
        <argsstring>() const </argsstring>
        <name>GetString</name>
        <briefdescription>
<para>Returns stored string value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="3224"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thread_event_1a177554d331bfd911de8d9abcc35660e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxThreadEvent::SetExtraLong</definition>
        <argsstring>(long extraLong)</argsstring>
        <name>SetExtraLong</name>
        <param>
          <type>long</type>
          <declname>extraLong</declname>
        </param>
        <briefdescription>
<para>Sets the extra information value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="3230"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thread_event_1a6f3846d1860ddbb5fe8f7cdaa5f3c1fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxThreadEvent::SetInt</definition>
        <argsstring>(int intCommand)</argsstring>
        <name>SetInt</name>
        <param>
          <type>int</type>
          <declname>intCommand</declname>
        </param>
        <briefdescription>
<para>Sets the integer value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="3235"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thread_event_1a72092085fc4e0837d8e56666cb45f4d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxThreadEvent::SetString</definition>
        <argsstring>(const wxString &amp;string)</argsstring>
        <name>SetString</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
<para>Sets the string value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="3240"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class adds some simple functionality to <ref refid="classwx_event" kindref="compound">wxEvent</ref> to facilitate inter-thread communication. </para>    </briefdescription>
    <detaileddescription>
<para>This event is not natively emitted by any control/class: it is just a helper class for the user. Its most important feature is the <ref refid="classwx_thread_event_1a21a87c9ffaa750f3daf05fb628fe9251" kindref="member">GetEventCategory()</ref> implementation which allows thread events <bold>NOT</bold> to be processed by <ref refid="classwx_event_loop_base_1afb5ed08160c7e6b1364170af6115af55" kindref="member">wxEventLoopBase::YieldFor</ref> calls (unless the <computeroutput>wxEVT_CATEGORY_THREAD</computeroutput> is specified - which is never in wx code).</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__events" kindref="compound">Events</ref>, <ref refid="group__group__class__threading" kindref="compound">Threading</ref></para><para><simplesect kind="see"><para><ref refid="overview_thread" kindref="compound">Multithreading Overview</ref>, <ref refid="classwx_event_loop_base_1afb5ed08160c7e6b1364170af6115af55" kindref="member">wxEventLoopBase::YieldFor</ref></para></simplesect>
<simplesect kind="since"><para>2.9.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="11037">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="11035">
        <label>wxThreadEvent</label>
        <link refid="classwx_thread_event"/>
        <childnode refid="11036" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11036">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="11037" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11040">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="11041" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="11038">
        <label>wxThreadEvent</label>
        <link refid="classwx_thread_event"/>
        <childnode refid="11039" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11039">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="11040" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11041">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="3158" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" bodystart="3157" bodyend="3241"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxThreadEvent</scope><name>AllocExclusive</name></member>
      <member refid="classwx_thread_event_1af8d1c4ec499415d84680c1a52a68513a" prot="public" virt="virtual"><scope>wxThreadEvent</scope><name>Clone</name></member>
      <member refid="classwx_object_1a1d39f1d3650fe0982c9a1abe7f9fe7b7" prot="protected" virt="virtual"><scope>wxThreadEvent</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a95c6a5e4e1e03ff23c7b9efe4cff0c1a" prot="protected" virt="virtual"><scope>wxThreadEvent</scope><name>CreateRefData</name></member>
      <member refid="classwx_object_1ab3a0c6f723cbaddb47be4e8dd98cc8e2" prot="public" virt="virtual"><scope>wxThreadEvent</scope><name>GetClassInfo</name></member>
      <member refid="classwx_thread_event_1a21a87c9ffaa750f3daf05fb628fe9251" prot="public" virt="virtual"><scope>wxThreadEvent</scope><name>GetEventCategory</name></member>
      <member refid="classwx_event_1abdc74e95c8c2f32f2cc2bd84b88985ee" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>GetEventObject</name></member>
      <member refid="classwx_event_1ac1e62dc3000d4bff0ebbd90a3d290695" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>GetEventType</name></member>
      <member refid="classwx_thread_event_1ac41090bf73b758da00fbcbfc2d31bda4" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>GetExtraLong</name></member>
      <member refid="classwx_event_1ac732828ac14cfc289d798a4fea437246" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>GetId</name></member>
      <member refid="classwx_thread_event_1afcaf153304f3538396581c72c9ae5a05" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>GetInt</name></member>
      <member refid="classwx_thread_event_1aea4df23d8997a416f56a65c809e99181" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>GetPayload</name></member>
      <member refid="classwx_object_1aabdb4fc957226544a8408167844e4f42" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>GetRefData</name></member>
      <member refid="classwx_event_1a448d5ef08f617a3ae316235fcf804377" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>GetSkipped</name></member>
      <member refid="classwx_thread_event_1a61df14280f0761625285335a95cd3760" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>GetString</name></member>
      <member refid="classwx_event_1a8a42d5b35d442052b58c53077ff4ae60" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>GetTimestamp</name></member>
      <member refid="classwx_event_1ad70c9cfaf0d626c1115b2d42ea047c2d" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>IsCommandEvent</name></member>
      <member refid="classwx_object_1af40d580385cf4f8112fae7713404b01e" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a80a1a3fda7b14396a9ddd3d7a46a88bd" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>IsSameAs</name></member>
      <member refid="classwx_event_1ac81911194f1f59e1454c0397b87975d4" prot="protected" virt="non-virtual"><scope>wxThreadEvent</scope><name>m_propagationLevel</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxThreadEvent</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>Ref</name></member>
      <member refid="classwx_event_1a0acb5c75f6e67b8822ad8ba3c5bdc4fe" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>ResumePropagation</name></member>
      <member refid="classwx_event_1a3460217d04c36393ab868ba453fde13d" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>SetEventObject</name></member>
      <member refid="classwx_event_1aa29fb7459d64602e09837fea1e516d27" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>SetEventType</name></member>
      <member refid="classwx_thread_event_1a177554d331bfd911de8d9abcc35660e9" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>SetExtraLong</name></member>
      <member refid="classwx_event_1ab9973f687bfa8a60318d8d9bd629d0d4" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>SetId</name></member>
      <member refid="classwx_thread_event_1a6f3846d1860ddbb5fe8f7cdaa5f3c1fa" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>SetInt</name></member>
      <member refid="classwx_thread_event_1ae337f284728dfe2493240d6df5c73440" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>SetPayload</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>SetRefData</name></member>
      <member refid="classwx_thread_event_1a72092085fc4e0837d8e56666cb45f4d3" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>SetString</name></member>
      <member refid="classwx_event_1ad4380dff3144a986cb960473051a1d8d" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>SetTimestamp</name></member>
      <member refid="classwx_event_1ad265ef226445cb6b72a2697dd9d3b406" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>ShouldPropagate</name></member>
      <member refid="classwx_event_1a98eb20b76106f9a933c2eb3ee119f66c" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>Skip</name></member>
      <member refid="classwx_event_1a060a7d222404daff4d3cef30cddeaae3" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>StopPropagation</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>UnShare</name></member>
      <member refid="classwx_event_1aaf2a5cf056d006859cea36689ba13d36" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>wxEvent</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>wxObject</name></member>
      <member refid="classwx_thread_event_1a50cc3932b1aae4ade4d6fa57c0eb2e73" prot="public" virt="non-virtual"><scope>wxThreadEvent</scope><name>wxThreadEvent</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxThreadEvent</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
