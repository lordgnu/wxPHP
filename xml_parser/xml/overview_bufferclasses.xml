<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="overview_bufferclasses" kind="page">
    <compoundname>overview_bufferclasses</compoundname>
    <title>Buffer Classes</title>
    <detaileddescription>
<para>wxWidgets uses two classes of classes for dealing with buffers in memory.</para><para>The first is one for dealing with character buffers, namely <ref refid="classwx_char_buffer" kindref="compound">wxCharBuffer</ref> for char pointer or multi-byte c strings and <ref refid="classwx_w_char_buffer" kindref="compound">wxWCharBuffer</ref> for wchar_t pointer or wide character c strings.</para><para>Secondly, wxWidgets uses, although only rarely currently, <ref refid="classwx_memory_buffer" kindref="compound">wxMemoryBuffer</ref> for dealing with raw buffers in memory.</para><para><itemizedlist>
<listitem><para><ref refid="overview_bufferclasses_1overview_bufferclasses_xcb" kindref="member">wxXCharBuffer</ref></para></listitem>
</itemizedlist>
<hruler/>
</para><sect1 id="overview_bufferclasses_1overview_bufferclasses_xcb">
<title>wxXCharBuffer</title>
<sect2 id="overview_bufferclasses_1overview_bufferclasses_xcb_general">
<title>General Usage</title>
<para>As mentioned, <ref refid="classwx_char_buffer" kindref="compound">wxCharBuffer</ref> and its wide character variant <ref refid="classwx_w_char_buffer" kindref="compound">wxWCharBuffer</ref> deal with c strings in memory. They have two constructors, one in which you pass the c string you want them to have a copy of, and another where you specify the size of the buffer in memory in characters you want.</para><para><ref refid="classwx_char_buffer" kindref="compound">wxCharBuffer</ref> and its variant only contain the c string as a member, so they can be used safely to c functions with variable arguments such as printf. They also contain standard assignment, character access operators and a copy constructor.</para></sect2>
<sect2 id="overview_bufferclasses_1overview_bufferclasses_xcb_destruct">
<title>Destruction</title>
<para>It should be noted that on destruction <ref refid="classwx_char_buffer" kindref="compound">wxCharBuffer</ref> and its wide character variant delete the c string that hold onto. If you want to get the pointer to the buffer and don&apos;t want <ref refid="classwx_char_buffer" kindref="compound">wxCharBuffer</ref> to delete it on destruction, use the member function release to do so. </para></sect2>
</sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
