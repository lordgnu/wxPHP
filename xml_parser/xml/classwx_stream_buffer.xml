<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_stream_buffer" kind="class" prot="public">
    <compoundname>wxStreamBuffer</compoundname>
    <includes local="no">wx/stream.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classwx_stream_buffer_1a1b6333d99dc30ff865ff330b999e2dcc" prot="public" static="no">
        <name>BufMode</name>
        <enumvalue id="classwx_stream_buffer_1a1b6333d99dc30ff865ff330b999e2dcca93efc5286abe9db8c7763404aa835396" prot="public">
          <name>read</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classwx_stream_buffer_1a1b6333d99dc30ff865ff330b999e2dccafaa5f7ec649e934479215e28c410a6c4" prot="public">
          <name>write</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classwx_stream_buffer_1a1b6333d99dc30ff865ff330b999e2dcca3eec51f36a60801cc8aa8e5d2393a17f" prot="public">
          <name>read_write</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>BufMode flags. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="155" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" bodystart="154" bodyend="159"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_stream_buffer_1a860dcea1040d3b58d62bf8a97df9f360" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxStreamBuffer::wxStreamBuffer</definition>
        <argsstring>(wxStreamBase &amp;stream, BufMode mode)</argsstring>
        <name>wxStreamBuffer</name>
        <param>
          <type><ref refid="classwx_stream_base" kindref="compound">wxStreamBase</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="classwx_stream_buffer_1a1b6333d99dc30ff865ff330b999e2dcc" kindref="member">BufMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Constructor, creates a new stream buffer using <emphasis>stream</emphasis> as a parent stream and mode as the IO mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent stream. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Can be: <ref refid="classwx_stream_buffer_1a1b6333d99dc30ff865ff330b999e2dcca93efc5286abe9db8c7763404aa835396" kindref="member">wxStreamBuffer::read</ref>, <ref refid="classwx_stream_buffer_1a1b6333d99dc30ff865ff330b999e2dccafaa5f7ec649e934479215e28c410a6c4" kindref="member">wxStreamBuffer::write</ref>, <ref refid="classwx_stream_buffer_1a1b6333d99dc30ff865ff330b999e2dcca3eec51f36a60801cc8aa8e5d2393a17f" kindref="member">wxStreamBuffer::read_write</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
One stream can have many stream buffers but only one is used internally to pass IO call (e.g. <ref refid="classwx_input_stream_1a72f24d0f50c7f07bb68dedf5e8690f4e" kindref="member">wxInputStream::Read()</ref> -&gt; <ref refid="classwx_stream_buffer_1a5c5772b548442c2a86c8f154c6b27dff" kindref="member">wxStreamBuffer::Read()</ref>), but you can call directly <ref refid="classwx_stream_buffer_1a5c5772b548442c2a86c8f154c6b27dff" kindref="member">wxStreamBuffer::Read</ref> without any problems. Note that all errors and messages linked to the stream are stored in the stream, not the stream buffers:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>streambuffer.Read(...);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>streambuffer2.Read(...);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>call<sp/>erases<sp/>previous<sp/>error<sp/>messages<sp/>set<sp/>by<sp/>&apos;streambuffer&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assuming<sp/>that<sp/>both<sp/>instances<sp/>are<sp/>stream<sp/>buffers<sp/>for<sp/>the<sp/>same<sp/>stream</highlight></codeline>
</programlisting></para><para><simplesect kind="see"><para><ref refid="classwx_stream_buffer_1a5981925c2323913c8bd252a2ad72bf7a" kindref="member">SetBufferIO()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="185"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1a57afda8e5aec964e93453324afb4cd4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxStreamBuffer::wxStreamBuffer</definition>
        <argsstring>(size_t bufsize, wxInputStream &amp;stream)</argsstring>
        <name>wxStreamBuffer</name>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type><ref refid="classwx_input_stream" kindref="compound">wxInputStream</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Constructor for an input buffer of the specified size. </para>        </briefdescription>
        <detaileddescription>
<para>Using it is equivalent to using the constructor above with read mode and calling <ref refid="classwx_stream_buffer_1a5981925c2323913c8bd252a2ad72bf7a" kindref="member">SetBufferIO()</ref> but is more convenient.</para><para><simplesect kind="since"><para>2.9.0</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufsize</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of buffer in bytes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>The associated input stream, the buffer will be used in read mode. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="200"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1a129a654b76af84c888671441736ef352" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxStreamBuffer::wxStreamBuffer</definition>
        <argsstring>(size_t bufsize, wxOutputStream &amp;stream)</argsstring>
        <name>wxStreamBuffer</name>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type><ref refid="classwx_output_stream" kindref="compound">wxOutputStream</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Constructor for an output buffer of the specified size. </para>        </briefdescription>
        <detaileddescription>
<para>Using it is equivalent to using the constructor above with write mode and calling <ref refid="classwx_stream_buffer_1a5981925c2323913c8bd252a2ad72bf7a" kindref="member">SetBufferIO()</ref> but is more convenient.</para><para><simplesect kind="since"><para>2.9.0</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufsize</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of buffer in bytes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>The associated output stream, the buffer will be used in write mode. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="215"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1a68ea8280a0649f0cf522a572a1a60824" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxStreamBuffer::wxStreamBuffer</definition>
        <argsstring>(BufMode mode)</argsstring>
        <name>wxStreamBuffer</name>
        <param>
          <type><ref refid="classwx_stream_buffer_1a1b6333d99dc30ff865ff330b999e2dcc" kindref="member">BufMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Constructor; creates a new empty stream buffer which won&apos;t flush any data to a stream. </para>        </briefdescription>
        <detaileddescription>
<para>mode specifies the type of the buffer (read, write, read_write).</para><para>This stream buffer has the advantage to be stream independent and to work only on memory buffers but it is still compatible with the rest of the wxStream classes. You can write, read to this special stream and it will grow (if it is allowed by the user) its internal buffer. Briefly, it has all functionality of a &quot;normal&quot; stream.</para><para><simplesect kind="warning"><para>The &quot;read_write&quot; mode doesn&apos;t currently work for standalone stream buffers.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_stream_buffer_1a5981925c2323913c8bd252a2ad72bf7a" kindref="member">SetBufferIO()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="232"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1afd55499e0c75a9e067c57093ee654bad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxStreamBuffer::wxStreamBuffer</definition>
        <argsstring>(const wxStreamBuffer &amp;buffer)</argsstring>
        <name>wxStreamBuffer</name>
        <param>
          <type>const <ref refid="classwx_stream_buffer" kindref="compound">wxStreamBuffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
<para>This method initializes the stream buffer with the data of the specified stream buffer. The new stream buffer has the same attributes, size, position and they share the same buffer. This will cause problems if the stream to which the stream buffer belong is destroyed and the newly cloned stream buffer continues to be used, trying to call functions in the (destroyed) stream. It is advised to use this feature only in very local area of the program. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="245"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1a4ffb98b4e9c5e091103e5171c6702537" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxStreamBuffer::~wxStreamBuffer</definition>
        <argsstring>()</argsstring>
        <name>~wxStreamBuffer</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
<para>It finalizes all IO calls and frees all internal buffers if necessary. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="251"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1a6501d9cb20e57b7d0f75144669b5246b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStreamBuffer::FillBuffer</definition>
        <argsstring>()</argsstring>
        <name>FillBuffer</name>
        <briefdescription>
<para>Fill the IO buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="256"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1a2ac1132b1bf10d8f70321b87cce3fcd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStreamBuffer::Fixed</definition>
        <argsstring>(bool fixed)</argsstring>
        <name>Fixed</name>
        <param>
          <type>bool</type>
          <declname>fixed</declname>
        </param>
        <briefdescription>
<para>Toggles the fixed flag. </para>        </briefdescription>
        <detaileddescription>
<para>Usually this flag is toggled at the same time as <emphasis>flushable</emphasis>. This flag allows (when it has the false value) or forbids (when it has the true value) the stream buffer to resize dynamically the IO buffer.</para><para><simplesect kind="see"><para><ref refid="classwx_stream_buffer_1a5981925c2323913c8bd252a2ad72bf7a" kindref="member">SetBufferIO()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="266"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1a789259c4af93129601253be26b39abde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStreamBuffer::FlushBuffer</definition>
        <argsstring>()</argsstring>
        <name>FlushBuffer</name>
        <briefdescription>
<para>Flushes the IO buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="271"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1ac461ce80390382b799976c53ed93cbef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStreamBuffer::Flushable</definition>
        <argsstring>(bool flushable)</argsstring>
        <name>Flushable</name>
        <param>
          <type>bool</type>
          <declname>flushable</declname>
        </param>
        <briefdescription>
<para>Toggles the flushable flag. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>flushable</emphasis> is disabled, no data are sent to the parent stream. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="277"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1ae1aed89e66a588c10d15b99a8b20cb0f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* wxStreamBuffer::GetBufferEnd</definition>
        <argsstring>() const </argsstring>
        <name>GetBufferEnd</name>
        <briefdescription>
<para>Returns a pointer on the end of the stream buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="282"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1ad2b5be1bbb26f025a70addc49f62d14b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* wxStreamBuffer::GetBufferPos</definition>
        <argsstring>() const </argsstring>
        <name>GetBufferPos</name>
        <briefdescription>
<para>Returns a pointer on the current position of the stream buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="287"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1aa165045209ddc667d350b552993c73b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxStreamBuffer::GetBufferSize</definition>
        <argsstring>() const </argsstring>
        <name>GetBufferSize</name>
        <briefdescription>
<para>Returns the size of the buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="292"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1a28ca586b1b678549bd89850441e15a00" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* wxStreamBuffer::GetBufferStart</definition>
        <argsstring>() const </argsstring>
        <name>GetBufferStart</name>
        <briefdescription>
<para>Returns a pointer on the start of the stream buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="297"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1a70c6fa06647b6ffe62f01823b3b3b762" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>char</type>
        <definition>virtual char wxStreamBuffer::GetChar</definition>
        <argsstring>()</argsstring>
        <name>GetChar</name>
        <briefdescription>
<para>Gets a single char from the stream buffer. </para>        </briefdescription>
        <detaileddescription>
<para>It acts like the <ref refid="classwx_stream_buffer_1a5c5772b548442c2a86c8f154c6b27dff" kindref="member">Read()</ref> call.</para><para><simplesect kind="warning"><para>You aren&apos;t directly notified if an error occurred during the IO call.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_stream_buffer_1a5c5772b548442c2a86c8f154c6b27dff" kindref="member">Read()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="307"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1a0d72df46cf154e22daaba85e7c56ca19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxStreamBuffer::GetDataLeft</definition>
        <argsstring>()</argsstring>
        <name>GetDataLeft</name>
        <briefdescription>
<para>Returns the amount of available data in the buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="312"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1aad76dfa935d292ce84ca61d890166d7e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxStreamBuffer::GetIntPosition</definition>
        <argsstring>() const </argsstring>
        <name>GetIntPosition</name>
        <briefdescription>
<para>Returns the current position (counted in bytes) in the stream buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="317"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1abd976eec61553ca3fc434dabff41b1aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxStreamBuffer::GetLastAccess</definition>
        <argsstring>() const </argsstring>
        <name>GetLastAccess</name>
        <briefdescription>
<para>Returns the amount of bytes read during the last IO call to the parent stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="322"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1ae5f8ecfff22202601dfa3aefbe50e696" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxStreamBuffer::PutChar</definition>
        <argsstring>(char c)</argsstring>
        <name>PutChar</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Puts a single char to the stream buffer. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>You aren&apos;t directly notified if an error occurred during the IO call.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_stream_buffer_1a5c5772b548442c2a86c8f154c6b27dff" kindref="member">Read()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="332"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1a5c5772b548442c2a86c8f154c6b27dff" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t wxStreamBuffer::Read</definition>
        <argsstring>(void *buffer, size_t size)</argsstring>
        <name>Read</name>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Reads a block of the specified size and stores the data in buffer. </para>        </briefdescription>
        <detaileddescription>
<para>This function tries to read from the buffer first and if more data has been requested, reads more data from the associated stream and updates the buffer accordingly until all requested data is read.</para><para><simplesect kind="return"><para>It returns the size of the data read. If the returned size is different of the specified size, an error has occurred and should be tested using GetLastError(). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="344"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1ab1818a8153ca96aa706fd2d355908e91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxStreamBuffer::Read</definition>
        <argsstring>(wxStreamBuffer *buffer)</argsstring>
        <name>Read</name>
        <param>
          <type><ref refid="classwx_stream_buffer" kindref="compound">wxStreamBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Copies data to <emphasis>buffer</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>The function returns when <emphasis>buffer</emphasis> is full or when there isn&apos;t any more data in the current buffer.</para><para><simplesect kind="see"><para><ref refid="classwx_stream_buffer_1a8ad171d3434d7beea9c0163896d8359f" kindref="member">Write()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="353"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1a4cf308d2a1b6d3f1c89fd3720feaf17e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStreamBuffer::ResetBuffer</definition>
        <argsstring>()</argsstring>
        <name>ResetBuffer</name>
        <briefdescription>
<para>Resets to the initial state variables concerning the buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="358"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1aca1b47bbaf47adf0b6b458608a176c4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="group__group__funcmacro__file_1ga69d831b3febabc149c67b716c8e22de5" kindref="member">wxFileOffset</ref></type>
        <definition>virtual wxFileOffset wxStreamBuffer::Seek</definition>
        <argsstring>(wxFileOffset pos, wxSeekMode mode)</argsstring>
        <name>Seek</name>
        <param>
          <type><ref refid="group__group__funcmacro__file_1ga69d831b3febabc149c67b716c8e22de5" kindref="member">wxFileOffset</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="group__group__funcmacro__file_1gae3981f8632f0391e5c852bf62eb982b0" kindref="member">wxSeekMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Changes the current position. </para>        </briefdescription>
        <detaileddescription>
<para>Parameter <emphasis>mode</emphasis> may be one of the following:</para><para><itemizedlist>
<listitem><para><bold>wxFromStart:</bold> The position is counted from the start of the stream.</para></listitem><listitem><para><bold>wxFromCurrent:</bold> The position is counted from the current position of the stream.</para></listitem><listitem><para><bold>wxFromEnd:</bold> The position is counted from the end of the stream.</para></listitem></itemizedlist>
</para><para><simplesect kind="return"><para>Upon successful completion, it returns the new offset as measured in bytes from the beginning of the stream. Otherwise, it returns <ref refid="group__group__funcmacro__file_1gab184c7199d93541d22ae42e515cbbcb7" kindref="member">wxInvalidOffset</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="372"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1a5981925c2323913c8bd252a2ad72bf7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStreamBuffer::SetBufferIO</definition>
        <argsstring>(void *start, void *end, bool takeOwnership=false)</argsstring>
        <name>SetBufferIO</name>
        <param>
          <type>void *</type>
          <declname>start</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>takeOwnership</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Specifies which pointers to use for stream buffering. </para>        </briefdescription>
        <detaileddescription>
<para>You need to pass a pointer on the start of the buffer end and another on the end. The object will use this buffer to cache stream data. It may be used also as a source/destination buffer when you create an empty stream buffer (See <ref refid="classwx_stream_buffer_1a860dcea1040d3b58d62bf8a97df9f360" kindref="member">wxStreamBuffer::wxStreamBuffer</ref>).</para><para><simplesect kind="remark"><para>When you use this function, you will have to destroy the IO buffers yourself after the stream buffer is destroyed or don&apos;t use it anymore. In the case you use it with an empty buffer, the stream buffer will not resize it when it is full.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_stream_buffer_1a860dcea1040d3b58d62bf8a97df9f360" kindref="member">wxStreamBuffer()</ref>, <ref refid="classwx_stream_buffer_1a2ac1132b1bf10d8f70321b87cce3fcd3" kindref="member">Fixed()</ref>, <ref refid="classwx_stream_buffer_1ac461ce80390382b799976c53ed93cbef" kindref="member">Flushable()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="389"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1ab62c5d757cd0f4b74748cc630f38bea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStreamBuffer::SetBufferIO</definition>
        <argsstring>(size_t bufsize)</argsstring>
        <name>SetBufferIO</name>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <briefdescription>
<para>Destroys or invalidates the previous IO buffer and allocates a new one of the specified size. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>All previous pointers aren&apos;t valid anymore.</para></simplesect>
<simplesect kind="remark"><para>The created IO buffer is growable by the object.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_stream_buffer_1a2ac1132b1bf10d8f70321b87cce3fcd3" kindref="member">Fixed()</ref>, <ref refid="classwx_stream_buffer_1ac461ce80390382b799976c53ed93cbef" kindref="member">Flushable()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="403"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1afddd13353c9bfc54871673563052bde6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStreamBuffer::SetIntPosition</definition>
        <argsstring>(size_t pos)</argsstring>
        <name>SetIntPosition</name>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Sets the current position (in bytes) in the stream buffer. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Since it is a very low-level function, there is no check on the position: specifying an invalid position can induce unexpected results. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="412"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1ad717309ac785d320757386df2db02160" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_stream_base" kindref="compound">wxStreamBase</ref> *</type>
        <definition>wxStreamBase* wxStreamBuffer::Stream</definition>
        <argsstring>()</argsstring>
        <name>Stream</name>
        <briefdescription>
<para>Returns the parent stream of the stream buffer. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000054"><xreftitle>Deprecated</xreftitle><xrefdescription><para>use GetStream() instead </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="418"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1ae95ffab896829ec7d2e8b821f42c0ab5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="group__group__funcmacro__file_1ga69d831b3febabc149c67b716c8e22de5" kindref="member">wxFileOffset</ref></type>
        <definition>virtual wxFileOffset wxStreamBuffer::Tell</definition>
        <argsstring>() const </argsstring>
        <name>Tell</name>
        <briefdescription>
<para>Gets the current position in the stream. </para>        </briefdescription>
        <detaileddescription>
<para>This position is calculated from the <emphasis>real</emphasis> position in the stream and from the internal buffer position: so it gives you the position in the <emphasis>real</emphasis> stream counted from the start of the stream.</para><para><simplesect kind="return"><para>Returns the current position in the stream if possible, <ref refid="group__group__funcmacro__file_1gab184c7199d93541d22ae42e515cbbcb7" kindref="member">wxInvalidOffset</ref> in the other case. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="429"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1a10875bdb145f030ee082ab26cab2c694" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStreamBuffer::Truncate</definition>
        <argsstring>()</argsstring>
        <name>Truncate</name>
        <briefdescription>
<para>Truncates the buffer to the current position. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><ref refid="classwx_stream_buffer_1a10875bdb145f030ee082ab26cab2c694" kindref="member">Truncate()</ref> cannot be used to enlarge the buffer. This is usually not needed since the buffer expands automatically. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="437"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1a8ad171d3434d7beea9c0163896d8359f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t wxStreamBuffer::Write</definition>
        <argsstring>(const void *buffer, size_t size)</argsstring>
        <name>Write</name>
        <param>
          <type>const void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Writes a block of the specified size using data of buffer. </para>        </briefdescription>
        <detaileddescription>
<para>The data are cached in a buffer before being sent in one block to the stream. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="443"/>
      </memberdef>
      <memberdef kind="function" id="classwx_stream_buffer_1a7d2d1ec4e66b7f9d19a109eb6fafa0c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxStreamBuffer::Write</definition>
        <argsstring>(wxStreamBuffer *buffer)</argsstring>
        <name>Write</name>
        <param>
          <type><ref refid="classwx_stream_buffer" kindref="compound">wxStreamBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>See <ref refid="classwx_stream_buffer_1a5c5772b548442c2a86c8f154c6b27dff" kindref="member">Read()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="448"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classwx_stream_buffer" kindref="compound">wxStreamBuffer</ref> is a cache manager for <ref refid="classwx_stream_base" kindref="compound">wxStreamBase</ref>: it manages a stream buffer linked to a stream. </para>    </briefdescription>
    <detaileddescription>
<para>Each stream always has one autoinitialized stream buffer, but you may attach more of them to the same stream.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__streams" kindref="compound">Streams</ref></para><para><simplesect kind="see"><para><ref refid="classwx_stream_base" kindref="compound">wxStreamBase</ref>, <ref refid="overview_stream" kindref="compound">Stream classes overview</ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" line="151" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/stream.h" bodystart="150" bodyend="449"/>
    <listofallmembers>
      <member refid="classwx_stream_buffer_1a1b6333d99dc30ff865ff330b999e2dcc" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>BufMode</name></member>
      <member refid="classwx_stream_buffer_1a6501d9cb20e57b7d0f75144669b5246b" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>FillBuffer</name></member>
      <member refid="classwx_stream_buffer_1a2ac1132b1bf10d8f70321b87cce3fcd3" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>Fixed</name></member>
      <member refid="classwx_stream_buffer_1ac461ce80390382b799976c53ed93cbef" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>Flushable</name></member>
      <member refid="classwx_stream_buffer_1a789259c4af93129601253be26b39abde" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>FlushBuffer</name></member>
      <member refid="classwx_stream_buffer_1ae1aed89e66a588c10d15b99a8b20cb0f" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>GetBufferEnd</name></member>
      <member refid="classwx_stream_buffer_1ad2b5be1bbb26f025a70addc49f62d14b" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>GetBufferPos</name></member>
      <member refid="classwx_stream_buffer_1aa165045209ddc667d350b552993c73b3" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>GetBufferSize</name></member>
      <member refid="classwx_stream_buffer_1a28ca586b1b678549bd89850441e15a00" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>GetBufferStart</name></member>
      <member refid="classwx_stream_buffer_1a70c6fa06647b6ffe62f01823b3b3b762" prot="public" virt="virtual"><scope>wxStreamBuffer</scope><name>GetChar</name></member>
      <member refid="classwx_stream_buffer_1a0d72df46cf154e22daaba85e7c56ca19" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>GetDataLeft</name></member>
      <member refid="classwx_stream_buffer_1aad76dfa935d292ce84ca61d890166d7e" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>GetIntPosition</name></member>
      <member refid="classwx_stream_buffer_1abd976eec61553ca3fc434dabff41b1aa" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>GetLastAccess</name></member>
      <member refid="classwx_stream_buffer_1ae5f8ecfff22202601dfa3aefbe50e696" prot="public" virt="virtual"><scope>wxStreamBuffer</scope><name>PutChar</name></member>
      <member refid="classwx_stream_buffer_1a1b6333d99dc30ff865ff330b999e2dcca93efc5286abe9db8c7763404aa835396" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>read</name></member>
      <member refid="classwx_stream_buffer_1a5c5772b548442c2a86c8f154c6b27dff" prot="public" virt="virtual"><scope>wxStreamBuffer</scope><name>Read</name></member>
      <member refid="classwx_stream_buffer_1ab1818a8153ca96aa706fd2d355908e91" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>Read</name></member>
      <member refid="classwx_stream_buffer_1a1b6333d99dc30ff865ff330b999e2dcca3eec51f36a60801cc8aa8e5d2393a17f" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>read_write</name></member>
      <member refid="classwx_stream_buffer_1a4cf308d2a1b6d3f1c89fd3720feaf17e" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>ResetBuffer</name></member>
      <member refid="classwx_stream_buffer_1aca1b47bbaf47adf0b6b458608a176c4f" prot="public" virt="virtual"><scope>wxStreamBuffer</scope><name>Seek</name></member>
      <member refid="classwx_stream_buffer_1a5981925c2323913c8bd252a2ad72bf7a" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>SetBufferIO</name></member>
      <member refid="classwx_stream_buffer_1ab62c5d757cd0f4b74748cc630f38bea4" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>SetBufferIO</name></member>
      <member refid="classwx_stream_buffer_1afddd13353c9bfc54871673563052bde6" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>SetIntPosition</name></member>
      <member refid="classwx_stream_buffer_1ad717309ac785d320757386df2db02160" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>Stream</name></member>
      <member refid="classwx_stream_buffer_1ae95ffab896829ec7d2e8b821f42c0ab5" prot="public" virt="virtual"><scope>wxStreamBuffer</scope><name>Tell</name></member>
      <member refid="classwx_stream_buffer_1a10875bdb145f030ee082ab26cab2c694" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>Truncate</name></member>
      <member refid="classwx_stream_buffer_1a1b6333d99dc30ff865ff330b999e2dccafaa5f7ec649e934479215e28c410a6c4" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>write</name></member>
      <member refid="classwx_stream_buffer_1a8ad171d3434d7beea9c0163896d8359f" prot="public" virt="virtual"><scope>wxStreamBuffer</scope><name>Write</name></member>
      <member refid="classwx_stream_buffer_1a7d2d1ec4e66b7f9d19a109eb6fafa0c6" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>Write</name></member>
      <member refid="classwx_stream_buffer_1a860dcea1040d3b58d62bf8a97df9f360" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>wxStreamBuffer</name></member>
      <member refid="classwx_stream_buffer_1a57afda8e5aec964e93453324afb4cd4c" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>wxStreamBuffer</name></member>
      <member refid="classwx_stream_buffer_1a129a654b76af84c888671441736ef352" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>wxStreamBuffer</name></member>
      <member refid="classwx_stream_buffer_1a68ea8280a0649f0cf522a572a1a60824" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>wxStreamBuffer</name></member>
      <member refid="classwx_stream_buffer_1afd55499e0c75a9e067c57093ee654bad" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>wxStreamBuffer</name></member>
      <member refid="classwx_stream_buffer_1a4ffb98b4e9c5e091103e5171c6702537" prot="public" virt="non-virtual"><scope>wxStreamBuffer</scope><name>~wxStreamBuffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
