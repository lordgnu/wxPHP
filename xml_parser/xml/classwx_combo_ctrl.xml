<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_combo_ctrl" kind="class" prot="public">
    <compoundname>wxComboCtrl</compoundname>
    <basecompoundref refid="classwx_control" prot="public" virt="non-virtual">wxControl</basecompoundref>
    <basecompoundref refid="classwx_text_entry" prot="public" virt="non-virtual">wxTextEntry</basecompoundref>
    <derivedcompoundref refid="classwx_owner_drawn_combo_box" prot="public" virt="non-virtual">wxOwnerDrawnComboBox</derivedcompoundref>
    <derivedcompoundref refid="classwx_rich_text_style_combo_ctrl" prot="public" virt="non-virtual">wxRichTextStyleComboCtrl</derivedcompoundref>
    <includes local="no">wx/combo.h</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_combo_ctrl_1ae2b983f401d92ccc38f2bed47fb4d76b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxComboCtrl::SetMargins</definition>
        <argsstring>(const wxPoint &amp;pt)</argsstring>
        <name>SetMargins</name>
        <reimplements refid="classwx_text_entry_1af2f9684123d3f4d7233945016b2d5c1d">SetMargins</reimplements>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>Attempts to set the control margins. </para>        </briefdescription>
        <detaileddescription>
<para>When margins are given as <ref refid="classwx_point" kindref="compound">wxPoint</ref>, x indicates the left and y the top margin. Use -1 to indicate that an existing value should be used.</para><para><simplesect kind="return"><para>true if setting of all requested margins was successful.</para></simplesect>
<simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="723"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a61fb396d486c81bcb733ff0b35301904" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxComboCtrl::SetMargins</definition>
        <argsstring>(wxCoord left, wxCoord top=-1)</argsstring>
        <name>SetMargins</name>
        <reimplements refid="classwx_text_entry_1ad8dc1eb9633c73d26c968b337525c6c2">SetMargins</reimplements>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>left</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>top</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Attempts to set the control margins. </para>        </briefdescription>
        <detaileddescription>
<para>When margins are given as <ref refid="classwx_point" kindref="compound">wxPoint</ref>, x indicates the left and y the top margin. Use -1 to indicate that an existing value should be used.</para><para><simplesect kind="return"><para>true if setting of all requested margins was successful.</para></simplesect>
<simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="724"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_combo_ctrl_1af31b505e73047689dc4d2948eaa13a3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxComboCtrl::wxComboCtrl</definition>
        <argsstring>()</argsstring>
        <name>wxComboCtrl</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="361"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a0f9d6b21d3728f135dbe0d01ee4bf865" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxComboCtrl::wxComboCtrl</definition>
        <argsstring>(wxWindow *parent, wxWindowID id=wxID_ANY, const wxString &amp;value=wxEmptyString, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=0, const wxValidator &amp;validator=wxDefaultValidator, const wxString &amp;name=wxComboBoxNameStr)</argsstring>
        <name>wxComboCtrl</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="windowid_8h_1ae8091432cc2cb2485d45f2302fb51133" kindref="member">wxWindowID</ref></type>
          <declname>id</declname>
          <defval>wxID_ANY</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>value</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pos</declname>
          <defval><ref refid="gdicmn_8h_1af5a90c753eaf3d3e3e5068a19ec3c1d0" kindref="member">wxDefaultPosition</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
          <defval><ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref></defval>
        </param>
        <param>
          <type>long</type>
          <declname>style</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_validator" kindref="compound">wxValidator</ref> &amp;</type>
          <declname>validator</declname>
          <defval><ref refid="validate_8h_1af1e90d8aa1824fd2ce4024ef7e40703c" kindref="member">wxDefaultValidator</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
          <defval>wxComboBoxNameStr</defval>
        </param>
        <briefdescription>
<para>Constructor, creating and showing a combo control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent window. Must not be NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Window identifier. The value wxID_ANY indicates a default value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial selection string. An empty string indicates no selection. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Window position. If <ref refid="gdicmn_8h_1af5a90c753eaf3d3e3e5068a19ec3c1d0" kindref="member">wxDefaultPosition</ref> is specified then a default position is chosen. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Window size. If <ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref> is specified then the window is sized appropriately. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>Window style. See <ref refid="classwx_combo_ctrl" kindref="compound">wxComboCtrl</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>validator</parametername>
</parameternamelist>
<parameterdescription>
<para>Window validator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Window name.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classwx_combo_ctrl_1aab2390bd7650a56e3d2c243140d28f98" kindref="member">Create()</ref>, <ref refid="classwx_validator" kindref="compound">wxValidator</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="393"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a542d88ad981a8dd2a53ca9cc03c2daaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxComboCtrl::~wxComboCtrl</definition>
        <argsstring>()</argsstring>
        <name>~wxComboCtrl</name>
        <briefdescription>
<para>Destructor, destroying the combo control. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="398"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a6feecca8942afd49ac29ff62936299c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::Copy</definition>
        <argsstring>()</argsstring>
        <name>Copy</name>
        <reimplements refid="classwx_text_entry_1a94675646b91a2d5a18e3ca7395cafe77">Copy</reimplements>
        <briefdescription>
<para>Copies the selected text to the clipboard. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="403"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1aab2390bd7650a56e3d2c243140d28f98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxComboCtrl::Create</definition>
        <argsstring>(wxWindow *parent, wxWindowID id=wxID_ANY, const wxString &amp;value=wxEmptyString, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=0, const wxValidator &amp;validator=wxDefaultValidator, const wxString &amp;name=wxComboBoxNameStr)</argsstring>
        <name>Create</name>
        <reimplementedby refid="classwx_owner_drawn_combo_box_1a92bdeed6e785aecb9ee37181b2eb3a3e">Create</reimplementedby>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="windowid_8h_1ae8091432cc2cb2485d45f2302fb51133" kindref="member">wxWindowID</ref></type>
          <declname>id</declname>
          <defval>wxID_ANY</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>value</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pos</declname>
          <defval><ref refid="gdicmn_8h_1af5a90c753eaf3d3e3e5068a19ec3c1d0" kindref="member">wxDefaultPosition</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
          <defval><ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref></defval>
        </param>
        <param>
          <type>long</type>
          <declname>style</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_validator" kindref="compound">wxValidator</ref> &amp;</type>
          <declname>validator</declname>
          <defval><ref refid="validate_8h_1af1e90d8aa1824fd2ce4024ef7e40703c" kindref="member">wxDefaultValidator</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
          <defval>wxComboBoxNameStr</defval>
        </param>
        <briefdescription>
<para>Creates the combo control for two-step construction. </para>        </briefdescription>
        <detaileddescription>
<para>Derived classes should call or replace this function. See <ref refid="classwx_combo_ctrl_1af31b505e73047689dc4d2948eaa13a3d" kindref="member">wxComboCtrl()</ref> for further details. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="416"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a201dce519059e37ad35901f7603afa56" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::Cut</definition>
        <argsstring>()</argsstring>
        <name>Cut</name>
        <briefdescription>
<para>Copies the selected text to the clipboard and removes the selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="421"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a56867b1c18641c21fcd518ce43efbf99" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::Dismiss</definition>
        <argsstring>()</argsstring>
        <name>Dismiss</name>
        <briefdescription>
<para>Dismisses the popup window. </para>        </briefdescription>
        <detaileddescription>
<para>Notice that calling this function will generate a <computeroutput>wxEVT_COMMAND_COMBOBOX_CLOSEUP</computeroutput> event.</para><para><simplesect kind="since"><para>2.9.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="431"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1ae90d978c054d1ce215758c6073c43d31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::EnablePopupAnimation</definition>
        <argsstring>(bool enable=true)</argsstring>
        <name>EnablePopupAnimation</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Enables or disables popup animation, if any, depending on the value of the argument. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="438"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a43a36047283978383d87c395445ceede" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
        <definition>const wxBitmap&amp; wxComboCtrl::GetBitmapDisabled</definition>
        <argsstring>() const </argsstring>
        <name>GetBitmapDisabled</name>
        <briefdescription>
<para>Returns disabled button bitmap that has been set with <ref refid="classwx_combo_ctrl_1adc5fdec92913ba1ffdec20548106376b" kindref="member">SetButtonBitmaps()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A reference to the disabled state bitmap. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="446"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a844f2666c1e65f3fc74d2f2b1ebc4a28" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
        <definition>const wxBitmap&amp; wxComboCtrl::GetBitmapHover</definition>
        <argsstring>() const </argsstring>
        <name>GetBitmapHover</name>
        <briefdescription>
<para>Returns button mouse hover bitmap that has been set with <ref refid="classwx_combo_ctrl_1adc5fdec92913ba1ffdec20548106376b" kindref="member">SetButtonBitmaps()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A reference to the mouse hover state bitmap. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="454"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1ad1598651e604d3d602c1c6918f897e39" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
        <definition>const wxBitmap&amp; wxComboCtrl::GetBitmapNormal</definition>
        <argsstring>() const </argsstring>
        <name>GetBitmapNormal</name>
        <briefdescription>
<para>Returns default button bitmap that has been set with <ref refid="classwx_combo_ctrl_1adc5fdec92913ba1ffdec20548106376b" kindref="member">SetButtonBitmaps()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A reference to the normal state bitmap. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="462"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1aafd2664dc7e52b2cc19bb895d8f885a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
        <definition>const wxBitmap&amp; wxComboCtrl::GetBitmapPressed</definition>
        <argsstring>() const </argsstring>
        <name>GetBitmapPressed</name>
        <briefdescription>
<para>Returns depressed button bitmap that has been set with <ref refid="classwx_combo_ctrl_1adc5fdec92913ba1ffdec20548106376b" kindref="member">SetButtonBitmaps()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A reference to the depressed state bitmap. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="470"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1ab6e1596a4b709465e0b07362a3c7dad2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxComboCtrl::GetButtonSize</definition>
        <argsstring>()</argsstring>
        <name>GetButtonSize</name>
        <briefdescription>
<para>Returns current size of the dropdown button. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="475"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1acca0f05d49a19186f5bfe3e406ed5721" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxComboCtrl::GetCustomPaintWidth</definition>
        <argsstring>() const </argsstring>
        <name>GetCustomPaintWidth</name>
        <briefdescription>
<para>Returns custom painted area in control. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_combo_ctrl_1af0b54e5e4f71efc63464ceb44f1497d5" kindref="member">SetCustomPaintWidth()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="482"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1ac43e88ba57753e939fc60af6ce60aae9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxComboCtrl::GetHint</definition>
        <argsstring>() const </argsstring>
        <name>GetHint</name>
        <reimplements refid="classwx_text_entry_1a9b5deb6db1bd97c746bc0d2637d7f466">GetHint</reimplements>
        <briefdescription>
<para>Returns the current hint string. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_combo_ctrl_1a68221bdd4af63abfd9840e5de13f4ba6" kindref="member">SetHint()</ref> for more information about hints.</para><para><simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="501"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a71260046ce8c1450d021ce183136d7a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>long</type>
        <definition>virtual long wxComboCtrl::GetInsertionPoint</definition>
        <argsstring>() const </argsstring>
        <name>GetInsertionPoint</name>
        <reimplements refid="classwx_text_entry_1a396c9bc8cbf6adb7e69dcf035d31efbe">GetInsertionPoint</reimplements>
        <briefdescription>
<para>Returns the insertion point for the combo control&apos;s text field. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Under Windows, this function always returns 0 if the combo control doesn&apos;t have the focus. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="509"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a0f89b94190f5eee5e497dc0fd8679f99" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>long</type>
        <definition>virtual long wxComboCtrl::GetLastPosition</definition>
        <argsstring>() const </argsstring>
        <name>GetLastPosition</name>
        <reimplements refid="classwx_text_entry_1a0d31704b5bc0b8cfe2502a66409d05c9">GetLastPosition</reimplements>
        <briefdescription>
<para>Returns the last position in the combo control text field. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="514"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1aee42bf65d60931df1e9f7a26fcfdf377" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
        <definition>wxPoint wxComboCtrl::GetMargins</definition>
        <argsstring>() const </argsstring>
        <name>GetMargins</name>
        <reimplements refid="classwx_text_entry_1ae95ebc42453130e7ae0def8f5434d937">GetMargins</reimplements>
        <briefdescription>
<para>Returns the margins used by the control. </para>        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>x</computeroutput> field of the returned point is the horizontal margin and the <computeroutput>y</computeroutput> field is the vertical one.</para><para><simplesect kind="remark"><para>If given margin cannot be accurately determined, its value will be set to -1.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_combo_ctrl_1ae2b983f401d92ccc38f2bed47fb4d76b" kindref="member">SetMargins()</ref></para></simplesect>
<simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="527"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1aedb72a461632fa31ca5ea84e47fb5433" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_combo_popup" kindref="compound">wxComboPopup</ref> *</type>
        <definition>wxComboPopup* wxComboCtrl::GetPopupControl</definition>
        <argsstring>()</argsstring>
        <name>GetPopupControl</name>
        <briefdescription>
<para>Returns current popup interface that has been set with <ref refid="classwx_combo_ctrl_1afb0b22cb38395040699eebcb679fd86a" kindref="member">SetPopupControl()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="533"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1ae5b1c9a0c5e6e57f4919456bc1effc7a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
        <definition>wxWindow* wxComboCtrl::GetPopupWindow</definition>
        <argsstring>() const </argsstring>
        <name>GetPopupWindow</name>
        <briefdescription>
<para>Returns popup window containing the popup control. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="538"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1aefeb3d34a2cfa480b60b07de53863a6e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> *</type>
        <definition>wxTextCtrl* wxComboCtrl::GetTextCtrl</definition>
        <argsstring>() const </argsstring>
        <name>GetTextCtrl</name>
        <briefdescription>
<para>Get the text control which is part of the combo control. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="543"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1aed73e4d4c77b8e6ee98b77790dcce62c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
        <definition>wxCoord wxComboCtrl::GetTextIndent</definition>
        <argsstring>() const </argsstring>
        <name>GetTextIndent</name>
        <briefdescription>
<para>Returns actual indentation in pixels. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000006"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="classwx_combo_ctrl_1aee42bf65d60931df1e9f7a26fcfdf377" kindref="member">GetMargins()</ref> instead. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="550"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1af6bddfb11881c819d9ee56f8325d4487" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
        <definition>const wxRect&amp; wxComboCtrl::GetTextRect</definition>
        <argsstring>() const </argsstring>
        <name>GetTextRect</name>
        <briefdescription>
<para>Returns area covered by the text field (includes everything except borders and the dropdown button). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="556"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1af2c8a92d3a2b1f387432633bed397ef8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxComboCtrl::GetValue</definition>
        <argsstring>() const </argsstring>
        <name>GetValue</name>
        <reimplements refid="classwx_text_entry_1af234557ffcbfefb3ea45358c4f2a5283">GetValue</reimplements>
        <briefdescription>
<para>Returns text representation of the current value. </para>        </briefdescription>
        <detaileddescription>
<para>For writable combo control it always returns the value in the text field. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="562"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a73d2d6ede7bdc0db63c08f81cd09a5e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::HidePopup</definition>
        <argsstring>(bool generateEvent=false)</argsstring>
        <name>HidePopup</name>
        <param>
          <type>bool</type>
          <declname>generateEvent</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Dismisses the popup window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>generateEvent</parametername>
</parameternamelist>
<parameterdescription>
<para>Set this to true in order to generate <computeroutput>wxEVT_COMMAND_COMBOBOX_CLOSEUP</computeroutput> event.</para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="deprecated_1_deprecated000007"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="classwx_combo_ctrl_1a56867b1c18641c21fcd518ce43efbf99" kindref="member">Dismiss()</ref> instead. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="573"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a6f902c2f40b25a668b5439bb4fad4aed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxComboCtrl::IsPopupShown</definition>
        <argsstring>() const </argsstring>
        <name>IsPopupShown</name>
        <briefdescription>
<para>Returns true if the popup is currently shown. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="578"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1ad3189613aa316f856c8f9f5b2182928b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxComboCtrl::IsPopupWindowState</definition>
        <argsstring>(int state) const </argsstring>
        <name>IsPopupWindowState</name>
        <param>
          <type>int</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Returns true if the popup window is in the given state. </para>        </briefdescription>
        <detaileddescription>
<para>Possible values are:</para><para><table rows="3" cols="2"><row>
<entry thead="no"><para>wxComboCtrl::Hidden </para></entry><entry thead="no"><para>Popup window is hidden. </para></entry></row>
<row>
<entry thead="no"><para>wxComboCtrl::Animating </para></entry><entry thead="no"><para>Popup window is being shown, but the popup animation has not yet finished. </para></entry></row>
<row>
<entry thead="no"><para>wxComboCtrl::Visible </para></entry><entry thead="no"><para>Popup window is fully visible. </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="591"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a3ce1fce108f3a84216fa9983d6b89a37" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::OnButtonClick</definition>
        <argsstring>()</argsstring>
        <name>OnButtonClick</name>
        <briefdescription>
<para>Implement in a derived class to define what happens on dropdown button click. </para>        </briefdescription>
        <detaileddescription>
<para>Default action is to show the popup.</para><para><simplesect kind="note"><para>If you implement this to do something else than show the popup, you must then also implement <ref refid="classwx_combo_ctrl_1a0df7ddd8eb5454a2d3f72eb805848fa9" kindref="member">DoSetPopupControl()</ref> to always return NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="601"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a361e1a0db2dceb5aa7749ad5a158e49c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::Paste</definition>
        <argsstring>()</argsstring>
        <name>Paste</name>
        <reimplements refid="classwx_text_entry_1a5889d0d240e603e32c11bd580b65b3d7">Paste</reimplements>
        <briefdescription>
<para>Pastes text from the clipboard to the text field. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="606"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1afda0208f5c2a31d504e230c36546fe8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::Popup</definition>
        <argsstring>()</argsstring>
        <name>Popup</name>
        <briefdescription>
<para>Shows the popup portion of the combo control. </para>        </briefdescription>
        <detaileddescription>
<para>Notice that calling this function will generate a <computeroutput>wxEVT_COMMAND_COMBOBOX_DROPDOWN</computeroutput> event.</para><para><simplesect kind="since"><para>2.9.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="616"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a20b2fecf36f2c5559fe1333f706681ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::Remove</definition>
        <argsstring>(long from, long to)</argsstring>
        <name>Remove</name>
        <reimplements refid="classwx_text_entry_1ab38f2786becabdacf27c7e31a2922bcc">Remove</reimplements>
        <param>
          <type>long</type>
          <declname>from</declname>
        </param>
        <param>
          <type>long</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>Removes the text between the two positions in the combo control text field. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The first position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>The last position. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="627"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1ab3c5214e81069bb594fa230a77b02da8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::Replace</definition>
        <argsstring>(long from, long to, const wxString &amp;text)</argsstring>
        <name>Replace</name>
        <reimplements refid="classwx_text_entry_1a1fb3ac76d270b2c64cff595497815f8d">Replace</reimplements>
        <param>
          <type>long</type>
          <declname>from</declname>
        </param>
        <param>
          <type>long</type>
          <declname>to</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Replaces the text between two positions with the given text, in the combo control text field. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The first position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>The second position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text to insert. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="640"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1adc5fdec92913ba1ffdec20548106376b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::SetButtonBitmaps</definition>
        <argsstring>(const wxBitmap &amp;bmpNormal, bool pushButtonBg=false, const wxBitmap &amp;bmpPressed=wxNullBitmap, const wxBitmap &amp;bmpHover=wxNullBitmap, const wxBitmap &amp;bmpDisabled=wxNullBitmap)</argsstring>
        <name>SetButtonBitmaps</name>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>bmpNormal</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>pushButtonBg</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>bmpPressed</declname>
          <defval><ref refid="interface_2wx_2bitmap_8h_1a2947690e84b8fdb2e37b79a4af8f8a21" kindref="member">wxNullBitmap</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>bmpHover</declname>
          <defval><ref refid="interface_2wx_2bitmap_8h_1a2947690e84b8fdb2e37b79a4af8f8a21" kindref="member">wxNullBitmap</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>bmpDisabled</declname>
          <defval><ref refid="interface_2wx_2bitmap_8h_1a2947690e84b8fdb2e37b79a4af8f8a21" kindref="member">wxNullBitmap</ref></defval>
        </param>
        <briefdescription>
<para>Sets custom dropdown button graphics. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bmpNormal</parametername>
</parameternamelist>
<parameterdescription>
<para>Default button image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pushButtonBg</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, blank push button background is painted below the image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bmpPressed</parametername>
</parameternamelist>
<parameterdescription>
<para>Depressed button image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bmpHover</parametername>
</parameternamelist>
<parameterdescription>
<para>Button image when mouse hovers above it. This should be ignored on platforms and themes that do not generally draw different kind of button on mouse hover. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bmpDisabled</parametername>
</parameternamelist>
<parameterdescription>
<para>Disabled button image. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="662"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1aa0ffd3528d66f15bfd3c0da78117ebad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::SetButtonPosition</definition>
        <argsstring>(int width=-1, int height=-1, int side=wxRIGHT, int spacingX=0)</argsstring>
        <name>SetButtonPosition</name>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>side</declname>
          <defval>wxRIGHT</defval>
        </param>
        <param>
          <type>int</type>
          <declname>spacingX</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Sets size and position of dropdown button. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Button width. Value = 0 specifies default. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Button height. Value = 0 specifies default. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>side</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates which side the button will be placed. Value can be wxLEFT or wxRIGHT. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spacingX</parametername>
</parameternamelist>
<parameterdescription>
<para>Horizontal spacing around the button. Default is 0. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="678"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1af0b54e5e4f71efc63464ceb44f1497d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::SetCustomPaintWidth</definition>
        <argsstring>(int width)</argsstring>
        <name>SetCustomPaintWidth</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
<para>Set width, in pixels, of custom painted area in control without <computeroutput>wxCB_READONLY</computeroutput> style. </para>        </briefdescription>
        <detaileddescription>
<para>In read-only <ref refid="classwx_owner_drawn_combo_box" kindref="compound">wxOwnerDrawnComboBox</ref>, this is used to indicate area that is not covered by the focus rectangle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="685"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a68221bdd4af63abfd9840e5de13f4ba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxComboCtrl::SetHint</definition>
        <argsstring>(const wxString &amp;hint)</argsstring>
        <name>SetHint</name>
        <reimplements refid="classwx_text_entry_1a4e9dfe958dbd1918c54b45be83f1bed4">SetHint</reimplements>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>hint</declname>
        </param>
        <briefdescription>
<para>Sets a hint shown in an empty unfocused combo control. </para>        </briefdescription>
        <detaileddescription>
<para>Notice that hints are known as <emphasis>cue banners</emphasis> under MSW or <emphasis>placeholder strings</emphasis> under OS X.</para><para><simplesect kind="see"><para><ref refid="classwx_text_entry_1a4e9dfe958dbd1918c54b45be83f1bed4" kindref="member">wxTextEntry::SetHint()</ref></para></simplesect>
<simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="697"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a9ac49217e13edeb905cf640aac627bba" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::SetInsertionPoint</definition>
        <argsstring>(long pos)</argsstring>
        <name>SetInsertionPoint</name>
        <reimplements refid="classwx_text_entry_1a6e5460ec6e893ecb3e3ce90300373de8">SetInsertionPoint</reimplements>
        <param>
          <type>long</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Sets the insertion point in the text field. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The new insertion point. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="705"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a3b4d25c9166d51a95973176df1b05be4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::SetInsertionPointEnd</definition>
        <argsstring>()</argsstring>
        <name>SetInsertionPointEnd</name>
        <reimplements refid="classwx_text_entry_1a954a065a2f20da350ae830faff1fff95">SetInsertionPointEnd</reimplements>
        <briefdescription>
<para>Sets the insertion point at the end of the combo control text field. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="710"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1aac64729c09efde24fbc14d43aa688202" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::SetPopupAnchor</definition>
        <argsstring>(int anchorSide)</argsstring>
        <name>SetPopupAnchor</name>
        <param>
          <type>int</type>
          <declname>anchorSide</declname>
        </param>
        <briefdescription>
<para>Set side of the control to which the popup will align itself. </para>        </briefdescription>
        <detaileddescription>
<para>Valid values are <computeroutput>wxLEFT</computeroutput>, <computeroutput>wxRIGHT</computeroutput> and 0. The default value 0 means that the most appropriate side is used (which, currently, is always <computeroutput>wxLEFT</computeroutput>). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="733"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1afb0b22cb38395040699eebcb679fd86a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::SetPopupControl</definition>
        <argsstring>(wxComboPopup *popup)</argsstring>
        <name>SetPopupControl</name>
        <param>
          <type><ref refid="classwx_combo_popup" kindref="compound">wxComboPopup</ref> *</type>
          <declname>popup</declname>
        </param>
        <briefdescription>
<para>Set popup interface class derived from <ref refid="classwx_combo_popup" kindref="compound">wxComboPopup</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>This method should be called as soon as possible after the control has been created, unless <ref refid="classwx_combo_ctrl_1a3ce1fce108f3a84216fa9983d6b89a37" kindref="member">OnButtonClick()</ref> has been overridden. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="740"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1add059c3997d6697bc98365f039da17f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::SetPopupExtents</definition>
        <argsstring>(int extLeft, int extRight)</argsstring>
        <name>SetPopupExtents</name>
        <param>
          <type>int</type>
          <declname>extLeft</declname>
        </param>
        <param>
          <type>int</type>
          <declname>extRight</declname>
        </param>
        <briefdescription>
<para>Extends popup size horizontally, relative to the edges of the combo control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>extLeft</parametername>
</parameternamelist>
<parameterdescription>
<para>How many pixel to extend beyond the left edge of the control. Default is 0. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>extRight</parametername>
</parameternamelist>
<parameterdescription>
<para>How many pixel to extend beyond the right edge of the control. Default is 0.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>Popup minimum width may override arguments. It is up to the popup to fully take this into account. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="756"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a24f043ce5c1287904a899c22f2dc7ce9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::SetPopupMaxHeight</definition>
        <argsstring>(int height)</argsstring>
        <name>SetPopupMaxHeight</name>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Sets preferred maximum height of the popup. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>Value -1 indicates the default. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="763"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1aef690d395a8ef2500d2c4ddd2d345d6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::SetPopupMinWidth</definition>
        <argsstring>(int width)</argsstring>
        <name>SetPopupMinWidth</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
<para>Sets minimum width of the popup. </para>        </briefdescription>
        <detaileddescription>
<para>If wider than combo control, it will extend to the left.</para><para><simplesect kind="remark"><para>Value -1 indicates the default. Also, popup implementation may choose to ignore this. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="772"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a62f78126cae07f006685349851340b29" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::SetSelection</definition>
        <argsstring>(long from, long to)</argsstring>
        <name>SetSelection</name>
        <reimplements refid="classwx_text_entry_1af7e298bc2a34bd646328f53efab766aa">SetSelection</reimplements>
        <param>
          <type>long</type>
          <declname>from</declname>
        </param>
        <param>
          <type>long</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>Selects the text between the two positions, in the combo control text field. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The first position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>The second position. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="783"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a738267959dcf2b73430bd310173ebedb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::SetText</definition>
        <argsstring>(const wxString &amp;value)</argsstring>
        <name>SetText</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the text for the text field without affecting the popup. </para>        </briefdescription>
        <detaileddescription>
<para>Thus, unlike <ref refid="classwx_combo_ctrl_1a4202edbc9fc83623c658a83fe4c6d7be" kindref="member">SetValue()</ref>, it works equally well with combo control using <computeroutput>wxCB_READONLY</computeroutput> style. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="790"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a00188332f7b6200c98f5f65966d5b151" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::SetTextCtrlStyle</definition>
        <argsstring>(int style)</argsstring>
        <name>SetTextCtrlStyle</name>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Set a custom window style for the embedded <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Usually you will need to use this during two-step creation, just before <ref refid="classwx_combo_ctrl_1aab2390bd7650a56e3d2c243140d28f98" kindref="member">Create()</ref>. For example:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_combo_ctrl" kindref="compound" tooltip="A combo control is a generic combobox that allows totally custom popup.">wxComboCtrl</ref>*<sp/>comboCtrl<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classwx_combo_ctrl_1af31b505e73047689dc4d2948eaa13a3d" kindref="member" tooltip="Default constructor.">wxComboCtrl</ref>();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let&apos;s<sp/>make<sp/>the<sp/>text<sp/>right-aligned</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comboCtrl-&gt;<ref refid="classwx_combo_ctrl_1a00188332f7b6200c98f5f65966d5b151" kindref="member" tooltip="Set a custom window style for the embedded wxTextCtrl.">SetTextCtrlStyle</ref>(<ref refid="textctrl_8h_1aceaa4641c1007bda9d7768137a9f9644" kindref="member">wxTE_RIGHT</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comboCtrl-&gt;<ref refid="classwx_combo_ctrl_1aab2390bd7650a56e3d2c243140d28f98" kindref="member" tooltip="Creates the combo control for two-step construction.">Create</ref>(parent,<sp/><ref refid="defs_8h_1ac66d0a09761e7d86b2ac0b2e0c6a8cbba1f375b01ea03a713bbb7e32a36a2589c" kindref="member" tooltip="Any id: means that we don&amp;#39;t care about the id, whether when installing an event handler or when creat...">wxID_ANY</ref>,<sp/><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member" tooltip="The global wxString instance of an empty string.">wxEmptyString</ref>);</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="806"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1ae38353a81954d02af302ba103e984cb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::SetTextIndent</definition>
        <argsstring>(int indent)</argsstring>
        <name>SetTextIndent</name>
        <param>
          <type>int</type>
          <declname>indent</declname>
        </param>
        <briefdescription>
<para>This will set the space in pixels between left edge of the control and the text, regardless whether control is read-only or not. </para>        </briefdescription>
        <detaileddescription>
<para>Value -1 can be given to indicate platform default.</para><para><xrefsect id="deprecated_1_deprecated000008"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="classwx_combo_ctrl_1ae2b983f401d92ccc38f2bed47fb4d76b" kindref="member">SetMargins()</ref> instead. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="815"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a4202edbc9fc83623c658a83fe4c6d7be" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::SetValue</definition>
        <argsstring>(const wxString &amp;value)</argsstring>
        <name>SetValue</name>
        <reimplements refid="classwx_text_entry_1a90f876b2dd83ba5c97ba0c193b386e9f">SetValue</reimplements>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the text for the combo control text field. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>For a combo control with <computeroutput>wxCB_READONLY</computeroutput> style the string must be accepted by the popup (for instance, exist in the dropdown list), otherwise the call to <ref refid="classwx_combo_ctrl_1a4202edbc9fc83623c658a83fe4c6d7be" kindref="member">SetValue()</ref> is ignored. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="824"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1ae87a04c471bfcac5ab0d370ac9edddbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::ShowPopup</definition>
        <argsstring>()</argsstring>
        <name>ShowPopup</name>
        <briefdescription>
<para>Show the popup. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000009"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="classwx_combo_ctrl_1afda0208f5c2a31d504e230c36546fe8d" kindref="member">Popup()</ref> instead. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="831"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a9da1ff37488b9c33ed02ba2064ad6d85" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::Undo</definition>
        <argsstring>()</argsstring>
        <name>Undo</name>
        <reimplements refid="classwx_text_entry_1ad3784d539a2554c6eec76c80aa6d97de">Undo</reimplements>
        <briefdescription>
<para>Undoes the last edit in the text field. </para>        </briefdescription>
        <detaileddescription>
<para>Windows only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="836"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a5b8f90d12149fe7e3f1e38e0dd0b839a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::UseAltPopupWindow</definition>
        <argsstring>(bool enable=true)</argsstring>
        <name>UseAltPopupWindow</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Enable or disable usage of an alternative popup window, which guarantees ability to focus the popup control, and allows common native controls to function normally. </para>        </briefdescription>
        <detaileddescription>
<para>This alternative popup window is usually a <ref refid="classwx_dialog" kindref="compound">wxDialog</ref>, and as such, when it is shown, its parent top-level window will appear as if the focus has been lost from it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="845"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_combo_ctrl_1a10be4d02e6e2bb6a3708aa19ebf45b97" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int wxComboCtrl::GetFeatures</definition>
        <argsstring>()</argsstring>
        <name>GetFeatures</name>
        <briefdescription>
<para>Returns features supported by <ref refid="classwx_combo_ctrl" kindref="compound">wxComboCtrl</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>If needed feature is missing, you need to instead use wxGenericComboCtrl, which however may lack a native look and feel (but otherwise sports identical API).</para><para><simplesect kind="return"><para>Value returned is a combination of the flags defined in <ref refid="structwx_combo_ctrl_features" kindref="compound">wxComboCtrlFeatures</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="492"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classwx_combo_ctrl_1aa398643bec7f53aa8442b10c6b6782de" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxComboCtrl::AnimateShow</definition>
        <argsstring>(const wxRect &amp;rect, int flags)</argsstring>
        <name>AnimateShow</name>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>This member function is not normally called in application code. </para>        </briefdescription>
        <detaileddescription>
<para>Instead, it can be implemented in a derived class to create a custom popup animation.</para><para>The parameters are the same as those for <ref refid="classwx_combo_ctrl_1a1c7a534296a4668e49737f599d54aa14" kindref="member">DoShowPopup()</ref>.</para><para><simplesect kind="return"><para>true if animation finishes before the function returns, false otherwise. In the latter case you need to manually call <ref refid="classwx_combo_ctrl_1a1c7a534296a4668e49737f599d54aa14" kindref="member">DoShowPopup()</ref> after the animation ends. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="860"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a0df7ddd8eb5454a2d3f72eb805848fa9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::DoSetPopupControl</definition>
        <argsstring>(wxComboPopup *popup)</argsstring>
        <name>DoSetPopupControl</name>
        <param>
          <type><ref refid="classwx_combo_popup" kindref="compound">wxComboPopup</ref> *</type>
          <declname>popup</declname>
        </param>
        <briefdescription>
<para>This member function is not normally called in application code. </para>        </briefdescription>
        <detaileddescription>
<para>Instead, it can be implemented in a derived class to return default <ref refid="classwx_combo_popup" kindref="compound">wxComboPopup</ref>, in case <emphasis>popup</emphasis> is NULL.</para><para><simplesect kind="note"><para>If you have implemented <ref refid="classwx_combo_ctrl_1a3ce1fce108f3a84216fa9983d6b89a37" kindref="member">OnButtonClick()</ref> to do something else than show the popup, then <ref refid="classwx_combo_ctrl_1a0df7ddd8eb5454a2d3f72eb805848fa9" kindref="member">DoSetPopupControl()</ref> must always set <emphasis>popup</emphasis> to NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="871"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a1c7a534296a4668e49737f599d54aa14" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::DoShowPopup</definition>
        <argsstring>(const wxRect &amp;rect, int flags)</argsstring>
        <name>DoShowPopup</name>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>This member function is not normally called in application code. </para>        </briefdescription>
        <detaileddescription>
<para>Instead, it must be called in a derived class to make sure popup is properly shown after a popup animation has finished (but only if <ref refid="classwx_combo_ctrl_1aa398643bec7f53aa8442b10c6b6782de" kindref="member">AnimateShow()</ref> did not finish the animation within its function scope).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rect</parametername>
</parameternamelist>
<parameterdescription>
<para>Position to show the popup window at, in screen coordinates. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Combination of any of the following: <table rows="2" cols="2"><row>
<entry thead="no"><para>wxComboCtrl::ShowAbove </para></entry><entry thead="no"><para>Popup is shown above the control instead of below. </para></entry></row>
<row>
<entry thead="no"><para>wxComboCtrl::CanDeferShow </para></entry><entry thead="no"><para>Showing the popup can be deferred to happen sometime after <ref refid="classwx_combo_ctrl_1ae87a04c471bfcac5ab0d370ac9edddbc" kindref="member">ShowPopup()</ref> has finished. In this case, <ref refid="classwx_combo_ctrl_1aa398643bec7f53aa8442b10c6b6782de" kindref="member">AnimateShow()</ref> must return false. </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="892"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A combo control is a generic combobox that allows totally custom popup. </para>    </briefdescription>
    <detaileddescription>
<para>In addition it has other customization features. For instance, position and size of the dropdown button can be changed.</para><sect1 id="classwx_combo_ctrl_1comboctrl_custompopup">
<title>Setting Custom Popup for wxComboCtrl</title>
<para><ref refid="classwx_combo_ctrl" kindref="compound">wxComboCtrl</ref> needs to be told somehow which control to use and this is done by <ref refid="classwx_combo_ctrl_1afb0b22cb38395040699eebcb679fd86a" kindref="member">SetPopupControl()</ref>. However, we need something more than just a <ref refid="classwx_control" kindref="compound">wxControl</ref> in this method as, for example, we need to call SetStringValue(&quot;initial text value&quot;) and <ref refid="classwx_control" kindref="compound">wxControl</ref> doesn&apos;t have such method. So we also need a <ref refid="classwx_combo_popup" kindref="compound">wxComboPopup</ref> which is an interface which must be implemented by a control to be usable as a popup.</para><para>We couldn&apos;t derive <ref refid="classwx_combo_popup" kindref="compound">wxComboPopup</ref> from <ref refid="classwx_control" kindref="compound">wxControl</ref> as this would make it impossible to have a class deriving from a wxWidgets control and from it, so instead it is just a mix-in.</para><para>Here&apos;s a minimal sample of <ref refid="classwx_list_view" kindref="compound">wxListView</ref> popup:</para><para><programlisting><codeline><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;<ref refid="combo_8h" kindref="compound">wx/combo.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;<ref refid="interface_2wx_2listctrl_8h" kindref="compound">wx/listctrl.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">wxListViewComboPopup<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classwx_list_view" kindref="compound" tooltip="This class currently simply presents a simpler to use interface for the wxListCtrl -- it can be thoug...">wxListView</ref>,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classwx_combo_popup" kindref="compound" tooltip="In order to use a custom popup with wxComboCtrl, an interface class must be derived from wxComboPopup...">wxComboPopup</ref></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>member<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Init()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_value<sp/>=<sp/>-1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>popup<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classwx_combo_ctrl_1aab2390bd7650a56e3d2c243140d28f98" kindref="member" tooltip="Creates the combo control for two-step construction.">Create</ref>(<ref refid="classwx_window" kindref="compound" tooltip="wxWindow is the base class for all windows and represents any visible object on screen.">wxWindow</ref>*<sp/>parent)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classwx_combo_ctrl_1aab2390bd7650a56e3d2c243140d28f98" kindref="member" tooltip="Creates the combo control for two-step construction.">wxListView::Create</ref>(parent,1,<ref refid="classwx_point" kindref="compound" tooltip="A wxPoint is a useful data structure for graphics operations.">wxPoint</ref>(0,0),<ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member" tooltip="Global instance of a wxSize object initialized to (-1,-1).">wxDefaultSize</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>pointer<sp/>to<sp/>the<sp/>created<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classwx_window" kindref="compound" tooltip="wxWindow is the base class for all windows and represents any visible object on screen.">wxWindow</ref><sp/>*GetControl()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Translate<sp/>string<sp/>into<sp/>a<sp/>list<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetStringValue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classwx_string" kindref="compound" tooltip="The wxString class has been completely rewritten for wxWidgets 3.0 and this change was actually the m...">wxString</ref>&amp;<sp/>s)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/><ref refid="classwx_list_ctrl_1ad8d64b6d1b4af0df31e61ae9521388d4" kindref="member" tooltip="Find an item whose label matches this string, starting from start or the beginning if start is -1...">wxListView::FindItem</ref>(-1,s);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>n<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>n<sp/>&lt;<sp/><ref refid="classwx_list_ctrl_1ac68cf16b035f4dca7d64931de82cdffa" kindref="member" tooltip="Returns the number of items in the list control.">wxListView::GetItemCount</ref>()<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_list_view_1a02966936da5643b2d80a857676482b2b" kindref="member" tooltip="Selects or unselects the given item.">wxListView::Select</ref>(n);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>list<sp/>selection<sp/>as<sp/>a<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classwx_string" kindref="compound" tooltip="The wxString class has been completely rewritten for wxWidgets 3.0 and this change was actually the m...">wxString</ref><sp/>GetStringValue()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_value<sp/>&gt;=<sp/>0<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classwx_list_ctrl_1ab0a596e1ad4714b6d5ee7b3180c59680" kindref="member" tooltip="Gets the item text for this item.">wxListView::GetItemText</ref>(m_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member" tooltip="The global wxString instance of an empty string.">wxEmptyString</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>mouse<sp/>hot-tracking<sp/>(which<sp/>is<sp/>typical<sp/>in<sp/>list<sp/>popups)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnMouseMove(<ref refid="classwx_mouse_event" kindref="compound" tooltip="This event class contains information about the events generated by the mouse: they include mouse but...">wxMouseEvent</ref>&amp;<sp/>event)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Move<sp/>selection<sp/>to<sp/>cursor</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>mouse<sp/>left<sp/>up,<sp/>set<sp/>the<sp/>value<sp/>and<sp/>close<sp/>the<sp/>popup</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnMouseClick(<ref refid="classwx_mouse_event" kindref="compound" tooltip="This event class contains information about the events generated by the mouse: they include mouse but...">wxMouseEvent</ref>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_value<sp/>=<sp/><ref refid="classwx_list_view_1a5104e465fc4c31782179c2a7f8a18a4d" kindref="member" tooltip="Returns the first selected item in a (presumably) multiple selection control.">wxListView::GetFirstSelected</ref>();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Send<sp/>event<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_combo_ctrl_1a56867b1c18641c21fcd518ce43efbf99" kindref="member" tooltip="Dismisses the popup window.">Dismiss</ref>();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_value;<sp/></highlight><highlight class="comment">//<sp/>current<sp/>item<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__funcmacro__events_1gab6eca03fad44ec10b75d3cb82e9219e3" kindref="member" tooltip="Use this macro inside a class declaration to declare a static event table for that class...">wxDECLARE_EVENT_TABLE</ref>();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__funcmacro__events_1ga736930efaab4d7e445e9e8e520c7b74d" kindref="member" tooltip="Use this macro in a source file to start listing static event handlers for a specific class...">wxBEGIN_EVENT_TABLE</ref>(wxListViewComboPopup,<sp/><ref refid="classwx_list_view" kindref="compound" tooltip="This class currently simply presents a simpler to use interface for the wxListCtrl -- it can be thoug...">wxListView</ref>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EVT_MOTION(wxListViewComboPopup::OnMouseMove)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EVT_LEFT_UP(wxListViewComboPopup::OnMouseClick)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__funcmacro__events_1ga383fad2a46e1d6c220fbe03ecfbc9c17" kindref="member" tooltip="Use this macro in a source file to end listing static event handlers for a specific class...">wxEND_EVENT_TABLE</ref>()</highlight></codeline>
</programlisting></para><para>Here&apos;s how you would create and populate it in a dialog constructor:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwx_combo_ctrl" kindref="compound" tooltip="A combo control is a generic combobox that allows totally custom popup.">wxComboCtrl</ref>*<sp/>comboCtrl<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classwx_combo_ctrl_1af31b505e73047689dc4d2948eaa13a3d" kindref="member" tooltip="Default constructor.">wxComboCtrl</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="defs_8h_1ac66d0a09761e7d86b2ac0b2e0c6a8cbba1f375b01ea03a713bbb7e32a36a2589c" kindref="member" tooltip="Any id: means that we don&amp;#39;t care about the id, whether when installing an event handler or when creat...">wxID_ANY</ref>,<sp/><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member" tooltip="The global wxString instance of an empty string.">wxEmptyString</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>wxListViewComboPopup*<sp/>popupCtrl<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxListViewComboPopup();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>important<sp/>to<sp/>call<sp/>SetPopupControl()<sp/>as<sp/>soon<sp/>as<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>comboCtrl-&gt;<ref refid="classwx_combo_ctrl_1afb0b22cb38395040699eebcb679fd86a" kindref="member" tooltip="Set popup interface class derived from wxComboPopup.">SetPopupControl</ref>(popupCtrl);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Populate<sp/>using<sp/>wxListView<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>popupCtrl-&gt;InsertItem(popupCtrl-&gt;GetItemCount(),<sp/></highlight><highlight class="stringliteral">&quot;First<sp/>Item&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>popupCtrl-&gt;InsertItem(popupCtrl-&gt;GetItemCount(),<sp/></highlight><highlight class="stringliteral">&quot;Second<sp/>Item&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>popupCtrl-&gt;InsertItem(popupCtrl-&gt;GetItemCount(),<sp/></highlight><highlight class="stringliteral">&quot;Third<sp/>Item&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para><para><heading level="2">Styles</heading>
</para><para>This class supports the following styles: <itemizedlist>
<listitem><para>wxCB_READONLY: Text will not be editable. </para></listitem>
<listitem><para>wxCB_SORT: Sorts the entries in the list alphabetically. </para></listitem>
<listitem><para>wxTE_PROCESS_ENTER: The control will generate the event <computeroutput>wxEVT_COMMAND_TEXT_ENTER</computeroutput> (otherwise pressing Enter key is either processed internally by the control or used for navigation between dialog controls). Windows only. </para></listitem>
<listitem><para>wxCC_SPECIAL_DCLICK: Double-clicking triggers a call to popup&apos;s OnComboDoubleClick. Actual behaviour is defined by a derived class. For instance, <ref refid="classwx_owner_drawn_combo_box" kindref="compound">wxOwnerDrawnComboBox</ref> will cycle an item. This style only applies if wxCB_READONLY is used as well. </para></listitem>
<listitem><para>wxCC_STD_BUTTON: Drop button will behave more like a standard push button. </para></listitem>
</itemizedlist>
<heading level="2">Events emitted by this class</heading>
</para><para>The following event handler macros redirect the events to member function handlers &apos;<bold>func</bold>&apos; with prototypes like: void<nonbreakablespace/>handlerFuncName(<ref refid="classwx_command_event" kindref="compound">wxCommandEvent</ref>&amp;<nonbreakablespace/>event)Event macros for events emitted by this class: <itemizedlist>
<listitem><para>EVT_TEXT(id,  func): Process a <computeroutput>wxEVT_COMMAND_TEXT_UPDATED</computeroutput> event, when the text changes. </para></listitem>
<listitem><para>EVT_TEXT_ENTER(id,  func): Process a <computeroutput>wxEVT_COMMAND_TEXT_ENTER</computeroutput> event, when RETURN is pressed in the combo control. </para></listitem>
<listitem><para>EVT_COMBOBOX_DROPDOWN(id,  func): Process a <computeroutput>wxEVT_COMMAND_COMBOBOX_DROPDOWN</computeroutput> event, which is generated when the popup window is shown (drops down). </para></listitem>
<listitem><para>EVT_COMBOBOX_CLOSEUP(id,  func): Process a <computeroutput>wxEVT_COMMAND_COMBOBOX_CLOSEUP</computeroutput> event, which is generated when the popup window of the combo control disappears (closes up). You should avoid adding or deleting items in this event. </para></listitem>
</itemizedlist>
<heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__ctrl" kindref="compound">Controls</ref> <htmlonly> &lt;br&gt;&lt;div&gt;&lt;span class=&apos;appearance&apos;&gt;Appearance:&lt;/span&gt;&lt;br&gt;&lt;table class=&apos;appearance&apos;&gt;&lt;tr&gt;&lt;td&gt;&lt;img src=&apos;wxmsw/comboctrl.png&apos; alt=&apos;wxMSW appearance&apos; class=&apos;appearance&apos;/&gt;&lt;/td&gt;&lt;td&gt;&lt;img src=&apos;wxgtk/comboctrl.png&apos; alt=&apos;wxGTK appearance&apos; class=&apos;appearance&apos;/&gt;&lt;/td&gt;&lt;td&gt;&lt;img src=&apos;wxmac/comboctrl.png&apos; alt=&apos;wxMac appearance&apos; class=&apos;appearance&apos;/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;wxMSW appearance&lt;/td&gt;&lt;td&gt;wxGTK appearance&lt;/td&gt;&lt;td&gt;wxMac appearance&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt; </htmlonly></para><para><simplesect kind="see"><para><ref refid="classwx_combo_box" kindref="compound">wxComboBox</ref>, <ref refid="classwx_choice" kindref="compound">wxChoice</ref>, <ref refid="classwx_owner_drawn_combo_box" kindref="compound">wxOwnerDrawnComboBox</ref>, <ref refid="classwx_combo_popup" kindref="compound">wxComboPopup</ref>, <ref refid="classwx_command_event" kindref="compound">wxCommandEvent</ref> </para></simplesect>
</para></sect1>
    </detaileddescription>
    <inheritancegraph>
      <node id="5020">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="5019">
        <label>wxEvtHandler</label>
        <link refid="classwx_evt_handler"/>
        <childnode refid="5020" relation="public-inheritance">
        </childnode>
        <childnode refid="5021" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5021">
        <label>wxTrackable</label>
        <link refid="classwx_trackable"/>
      </node>
      <node id="5022">
        <label>wxTextEntry</label>
        <link refid="classwx_text_entry"/>
      </node>
      <node id="5017">
        <label>wxControl</label>
        <link refid="classwx_control"/>
        <childnode refid="5018" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5018">
        <label>wxWindow</label>
        <link refid="classwx_window"/>
        <childnode refid="5019" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5016">
        <label>wxComboCtrl</label>
        <link refid="classwx_combo_ctrl"/>
        <childnode refid="5017" relation="public-inheritance">
        </childnode>
        <childnode refid="5022" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5023">
        <label>wxOwnerDrawnComboBox</label>
        <link refid="classwx_owner_drawn_combo_box"/>
        <childnode refid="5016" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5024">
        <label>wxRichTextStyleComboCtrl</label>
        <link refid="classwx_rich_text_style_combo_ctrl"/>
        <childnode refid="5016" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5029">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="5030" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="5028">
        <label>wxEvtHandler</label>
        <link refid="classwx_evt_handler"/>
        <childnode refid="5029" relation="public-inheritance">
        </childnode>
        <childnode refid="5031" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5031">
        <label>wxTrackable</label>
        <link refid="classwx_trackable"/>
      </node>
      <node id="5032">
        <label>wxTextEntry</label>
        <link refid="classwx_text_entry"/>
      </node>
      <node id="5026">
        <label>wxControl</label>
        <link refid="classwx_control"/>
        <childnode refid="5027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5027">
        <label>wxWindow</label>
        <link refid="classwx_window"/>
        <childnode refid="5028" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5025">
        <label>wxComboCtrl</label>
        <link refid="classwx_combo_ctrl"/>
        <childnode refid="5026" relation="public-inheritance">
        </childnode>
        <childnode refid="5032" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5030">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" line="356" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/combo.h" bodystart="354" bodyend="893"/>
    <listofallmembers>
      <member refid="classwx_window_1a3afbd49b1ea2f8275e3600dcac102923" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>AcceptsFocus</name></member>
      <member refid="classwx_window_1a2370bdd3ab08e7ef3c7555c6aa8301b8" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>AcceptsFocusFromKeyboard</name></member>
      <member refid="classwx_window_1ac7ed96693517630f4d2e99265b76d1a9" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>AcceptsFocusRecursively</name></member>
      <member refid="classwx_window_1abf60159278059a5bb397eb8647227bb3" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>AddChild</name></member>
      <member refid="classwx_evt_handler_1a7dc3c701781f4044372049de5004137e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>AddFilter</name></member>
      <member refid="classwx_window_1a774b5b5548a6258727b5e2099e63ae9a" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>AddPendingEvent</name></member>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxComboCtrl</scope><name>AllocExclusive</name></member>
      <member refid="classwx_window_1aae29552806a328c6a55ef8f07647f5ba" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>AlwaysShowScrollbars</name></member>
      <member refid="classwx_combo_ctrl_1aa398643bec7f53aa8442b10c6b6782de" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>AnimateShow</name></member>
      <member refid="classwx_text_entry_1af80b5a51906ca9c65fa6cdaa9640768b" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>AppendText</name></member>
      <member refid="classwx_text_entry_1ad911d59d6b381a20b0a6c34df2ac1d9f" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>AutoComplete</name></member>
      <member refid="classwx_text_entry_1ae8ca40185ba6bbaacb4715039d73342b" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>AutoComplete</name></member>
      <member refid="classwx_text_entry_1ab02338d68d51f103551454298578851c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>AutoCompleteDirectories</name></member>
      <member refid="classwx_text_entry_1ad40d7e35d8bb9c9ab8e4ffa1b801a5d5" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>AutoCompleteFileNames</name></member>
      <member refid="classwx_evt_handler_1a84b1e446053bda8f76f13336839e8b64" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Bind</name></member>
      <member refid="classwx_evt_handler_1a95520e770e157ef93d1d60e03db66e5c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Bind</name></member>
      <member refid="classwx_window_1a100905524d330cfd9620fd726e378066" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>CacheBestSize</name></member>
      <member refid="classwx_text_entry_1a5cc88c6714d37e089404d9d60fe512b7" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>CanCopy</name></member>
      <member refid="classwx_text_entry_1a9cdfb37ccaeda4c11ca1062fea0d476d" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>CanCut</name></member>
      <member refid="classwx_text_entry_1a0c000d10a56732e6f0835a2c9339c0fc" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>CanPaste</name></member>
      <member refid="classwx_text_entry_1ac6024b11e35d0dab403c22c18a937ad4" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>CanRedo</name></member>
      <member refid="classwx_window_1a179f9a770f8c835f279923d2cbe5d766" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>CanScroll</name></member>
      <member refid="classwx_window_1a64f7f6fb75bf4b7281e1d33542d523c7" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>CanSetTransparent</name></member>
      <member refid="classwx_text_entry_1a58757a503d496a06d0c744949b2e0a33" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>CanUndo</name></member>
      <member refid="classwx_window_1a5c72c6260a73ef77bb0b1f7ec85fcfef" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>CaptureMouse</name></member>
      <member refid="classwx_window_1a06c0ecb262995b40083bfb446a6cff99" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Center</name></member>
      <member refid="classwx_window_1a2dc4e0a85d33fc55cc9650eaea1da0a4" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>CenterOnParent</name></member>
      <member refid="classwx_window_1a4a1819eeee3f2143cdde4f329ffde787" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Centre</name></member>
      <member refid="classwx_window_1ab8e9b91b0e2db344fd71259616dfd433" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>CentreOnParent</name></member>
      <member refid="classwx_text_entry_1a8c52ab71f51c8f80556c2c8e763cbca1" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>ChangeValue</name></member>
      <member refid="classwx_text_entry_1a98b8e3fab8a5ac9944c2cefbb09ab3a7" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Clear</name></member>
      <member refid="classwx_window_1a61e833684ee5c89775e91e88be1a9a52" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>ClearBackground</name></member>
      <member refid="classwx_window_1a29eac611e5f6b47db82bb4dd5450ba3d" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ClientToScreen</name></member>
      <member refid="classwx_window_1a7de852b144210b93b690189e99dbe1df" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ClientToScreen</name></member>
      <member refid="classwx_window_1a693fffbbb7ad5f36a5f442703396dafa" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>ClientToWindowSize</name></member>
      <member refid="classwx_object_1a1d39f1d3650fe0982c9a1abe7f9fe7b7" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>CloneRefData</name></member>
      <member refid="classwx_window_1a3e44f4a494fc9ef4346c4fba70c8de0c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Close</name></member>
      <member refid="classwx_control_1a8cd7ac81debaf506d6d146528c3d9a82" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Command</name></member>
      <member refid="classwx_evt_handler_1a78719e8b82c9f9c6e4056b3449df1943" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Connect</name></member>
      <member refid="classwx_evt_handler_1a1e8b5fc4c7e7f6d32d40bc00d4108ba4" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Connect</name></member>
      <member refid="classwx_evt_handler_1aa290d9b67348e74c1da8497955a4e35c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Connect</name></member>
      <member refid="classwx_window_1acb6787b6c3c314f9e015658a89ad0265" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ConvertDialogToPixels</name></member>
      <member refid="classwx_window_1a3daf76b93f648c68224e6ccd8095066b" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ConvertDialogToPixels</name></member>
      <member refid="classwx_window_1a449aac6a24f1d14b1a82b58003447dfe" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ConvertPixelsToDialog</name></member>
      <member refid="classwx_window_1afd955ce9d25ec26a115bfb794b1c7d8b" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ConvertPixelsToDialog</name></member>
      <member refid="classwx_combo_ctrl_1a6feecca8942afd49ac29ff62936299c4" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Copy</name></member>
      <member refid="classwx_combo_ctrl_1aab2390bd7650a56e3d2c243140d28f98" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Create</name></member>
      <member refid="classwx_control_1abe23789c94c86907463a0e8434be822a" prot="public" virt="non-virtual" ambiguityscope="wxControl::"><scope>wxComboCtrl</scope><name>Create</name></member>
      <member refid="classwx_window_1a95b7ca8faa033f5ab35458887c07bf38" prot="public" virt="non-virtual" ambiguityscope="wxWindow::"><scope>wxComboCtrl</scope><name>Create</name></member>
      <member refid="classwx_object_1a95c6a5e4e1e03ff23c7b9efe4cff0c1a" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>CreateRefData</name></member>
      <member refid="classwx_combo_ctrl_1a201dce519059e37ad35901f7603afa56" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Cut</name></member>
      <member refid="classwx_evt_handler_1a6e7f9cf4ebd0623c1d94979855d096f8" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>DeletePendingEvents</name></member>
      <member refid="classwx_window_1a6bf0c5be864544d9ce0560087667b7fc" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Destroy</name></member>
      <member refid="classwx_window_1aff47b32c8d42d515ea0bb6a6c2fea917" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>DestroyChildren</name></member>
      <member refid="classwx_window_1a26d7329a9a753fa0445501f01f66c41e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Disable</name></member>
      <member refid="classwx_evt_handler_1a13061cf0ed01ac10a804ac057ef4bdbc" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Disconnect</name></member>
      <member refid="classwx_evt_handler_1a2f171e19444b9c4034c5e11f24fa9c91" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Disconnect</name></member>
      <member refid="classwx_evt_handler_1a16a6f823853e4b74b43dd9a2cf3abee6" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Disconnect</name></member>
      <member refid="classwx_combo_ctrl_1a56867b1c18641c21fcd518ce43efbf99" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Dismiss</name></member>
      <member refid="classwx_window_1a2d10b472a4962d1c852c83d55252c44b" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>DoCentre</name></member>
      <member refid="classwx_window_1a01e7604ab0f0b2b1a8e322a630a4669e" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>DoGetBestSize</name></member>
      <member refid="classwx_combo_ctrl_1a0df7ddd8eb5454a2d3f72eb805848fa9" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>DoSetPopupControl</name></member>
      <member refid="classwx_combo_ctrl_1a1c7a534296a4668e49737f599d54aa14" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>DoShowPopup</name></member>
      <member refid="classwx_window_1ae8a84a80645e99f4d24a22e5c386f626" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>DoUpdateWindowUI</name></member>
      <member refid="classwx_window_1a7e7015bc61bd79b6821d2dccaecf9eda" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>DragAcceptFiles</name></member>
      <member refid="classwx_control_1a0bb834cae2a8986aceddb89f84ef4ed1" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Ellipsize</name></member>
      <member refid="classwx_window_1a4e933aa891f42fbb3b87438057c573af" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Enable</name></member>
      <member refid="classwx_combo_ctrl_1ae90d978c054d1ce215758c6073c43d31" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>EnablePopupAnimation</name></member>
      <member refid="classwx_control_1abdbd9c0684856546671e759dd95b23d4" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>EscapeMnemonics</name></member>
      <member refid="classwx_window_1a777258379a3eef1b0530f12db6b77cab" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>FindFocus</name></member>
      <member refid="classwx_window_1a3468ef382c612b5f8e91c7c18d00a69f" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>FindWindow</name></member>
      <member refid="classwx_window_1ab2dad735acc2121b964ee1d51836cffa" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>FindWindow</name></member>
      <member refid="classwx_window_1a101201b12ccd5fba49fa06ed19b5c6fb" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>FindWindowById</name></member>
      <member refid="classwx_window_1ab8eb148fffae109e0fac86e88d569670" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>FindWindowByLabel</name></member>
      <member refid="classwx_window_1adbe4eea02f615313c12a2c00557a44c3" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>FindWindowByName</name></member>
      <member refid="classwx_window_1a2bf38a6cbd1f82fb46f274396f482994" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Fit</name></member>
      <member refid="classwx_window_1a55aca401aab29d59f7cc53f89ba2e38d" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>FitInside</name></member>
      <member refid="classwx_window_1a15c678314cfc1d807196bc298b713ed3" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Freeze</name></member>
      <member refid="classwx_window_1aefc02d7275010ebb8d5b66569e7287c4" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetAcceleratorTable</name></member>
      <member refid="classwx_window_1ae0469b554e9c501b356b3ed4b6d8a3af" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetAccessible</name></member>
      <member refid="classwx_window_1ad7a9d7fca325112fae493a00d253b3be" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetAutoLayout</name></member>
      <member refid="classwx_window_1a3006d98a4145b7064c1f08e39487d257" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetBackgroundColour</name></member>
      <member refid="classwx_window_1a59047d52b88f2422bbcf01bbecdc4b7b" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetBackgroundStyle</name></member>
      <member refid="classwx_window_1a7e64b9380374e5681f146e9e319e35e3" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetBestSize</name></member>
      <member refid="classwx_window_1a0180343fa395e0c8e6de4022684ca5d6" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetBestVirtualSize</name></member>
      <member refid="classwx_combo_ctrl_1a43a36047283978383d87c395445ceede" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetBitmapDisabled</name></member>
      <member refid="classwx_combo_ctrl_1a844f2666c1e65f3fc74d2f2b1ebc4a28" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetBitmapHover</name></member>
      <member refid="classwx_combo_ctrl_1ad1598651e604d3d602c1c6918f897e39" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetBitmapNormal</name></member>
      <member refid="classwx_combo_ctrl_1aafd2664dc7e52b2cc19bb895d8f885a2" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetBitmapPressed</name></member>
      <member refid="classwx_window_1ad95a95e683e57ac6365745b737571582" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetBorder</name></member>
      <member refid="classwx_window_1aa53c8d1b5af17a8fbbe8845210e2032b" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetBorder</name></member>
      <member refid="classwx_combo_ctrl_1ab6e1596a4b709465e0b07362a3c7dad2" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetButtonSize</name></member>
      <member refid="classwx_window_1a483d3f73925bd38c3964dad058672f0a" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetCapture</name></member>
      <member refid="classwx_window_1a83ed7c9d9252b912eebc753d6132245b" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetCaret</name></member>
      <member refid="classwx_window_1a304b4446de399b240a3fa4aa83a2e468" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetCharHeight</name></member>
      <member refid="classwx_window_1aef2745df13435e913027107cab2a6286" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetCharWidth</name></member>
      <member refid="classwx_window_1ad500085ad0511879b5e018706c91a494" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetChildren</name></member>
      <member refid="classwx_window_1a666cfe7cc8eda6fcecfd39c67c50f609" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetChildren</name></member>
      <member refid="classwx_window_1a170d85e4aa0cbacbfcdd0728120e1417" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetClassDefaultAttributes</name></member>
      <member refid="classwx_object_1ab3a0c6f723cbaddb47be4e8dd98cc8e2" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetClassInfo</name></member>
      <member refid="classwx_window_1a8fd1c0fd88d63dfbf6fefb688b7fd19e" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetClientAreaOrigin</name></member>
      <member refid="classwx_evt_handler_1ad6e543115a9405962152630138645588" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetClientData</name></member>
      <member refid="classwx_evt_handler_1a2b3949eaba1f25cb48618163a7c0583b" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetClientObject</name></member>
      <member refid="classwx_window_1a3928765a8dd3c5c3d6a689179c8005e0" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetClientRect</name></member>
      <member refid="classwx_window_1ae56fc53268b815b58570f66bfc33838f" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetClientSize</name></member>
      <member refid="classwx_window_1afb9fd4a3b3310b2e11049a5113f749fa" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetClientSize</name></member>
      <member refid="classwx_window_1ac5664c7cd26848b5eebfaded2ecde7be" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetConstraints</name></member>
      <member refid="classwx_window_1ade8de9a91bb5bf49c3a52e5262a5ffea" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetContainingSizer</name></member>
      <member refid="classwx_window_1ad7ce1e9af33e6be0b608813eff2d349c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetCursor</name></member>
      <member refid="classwx_combo_ctrl_1acca0f05d49a19186f5bfe3e406ed5721" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetCustomPaintWidth</name></member>
      <member refid="classwx_window_1a24e7b8f717e91f4590d148140e853dc5" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetDefaultAttributes</name></member>
      <member refid="classwx_window_1a4511e71affd926a47c5c320563ca2df5" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetDropTarget</name></member>
      <member refid="classwx_window_1a1a54fcda8d52986482e030bd54739e9f" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetEffectiveMinSize</name></member>
      <member refid="classwx_window_1a72c2454cf309f30109da3cbfe237c760" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetEventHandler</name></member>
      <member refid="classwx_evt_handler_1a533e62afcb125abf1fcc8bb53fbc2e81" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetEvtHandlerEnabled</name></member>
      <member refid="classwx_window_1a8da0e59017af368c062f11c9abe2c667" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetExtraStyle</name></member>
      <member refid="classwx_combo_ctrl_1a10be4d02e6e2bb6a3708aa19ebf45b97" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetFeatures</name></member>
      <member refid="classwx_window_1a0dcc6f6f7bda203a868ff10c413289fa" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetFont</name></member>
      <member refid="classwx_window_1acb8e9bd1c88f330bc9748255a5592964" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetForegroundColour</name></member>
      <member refid="classwx_window_1a55d3155d2d3139a84e8fb19a8900aa76" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetGrandParent</name></member>
      <member refid="classwx_window_1a185e6cd7065367b552748cb722651b27" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetHandle</name></member>
      <member refid="classwx_window_1a77f8a4bbee228ed333af2e6a06509cff" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetHelpText</name></member>
      <member refid="classwx_window_1afa448f4e01bedc4a5e3d4324929e5d5d" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetHelpTextAtPoint</name></member>
      <member refid="classwx_combo_ctrl_1ac43e88ba57753e939fc60af6ce60aae9" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetHint</name></member>
      <member refid="classwx_window_1a4633b6ad527c921598f55af5274156f0" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetId</name></member>
      <member refid="classwx_combo_ctrl_1a71260046ce8c1450d021ce183136d7a6" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetInsertionPoint</name></member>
      <member refid="classwx_control_1a0c15321992cfb77595db57cd4e4aec37" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetLabel</name></member>
      <member refid="classwx_control_1ad95895ecdd123dff35866db1d2430a76" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetLabelText</name></member>
      <member refid="classwx_control_1ae892fefe6b88168c158e11e975633665" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetLabelText</name></member>
      <member refid="classwx_combo_ctrl_1a0f89b94190f5eee5e497dc0fd8679f99" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetLastPosition</name></member>
      <member refid="classwx_window_1a0a624f5fad4a603d58ffe94b058d4dda" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetLayoutDirection</name></member>
      <member refid="classwx_combo_ctrl_1aee42bf65d60931df1e9f7a26fcfdf377" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetMargins</name></member>
      <member refid="classwx_window_1aef9b71458720452374137cd20be24b97" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetMaxClientSize</name></member>
      <member refid="classwx_window_1a5cc2082eb5ddb27f97be191bd093709e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetMaxHeight</name></member>
      <member refid="classwx_window_1a0a1672e81caf81a95eb5b48383d22065" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetMaxSize</name></member>
      <member refid="classwx_window_1a2e953a64c41131b87bdd7c513ced3687" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetMaxWidth</name></member>
      <member refid="classwx_window_1a8e88d1d38c2bf98a72d86b42cf3e35c0" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetMinClientSize</name></member>
      <member refid="classwx_window_1ae4dd9a046ff774ea3ef114caeb452681" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetMinHeight</name></member>
      <member refid="classwx_window_1a853c9a8443f996a368569a8fae551f5a" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetMinSize</name></member>
      <member refid="classwx_window_1a9f79aa07a1b82a9a738f6c1d9c17496f" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetMinWidth</name></member>
      <member refid="classwx_window_1aab1b302c4bdabd134ce8d401dbaaf990" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetName</name></member>
      <member refid="classwx_evt_handler_1a4b2f853f5c7a64432ae72f9b606698f9" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetNextHandler</name></member>
      <member refid="classwx_window_1a41608736affe2ff115d80d8f69dc832e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetNextSibling</name></member>
      <member refid="classwx_window_1a63871f881941b99b4b94328d1c4cd163" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetParent</name></member>
      <member refid="classwx_combo_ctrl_1aedb72a461632fa31ca5ea84e47fb5433" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetPopupControl</name></member>
      <member refid="classwx_window_1a9b7de6ea85ca926b668ba0682a61a93e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetPopupMenuSelectionFromUser</name></member>
      <member refid="classwx_window_1a00f5cb3cac003205317a565a33d4bb27" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetPopupMenuSelectionFromUser</name></member>
      <member refid="classwx_combo_ctrl_1ae5b1c9a0c5e6e57f4919456bc1effc7a" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetPopupWindow</name></member>
      <member refid="classwx_window_1a9f36392b289a1e567e95bee073d6533e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetPosition</name></member>
      <member refid="classwx_window_1ad9a883e20827fa717e92fc2f8bd99d6b" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetPosition</name></member>
      <member refid="classwx_evt_handler_1aad1ba7fa9ccbf12ee2d80f5f12350adb" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetPreviousHandler</name></member>
      <member refid="classwx_window_1aa4cb912eb28be31279fa1b95747c6d02" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetPrevSibling</name></member>
      <member refid="classwx_text_entry_1a60d7bdf8e8a3ace5cdae716f527d57c7" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetRange</name></member>
      <member refid="classwx_window_1ac8809904bb379c32c33c79fbe38745eb" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetRect</name></member>
      <member refid="classwx_object_1aabdb4fc957226544a8408167844e4f42" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetRefData</name></member>
      <member refid="classwx_window_1abd39ef50fbc1ef3771f695e7322e8c1d" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetScreenPosition</name></member>
      <member refid="classwx_window_1a32074a2c677ebadb1ed6e92ab172656c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetScreenPosition</name></member>
      <member refid="classwx_window_1a5c0e45fac07ac4cf29eefa108337a110" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetScreenRect</name></member>
      <member refid="classwx_window_1a3e23d10c17943fd873d0acb472db0caa" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetScrollPos</name></member>
      <member refid="classwx_window_1a067d2a38efbf2f535f717f1027003281" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetScrollRange</name></member>
      <member refid="classwx_window_1a10d24c60525a1c612cd775fc44dd1953" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetScrollThumb</name></member>
      <member refid="classwx_text_entry_1a9ca06a599c45ea3ad7690cc3aca288e3" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetSelection</name></member>
      <member refid="classwx_window_1a124c12cff1e7b6e96a5e1fd3e48dca34" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetSize</name></member>
      <member refid="classwx_window_1a66e144ed8ab9a20e080ae6c69fc7015c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetSize</name></member>
      <member refid="classwx_window_1ad8284cce1a2afe57724b52a89d7fac2f" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetSizer</name></member>
      <member refid="classwx_text_entry_1a8e9a9f73eb6d2a59e52fba31b472182a" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetStringSelection</name></member>
      <member refid="classwx_combo_ctrl_1aefeb3d34a2cfa480b60b07de53863a6e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetTextCtrl</name></member>
      <member refid="classwx_window_1ac9cd7b4472d5419e518f69311914466f" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetTextExtent</name></member>
      <member refid="classwx_window_1a79e5f88a2408871663d4ab0405cd35f6" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetTextExtent</name></member>
      <member refid="classwx_combo_ctrl_1aed73e4d4c77b8e6ee98b77790dcce62c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetTextIndent</name></member>
      <member refid="classwx_combo_ctrl_1af6bddfb11881c819d9ee56f8325d4487" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetTextRect</name></member>
      <member refid="classwx_window_1a0b31a21532407cf809d73aa09f34235c" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetThemeEnabled</name></member>
      <member refid="classwx_window_1aae94155ccf8a6e4e72ad08527c89ba89" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetToolTip</name></member>
      <member refid="classwx_window_1ad1a9c53c8e7e5010874f15b8ff4a6568" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetToolTipText</name></member>
      <member refid="classwx_window_1a7e32d9a9ffd058c931db20416bc55baa" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetUpdateClientRect</name></member>
      <member refid="classwx_window_1aa982adbcebfa7bc73fbae7465132115b" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetUpdateRegion</name></member>
      <member refid="classwx_window_1a6a332586346cb9ece4a8fe058a7b88c4" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetValidator</name></member>
      <member refid="classwx_combo_ctrl_1af2c8a92d3a2b1f387432633bed397ef8" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetValue</name></member>
      <member refid="classwx_window_1a614d32c464296b7d6caabcafc18deb97" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetVirtualSize</name></member>
      <member refid="classwx_window_1a2628c6f1f4aecb790f0c86622ebf4d56" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetVirtualSize</name></member>
      <member refid="classwx_window_1afd861e553190e22a76d3d40ee5e8d628" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetWindowBorderSize</name></member>
      <member refid="classwx_window_1a994147d8294bd7d5a32c825d5692af28" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetWindowStyle</name></member>
      <member refid="classwx_window_1a0a0e81677bf2f0de5982a634e11d9a69" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetWindowStyleFlag</name></member>
      <member refid="classwx_window_1aafcccd0d5d31651484df02453c53361c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetWindowVariant</name></member>
      <member refid="classwx_window_1a89d1b079de97aac170e999692095872c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>HandleAsNavigationKey</name></member>
      <member refid="classwx_window_1a665731bbfa46a72c215b04df60216ef1" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>HandleWindowEvent</name></member>
      <member refid="classwx_window_1a9b44f61543b77317f9820e06856c5514" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>HasCapture</name></member>
      <member refid="classwx_window_1ae30b415c1ef526563161efea5b78d640" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>HasExtraStyle</name></member>
      <member refid="classwx_window_1a62ba2fb9be6422bf06bb7db5871d551f" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>HasFlag</name></member>
      <member refid="classwx_window_1a4e0abff99d64d2a595ee0ab4b415bbd6" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>HasFocus</name></member>
      <member refid="classwx_window_1abe1522483478b1f777ad8ef34fa7c44a" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>HasMultiplePages</name></member>
      <member refid="classwx_window_1a950847ecf2d488d83c14a74a3906f668" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>HasScrollbar</name></member>
      <member refid="classwx_window_1ab9cbcb6d6f4a272c2f0342e69a13b59a" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>HasTransparentBackground</name></member>
      <member refid="classwx_window_1a7ed103df04014cb3c59c6a3fb4d95328" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Hide</name></member>
      <member refid="classwx_combo_ctrl_1a73d2d6ede7bdc0db63c08f81cd09a5e7" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>HidePopup</name></member>
      <member refid="classwx_window_1a5326fbb26557a224507a1c06e5640e89" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>HideWithEffect</name></member>
      <member refid="classwx_window_1a6a026b2a16a9f050deddd44e5586762c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>HitTest</name></member>
      <member refid="classwx_window_1a44f4d85f42fac6090a42cafd40f24ff5" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>HitTest</name></member>
      <member refid="classwx_window_1a9fd5b6520c1b30eb8e82bb5d56bc24c0" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>InformFirstDirection</name></member>
      <member refid="classwx_window_1a6b1bf9e099704e7a493b8c4666b1f7f7" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>InheritAttributes</name></member>
      <member refid="classwx_window_1aa90a260c0a835a133043460b7d0024a8" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>InitDialog</name></member>
      <member refid="classwx_window_1ae1b56ca87d8590ee5e576012229a380a" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>InvalidateBestSize</name></member>
      <member refid="classwx_window_1af918e6fe8565c2d5235973cc3de84a43" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsBeingDeleted</name></member>
      <member refid="classwx_window_1a469f0881da248d37691440c9d4cc7200" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsDescendant</name></member>
      <member refid="classwx_window_1a9d1be1bbb625ebf87ad4ad47e49a0194" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>IsDoubleBuffered</name></member>
      <member refid="classwx_text_entry_1a2bb43512241850ba7cef54dee029fb86" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>IsEditable</name></member>
      <member refid="classwx_text_entry_1a84d0559b6e7720cc230ba35e74e1e158" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>IsEmpty</name></member>
      <member refid="classwx_window_1a59452a5bd42f5ea4b31d7fc4aa59644f" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsEnabled</name></member>
      <member refid="classwx_window_1af27ef77c913e32050543f3b0ca435a0d" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1a31af79f647cbec4950ce31620db51753" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1a4a23e724619ec070f7d5c45ba21529d5" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1a4da9a2d13534535aaf7b45200ee8728e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1a866c62cc23d8de88e952aad5db4d1a61" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsFrozen</name></member>
      <member refid="classwx_object_1af40d580385cf4f8112fae7713404b01e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsKindOf</name></member>
      <member refid="classwx_combo_ctrl_1a6f902c2f40b25a668b5439bb4fad4aed" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsPopupShown</name></member>
      <member refid="classwx_combo_ctrl_1ad3189613aa316f856c8f9f5b2182928b" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsPopupWindowState</name></member>
      <member refid="classwx_window_1ae9b31dec54256b68574a4bba8cca94ab" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>IsRetained</name></member>
      <member refid="classwx_object_1a80a1a3fda7b14396a9ddd3d7a46a88bd" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsSameAs</name></member>
      <member refid="classwx_window_1aeeef7eaf8c8f1ec1a54e7a68d63923d0" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>IsScrollbarAlwaysShown</name></member>
      <member refid="classwx_window_1a95af3a39aa422580dae156ed281a7e88" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>IsShown</name></member>
      <member refid="classwx_window_1a72d70fd14e3565bf782fbcd3271d8930" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>IsShownOnScreen</name></member>
      <member refid="classwx_window_1a657ef8b6055eb06df894ac5e6ddfecf8" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsThisEnabled</name></member>
      <member refid="classwx_window_1a0002826ad05f2a5661b4c8995713f37f" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>IsTopLevel</name></member>
      <member refid="classwx_window_1a7940d510c5bdc062a2b109a1022dd8c2" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>IsTransparentBackgroundSupported</name></member>
      <member refid="classwx_evt_handler_1a360fdeefcf53b62fb49fb828406bb8a6" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsUnlinked</name></member>
      <member refid="classwx_window_1a1b143c3e72bd0af533b76db4830a6113" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Layout</name></member>
      <member refid="classwx_window_1ade808784f0e64d9985e2f279b5ca8c02" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>LineDown</name></member>
      <member refid="classwx_window_1afc0816a174ceee6d36d1995c6824a273" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>LineUp</name></member>
      <member refid="classwx_window_1a124944524f36b71385dad8fddaad8ded" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Lower</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxComboCtrl</scope><name>m_refData</name></member>
      <member refid="classwx_window_1ab1cb98c8d25b9e6ff7b706b1446c3df7" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Move</name></member>
      <member refid="classwx_window_1a22a22c1e23ca05776707e7999d8047fe" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Move</name></member>
      <member refid="classwx_window_1a79e66079125e8420de269811bdb6f2b6" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>MoveAfterInTabOrder</name></member>
      <member refid="classwx_window_1af2b92f61cd9f9e2e0efe4cce307e25b1" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>MoveBeforeInTabOrder</name></member>
      <member refid="classwx_window_1a86904f6785df4af6036b33383490a805" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Navigate</name></member>
      <member refid="classwx_window_1aa58039c8fc65e19160becf510ee1d1d5" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>NavigateIn</name></member>
      <member refid="classwx_window_1a8175da594e6045635a1d1cfe775cdddb" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>NewControlId</name></member>
      <member refid="classwx_combo_ctrl_1a3ce1fce108f3a84216fa9983d6b89a37" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>OnButtonClick</name></member>
      <member refid="classwx_window_1a6b5654c0c6c6245d592c279521f7099c" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>OnInternalIdle</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>operator new</name></member>
      <member refid="classwx_window_1a61e78cb48ece3e9e989e37b475ac1e35" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>PageDown</name></member>
      <member refid="classwx_window_1aa7c2bbc480d8863d9f139c01d7abc1b1" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>PageUp</name></member>
      <member refid="classwx_combo_ctrl_1a361e1a0db2dceb5aa7749ad5a158e49c" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Paste</name></member>
      <member refid="classwx_window_1ac45c1f4cf96c70779764c14cf528790b" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>PopEventHandler</name></member>
      <member refid="classwx_combo_ctrl_1afda0208f5c2a31d504e230c36546fe8d" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Popup</name></member>
      <member refid="classwx_window_1a8f715d238cf74a845488b0e2645e98df" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>PopupMenu</name></member>
      <member refid="classwx_window_1a834bcdfd41f5e5370ebd9ea401c92900" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>PopupMenu</name></member>
      <member refid="classwx_window_1ab1943463e6661f97e072b43337c6cc09" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>PostSizeEvent</name></member>
      <member refid="classwx_window_1aa080d8dcda58bcc6ea2abd8bea592e3e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>PostSizeEventToParent</name></member>
      <member refid="classwx_window_1a5ebdbd87c28644149a07f1742996df96" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>ProcessEvent</name></member>
      <member refid="classwx_evt_handler_1ac0f5d2cb29a04c1f7f82eb6b351f79fb" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ProcessEventLocally</name></member>
      <member refid="classwx_window_1a7cbee38944dab02d753a4dba74230443" prot="protected" virt="non-virtual"><scope>wxComboCtrl</scope><name>ProcessPendingEvents</name></member>
      <member refid="classwx_window_1a9350b3a9c2e380707eaea92cedad12a5" prot="protected" virt="non-virtual"><scope>wxComboCtrl</scope><name>ProcessThreadEvent</name></member>
      <member refid="classwx_window_1a0a76891d726ad5f9a729e27e4eab2b57" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ProcessWindowEvent</name></member>
      <member refid="classwx_window_1a0a11aa4a50491d051f947e2618e52178" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ProcessWindowEventLocally</name></member>
      <member refid="classwx_window_1a398c11ab9af7956067a964f560d1978c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>PushEventHandler</name></member>
      <member refid="classwx_window_1a69e450f21b0d7013269ec1a4771f043b" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>QueueEvent</name></member>
      <member refid="classwx_window_1a54808c933f22a891c5db646f6209fa4d" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Raise</name></member>
      <member refid="classwx_text_entry_1a3aa0d89ddb8a922c941818dafe4852a4" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Redo</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Ref</name></member>
      <member refid="classwx_window_1a29dc7251746154c821b17841b9877830" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Refresh</name></member>
      <member refid="classwx_window_1ab0ae6b9898cd261c39ebeb2891aa3d67" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>RefreshRect</name></member>
      <member refid="classwx_window_1a53ca57872dac5851ea6ba55a494b899b" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>RegisterHotKey</name></member>
      <member refid="classwx_window_1adcc538819c11ecb3bd3e4e5d13c5ba7a" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ReleaseMouse</name></member>
      <member refid="classwx_combo_ctrl_1a20b2fecf36f2c5559fe1333f706681ce" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Remove</name></member>
      <member refid="classwx_window_1acee332ed4368d26e8bc3db5767c1240a" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>RemoveChild</name></member>
      <member refid="classwx_window_1aacbfe424fa527966b954229a1db96ab5" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>RemoveEventHandler</name></member>
      <member refid="classwx_evt_handler_1a67a57b759c447b121bf70a7c9804c8f2" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>RemoveFilter</name></member>
      <member refid="classwx_control_1ab7df4ca0dfde3a6409833cf470ee02e6" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>RemoveMnemonics</name></member>
      <member refid="classwx_window_1a7977b749284e65aecfed2ce146799cb9" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Reparent</name></member>
      <member refid="classwx_combo_ctrl_1ab3c5214e81069bb594fa230a77b02da8" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Replace</name></member>
      <member refid="classwx_window_1a0f9814efc50316b4c57b7ec2bf78b716" prot="protected" virt="non-virtual"><scope>wxComboCtrl</scope><name>SafelyProcessEvent</name></member>
      <member refid="classwx_window_1a65531bbc52f9508b0e31a9c08c97bd31" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ScreenToClient</name></member>
      <member refid="classwx_window_1a59d02b70a9107433836a977c4c0cd7a9" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ScreenToClient</name></member>
      <member refid="classwx_window_1aa5c5b683bd11a0d9771bd2fcdf643c64" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>ScrollLines</name></member>
      <member refid="classwx_window_1adc0ed5e1c4925223cb901ced14b8343d" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>ScrollPages</name></member>
      <member refid="classwx_window_1ab7be4956ff22da37fff2b8aaa581045c" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>ScrollWindow</name></member>
      <member refid="classwx_evt_handler_1a3c07426130d2868a5ae7fa918a251f49" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SearchEventTable</name></member>
      <member refid="classwx_text_entry_1a2f7cb6fe4a1c2d1cd79edec6391ea91e" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SelectAll</name></member>
      <member refid="classwx_window_1a7e21eb6a0819281b29134a6432d064fe" prot="protected" virt="non-virtual"><scope>wxComboCtrl</scope><name>SendDestroyEvent</name></member>
      <member refid="classwx_window_1a237f739b21937d3e8f1bff5fa82ba4c2" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SendSizeEvent</name></member>
      <member refid="classwx_window_1af7987987978fd8a93df88b29b19a6388" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SendSizeEventToParent</name></member>
      <member refid="classwx_window_1a0af5e9aa4dee6a4e92c0700f92605642" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetAcceleratorTable</name></member>
      <member refid="classwx_window_1a413220ead41f05a2ec2cfe10b3d573df" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetAccessible</name></member>
      <member refid="classwx_window_1ad369fe1db5c20f9d9edff7b5eb1f7226" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetAutoLayout</name></member>
      <member refid="classwx_window_1a37219df52734626e23401fd83b25d8a0" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetBackgroundColour</name></member>
      <member refid="classwx_window_1af14f8fd2ed2d30a9bbb5d4f9fd6594ec" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetBackgroundStyle</name></member>
      <member refid="classwx_combo_ctrl_1adc5fdec92913ba1ffdec20548106376b" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetButtonBitmaps</name></member>
      <member refid="classwx_combo_ctrl_1aa0ffd3528d66f15bfd3c0da78117ebad" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetButtonPosition</name></member>
      <member refid="classwx_window_1a2b8b2e99231a0ec1a05f5066f1b7f3d8" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetCanFocus</name></member>
      <member refid="classwx_window_1acfef5e1cada92c73e2937b84ff57ff57" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetCaret</name></member>
      <member refid="classwx_evt_handler_1a82c74f2cebfa02cb3c1563d459c872bf" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetClientData</name></member>
      <member refid="classwx_evt_handler_1af1e33a06087b8b2ddc43c7d15a91b326" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetClientObject</name></member>
      <member refid="classwx_window_1aa59f715217fffa5bcf14cd97f92e7840" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetClientSize</name></member>
      <member refid="classwx_window_1ab2aadc857ee7f55f47ab9a8669e3beb7" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetClientSize</name></member>
      <member refid="classwx_window_1a582d4d1f60a3f777627773b2da0bb2ef" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetClientSize</name></member>
      <member refid="classwx_window_1afa75d111bbd9a68f837101a5fbed60a7" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetConstraints</name></member>
      <member refid="classwx_window_1a0ccf78fe06722b500adfb7f36b8ce443" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetContainingSizer</name></member>
      <member refid="classwx_window_1ad83f9c51c6f31e0e05f598b47a19ed98" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetCursor</name></member>
      <member refid="classwx_combo_ctrl_1af0b54e5e4f71efc63464ceb44f1497d5" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetCustomPaintWidth</name></member>
      <member refid="classwx_window_1a5477a89c17fdcc3ec6c90274796eb1c3" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetDoubleBuffered</name></member>
      <member refid="classwx_window_1ae34b4d45433ca8287df0e47d46411e58" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetDropTarget</name></member>
      <member refid="classwx_text_entry_1a7d95c0f42b5e1dc0559ae1ec56cb8b86" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetEditable</name></member>
      <member refid="classwx_window_1af6c84b7679183b377ba27a52a2f708b4" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetEventHandler</name></member>
      <member refid="classwx_evt_handler_1a7388ae19c8657e5656471b658c320036" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetEvtHandlerEnabled</name></member>
      <member refid="classwx_window_1ae9655f7c35ce7ac89cac2f6c0054b103" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetExtraStyle</name></member>
      <member refid="classwx_window_1a697f9f8d3ff389790f1c74b59bcb1d75" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetFocus</name></member>
      <member refid="classwx_window_1a6fa03f82d7917dff482754d0d2e2b1c8" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetFocusFromKbd</name></member>
      <member refid="classwx_window_1a9ab11e7da57a1d08918aa75fc33f6ad3" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetFont</name></member>
      <member refid="classwx_window_1a69f1e1c7ddd370d72e68c70f13ac8de9" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetForegroundColour</name></member>
      <member refid="classwx_window_1a4c1a2cbc7363237b3a7c70af4e702c72" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetHelpText</name></member>
      <member refid="classwx_combo_ctrl_1a68221bdd4af63abfd9840e5de13f4ba6" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetHint</name></member>
      <member refid="classwx_window_1a7f27d0faed14effa013381bdc40e1bcd" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetId</name></member>
      <member refid="classwx_window_1ae6dfe0b0d4a8c666b21ce8df8d96727b" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>SetInitialBestSize</name></member>
      <member refid="classwx_window_1a1b309ca50ba87e34f968c83b79af1397" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetInitialSize</name></member>
      <member refid="classwx_combo_ctrl_1a9ac49217e13edeb905cf640aac627bba" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetInsertionPoint</name></member>
      <member refid="classwx_combo_ctrl_1a3b4d25c9166d51a95973176df1b05be4" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetInsertionPointEnd</name></member>
      <member refid="classwx_control_1a2c2ae20554e7db5e765f163022ce09c0" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetLabel</name></member>
      <member refid="classwx_control_1afeb308dc3b54d8d735b33cb250395503" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetLabelMarkup</name></member>
      <member refid="classwx_control_1ae092899c3fe658831a9c796755a65eb7" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetLabelText</name></member>
      <member refid="classwx_window_1a7d494549f7fcfed44af95f8ee364c1f9" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetLayoutDirection</name></member>
      <member refid="classwx_combo_ctrl_1ae2b983f401d92ccc38f2bed47fb4d76b" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetMargins</name></member>
      <member refid="classwx_combo_ctrl_1a61fb396d486c81bcb733ff0b35301904" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetMargins</name></member>
      <member refid="classwx_window_1a664e5b2ddd817d9c58788269fe1d8479" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetMaxClientSize</name></member>
      <member refid="classwx_text_entry_1a5b9dea0d1adeb9cc14309600de6aff50" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetMaxLength</name></member>
      <member refid="classwx_window_1a38b496214d728a3212afadee5ed51606" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetMaxSize</name></member>
      <member refid="classwx_window_1a6e35ba44b97e374dfffa460d41d94b31" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetMinClientSize</name></member>
      <member refid="classwx_window_1a3fc066f4d8083319f004ac43811d545d" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetMinSize</name></member>
      <member refid="classwx_window_1af80875cda5e1af98dcd7c8e712e3c800" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetName</name></member>
      <member refid="classwx_window_1aeab905f61df7004c1b76a3351dca9e96" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetNextHandler</name></member>
      <member refid="classwx_window_1a9a3f9d8477aab1d9176cd66ee56e75d9" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetOwnBackgroundColour</name></member>
      <member refid="classwx_window_1a89a4f62f23c1e7c845b8d07cecae4c43" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetOwnFont</name></member>
      <member refid="classwx_window_1a53f4a878e4e2d440bd00543f8014aaaa" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetOwnForegroundColour</name></member>
      <member refid="classwx_window_1aee57358435d6bd33f598c81354b47425" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetPalette</name></member>
      <member refid="classwx_combo_ctrl_1aac64729c09efde24fbc14d43aa688202" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetPopupAnchor</name></member>
      <member refid="classwx_combo_ctrl_1afb0b22cb38395040699eebcb679fd86a" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetPopupControl</name></member>
      <member refid="classwx_combo_ctrl_1add059c3997d6697bc98365f039da17f5" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetPopupExtents</name></member>
      <member refid="classwx_combo_ctrl_1a24f043ce5c1287904a899c22f2dc7ce9" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetPopupMaxHeight</name></member>
      <member refid="classwx_combo_ctrl_1aef690d395a8ef2500d2c4ddd2d345d6d" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetPopupMinWidth</name></member>
      <member refid="classwx_window_1a81f23590239934fa10fded0566a65d8c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetPosition</name></member>
      <member refid="classwx_window_1a07f5f7ed3f78e0ef7b3dee3f4da81001" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetPreviousHandler</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetRefData</name></member>
      <member refid="classwx_window_1aa842d59529f873683e55cd8392ec46e9" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetScrollbar</name></member>
      <member refid="classwx_window_1afbf4dc9064cf70cfe6884554b97a27bf" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetScrollPos</name></member>
      <member refid="classwx_combo_ctrl_1a62f78126cae07f006685349851340b29" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetSelection</name></member>
      <member refid="classwx_window_1a180312d5ad4a4a5ad805b8d52d67a74e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a8e383bc6d5ca008965922a36c676aea0" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a030a928cd854de3def97c5720f14695b" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a2ea9b25296d591aea4470c8fd99ff7cb" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a307329dc3b10f5584aeb2cbce9293ffd" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetSizeHints</name></member>
      <member refid="classwx_window_1ae813c640e1e2bc6014423247050846cf" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetSizeHints</name></member>
      <member refid="classwx_window_1abc95691b45e29a52c24aa9d33d46dec1" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetSizer</name></member>
      <member refid="classwx_window_1a29938af9828fd35da666536cdfb6b73c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetSizerAndFit</name></member>
      <member refid="classwx_combo_ctrl_1a738267959dcf2b73430bd310173ebedb" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetText</name></member>
      <member refid="classwx_combo_ctrl_1a00188332f7b6200c98f5f65966d5b151" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetTextCtrlStyle</name></member>
      <member refid="classwx_combo_ctrl_1ae38353a81954d02af302ba103e984cb7" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetTextIndent</name></member>
      <member refid="classwx_window_1a41dd19ed8809fd8ec662e2aa2a9579c3" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetThemeEnabled</name></member>
      <member refid="classwx_window_1a81a9fb74e3c6c7f4416e882f5e589b8c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetToolTip</name></member>
      <member refid="classwx_window_1a494e0b7cfca9299caa40e847767e7357" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetToolTip</name></member>
      <member refid="classwx_window_1ac8cf4398cec50ac36634760f45a0656f" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetTransparent</name></member>
      <member refid="classwx_window_1a00066c70049a7be3ce6b648d206e6432" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetValidator</name></member>
      <member refid="classwx_combo_ctrl_1a4202edbc9fc83623c658a83fe4c6d7be" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetValue</name></member>
      <member refid="classwx_window_1a37f293b7904bc6668b86cccb0aea5669" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetVirtualSize</name></member>
      <member refid="classwx_window_1a8e95201edebe43b9623bd3bdc555af4d" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetVirtualSize</name></member>
      <member refid="classwx_window_1a306af30adec68689f74ed537b4f9d5fd" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetWindowStyle</name></member>
      <member refid="classwx_window_1aee2cf342f80523432e7f2299d299451b" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetWindowStyleFlag</name></member>
      <member refid="classwx_window_1acd955418c336e73b3e32cadf1ca46e29" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetWindowVariant</name></member>
      <member refid="classwx_window_1a0c43a27fa04f9c17cc28fde71fdba490" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>ShouldInheritColours</name></member>
      <member refid="classwx_window_1a7fbc92ce240a8d4f6956b6e0276ef07f" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Show</name></member>
      <member refid="classwx_combo_ctrl_1ae87a04c471bfcac5ab0d370ac9edddbc" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>ShowPopup</name></member>
      <member refid="classwx_window_1a596b1715edfc7609f352b2e000ecbaec" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>ShowWithEffect</name></member>
      <member refid="classwx_window_1a279a532124073261b28131b6afb59a1e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Thaw</name></member>
      <member refid="classwx_window_1a8a4fa47129de552bfec37db8c69688a2" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ToggleWindowStyle</name></member>
      <member refid="classwx_window_1ab8e51f36e7d8790b361c8d8c6f37b1ad" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>TransferDataFromWindow</name></member>
      <member refid="classwx_window_1a88cc65e424a129d9b0057756cdb67ec9" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>TransferDataToWindow</name></member>
      <member refid="classwx_evt_handler_1a5e25fece1cb6cbc11fd1d41ec140319c" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>TryAfter</name></member>
      <member refid="classwx_evt_handler_1ad4b0eac704dd005ac6a88fdb1e673c13" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>TryBefore</name></member>
      <member refid="classwx_evt_handler_1a5d3854b4dfb6230fd9d3cf3871c6a607" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Unbind</name></member>
      <member refid="classwx_evt_handler_1a9992b15750a133127d76ad6e9be7e11f" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Unbind</name></member>
      <member refid="classwx_combo_ctrl_1a9da1ff37488b9c33ed02ba2064ad6d85" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Undo</name></member>
      <member refid="classwx_evt_handler_1a22e5db2ec1d19c8252c056fd116975d7" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Unlink</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>UnRef</name></member>
      <member refid="classwx_window_1a695f60d65f8f6c12e3c3645ad9c0c35b" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>UnregisterHotKey</name></member>
      <member refid="classwx_window_1ad9bc342d1e38d221e37f0f6396950c8c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>UnreserveControlId</name></member>
      <member refid="classwx_window_1ae75712451673658b0a533480bf5eeaa4" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>UnsetToolTip</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>UnShare</name></member>
      <member refid="classwx_window_1abaf28f1a075fd1b10f761a8febe597ec" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Update</name></member>
      <member refid="classwx_window_1adf0a4987728bd0bf69f922641b3efbfc" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>UpdateWindowUI</name></member>
      <member refid="classwx_combo_ctrl_1a5b8f90d12149fe7e3f1e38e0dd0b839a" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>UseAltPopupWindow</name></member>
      <member refid="classwx_window_1ac87f253253a0c5eb498871c83afa40fd" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Validate</name></member>
      <member refid="classwx_window_1ac500152d1eca3a2ee98a68e7ea7372b5" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>WarpPointer</name></member>
      <member refid="classwx_window_1aa456f800c9dde3b2361cad0abf54bc27" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>WindowToClientSize</name></member>
      <member refid="classwx_text_entry_1aa1b9419f95878c44234ff812b528c17b" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>WriteText</name></member>
      <member refid="classwx_combo_ctrl_1af31b505e73047689dc4d2948eaa13a3d" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>wxComboCtrl</name></member>
      <member refid="classwx_combo_ctrl_1a0f9d6b21d3728f135dbe0d01ee4bf865" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>wxComboCtrl</name></member>
      <member refid="classwx_control_1adb8f3edf807efa9159de826bf92d6a44" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>wxControl</name></member>
      <member refid="classwx_control_1a08428de2ba5cc988a86fe17071d49522" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>wxControl</name></member>
      <member refid="classwx_evt_handler_1a3f0166c4154227d05575b01eb2c8d4be" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>wxEvtHandler</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>wxObject</name></member>
      <member refid="classwx_window_1a695200a4915b934926dcf32afa44544c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>wxWindow</name></member>
      <member refid="classwx_window_1a7799009b10d1765d1bbb6db4994f922e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>wxWindow</name></member>
      <member refid="classwx_combo_ctrl_1a542d88ad981a8dd2a53ca9cc03c2daaa" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>~wxComboCtrl</name></member>
      <member refid="classwx_evt_handler_1a372d2239d91521eddc8fd2715fcab584" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>~wxEvtHandler</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>~wxObject</name></member>
      <member refid="classwx_window_1a0c2a46181a89c349327f0b276f5ef8d7" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>~wxWindow</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
