<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="tokenzr_8h" kind="file">
    <compoundname>tokenzr.h</compoundname>
    <innerclass refid="classwx_string_tokenizer" prot="public">wxStringTokenizer</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="tokenzr_8h_1a58f42335052e241a3ee01fd735263922" prot="public" static="no">
        <name>wxDEFAULT_DELIMITERS</name>
        <initializer>&quot; \t\r\n&quot;</initializer>
        <briefdescription>
<para>Default <ref refid="classwx_string_tokenizer" kindref="compound">wxStringTokenizer</ref> delimiters are the usual white space characters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/tokenzr.h" line="63" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/tokenzr.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="tokenzr_8h_1a8203239377764e04822e52b33ee02f9f" prot="public" static="no">
        <name>wxStringTokenizerMode</name>
        <enumvalue id="tokenzr_8h_1a8203239377764e04822e52b33ee02f9fa027f579bcc5f288b25051ab7c757ee56" prot="public">
          <name>wxTOKEN_INVALID</name>
          <initializer> -1</initializer>
          <briefdescription>
<para>Invalid tokenizer mode. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tokenzr_8h_1a8203239377764e04822e52b33ee02f9fa47d7692cd4311164d35b0b7a0770f533" prot="public">
          <name>wxTOKEN_DEFAULT</name>
          <briefdescription>
<para>Default behaviour: <ref refid="classwx_string_tokenizer" kindref="compound">wxStringTokenizer</ref> will behave in the same way as <computeroutput>strtok()</computeroutput> (<ref refid="tokenzr_8h_1a8203239377764e04822e52b33ee02f9fad20aabe40436cd31d97454c89e8bb91a" kindref="member">wxTOKEN_STRTOK</ref>) if the delimiters string only contains white space characters but, unlike the standard function, it will behave like <ref refid="tokenzr_8h_1a8203239377764e04822e52b33ee02f9faf9283e590f6ec5032a79706a187848b8" kindref="member">wxTOKEN_RET_EMPTY</ref>, returning empty tokens if this is not the case. </para>          </briefdescription>
          <detaileddescription>
<para>This is helpful for parsing strictly formatted data where the number of fields is fixed but some of them may be empty (i.e. <computeroutput>TAB</computeroutput> or comma delimited text files). </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="tokenzr_8h_1a8203239377764e04822e52b33ee02f9faf9283e590f6ec5032a79706a187848b8" prot="public">
          <name>wxTOKEN_RET_EMPTY</name>
          <briefdescription>
<para>In this mode, the empty tokens in the middle of the string will be returned, i.e. </para>          </briefdescription>
          <detaileddescription>
<para><computeroutput>&quot;a::b:&quot;</computeroutput> will be tokenized in three tokens <computeroutput>&apos;a&apos;</computeroutput>, <computeroutput>&apos;&apos;</computeroutput> and <computeroutput>&apos;b&apos;</computeroutput>. Notice that all trailing delimiters are ignored in this mode, not just the last one, i.e. a string <computeroutput>&quot;a::b::&quot;</computeroutput> would still result in the same set of tokens. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="tokenzr_8h_1a8203239377764e04822e52b33ee02f9faa4d5162c3be9163135a2a79bbe6ecacd" prot="public">
          <name>wxTOKEN_RET_EMPTY_ALL</name>
          <briefdescription>
<para>In this mode, empty trailing tokens (including the one after the last delimiter character) will be returned as well. </para>          </briefdescription>
          <detaileddescription>
<para>The string <computeroutput>&quot;a::b:&quot;</computeroutput> will be tokenized in four tokens: the already mentioned ones and another empty one as the last one and a string <computeroutput>&quot;a::b::&quot;</computeroutput> will have five tokens. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="tokenzr_8h_1a8203239377764e04822e52b33ee02f9fa5f21a6611d4493e4a8a423ceb85149f8" prot="public">
          <name>wxTOKEN_RET_DELIMS</name>
          <briefdescription>
<para>In this mode, the delimiter character after the end of the current token (there may be none if this is the last token) is returned appended to the token. </para>          </briefdescription>
          <detaileddescription>
<para>Otherwise, it is the same mode as <ref refid="tokenzr_8h_1a8203239377764e04822e52b33ee02f9faf9283e590f6ec5032a79706a187848b8" kindref="member">wxTOKEN_RET_EMPTY</ref>. Notice that there is no mode like this one but behaving like <ref refid="tokenzr_8h_1a8203239377764e04822e52b33ee02f9faa4d5162c3be9163135a2a79bbe6ecacd" kindref="member">wxTOKEN_RET_EMPTY_ALL</ref> instead of <ref refid="tokenzr_8h_1a8203239377764e04822e52b33ee02f9faf9283e590f6ec5032a79706a187848b8" kindref="member">wxTOKEN_RET_EMPTY</ref>, use <ref refid="tokenzr_8h_1a8203239377764e04822e52b33ee02f9faa4d5162c3be9163135a2a79bbe6ecacd" kindref="member">wxTOKEN_RET_EMPTY_ALL</ref> and <ref refid="classwx_string_tokenizer_1ab58df9e376b49be51cead0a05524888c" kindref="member">wxStringTokenizer::GetLastDelimiter()</ref> to emulate it. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="tokenzr_8h_1a8203239377764e04822e52b33ee02f9fad20aabe40436cd31d97454c89e8bb91a" prot="public">
          <name>wxTOKEN_STRTOK</name>
          <briefdescription>
<para>In this mode the class behaves exactly like the standard <computeroutput>strtok()</computeroutput> function: the empty tokens are never returned. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The behaviour of <ref refid="classwx_string_tokenizer" kindref="compound">wxStringTokenizer</ref> is governed by the <ref refid="classwx_string_tokenizer_1a59aa6a8673730d97a235c9a77ee93866" kindref="member">wxStringTokenizer::wxStringTokenizer()</ref> or <ref refid="classwx_string_tokenizer_1acac18438a15dbe799d659f13a10187e9" kindref="member">wxStringTokenizer::SetString()</ref> with the parameter <emphasis>mode</emphasis>, which may be one of the following: </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/tokenzr.h" line="15" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/tokenzr.h" bodystart="14" bodyend="60"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__group__funcmacro__string_1ga2c25293c0f273b78001e02313ca20d96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_array_string" kindref="compound">wxArrayString</ref></type>
        <definition>wxArrayString wxStringTokenize</definition>
        <argsstring>(const wxString &amp;str, const wxString &amp;delims=wxDEFAULT_DELIMITERS, wxStringTokenizerMode mode=wxTOKEN_DEFAULT)</argsstring>
        <name>wxStringTokenize</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>delims</declname>
          <defval>wxDEFAULT_DELIMITERS</defval>
        </param>
        <param>
          <type><ref refid="tokenzr_8h_1a8203239377764e04822e52b33ee02f9f" kindref="member">wxStringTokenizerMode</ref></type>
          <declname>mode</declname>
          <defval>wxTOKEN_DEFAULT</defval>
        </param>
        <briefdescription>
<para>This is a convenience function wrapping <ref refid="classwx_string_tokenizer" kindref="compound">wxStringTokenizer</ref> which simply returns all tokens found in the given <emphasis>str</emphasis> as an array. </para>        </briefdescription>
        <detaileddescription>
<para>Please see <ref refid="classwx_string_tokenizer_1a59aa6a8673730d97a235c9a77ee93866" kindref="member">wxStringTokenizer::wxStringTokenizer</ref> for the description of the other parameters.</para><para><simplesect kind="return"><para>The array with the parsed tokens.</para></simplesect>
Include <ulink url="file:">file:</ulink> <verbatim>#include &lt;wx/string.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/tokenzr.h" line="183"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/tokenzr.h"/>
  </compounddef>
</doxygen>
