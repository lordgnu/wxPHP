<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_timer" kind="class" prot="public">
    <compoundname>wxTimer</compoundname>
    <basecompoundref refid="classwx_evt_handler" prot="public" virt="non-virtual">wxEvtHandler</basecompoundref>
    <includes local="no">wx/timer.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_timer_1a0560894a1ab57792f52992ffbc58e735" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxTimer::wxTimer</definition>
        <argsstring>()</argsstring>
        <name>wxTimer</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
<para>If you use it to construct the object and don&apos;t call <ref refid="classwx_timer_1aa3966b37329a4fad69ad384733eab27e" kindref="member">SetOwner()</ref> later, you must override <ref refid="classwx_timer_1abeaa78e9916e88fd5f544c3eab4e57b4" kindref="member">Notify()</ref> method to process the notifications. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/timer.h" line="57"/>
      </memberdef>
      <memberdef kind="function" id="classwx_timer_1aeba595e67731d9f8ce07e4ac69a0ca65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxTimer::wxTimer</definition>
        <argsstring>(wxEvtHandler *owner, int id=-1)</argsstring>
        <name>wxTimer</name>
        <param>
          <type><ref refid="classwx_evt_handler" kindref="compound">wxEvtHandler</ref> *</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Creates a timer and associates it with <emphasis>owner</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Please see <ref refid="classwx_timer_1aa3966b37329a4fad69ad384733eab27e" kindref="member">SetOwner()</ref> for the description of parameters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/timer.h" line="63"/>
      </memberdef>
      <memberdef kind="function" id="classwx_timer_1a89747005621bd84959b3bed0fdedb9f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxTimer::~wxTimer</definition>
        <argsstring>()</argsstring>
        <name>~wxTimer</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
<para>Stops the timer if it is running. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/timer.h" line="68"/>
      </memberdef>
      <memberdef kind="function" id="classwx_timer_1ad8ad8395c1432e69dac3484ec26c6df1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxTimer::GetId</definition>
        <argsstring>() const </argsstring>
        <name>GetId</name>
        <briefdescription>
<para>Returns the ID of the events generated by this timer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/timer.h" line="73"/>
      </memberdef>
      <memberdef kind="function" id="classwx_timer_1a7a89e850ea197643c1fecb171aabc8ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxTimer::GetInterval</definition>
        <argsstring>() const </argsstring>
        <name>GetInterval</name>
        <briefdescription>
<para>Returns the current interval for the timer (in milliseconds). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/timer.h" line="78"/>
      </memberdef>
      <memberdef kind="function" id="classwx_timer_1a49c403b4c5f74168eb35777c4ccb909e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_evt_handler" kindref="compound">wxEvtHandler</ref> *</type>
        <definition>wxEvtHandler* wxTimer::GetOwner</definition>
        <argsstring>() const </argsstring>
        <name>GetOwner</name>
        <briefdescription>
<para>Returns the current <emphasis>owner</emphasis> of the timer. </para>        </briefdescription>
        <detaileddescription>
<para>If non-NULL this is the event handler which will receive the timer events (see <ref refid="classwx_timer_event" kindref="compound">wxTimerEvent</ref>) when the timer is running. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/timer.h" line="86"/>
      </memberdef>
      <memberdef kind="function" id="classwx_timer_1afd218cc14dce41c02d1af87fbf30331f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTimer::IsOneShot</definition>
        <argsstring>() const </argsstring>
        <name>IsOneShot</name>
        <briefdescription>
<para>Returns true if the timer is one shot, i.e. </para>        </briefdescription>
        <detaileddescription>
<para>if it will stop after firing the first notification automatically. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/timer.h" line="92"/>
      </memberdef>
      <memberdef kind="function" id="classwx_timer_1a66d459fa6e61e9e16a95f870c07aa4c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTimer::IsRunning</definition>
        <argsstring>() const </argsstring>
        <name>IsRunning</name>
        <briefdescription>
<para>Returns true if the timer is running, false if it is stopped. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/timer.h" line="97"/>
      </memberdef>
      <memberdef kind="function" id="classwx_timer_1abeaa78e9916e88fd5f544c3eab4e57b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTimer::Notify</definition>
        <argsstring>()</argsstring>
        <name>Notify</name>
        <briefdescription>
<para>This member should be overridden by the user if the default constructor was used and <ref refid="classwx_timer_1aa3966b37329a4fad69ad384733eab27e" kindref="member">SetOwner()</ref> wasn&apos;t called. </para>        </briefdescription>
        <detaileddescription>
<para>Perform whatever action which is to be taken periodically here.</para><para>Notice that throwing exceptions from this method is currently not supported, use event-based timer handling approach if an exception can be thrown while handling timer notifications. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/timer.h" line="109"/>
      </memberdef>
      <memberdef kind="function" id="classwx_timer_1aa3966b37329a4fad69ad384733eab27e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTimer::SetOwner</definition>
        <argsstring>(wxEvtHandler *owner, int id=-1)</argsstring>
        <name>SetOwner</name>
        <param>
          <type><ref refid="classwx_evt_handler" kindref="compound">wxEvtHandler</ref> *</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Associates the timer with the given <emphasis>owner</emphasis> object. </para>        </briefdescription>
        <detaileddescription>
<para>When the timer is running, the owner will receive timer events (see <ref refid="classwx_timer_event" kindref="compound">wxTimerEvent</ref>) with <emphasis>id</emphasis> equal to <emphasis>id</emphasis> specified here. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/timer.h" line="117"/>
      </memberdef>
      <memberdef kind="function" id="classwx_timer_1a2d0f584f28cd836deea602a8f2fc32d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTimer::Start</definition>
        <argsstring>(int milliseconds=-1, bool oneShot=false)</argsstring>
        <name>Start</name>
        <param>
          <type>int</type>
          <declname>milliseconds</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>oneShot</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>(Re)starts the timer. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>milliseconds</emphasis> parameter is -1 (value by default), the previous value is used. Returns false if the timer could not be started, true otherwise (in MS Windows timers are a limited resource).</para><para>If <emphasis>oneShot</emphasis> is false (the default), the <ref refid="classwx_timer_1abeaa78e9916e88fd5f544c3eab4e57b4" kindref="member">Notify()</ref> function will be called repeatedly until the timer is stopped. If true, it will be called only once and the timer will stop automatically.</para><para>To make your code more readable you may also use the following symbolic constants:<itemizedlist>
<listitem><para>wxTIMER_CONTINUOUS: Start a normal, continuously running, timer</para></listitem><listitem><para>wxTIMER_ONE_SHOT: Start a one shot timer If the timer was already running, it will be stopped by this method before restarting it. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/timer.h" line="134"/>
      </memberdef>
      <memberdef kind="function" id="classwx_timer_1a74c499ddd20b00376ff99f08fb96a3d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTimer::Stop</definition>
        <argsstring>()</argsstring>
        <name>Stop</name>
        <briefdescription>
<para>Stops the timer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/timer.h" line="139"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classwx_timer" kindref="compound">wxTimer</ref> class allows you to execute code at specified intervals. </para>    </briefdescription>
    <detaileddescription>
<para>Its precision is platform-dependent, but in general will not be better than <computeroutput>1ms</computeroutput> nor worse than <computeroutput>1s</computeroutput>.</para><para>There are three different ways to use this class:</para><para><itemizedlist>
<listitem><para>You may derive a new class from <ref refid="classwx_timer" kindref="compound">wxTimer</ref> and override the <ref refid="classwx_timer_1abeaa78e9916e88fd5f544c3eab4e57b4" kindref="member">wxTimer::Notify</ref> member to perform the required action.</para></listitem><listitem><para>You may redirect the notifications to any <ref refid="classwx_evt_handler" kindref="compound">wxEvtHandler</ref> derived object by using the non-default constructor or <ref refid="classwx_timer_1aa3966b37329a4fad69ad384733eab27e" kindref="member">wxTimer::SetOwner</ref>. Then use the <computeroutput>EVT_TIMER</computeroutput> macro to connect it to the event handler which will receive <ref refid="classwx_timer_event" kindref="compound">wxTimerEvent</ref> notifications.</para></listitem><listitem><para>You may use a derived class and the <computeroutput>EVT_TIMER</computeroutput> macro to connect it to an event handler defined in the derived class. If the default constructor is used, the timer object will be its own owner object, since it is derived from <ref refid="classwx_evt_handler" kindref="compound">wxEvtHandler</ref>.</para></listitem></itemizedlist>
</para><para>In any case, you must start the timer with <ref refid="classwx_timer_1a2d0f584f28cd836deea602a8f2fc32d6" kindref="member">wxTimer::Start()</ref> after constructing it before it actually starts sending notifications. It can be stopped later with <ref refid="classwx_timer_1a74c499ddd20b00376ff99f08fb96a3d0" kindref="member">wxTimer::Stop()</ref>.</para><para><simplesect kind="note"><para>A timer can only be used from the main thread.</para></simplesect>
<heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__misc" kindref="compound">Miscellaneous</ref></para><para><simplesect kind="see"><para><ref refid="classwx_stop_watch" kindref="compound">wxStopWatch</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="11059">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="11058">
        <label>wxEvtHandler</label>
        <link refid="classwx_evt_handler"/>
        <childnode refid="11059" relation="public-inheritance">
        </childnode>
        <childnode refid="11060" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11057">
        <label>wxTimer</label>
        <link refid="classwx_timer"/>
        <childnode refid="11058" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11060">
        <label>wxTrackable</label>
        <link refid="classwx_trackable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11063">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="11064" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="11062">
        <label>wxEvtHandler</label>
        <link refid="classwx_evt_handler"/>
        <childnode refid="11063" relation="public-inheritance">
        </childnode>
        <childnode refid="11065" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11061">
        <label>wxTimer</label>
        <link refid="classwx_timer"/>
        <childnode refid="11062" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11065">
        <label>wxTrackable</label>
        <link refid="classwx_trackable"/>
      </node>
      <node id="11064">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/timer.h" line="50" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/timer.h" bodystart="49" bodyend="140"/>
    <listofallmembers>
      <member refid="classwx_evt_handler_1a7dc3c701781f4044372049de5004137e" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>AddFilter</name></member>
      <member refid="classwx_evt_handler_1a0737c6d2cbcd5ded4b1ecdd53ed0def3" prot="public" virt="virtual"><scope>wxTimer</scope><name>AddPendingEvent</name></member>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxTimer</scope><name>AllocExclusive</name></member>
      <member refid="classwx_evt_handler_1a84b1e446053bda8f76f13336839e8b64" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>Bind</name></member>
      <member refid="classwx_evt_handler_1a95520e770e157ef93d1d60e03db66e5c" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>Bind</name></member>
      <member refid="classwx_object_1a1d39f1d3650fe0982c9a1abe7f9fe7b7" prot="protected" virt="virtual"><scope>wxTimer</scope><name>CloneRefData</name></member>
      <member refid="classwx_evt_handler_1a78719e8b82c9f9c6e4056b3449df1943" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>Connect</name></member>
      <member refid="classwx_evt_handler_1a1e8b5fc4c7e7f6d32d40bc00d4108ba4" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>Connect</name></member>
      <member refid="classwx_evt_handler_1aa290d9b67348e74c1da8497955a4e35c" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>Connect</name></member>
      <member refid="classwx_object_1a95c6a5e4e1e03ff23c7b9efe4cff0c1a" prot="protected" virt="virtual"><scope>wxTimer</scope><name>CreateRefData</name></member>
      <member refid="classwx_evt_handler_1a6e7f9cf4ebd0623c1d94979855d096f8" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>DeletePendingEvents</name></member>
      <member refid="classwx_evt_handler_1a13061cf0ed01ac10a804ac057ef4bdbc" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>Disconnect</name></member>
      <member refid="classwx_evt_handler_1a2f171e19444b9c4034c5e11f24fa9c91" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>Disconnect</name></member>
      <member refid="classwx_evt_handler_1a16a6f823853e4b74b43dd9a2cf3abee6" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>Disconnect</name></member>
      <member refid="classwx_object_1ab3a0c6f723cbaddb47be4e8dd98cc8e2" prot="public" virt="virtual"><scope>wxTimer</scope><name>GetClassInfo</name></member>
      <member refid="classwx_evt_handler_1ad6e543115a9405962152630138645588" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>GetClientData</name></member>
      <member refid="classwx_evt_handler_1a2b3949eaba1f25cb48618163a7c0583b" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>GetClientObject</name></member>
      <member refid="classwx_evt_handler_1a533e62afcb125abf1fcc8bb53fbc2e81" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>GetEvtHandlerEnabled</name></member>
      <member refid="classwx_timer_1ad8ad8395c1432e69dac3484ec26c6df1" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>GetId</name></member>
      <member refid="classwx_timer_1a7a89e850ea197643c1fecb171aabc8ac" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>GetInterval</name></member>
      <member refid="classwx_evt_handler_1a4b2f853f5c7a64432ae72f9b606698f9" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>GetNextHandler</name></member>
      <member refid="classwx_timer_1a49c403b4c5f74168eb35777c4ccb909e" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>GetOwner</name></member>
      <member refid="classwx_evt_handler_1aad1ba7fa9ccbf12ee2d80f5f12350adb" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>GetPreviousHandler</name></member>
      <member refid="classwx_object_1aabdb4fc957226544a8408167844e4f42" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>GetRefData</name></member>
      <member refid="classwx_object_1af40d580385cf4f8112fae7713404b01e" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>IsKindOf</name></member>
      <member refid="classwx_timer_1afd218cc14dce41c02d1af87fbf30331f" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>IsOneShot</name></member>
      <member refid="classwx_timer_1a66d459fa6e61e9e16a95f870c07aa4c9" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>IsRunning</name></member>
      <member refid="classwx_object_1a80a1a3fda7b14396a9ddd3d7a46a88bd" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>IsSameAs</name></member>
      <member refid="classwx_evt_handler_1a360fdeefcf53b62fb49fb828406bb8a6" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>IsUnlinked</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxTimer</scope><name>m_refData</name></member>
      <member refid="classwx_timer_1abeaa78e9916e88fd5f544c3eab4e57b4" prot="public" virt="virtual"><scope>wxTimer</scope><name>Notify</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>operator new</name></member>
      <member refid="classwx_evt_handler_1a65968dd27f3aac7718f2dd6b2ddd5a08" prot="public" virt="virtual"><scope>wxTimer</scope><name>ProcessEvent</name></member>
      <member refid="classwx_evt_handler_1ac0f5d2cb29a04c1f7f82eb6b351f79fb" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>ProcessEventLocally</name></member>
      <member refid="classwx_evt_handler_1a6f643dbdcf8e914ae1c8b70dd305e6f2" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>ProcessPendingEvents</name></member>
      <member refid="classwx_evt_handler_1acffd03bf407a856166ea71ef0318b59a" prot="public" virt="virtual"><scope>wxTimer</scope><name>QueueEvent</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>Ref</name></member>
      <member refid="classwx_evt_handler_1a67a57b759c447b121bf70a7c9804c8f2" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>RemoveFilter</name></member>
      <member refid="classwx_evt_handler_1a8205cb1a5a00d8b550b3ead22266b16b" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>SafelyProcessEvent</name></member>
      <member refid="classwx_evt_handler_1a3c07426130d2868a5ae7fa918a251f49" prot="public" virt="virtual"><scope>wxTimer</scope><name>SearchEventTable</name></member>
      <member refid="classwx_evt_handler_1a82c74f2cebfa02cb3c1563d459c872bf" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>SetClientData</name></member>
      <member refid="classwx_evt_handler_1af1e33a06087b8b2ddc43c7d15a91b326" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>SetClientObject</name></member>
      <member refid="classwx_evt_handler_1a7388ae19c8657e5656471b658c320036" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>SetEvtHandlerEnabled</name></member>
      <member refid="classwx_evt_handler_1a68e2ef2d2b7d68c4c9c18ca92933031b" prot="public" virt="virtual"><scope>wxTimer</scope><name>SetNextHandler</name></member>
      <member refid="classwx_timer_1aa3966b37329a4fad69ad384733eab27e" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>SetOwner</name></member>
      <member refid="classwx_evt_handler_1aff0d1836464be82e2ad723ad3a58eccc" prot="public" virt="virtual"><scope>wxTimer</scope><name>SetPreviousHandler</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>SetRefData</name></member>
      <member refid="classwx_timer_1a2d0f584f28cd836deea602a8f2fc32d6" prot="public" virt="virtual"><scope>wxTimer</scope><name>Start</name></member>
      <member refid="classwx_timer_1a74c499ddd20b00376ff99f08fb96a3d0" prot="public" virt="virtual"><scope>wxTimer</scope><name>Stop</name></member>
      <member refid="classwx_evt_handler_1a5e25fece1cb6cbc11fd1d41ec140319c" prot="protected" virt="virtual"><scope>wxTimer</scope><name>TryAfter</name></member>
      <member refid="classwx_evt_handler_1ad4b0eac704dd005ac6a88fdb1e673c13" prot="protected" virt="virtual"><scope>wxTimer</scope><name>TryBefore</name></member>
      <member refid="classwx_evt_handler_1a5d3854b4dfb6230fd9d3cf3871c6a607" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>Unbind</name></member>
      <member refid="classwx_evt_handler_1a9992b15750a133127d76ad6e9be7e11f" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>Unbind</name></member>
      <member refid="classwx_evt_handler_1a22e5db2ec1d19c8252c056fd116975d7" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>Unlink</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>UnShare</name></member>
      <member refid="classwx_evt_handler_1a3f0166c4154227d05575b01eb2c8d4be" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>wxEvtHandler</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>wxObject</name></member>
      <member refid="classwx_timer_1a0560894a1ab57792f52992ffbc58e735" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>wxTimer</name></member>
      <member refid="classwx_timer_1aeba595e67731d9f8ce07e4ac69a0ca65" prot="public" virt="non-virtual"><scope>wxTimer</scope><name>wxTimer</name></member>
      <member refid="classwx_evt_handler_1a372d2239d91521eddc8fd2715fcab584" prot="public" virt="virtual"><scope>wxTimer</scope><name>~wxEvtHandler</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxTimer</scope><name>~wxObject</name></member>
      <member refid="classwx_timer_1a89747005621bd84959b3bed0fdedb9f6" prot="public" virt="virtual"><scope>wxTimer</scope><name>~wxTimer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
