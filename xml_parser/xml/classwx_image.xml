<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_image" kind="class" prot="public">
    <compoundname>wxImage</compoundname>
    <basecompoundref refid="classwx_object" prot="public" virt="non-virtual">wxObject</basecompoundref>
    <includes local="no">wx/image.h</includes>
    <innerclass refid="classwx_image_1_1_h_s_v_value" prot="public">wxImage::HSVValue</innerclass>
    <innerclass refid="classwx_image_1_1_r_g_b_value" prot="public">wxImage::RGBValue</innerclass>
      <sectiondef kind="user-defined">
      <header>Image creation, initialization and deletion functions</header>
      <memberdef kind="function" id="classwx_image_1ab3b39f306287a212ccbb3c1e69a0b451" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image" kindref="compound">wxImage</ref></type>
        <definition>wxImage wxImage::Copy</definition>
        <argsstring>() const </argsstring>
        <name>Copy</name>
        <briefdescription>
<para>Returns an identical copy of this image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="673"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a07194d90bd6320255610a0a88a030a3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxImage::Create</definition>
        <argsstring>(int width, int height, bool clear=true)</argsstring>
        <name>Create</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clear</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Creates a fresh image. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_image_1a21652c36c8e51bc696756afeaefe2d01" kindref="member">wxImage::wxImage(int,int,bool)</ref> for more info.</para><para><simplesect kind="return"><para>true if the call succeeded, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="681"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a37e70a8f9c684974c9c54f43f5e60a3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxImage::Create</definition>
        <argsstring>(const wxSize &amp;sz, bool clear=true)</argsstring>
        <name>Create</name>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clear</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="686"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a63801a380397cdcf465cab68f313c9a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxImage::Create</definition>
        <argsstring>(int width, int height, unsigned char *data, bool static_data=false)</argsstring>
        <name>Create</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>static_data</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Creates a fresh image. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_image_1a2c97634b43bdd143f34418fb1f98a690" kindref="member">wxImage::wxImage(int,int,unsigned char*,bool)</ref> for more info.</para><para><simplesect kind="return"><para>true if the call succeeded, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="694"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a717414a9d74dc882359857050bb4bdc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxImage::Create</definition>
        <argsstring>(const wxSize &amp;sz, unsigned char *data, bool static_data=false)</argsstring>
        <name>Create</name>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>static_data</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="699"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1aa395d661de4f3b98c6e92a767d97bb66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxImage::Create</definition>
        <argsstring>(int width, int height, unsigned char *data, unsigned char *alpha, bool static_data=false)</argsstring>
        <name>Create</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>static_data</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Creates a fresh image. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_image_1abdb7e8a7ca45e63935cda55b45869a7a" kindref="member">wxImage::wxImage(int,int,unsigned char*,unsigned char*,bool)</ref> for more info.</para><para><simplesect kind="return"><para>true if the call succeeded, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="707"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1aae3a6d125108f6fb93188d8c3c4990b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxImage::Create</definition>
        <argsstring>(const wxSize &amp;sz, unsigned char *data, unsigned char *alpha, bool static_data=false)</argsstring>
        <name>Create</name>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>static_data</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="712"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a2aa815c34284d6a85971e1ff8a2cc74c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxImage::Clear</definition>
        <argsstring>(unsigned char value=0)</argsstring>
        <name>Clear</name>
        <param>
          <type>unsigned char</type>
          <declname>value</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Initialize the image data with zeroes (the default) or with the byte value given as <emphasis>value</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.9.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="720"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1ac64c3524a054db164b811c380db65f97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxImage::Destroy</definition>
        <argsstring>()</argsstring>
        <name>Destroy</name>
        <briefdescription>
<para>Destroys the image data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="725"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1ac941b6b80262b968b575ab1b215e687b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxImage::InitAlpha</definition>
        <argsstring>()</argsstring>
        <name>InitAlpha</name>
        <briefdescription>
<para>Initializes the image alpha channel data. </para>        </briefdescription>
        <detaileddescription>
<para>It is an error to call it if the image already has alpha data. If it doesn&apos;t, alpha data will be by default initialized to all pixels being fully opaque. But if the image has a mask colour, all mask pixels will be completely transparent. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="735"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Image manipulation functions</header>
      <memberdef kind="function" id="classwx_image_1a5049d6166a019c182af55a94fb6e3307" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image" kindref="compound">wxImage</ref></type>
        <definition>wxImage wxImage::Blur</definition>
        <argsstring>(int blurRadius) const </argsstring>
        <name>Blur</name>
        <param>
          <type>int</type>
          <declname>blurRadius</declname>
        </param>
        <briefdescription>
<para>Blurs the image in both horizontal and vertical directions by the specified pixel <emphasis>blurRadius</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>This should not be used when using a single mask colour for transparency.</para><para><simplesect kind="see"><para><ref refid="classwx_image_1a534300b66c2469720b1be4bd2a001822" kindref="member">BlurHorizontal()</ref>, <ref refid="classwx_image_1a20d4d0dd605eb5757161be251e048847" kindref="member">BlurVertical()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="752"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a534300b66c2469720b1be4bd2a001822" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image" kindref="compound">wxImage</ref></type>
        <definition>wxImage wxImage::BlurHorizontal</definition>
        <argsstring>(int blurRadius) const </argsstring>
        <name>BlurHorizontal</name>
        <param>
          <type>int</type>
          <declname>blurRadius</declname>
        </param>
        <briefdescription>
<para>Blurs the image in the horizontal direction only. </para>        </briefdescription>
        <detaileddescription>
<para>This should not be used when using a single mask colour for transparency.</para><para><simplesect kind="see"><para><ref refid="classwx_image_1a5049d6166a019c182af55a94fb6e3307" kindref="member">Blur()</ref>, <ref refid="classwx_image_1a20d4d0dd605eb5757161be251e048847" kindref="member">BlurVertical()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="760"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a20d4d0dd605eb5757161be251e048847" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image" kindref="compound">wxImage</ref></type>
        <definition>wxImage wxImage::BlurVertical</definition>
        <argsstring>(int blurRadius) const </argsstring>
        <name>BlurVertical</name>
        <param>
          <type>int</type>
          <declname>blurRadius</declname>
        </param>
        <briefdescription>
<para>Blurs the image in the vertical direction only. </para>        </briefdescription>
        <detaileddescription>
<para>This should not be used when using a single mask colour for transparency.</para><para><simplesect kind="see"><para><ref refid="classwx_image_1a5049d6166a019c182af55a94fb6e3307" kindref="member">Blur()</ref>, <ref refid="classwx_image_1a534300b66c2469720b1be4bd2a001822" kindref="member">BlurHorizontal()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="768"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1abe3a18acec23fc0afbae68c5ec3f446f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image" kindref="compound">wxImage</ref></type>
        <definition>wxImage wxImage::Mirror</definition>
        <argsstring>(bool horizontally=true) const </argsstring>
        <name>Mirror</name>
        <param>
          <type>bool</type>
          <declname>horizontally</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Returns a mirrored copy of the image. </para>        </briefdescription>
        <detaileddescription>
<para>The parameter <emphasis>horizontally</emphasis> indicates the orientation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="774"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1adb034510c331ea2fd26843e4d47b8629" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxImage::Paste</definition>
        <argsstring>(const wxImage &amp;image, int x, int y)</argsstring>
        <name>Paste</name>
        <param>
          <type>const <ref refid="classwx_image" kindref="compound">wxImage</ref> &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Copy the data of the given <emphasis>image</emphasis> to the specified position in this image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="779"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1aec8466530f4aea8e2cea8cb24bfb74fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxImage::Replace</definition>
        <argsstring>(unsigned char r1, unsigned char g1, unsigned char b1, unsigned char r2, unsigned char g2, unsigned char b2)</argsstring>
        <name>Replace</name>
        <param>
          <type>unsigned char</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>g1</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>b1</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>r2</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>g2</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>b2</declname>
        </param>
        <briefdescription>
<para>Replaces the colour specified by <emphasis>r1</emphasis>,g1,b1 by the colour <emphasis>r2</emphasis>,g2,b2. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="786"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a35227071eb0de3c0c035324838071001" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image" kindref="compound">wxImage</ref> &amp;</type>
        <definition>wxImage&amp; wxImage::Rescale</definition>
        <argsstring>(int width, int height, wxImageResizeQuality quality=wxIMAGE_QUALITY_NORMAL)</argsstring>
        <name>Rescale</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="image_8h_1a8cb59f5925c96a706710106f679d171a" kindref="member">wxImageResizeQuality</ref></type>
          <declname>quality</declname>
          <defval>wxIMAGE_QUALITY_NORMAL</defval>
        </param>
        <briefdescription>
<para>Changes the size of the image in-place by scaling it: after a call to this function,the image will have the given width and height. </para>        </briefdescription>
        <detaileddescription>
<para>For a description of the <emphasis>quality</emphasis> parameter, see the <ref refid="classwx_image_1aaf10a9f0a8284a9ccfe988d0a470d4e9" kindref="member">Scale()</ref> function. Returns the (modified) image itself.</para><para><simplesect kind="see"><para><ref refid="classwx_image_1aaf10a9f0a8284a9ccfe988d0a470d4e9" kindref="member">Scale()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="798"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1ac4dd8e967436c3206dfe4460345af794" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image" kindref="compound">wxImage</ref> &amp;</type>
        <definition>wxImage&amp; wxImage::Resize</definition>
        <argsstring>(const wxSize &amp;size, const wxPoint &amp;pos, int red=-1, int green=-1, int blue=-1)</argsstring>
        <name>Resize</name>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>red</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>green</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>blue</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Changes the size of the image in-place without scaling it by adding either a border with the given colour or cropping as necessary. </para>        </briefdescription>
        <detaileddescription>
<para>The image is pasted into a new image with the given <emphasis>size</emphasis> and background colour at the position <emphasis>pos</emphasis> relative to the upper left of the new image.</para><para>If <emphasis>red</emphasis> = green = blue = -1 then use either the current mask colour if set or find, use, and set a suitable mask colour for any newly exposed areas.</para><para><simplesect kind="return"><para>The (modified) image itself.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_image_1a8c3ef171a27cdb93a315eb78cf7b0377" kindref="member">Size()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="816"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a17daea3936f98c3b25204ab2b938a55a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image" kindref="compound">wxImage</ref></type>
        <definition>wxImage wxImage::Rotate</definition>
        <argsstring>(double angle, const wxPoint &amp;rotationCentre, bool interpolating=true, wxPoint *offsetAfterRotation=NULL) const </argsstring>
        <name>Rotate</name>
        <param>
          <type>double</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>rotationCentre</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>interpolating</declname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="classwx_point" kindref="compound">wxPoint</ref> *</type>
          <declname>offsetAfterRotation</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Rotates the image about the given point, by <emphasis>angle</emphasis> radians. </para>        </briefdescription>
        <detaileddescription>
<para>Passing true to <emphasis>interpolating</emphasis> results in better image quality, but is slower.</para><para>If the image has a mask, then the mask colour is used for the uncovered pixels in the rotated image background. Else, black (rgb 0, 0, 0) will be used.</para><para>Returns the rotated image, leaving this image intact. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="830"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a55e17b1b5e664904c7b4946d315df168" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image" kindref="compound">wxImage</ref></type>
        <definition>wxImage wxImage::Rotate90</definition>
        <argsstring>(bool clockwise=true) const </argsstring>
        <name>Rotate90</name>
        <param>
          <type>bool</type>
          <declname>clockwise</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Returns a copy of the image rotated 90 degrees in the direction indicated by <emphasis>clockwise</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="836"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a227870b034b06a9b1869ce636af8fea6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image" kindref="compound">wxImage</ref></type>
        <definition>wxImage wxImage::Rotate180</definition>
        <argsstring>() const </argsstring>
        <name>Rotate180</name>
        <briefdescription>
<para>Returns a copy of the image rotated by 180 degrees. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.9.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="843"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a96a43d7bbb26ed775fa10c979c6e511f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxImage::RotateHue</definition>
        <argsstring>(double angle)</argsstring>
        <name>RotateHue</name>
        <param>
          <type>double</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>Rotates the hue of each pixel in the image by <emphasis>angle</emphasis>, which is a double in the range of -1.0 to +1.0, where -1.0 corresponds to -360 degrees and +1.0 corresponds to +360 degrees. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="850"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1aaf10a9f0a8284a9ccfe988d0a470d4e9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image" kindref="compound">wxImage</ref></type>
        <definition>wxImage wxImage::Scale</definition>
        <argsstring>(int width, int height, wxImageResizeQuality quality=wxIMAGE_QUALITY_NORMAL) const </argsstring>
        <name>Scale</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="image_8h_1a8cb59f5925c96a706710106f679d171a" kindref="member">wxImageResizeQuality</ref></type>
          <declname>quality</declname>
          <defval>wxIMAGE_QUALITY_NORMAL</defval>
        </param>
        <briefdescription>
<para>Returns a scaled version of the image. </para>        </briefdescription>
        <detaileddescription>
<para>This is also useful for scaling bitmaps in general as the only other way to scale bitmaps is to blit a <ref refid="classwx_memory_d_c" kindref="compound">wxMemoryDC</ref> into another <ref refid="classwx_memory_d_c" kindref="compound">wxMemoryDC</ref>.</para><para>The parameter <emphasis>quality</emphasis> determines what method to use for resampling the image, see wxImageResizeQuality documentation.</para><para>It should be noted that although using <computeroutput>wxIMAGE_QUALITY_HIGH</computeroutput> produces much nicer looking results it is a slower method. Downsampling will use the box averaging method which seems to operate very fast. If you are upsampling larger images using this method you will most likely notice that it is a bit slower and in extreme cases it will be quite substantially slower as the bicubic algorithm has to process a lot of data.</para><para>It should also be noted that the high quality scaling may not work as expected when using a single mask colour for transparency, as the scaling will blur the image and will therefore remove the mask partially. Using the alpha channel will work.</para><para>Example: <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>bitmap<sp/>from<sp/>somewhere</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_bitmap" kindref="compound" tooltip="This class encapsulates the concept of a platform-dependent bitmap, either monochrome or colour or co...">wxBitmap</ref><sp/>bmp<sp/>=<sp/>...;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rescale<sp/>it<sp/>to<sp/>have<sp/>size<sp/>of<sp/>32*32</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bmp.<ref refid="classwx_bitmap_1a513b5dc67c3ffa7c9a6a5aacbc5ed0f2" kindref="member" tooltip="Gets the width of the bitmap in pixels.">GetWidth</ref>()<sp/>!=<sp/>32<sp/>||<sp/>bmp.<ref refid="classwx_bitmap_1a43fa1cfa77a428259d68e6a237aaeba2" kindref="member" tooltip="Gets the height of the bitmap in pixels.">GetHeight</ref>()<sp/>!=<sp/>32<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_image" kindref="compound" tooltip="This class encapsulates a platform-independent image.">wxImage</ref><sp/>image<sp/>=<sp/>bmp.<ref refid="classwx_bitmap_1a063fed54a77f63d2cfa69d12f9035fe2" kindref="member" tooltip="Creates an image from a platform-dependent bitmap.">ConvertToImage</ref>();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmp<sp/>=<sp/><ref refid="classwx_bitmap" kindref="compound" tooltip="This class encapsulates the concept of a platform-dependent bitmap, either monochrome or colour or co...">wxBitmap</ref>(image.<ref refid="classwx_image_1aaf10a9f0a8284a9ccfe988d0a470d4e9" kindref="member" tooltip="Returns a scaled version of the image.">Scale</ref>(32,<sp/>32));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>another<sp/>possibility:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image.<ref refid="classwx_image_1a35227071eb0de3c0c035324838071001" kindref="member" tooltip="Changes the size of the image in-place by scaling it: after a call to this function,the image will have the given width and height.">Rescale</ref>(32,<sp/>32);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmp<sp/>=<sp/>image;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
</programlisting></para><para><simplesect kind="see"><para><ref refid="classwx_image_1a35227071eb0de3c0c035324838071001" kindref="member">Rescale()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="893"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a8c3ef171a27cdb93a315eb78cf7b0377" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image" kindref="compound">wxImage</ref></type>
        <definition>wxImage wxImage::Size</definition>
        <argsstring>(const wxSize &amp;size, const wxPoint &amp;pos, int red=-1, int green=-1, int blue=-1) const </argsstring>
        <name>Size</name>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>red</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>green</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>blue</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Returns a resized version of this image without scaling it by adding either a border with the given colour or cropping as necessary. </para>        </briefdescription>
        <detaileddescription>
<para>The image is pasted into a new image with the given <emphasis>size</emphasis> and background colour at the position <emphasis>pos</emphasis> relative to the upper left of the new image.</para><para>If <emphasis>red</emphasis> = green = blue = -1 then the areas of the larger image not covered by this image are made transparent by filling them with the image mask colour (which will be allocated automatically if it isn&apos;t currently set).</para><para>Otherwise, the areas will be filled with the colour with the specified RGB components.</para><para><simplesect kind="see"><para><ref refid="classwx_image_1ac4dd8e967436c3206dfe4460345af794" kindref="member">Resize()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="911"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Conversion functions</header>
      <memberdef kind="function" id="classwx_image_1a3951b3fc49b0ff7154b109d63533a31f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxImage::ConvertAlphaToMask</definition>
        <argsstring>(unsigned char threshold=wxIMAGE_ALPHA_THRESHOLD)</argsstring>
        <name>ConvertAlphaToMask</name>
        <param>
          <type>unsigned char</type>
          <declname>threshold</declname>
          <defval><ref refid="image_8h_1ab038b59ef0b8209ae59f38c9e26de410" kindref="member">wxIMAGE_ALPHA_THRESHOLD</ref></defval>
        </param>
        <briefdescription>
<para>If the image has alpha channel, this method converts it to mask. </para>        </briefdescription>
        <detaileddescription>
<para>If the image has an alpha channel, all pixels with alpha value less than <emphasis>threshold</emphasis> are replaced with the mask colour and the alpha channel is removed. Otherwise nothing is done.</para><para>The mask colour is chosen automatically using <ref refid="classwx_image_1adfd2a60833d72432a0a28b54ca83a2d0" kindref="member">FindFirstUnusedColour()</ref> by this function, see the overload below if you this is not appropriate.</para><para><simplesect kind="return"><para>Returns true on success, false on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="934"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a73c3cd71be1f97da115689a0387d197c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxImage::ConvertAlphaToMask</definition>
        <argsstring>(unsigned char mr, unsigned char mg, unsigned char mb, unsigned char threshold=wxIMAGE_ALPHA_THRESHOLD)</argsstring>
        <name>ConvertAlphaToMask</name>
        <param>
          <type>unsigned char</type>
          <declname>mr</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>mg</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>mb</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>threshold</declname>
          <defval><ref refid="image_8h_1ab038b59ef0b8209ae59f38c9e26de410" kindref="member">wxIMAGE_ALPHA_THRESHOLD</ref></defval>
        </param>
        <briefdescription>
<para>If the image has alpha channel, this method converts it to mask using the specified colour as the mask colour. </para>        </briefdescription>
        <detaileddescription>
<para>If the image has an alpha channel, all pixels with alpha value less than <emphasis>threshold</emphasis> are replaced with the mask colour and the alpha channel is removed. Otherwise nothing is done.</para><para><simplesect kind="since"><para>2.9.0</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mr</parametername>
</parameternamelist>
<parameterdescription>
<para>The red component of the mask colour. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mg</parametername>
</parameternamelist>
<parameterdescription>
<para>The green component of the mask colour. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mb</parametername>
</parameternamelist>
<parameterdescription>
<para>The blue component of the mask colour. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>Pixels with alpha channel values below the given threshold are considered to be transparent, i.e. the corresponding mask pixels are set. Pixels with the alpha values above the threshold are considered to be opaque.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true on success, false on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="961"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1af1642edf492e25cddf76edd80db5e4fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image" kindref="compound">wxImage</ref></type>
        <definition>wxImage wxImage::ConvertToGreyscale</definition>
        <argsstring>(double weight_r, double weight_g, double weight_b) const </argsstring>
        <name>ConvertToGreyscale</name>
        <param>
          <type>double</type>
          <declname>weight_r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>weight_g</declname>
        </param>
        <param>
          <type>double</type>
          <declname>weight_b</declname>
        </param>
        <briefdescription>
<para>Returns a greyscale version of the image. </para>        </briefdescription>
        <detaileddescription>
<para>The returned image uses the luminance component of the original to calculate the greyscale. Defaults to using the standard ITU-T BT.601 when converting to YUV, where every pixel equals (R * <emphasis>weight_r</emphasis>) + (G * <emphasis>weight_g</emphasis>) + (B * <emphasis>weight_b</emphasis>). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="971"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a7541045f59badbacceb6224d0602300e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image" kindref="compound">wxImage</ref></type>
        <definition>wxImage wxImage::ConvertToGreyscale</definition>
        <argsstring>() const </argsstring>
        <name>ConvertToGreyscale</name>
        <briefdescription>
<para>Returns a greyscale version of the image. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.9.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="977"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1af9cebf3961f432b6c750463c52c9a96b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image" kindref="compound">wxImage</ref></type>
        <definition>wxImage wxImage::ConvertToMono</definition>
        <argsstring>(unsigned char r, unsigned char g, unsigned char b) const </argsstring>
        <name>ConvertToMono</name>
        <param>
          <type>unsigned char</type>
          <declname>r</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>g</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Returns monochromatic version of the image. </para>        </briefdescription>
        <detaileddescription>
<para>The returned image has white colour where the original has <emphasis></emphasis>(r,g,b) colour and black colour everywhere else. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="985"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a5f5b9ac6ab0caa7b567a2fb3120f77db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image" kindref="compound">wxImage</ref></type>
        <definition>wxImage wxImage::ConvertToDisabled</definition>
        <argsstring>(unsigned char brightness=255) const </argsstring>
        <name>ConvertToDisabled</name>
        <param>
          <type>unsigned char</type>
          <declname>brightness</declname>
          <defval>255</defval>
        </param>
        <briefdescription>
<para>Returns disabled (dimmed) version of the image. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.9.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="991"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Miscellaneous functions</header>
      <memberdef kind="function" id="classwx_image_1a7c9d557cd7ad577ed76e4337b1fd843a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long wxImage::ComputeHistogram</definition>
        <argsstring>(wxImageHistogram &amp;histogram) const </argsstring>
        <name>ComputeHistogram</name>
        <param>
          <type><ref refid="classwx_image_histogram" kindref="compound">wxImageHistogram</ref> &amp;</type>
          <declname>histogram</declname>
        </param>
        <briefdescription>
<para>Computes the histogram of the image. </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>histogram</emphasis> is a reference to <ref refid="classwx_image_histogram" kindref="compound">wxImageHistogram</ref> object. <ref refid="classwx_image_histogram" kindref="compound">wxImageHistogram</ref> is a specialization of <ref refid="classwx_hash_map" kindref="compound">wxHashMap</ref> &quot;template&quot; and is defined as follows:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">WXDLLEXPORT<sp/>wxImageHistogramEntry</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxImageHistogramEntry()<sp/>:<sp/>index(0),<sp/>value(0)<sp/>{}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>index;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WX_DECLARE_EXPORTED_HASH_MAP(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>wxImageHistogramEntry,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxIntegerHash,<sp/>wxIntegerEqual,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_image_histogram" kindref="compound">wxImageHistogram</ref>);</highlight></codeline>
</programlisting></para><para><simplesect kind="return"><para>Returns number of colours in the histogram. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1022"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1adfd2a60833d72432a0a28b54ca83a2d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxImage::FindFirstUnusedColour</definition>
        <argsstring>(unsigned char *r, unsigned char *g, unsigned char *b, unsigned char startR=1, unsigned char startG=0, unsigned char startB=0) const </argsstring>
        <name>FindFirstUnusedColour</name>
        <param>
          <type>unsigned char *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>startR</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>startG</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>startB</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Finds the first colour that is never used in the image. </para>        </briefdescription>
        <detaileddescription>
<para>The search begins at given initial colour and continues by increasing R, G and B components (in this order) by 1 until an unused colour is found or the colour space exhausted.</para><para>The parameters <emphasis>r</emphasis>, <emphasis>g</emphasis>, <emphasis>b</emphasis> are pointers to variables to save the colour.</para><para>The parameters <emphasis>startR</emphasis>, <emphasis>startG</emphasis>, <emphasis>startB</emphasis> define the initial values of the colour. The returned colour will have RGB values equal to or greater than these.</para><para><simplesect kind="return"><para>Returns false if there is no unused colour left, true on success.</para></simplesect>
<simplesect kind="note"><para>This method involves computing the histogram, which is a computationally intensive operation. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1045"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a4be78fed2c5a82d53114d77aad916371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image" kindref="compound">wxImage</ref> &amp;</type>
        <definition>wxImage&amp; wxImage::operator=</definition>
        <argsstring>(const wxImage &amp;image)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classwx_image" kindref="compound">wxImage</ref> &amp;</type>
          <declname>image</declname>
        </param>
        <briefdescription>
<para>Assignment operator, using <ref refid="overview_refcount" kindref="compound">reference counting</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>Image to assign.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns &apos;this&apos; object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1055"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Getters</header>
      <memberdef kind="function" id="classwx_image_1a8e68eb081e49f51cc0410431385f9be9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char* wxImage::GetAlpha</definition>
        <argsstring>() const </argsstring>
        <name>GetAlpha</name>
        <briefdescription>
<para>Returns pointer to the array storing the alpha values for this image. </para>        </briefdescription>
        <detaileddescription>
<para>This pointer is NULL for the images without the alpha channel. If the image does have it, this pointer may be used to directly manipulate the alpha values which are stored as the RGB ones. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1072"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a5cac38e8fd2536852406d9c8daa55023" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char* wxImage::GetData</definition>
        <argsstring>() const </argsstring>
        <name>GetData</name>
        <briefdescription>
<para>Returns the image data as an array. </para>        </briefdescription>
        <detaileddescription>
<para>This is most often used when doing direct image manipulation. The return value points to an array of characters in RGBRGBRGB... format in the top-to-bottom, left-to-right order, that is the first RGB triplet corresponds to the pixel first pixel of the first row, the second one --- to the second pixel of the first row and so on until the end of the first row, with second row following after it and so on.</para><para>You should not delete the returned pointer nor pass it to <ref refid="classwx_image_1a736a8fc26d32e5eab70682b115bacacf" kindref="member">SetData()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1086"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a406fe67d895c815386bfd2c697a1a667" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char wxImage::GetAlpha</definition>
        <argsstring>(int x, int y) const </argsstring>
        <name>GetAlpha</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Return alpha value at given pixel location. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1091"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1ade7e4b89f960bffbc09a88863145397a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char wxImage::GetRed</definition>
        <argsstring>(int x, int y) const </argsstring>
        <name>GetRed</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Returns the red intensity at the given coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1096"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a43533994a507cd8f419759cddeef8df2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char wxImage::GetGreen</definition>
        <argsstring>(int x, int y) const </argsstring>
        <name>GetGreen</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Returns the green intensity at the given coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1101"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a19bf61cbc4d66512f3244149886f2e9f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char wxImage::GetBlue</definition>
        <argsstring>(int x, int y) const </argsstring>
        <name>GetBlue</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Returns the blue intensity at the given coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1106"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1aa9c4b367f98baac91c77f863351f7c26" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char wxImage::GetMaskRed</definition>
        <argsstring>() const </argsstring>
        <name>GetMaskRed</name>
        <briefdescription>
<para>Gets the red value of the mask colour. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1111"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1acf6994b3c2706193ee910c3836e6b0ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char wxImage::GetMaskGreen</definition>
        <argsstring>() const </argsstring>
        <name>GetMaskGreen</name>
        <briefdescription>
<para>Gets the green value of the mask colour. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1116"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1ad5f1fc61f1343633ba80f3402f19956c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char wxImage::GetMaskBlue</definition>
        <argsstring>() const </argsstring>
        <name>GetMaskBlue</name>
        <briefdescription>
<para>Gets the blue value of the mask colour. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1121"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1abd2c9f02c948813eb23ae45481977995" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxImage::GetWidth</definition>
        <argsstring>() const </argsstring>
        <name>GetWidth</name>
        <briefdescription>
<para>Gets the width of the image in pixels. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_image_1a73d10c7d8ea36dc5421f2713ce1d9e48" kindref="member">GetHeight()</ref>, <ref refid="classwx_image_1aae7bbee7b8b53302e3656b93bba217cd" kindref="member">GetSize()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1128"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a73d10c7d8ea36dc5421f2713ce1d9e48" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxImage::GetHeight</definition>
        <argsstring>() const </argsstring>
        <name>GetHeight</name>
        <briefdescription>
<para>Gets the height of the image in pixels. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_image_1abd2c9f02c948813eb23ae45481977995" kindref="member">GetWidth()</ref>, <ref refid="classwx_image_1aae7bbee7b8b53302e3656b93bba217cd" kindref="member">GetSize()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1135"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1aae7bbee7b8b53302e3656b93bba217cd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxImage::GetSize</definition>
        <argsstring>() const </argsstring>
        <name>GetSize</name>
        <briefdescription>
<para>Returns the size of the image in pixels. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.9.0</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_image_1a73d10c7d8ea36dc5421f2713ce1d9e48" kindref="member">GetHeight()</ref>, <ref refid="classwx_image_1abd2c9f02c948813eb23ae45481977995" kindref="member">GetWidth()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1144"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1af006480a04b88e20033bab1615e05de4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxImage::GetOption</definition>
        <argsstring>(const wxString &amp;name) const </argsstring>
        <name>GetOption</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Gets a user-defined string-valued option. </para>        </briefdescription>
        <detaileddescription>
<para>Generic options: <itemizedlist>
<listitem><para><computeroutput>wxIMAGE_OPTION_FILENAME:</computeroutput> The name of the file from which the image was loaded.</para></listitem>
</itemizedlist>
Options specific to wxGIFHandler: <itemizedlist>
<listitem><para><computeroutput>wxIMAGE_OPTION_GIF_COMMENT:</computeroutput> The comment text that is read from or written to the GIF file. In an animated GIF each frame can have its own comment. If there is only a comment in the first frame of a GIF it will not be repeated in other frames.</para></listitem>
</itemizedlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the option, case-insensitive. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of the option or an empty string if not found. Use <ref refid="classwx_image_1a868ae81f470e1bef6ca81dd985078782" kindref="member">HasOption()</ref> if an empty string can be a valid option value.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_image_1a952ee065b17ee07a8cbee568486e01a4" kindref="member">SetOption()</ref>, <ref refid="classwx_image_1af752636f2a2baecd5d33cd8e8501c044" kindref="member">GetOptionInt()</ref>, <ref refid="classwx_image_1a868ae81f470e1bef6ca81dd985078782" kindref="member">HasOption()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1167"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1af752636f2a2baecd5d33cd8e8501c044" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxImage::GetOptionInt</definition>
        <argsstring>(const wxString &amp;name) const </argsstring>
        <name>GetOptionInt</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Gets a user-defined integer-valued option. </para>        </briefdescription>
        <detaileddescription>
<para>The function is case-insensitive to <emphasis>name</emphasis>. If the given option is not present, the function returns 0. Use <ref refid="classwx_image_1a868ae81f470e1bef6ca81dd985078782" kindref="member">HasOption()</ref> if 0 is a possibly valid value for the option.</para><para>Generic options: <itemizedlist>
<listitem><para><computeroutput>wxIMAGE_OPTION_MAX_WIDTH</computeroutput> and <computeroutput>wxIMAGE_OPTION_MAX_HEIGHT:</computeroutput> If either of these options is specified, the loaded image will be scaled down (preserving its aspect ratio) so that its width is less than the max width given if it is not 0 <emphasis>and</emphasis> its height is less than the max height given if it is not 0. This is typically used for loading thumbnails and the advantage of using these options compared to calling <ref refid="classwx_image_1a35227071eb0de3c0c035324838071001" kindref="member">Rescale()</ref> after loading is that some handlers (only JPEG one right now) support rescaling the image during loading which is vastly more efficient than loading the entire huge image and rescaling it later (if these options are not supported by the handler, this is still what happens however). These options must be set before calling <ref refid="classwx_image_1aa249e657259fe6518d68a5208b9043d0" kindref="member">LoadFile()</ref> to have any effect.</para></listitem>
</itemizedlist>
<itemizedlist>
<listitem><para><computeroutput>wxIMAGE_OPTION_ORIGINAL_WIDTH</computeroutput> and <computeroutput>wxIMAGE_OPTION_ORIGINAL_HEIGHT:</computeroutput> These options will return the original size of the image if either <computeroutput>wxIMAGE_OPTION_MAX_WIDTH</computeroutput> or <computeroutput>wxIMAGE_OPTION_MAX_HEIGHT</computeroutput> is specified. <simplesect kind="since"><para>2.9.3</para></simplesect>
</para></listitem>
<listitem><para><computeroutput>wxIMAGE_OPTION_QUALITY:</computeroutput> JPEG quality used when saving. This is an integer in 0..100 range with 0 meaning very poor and 100 excellent (but very badly compressed). This option is currently ignored for the other formats.</para></listitem>
</itemizedlist>
<itemizedlist>
<listitem><para><computeroutput>wxIMAGE_OPTION_RESOLUTIONUNIT:</computeroutput> The value of this option determines whether the resolution of the image is specified in centimetres or inches, see wxImageResolution enum elements.</para></listitem>
</itemizedlist>
<itemizedlist>
<listitem><para><computeroutput>wxIMAGE_OPTION_RESOLUTION</computeroutput>, <computeroutput>wxIMAGE_OPTION_RESOLUTIONX</computeroutput> and <computeroutput>wxIMAGE_OPTION_RESOLUTIONY:</computeroutput> These options define the resolution of the image in the units corresponding to <computeroutput>wxIMAGE_OPTION_RESOLUTIONUNIT</computeroutput> options value. The first option can be set before saving the image to set both horizontal and vertical resolution to the same value. The X and Y options are set by the image handlers if they support the image resolution (currently BMP, JPEG and TIFF handlers do) and the image provides the resolution information and can be queried after loading the image.</para></listitem>
</itemizedlist>
Options specific to wxPNGHandler: <itemizedlist>
<listitem><para><computeroutput>wxIMAGE_OPTION_PNG_FORMAT:</computeroutput> Format for saving a PNG file, see wxImagePNGType for the supported values. </para></listitem>
<listitem><para><computeroutput>wxIMAGE_OPTION_PNG_BITDEPTH:</computeroutput> Bit depth for every channel (R/G/B/A). </para></listitem>
<listitem><para><computeroutput>wxIMAGE_OPTION_PNG_FILTER:</computeroutput> Filter for saving a PNG file, see libpng (<ulink url="http://www.libpng.org/pub/png/libpng-1.2.5-manual.html">http://www.libpng.org/pub/png/libpng-1.2.5-manual.html</ulink>) for possible values (e.g. PNG_FILTER_NONE, PNG_FILTER_SUB, PNG_FILTER_UP, etc). </para></listitem>
<listitem><para><computeroutput>wxIMAGE_OPTION_PNG_COMPRESSION_LEVEL:</computeroutput> Compression level (0..9) for saving a PNG file. An high value creates smaller-but-slower PNG file. Note that unlike other formats (e.g. JPEG) the PNG format is always lossless and thus this compression level doesn&apos;t tradeoff the image quality. </para></listitem>
<listitem><para><computeroutput>wxIMAGE_OPTION_PNG_COMPRESSION_MEM_LEVEL:</computeroutput> Compression memory usage level (1..9) for saving a PNG file. An high value means the saving process consumes more memory, but may create smaller PNG file. </para></listitem>
<listitem><para><computeroutput>wxIMAGE_OPTION_PNG_COMPRESSION_STRATEGY:</computeroutput> Possible values are 0 for default strategy, 1 for filter, and 2 for Huffman-only. You can use OptiPNG (<ulink url="http://optipng.sourceforge.net/">http://optipng.sourceforge.net/</ulink>) to get a suitable value for your application. </para></listitem>
<listitem><para><computeroutput>wxIMAGE_OPTION_PNG_COMPRESSION_BUFFER_SIZE:</computeroutput> Internal buffer size (in bytes) for saving a PNG file. Ideally this should be as big as the resulting PNG file. Use this option if your application produces images with small size variation.</para></listitem>
</itemizedlist>
Options specific to wxTIFFHandler: <itemizedlist>
<listitem><para><computeroutput>wxIMAGE_OPTION_TIFF_BITSPERSAMPLE:</computeroutput> Number of bits per sample (channel). Currently values of 1 and 8 are supported. A value of 1 results in a black and white image. A value of 8 (the default) can mean greyscale or RGB, depending on the value of <computeroutput>wxIMAGE_OPTION_TIFF_SAMPLESPERPIXEL</computeroutput>. </para></listitem>
<listitem><para><computeroutput>wxIMAGE_OPTION_TIFF_SAMPLESPERPIXEL:</computeroutput> Number of samples (channels) per pixel. Currently values of 1 and 3 are supported. A value of 1 results in either a greyscale (by default) or black and white image, depending on the value of <computeroutput>wxIMAGE_OPTION_TIFF_BITSPERSAMPLE</computeroutput>. A value of 3 (the default) will result in an RGB image. </para></listitem>
<listitem><para><computeroutput>wxIMAGE_OPTION_TIFF_COMPRESSION:</computeroutput> Compression type. By default it is set to 1 (COMPRESSION_NONE). Typical other values are 5 (COMPRESSION_LZW) and 7 (COMPRESSION_JPEG). See tiff.h for more options. </para></listitem>
<listitem><para><computeroutput>wxIMAGE_OPTION_TIFF_PHOTOMETRIC:</computeroutput> Specifies the photometric interpretation. By default it is set to 2 (PHOTOMETRIC_RGB) for RGB images and 0 (PHOTOMETRIC_MINISWHITE) for greyscale or black and white images. It can also be set to 1 (PHOTOMETRIC_MINISBLACK) to treat the lowest value as black and highest as white. If you want a greyscale image it is also sufficient to only specify <computeroutput>wxIMAGE_OPTION_TIFF_PHOTOMETRIC</computeroutput> and set it to either PHOTOMETRIC_MINISWHITE or PHOTOMETRIC_MINISBLACK. The other values are taken care of.</para></listitem>
</itemizedlist>
<simplesect kind="note"><para>Be careful when combining the options <computeroutput>wxIMAGE_OPTION_TIFF_SAMPLESPERPIXEL</computeroutput>, <computeroutput>wxIMAGE_OPTION_TIFF_BITSPERSAMPLE</computeroutput>, and <computeroutput>wxIMAGE_OPTION_TIFF_PHOTOMETRIC</computeroutput>. While some measures are taken to prevent illegal combinations and/or values, it is still easy to abuse them and come up with invalid results in the form of either corrupted images or crashes.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the option, case-insensitive. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of the option or 0 if not found. Use <ref refid="classwx_image_1a868ae81f470e1bef6ca81dd985078782" kindref="member">HasOption()</ref> if 0 can be a valid option value.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_image_1a952ee065b17ee07a8cbee568486e01a4" kindref="member">SetOption()</ref>, <ref refid="classwx_image_1af006480a04b88e20033bab1615e05de4" kindref="member">GetOption()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1280"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a8262377d07012664242529bca77f91ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxImage::GetOrFindMaskColour</definition>
        <argsstring>(unsigned char *r, unsigned char *g, unsigned char *b) const </argsstring>
        <name>GetOrFindMaskColour</name>
        <param>
          <type>unsigned char *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Get the current mask colour or find a suitable unused colour that could be used as a mask colour. </para>        </briefdescription>
        <detaileddescription>
<para>Returns true if the image currently has a mask. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1287"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a055f1cd8ae68ae83204ecc3b0fff0f57" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_palette" kindref="compound">wxPalette</ref> &amp;</type>
        <definition>const wxPalette&amp; wxImage::GetPalette</definition>
        <argsstring>() const </argsstring>
        <name>GetPalette</name>
        <briefdescription>
<para>Returns the palette associated with the image. </para>        </briefdescription>
        <detaileddescription>
<para>Currently the palette is only used when converting to <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> under Windows.</para><para>Some of the <ref refid="classwx_image" kindref="compound">wxImage</ref> handlers have been modified to set the palette if one exists in the image file (usually 256 or less colour images in GIF or PNG format). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1297"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a54967a3c86a41b62712dfa16fffa8cda" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image" kindref="compound">wxImage</ref></type>
        <definition>wxImage wxImage::GetSubImage</definition>
        <argsstring>(const wxRect &amp;rect) const </argsstring>
        <name>GetSubImage</name>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
<para>Returns a sub image of the current one as long as the rect belongs entirely to the image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1303"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1ac711680e14facac5476a4a2946b7dc42" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gdicmn_8h_1a90a1eb6d85b5044a99b706fd979f27f5" kindref="member">wxBitmapType</ref></type>
        <definition>wxBitmapType wxImage::GetType</definition>
        <argsstring>() const </argsstring>
        <name>GetType</name>
        <briefdescription>
<para>Gets the type of image found by <ref refid="classwx_image_1aa249e657259fe6518d68a5208b9043d0" kindref="member">LoadFile()</ref> or specified with <ref refid="classwx_image_1adbdd72be525d71ebb3fe01a5de02607c" kindref="member">SaveFile()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.9.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1310"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1abd42fd2c579837850ab5909ab2bf200c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxImage::HasAlpha</definition>
        <argsstring>() const </argsstring>
        <name>HasAlpha</name>
        <briefdescription>
<para>Returns true if this image has alpha channel, false otherwise. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_image_1a8e68eb081e49f51cc0410431385f9be9" kindref="member">GetAlpha()</ref>, <ref refid="classwx_image_1ab46f59f69221258da1397fd7c59e8671" kindref="member">SetAlpha()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1317"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a6b5285194b6416122381cf8b824a156d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxImage::HasMask</definition>
        <argsstring>() const </argsstring>
        <name>HasMask</name>
        <briefdescription>
<para>Returns true if there is a mask active, false otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1322"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a868ae81f470e1bef6ca81dd985078782" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxImage::HasOption</definition>
        <argsstring>(const wxString &amp;name) const </argsstring>
        <name>HasOption</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns true if the given option is present. </para>        </briefdescription>
        <detaileddescription>
<para>The function is case-insensitive to <emphasis>name</emphasis>.</para><para>The lists of the currently supported options are in <ref refid="classwx_image_1af006480a04b88e20033bab1615e05de4" kindref="member">GetOption()</ref> and <ref refid="classwx_image_1af752636f2a2baecd5d33cd8e8501c044" kindref="member">GetOptionInt()</ref> function docs.</para><para><simplesect kind="see"><para><ref refid="classwx_image_1a952ee065b17ee07a8cbee568486e01a4" kindref="member">SetOption()</ref>, <ref refid="classwx_image_1af006480a04b88e20033bab1615e05de4" kindref="member">GetOption()</ref>, <ref refid="classwx_image_1af752636f2a2baecd5d33cd8e8501c044" kindref="member">GetOptionInt()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1333"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1ab426714385b517d9367f7595e95714e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxImage::IsOk</definition>
        <argsstring>() const </argsstring>
        <name>IsOk</name>
        <briefdescription>
<para>Returns true if image data is present. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1338"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1adbe6a22287f6bbbfc5dae4514ca62385" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxImage::IsTransparent</definition>
        <argsstring>(int x, int y, unsigned char threshold=wxIMAGE_ALPHA_THRESHOLD) const </argsstring>
        <name>IsTransparent</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>threshold</declname>
          <defval><ref refid="image_8h_1ab038b59ef0b8209ae59f38c9e26de410" kindref="member">wxIMAGE_ALPHA_THRESHOLD</ref></defval>
        </param>
        <briefdescription>
<para>Returns true if the given pixel is transparent, i.e. </para>        </briefdescription>
        <detaileddescription>
<para>either has the mask colour if this image has a mask or if this image has alpha channel and alpha value of this pixel is strictly less than <emphasis>threshold</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1346"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Loading and saving functions</header>
      <memberdef kind="function" id="classwx_image_1aa249e657259fe6518d68a5208b9043d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxImage::LoadFile</definition>
        <argsstring>(wxInputStream &amp;stream, wxBitmapType type=wxBITMAP_TYPE_ANY, int index=-1)</argsstring>
        <name>LoadFile</name>
        <param>
          <type><ref refid="classwx_input_stream" kindref="compound">wxInputStream</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="gdicmn_8h_1a90a1eb6d85b5044a99b706fd979f27f5" kindref="member">wxBitmapType</ref></type>
          <declname>type</declname>
          <defval>wxBITMAP_TYPE_ANY</defval>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Loads an image from an input stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Opened input stream from which to load the image. Currently, the stream must support seeking. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>May be one of the following: <itemizedlist>
<listitem><para>wxBITMAP_TYPE_BMP: Load a Windows bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_GIF: Load a GIF bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_JPEG: Load a JPEG bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_PNG: Load a PNG bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_PCX: Load a PCX bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_PNM: Load a PNM bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_TIFF: Load a TIFF bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_TGA: Load a TGA bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_XPM: Load a XPM bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_ICO: Load a Windows icon file (ICO). </para></listitem>
<listitem><para>wxBITMAP_TYPE_CUR: Load a Windows cursor file (CUR). </para></listitem>
<listitem><para>wxBITMAP_TYPE_ANI: Load a Windows animated cursor file (ANI). </para></listitem>
<listitem><para>wxBITMAP_TYPE_ANY: Will try to autodetect the format. </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the image to load in the case that the image file contains multiple images. This is only used by GIF, ICO and TIFF handlers. The default value (-1) means &quot;choose the default image&quot; and is interpreted as the first image (index=0) by the GIF and TIFF handler and as the largest and most colourful one by the ICO handler.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the operation succeeded, false otherwise. If the optional index parameter is out of range, false is returned and a call to <ref refid="group__group__funcmacro__log_1ga0dd3c633f990f794e76065c9a7af4c87" kindref="member">wxLogError()</ref> takes place.</para></simplesect>
<simplesect kind="remark"><para>Depending on how wxWidgets has been configured, not all formats may be available.</para></simplesect>
<simplesect kind="note"><para>You can use <ref refid="classwx_image_1af752636f2a2baecd5d33cd8e8501c044" kindref="member">GetOptionInt()</ref> to get the hotspot when loading cursor files: <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hotspot_x<sp/>=<sp/>image.<ref refid="classwx_image_1af752636f2a2baecd5d33cd8e8501c044" kindref="member" tooltip="Gets a user-defined integer-valued option.">GetOptionInt</ref>(<ref refid="image_8h_1a22847044c140504122efa4943b0f6e7f" kindref="member">wxIMAGE_OPTION_CUR_HOTSPOT_X</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hotspot_y<sp/>=<sp/>image.<ref refid="classwx_image_1af752636f2a2baecd5d33cd8e8501c044" kindref="member" tooltip="Gets a user-defined integer-valued option.">GetOptionInt</ref>(<ref refid="image_8h_1a420ba1d2430b0c7d92c9a09ccf41fae8" kindref="member">wxIMAGE_OPTION_CUR_HOTSPOT_Y</ref>);</highlight></codeline>
</programlisting></para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_image_1adbdd72be525d71ebb3fe01a5de02607c" kindref="member">SaveFile()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1402"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a2f514d576c0c086249cd39edac0c1bd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxImage::LoadFile</definition>
        <argsstring>(const wxString &amp;name, wxBitmapType type=wxBITMAP_TYPE_ANY, int index=-1)</argsstring>
        <name>LoadFile</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="gdicmn_8h_1a90a1eb6d85b5044a99b706fd979f27f5" kindref="member">wxBitmapType</ref></type>
          <declname>type</declname>
          <defval>wxBITMAP_TYPE_ANY</defval>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Loads an image from a file. </para>        </briefdescription>
        <detaileddescription>
<para>If no handler type is provided, the library will try to autodetect the format.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file from which to load the image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>See the description in the <ref refid="classwx_image_1aa249e657259fe6518d68a5208b9043d0" kindref="member">LoadFile(wxInputStream&amp;, wxBitmapType, int)</ref> overload. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>See the description in the <ref refid="classwx_image_1aa249e657259fe6518d68a5208b9043d0" kindref="member">LoadFile(wxInputStream&amp;, wxBitmapType, int)</ref> overload. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1417"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a5261b155bbc93ed1719462d80ce699be" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxImage::LoadFile</definition>
        <argsstring>(const wxString &amp;name, const wxString &amp;mimetype, int index=-1)</argsstring>
        <name>LoadFile</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>mimetype</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Loads an image from a file. </para>        </briefdescription>
        <detaileddescription>
<para>If no handler type is provided, the library will try to autodetect the format.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file from which to load the image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mimetype</parametername>
</parameternamelist>
<parameterdescription>
<para>MIME type string (for example &apos;image/jpeg&apos;) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>See the description in the <ref refid="classwx_image_1aa249e657259fe6518d68a5208b9043d0" kindref="member">LoadFile(wxInputStream&amp;, wxBitmapType, int)</ref> overload. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1431"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a318ae843ecc2e10fdc460865dff49a99" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxImage::LoadFile</definition>
        <argsstring>(wxInputStream &amp;stream, const wxString &amp;mimetype, int index=-1)</argsstring>
        <name>LoadFile</name>
        <param>
          <type><ref refid="classwx_input_stream" kindref="compound">wxInputStream</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>mimetype</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Loads an image from an input stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Opened input stream from which to load the image. Currently, the stream must support seeking. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mimetype</parametername>
</parameternamelist>
<parameterdescription>
<para>MIME type string (for example &apos;image/jpeg&apos;) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>See the description in the <ref refid="classwx_image_1aa249e657259fe6518d68a5208b9043d0" kindref="member">LoadFile(wxInputStream&amp;, wxBitmapType, int)</ref> overload. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1445"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1adbdd72be525d71ebb3fe01a5de02607c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxImage::SaveFile</definition>
        <argsstring>(wxOutputStream &amp;stream, const wxString &amp;mimetype) const </argsstring>
        <name>SaveFile</name>
        <param>
          <type><ref refid="classwx_output_stream" kindref="compound">wxOutputStream</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>mimetype</declname>
        </param>
        <briefdescription>
<para>Saves an image in the given stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Opened output stream to save the image to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mimetype</parametername>
</parameternamelist>
<parameterdescription>
<para>MIME type.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the operation succeeded, false otherwise.</para></simplesect>
<simplesect kind="remark"><para>Depending on how wxWidgets has been configured, not all formats may be available.</para></simplesect>
<simplesect kind="note"><para>You can use <ref refid="classwx_image_1a952ee065b17ee07a8cbee568486e01a4" kindref="member">SetOption()</ref> to set the hotspot when saving an image into a cursor file (default hotspot is in the centre of the image): <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image.<ref refid="classwx_image_1a952ee065b17ee07a8cbee568486e01a4" kindref="member" tooltip="Sets a user-defined option.">SetOption</ref>(<ref refid="image_8h_1a22847044c140504122efa4943b0f6e7f" kindref="member">wxIMAGE_OPTION_CUR_HOTSPOT_X</ref>,<sp/>hotspotX);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image.<ref refid="classwx_image_1a952ee065b17ee07a8cbee568486e01a4" kindref="member" tooltip="Sets a user-defined option.">SetOption</ref>(<ref refid="image_8h_1a420ba1d2430b0c7d92c9a09ccf41fae8" kindref="member">wxIMAGE_OPTION_CUR_HOTSPOT_Y</ref>,<sp/>hotspotY);</highlight></codeline>
</programlisting></para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_image_1aa249e657259fe6518d68a5208b9043d0" kindref="member">LoadFile()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1471"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a9416097f955a828243cba8431e7044d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxImage::SaveFile</definition>
        <argsstring>(const wxString &amp;name, wxBitmapType type) const </argsstring>
        <name>SaveFile</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="gdicmn_8h_1a90a1eb6d85b5044a99b706fd979f27f5" kindref="member">wxBitmapType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Saves an image in the named file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file to save the image to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Currently these types can be used: <itemizedlist>
<listitem><para>wxBITMAP_TYPE_BMP: Save a BMP image file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_JPEG: Save a JPEG image file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_PNG: Save a PNG image file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_PCX: Save a PCX image file (tries to save as 8-bit if possible, falls back to 24-bit otherwise). </para></listitem>
<listitem><para>wxBITMAP_TYPE_PNM: Save a PNM image file (as raw RGB always). </para></listitem>
<listitem><para>wxBITMAP_TYPE_TIFF: Save a TIFF image file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_XPM: Save a XPM image file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_ICO: Save a Windows icon file (ICO). The size may be up to 255 wide by 127 high. A single image is saved in 8 colors at the size supplied. </para></listitem>
<listitem><para>wxBITMAP_TYPE_CUR: Save a Windows cursor file (CUR). </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1493"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1adef2e0344bfa416816cc4d63c76375e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxImage::SaveFile</definition>
        <argsstring>(const wxString &amp;name, const wxString &amp;mimetype) const </argsstring>
        <name>SaveFile</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>mimetype</declname>
        </param>
        <briefdescription>
<para>Saves an image in the named file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file to save the image to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mimetype</parametername>
</parameternamelist>
<parameterdescription>
<para>MIME type. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1503"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a4c5201cc30a99d5cc006d99100dcf55d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxImage::SaveFile</definition>
        <argsstring>(const wxString &amp;name) const </argsstring>
        <name>SaveFile</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Saves an image in the named file. </para>        </briefdescription>
        <detaileddescription>
<para>File type is determined from the extension of the file name. Note that this function may fail if the extension is not recognized! You can use one of the forms above to save images to files with non-standard extensions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file to save the image to. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1516"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1af8ac6fad3c44385296cdaa1d82358ad0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxImage::SaveFile</definition>
        <argsstring>(wxOutputStream &amp;stream, wxBitmapType type) const </argsstring>
        <name>SaveFile</name>
        <param>
          <type><ref refid="classwx_output_stream" kindref="compound">wxOutputStream</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="gdicmn_8h_1a90a1eb6d85b5044a99b706fd979f27f5" kindref="member">wxBitmapType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Saves an image in the given stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Opened output stream to save the image to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>MIME type. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1526"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Setters</header>
      <memberdef kind="function" id="classwx_image_1ab46f59f69221258da1397fd7c59e8671" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxImage::SetAlpha</definition>
        <argsstring>(unsigned char *alpha=NULL, bool static_data=false)</argsstring>
        <name>SetAlpha</name>
        <param>
          <type>unsigned char *</type>
          <declname>alpha</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>static_data</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>This function is similar to <ref refid="classwx_image_1a736a8fc26d32e5eab70682b115bacacf" kindref="member">SetData()</ref> and has similar restrictions. </para>        </briefdescription>
        <detaileddescription>
<para>The pointer passed to it may however be NULL in which case the function will allocate the alpha array internally -- this is useful to add alpha channel data to an image which doesn&apos;t have any.</para><para>If the pointer is not NULL, it must have one byte for each image pixel and be allocated with malloc(). <ref refid="classwx_image" kindref="compound">wxImage</ref> takes ownership of the pointer and will free it unless <emphasis>static_data</emphasis> parameter is set to true -- in this case the caller should do it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1550"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a882406861db4666fb619af90a1cb4b45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxImage::SetAlpha</definition>
        <argsstring>(int x, int y, unsigned char alpha)</argsstring>
        <name>SetAlpha</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>Sets the alpha value for the given pixel. </para>        </briefdescription>
        <detaileddescription>
<para>This function should only be called if the image has alpha channel data, use <ref refid="classwx_image_1abd42fd2c579837850ab5909ab2bf200c" kindref="member">HasAlpha()</ref> to check for this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1557"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a1b82ae0550626a74c3ee97d9065628b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxImage::ClearAlpha</definition>
        <argsstring>()</argsstring>
        <name>ClearAlpha</name>
        <briefdescription>
<para>Removes the alpha channel from the image. </para>        </briefdescription>
        <detaileddescription>
<para>This function should only be called if the image has alpha channel data, use <ref refid="classwx_image_1abd42fd2c579837850ab5909ab2bf200c" kindref="member">HasAlpha()</ref> to check for this.</para><para><simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1567"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a736a8fc26d32e5eab70682b115bacacf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxImage::SetData</definition>
        <argsstring>(unsigned char *data, bool static_data=false)</argsstring>
        <name>SetData</name>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>static_data</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Sets the image data without performing checks. </para>        </briefdescription>
        <detaileddescription>
<para>The data given must have the size (width*height*3) or results will be unexpected. Don&apos;t use this method if you aren&apos;t sure you know what you are doing.</para><para>The data must have been allocated with <computeroutput>malloc()</computeroutput>, <bold>NOT</bold> with <computeroutput>operator</computeroutput> new.</para><para>If <emphasis>static_data</emphasis> is false, after this call the pointer to the data is owned by the <ref refid="classwx_image" kindref="compound">wxImage</ref> object, that will be responsible for deleting it. Do not pass to this function a pointer obtained through <ref refid="classwx_image_1a5cac38e8fd2536852406d9c8daa55023" kindref="member">GetData()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1583"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1afda57bc7ba823e7c060dbd7698c6ad31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxImage::SetData</definition>
        <argsstring>(unsigned char *data, int new_width, int new_height, bool static_data=false)</argsstring>
        <name>SetData</name>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>new_width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>new_height</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>static_data</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1589"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a62645fe559149a8ee6b27ddc07cfc220" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxImage::SetMask</definition>
        <argsstring>(bool hasMask=true)</argsstring>
        <name>SetMask</name>
        <param>
          <type>bool</type>
          <declname>hasMask</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Specifies whether there is a mask or not. </para>        </briefdescription>
        <detaileddescription>
<para>The area of the mask is determined by the current mask colour. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1596"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a25fcd0777ea579c7a27d78a2a81627e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxImage::SetMaskColour</definition>
        <argsstring>(unsigned char red, unsigned char green, unsigned char blue)</argsstring>
        <name>SetMaskColour</name>
        <param>
          <type>unsigned char</type>
          <declname>red</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>green</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>blue</declname>
        </param>
        <briefdescription>
<para>Sets the mask colour for this image (and tells the image to use the mask). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1602"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1aaa8be307e013440b9a3e4791eab91771" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxImage::SetMaskFromImage</definition>
        <argsstring>(const wxImage &amp;mask, unsigned char mr, unsigned char mg, unsigned char mb)</argsstring>
        <name>SetMaskFromImage</name>
        <param>
          <type>const <ref refid="classwx_image" kindref="compound">wxImage</ref> &amp;</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>mr</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>mg</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>mb</declname>
        </param>
        <briefdescription>
<para>Sets image&apos;s mask so that the pixels that have RGB value of mr,mg,mb in mask will be masked in the image. </para>        </briefdescription>
        <detaileddescription>
<para>This is done by first finding an unused colour in the image, setting this colour as the mask colour and then using this colour to draw all pixels in the image who corresponding pixel in mask has given RGB value.</para><para>The parameter <emphasis>mask</emphasis> is the mask image to extract mask shape from. It must have the same dimensions as the image.</para><para>The parameters <emphasis>mr</emphasis>, <emphasis>mg</emphasis>, <emphasis>mb</emphasis> are the RGB values of the pixels in mask that will be used to create the mask.</para><para><simplesect kind="return"><para>Returns false if mask does not have same dimensions as the image or if there is no unused colour left. Returns true if the mask was successfully applied.</para></simplesect>
<simplesect kind="note"><para>Note that this method involves computing the histogram, which is a computationally intensive operation. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1628"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a952ee065b17ee07a8cbee568486e01a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxImage::SetOption</definition>
        <argsstring>(const wxString &amp;name, const wxString &amp;value)</argsstring>
        <name>SetOption</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets a user-defined option. </para>        </briefdescription>
        <detaileddescription>
<para>The function is case-insensitive to <emphasis>name</emphasis>.</para><para>For example, when saving as a JPEG file, the option <bold>quality</bold> is used, which is a number between 0 and 100 (0 is terrible, 100 is very good).</para><para>The lists of the currently supported options are in <ref refid="classwx_image_1af006480a04b88e20033bab1615e05de4" kindref="member">GetOption()</ref> and <ref refid="classwx_image_1af752636f2a2baecd5d33cd8e8501c044" kindref="member">GetOptionInt()</ref> function docs.</para><para><simplesect kind="see"><para><ref refid="classwx_image_1af006480a04b88e20033bab1615e05de4" kindref="member">GetOption()</ref>, <ref refid="classwx_image_1af752636f2a2baecd5d33cd8e8501c044" kindref="member">GetOptionInt()</ref>, <ref refid="classwx_image_1a868ae81f470e1bef6ca81dd985078782" kindref="member">HasOption()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1641"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1acc3d48af8a50bff5ceca51fd649ec981" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxImage::SetOption</definition>
        <argsstring>(const wxString &amp;name, int value)</argsstring>
        <name>SetOption</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1646"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1acbf3a8b9f954b7da7d65adbb9cc9e026" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxImage::SetPalette</definition>
        <argsstring>(const wxPalette &amp;palette)</argsstring>
        <name>SetPalette</name>
        <param>
          <type>const <ref refid="classwx_palette" kindref="compound">wxPalette</ref> &amp;</type>
          <declname>palette</declname>
        </param>
        <briefdescription>
<para>Associates a palette with the image. </para>        </briefdescription>
        <detaileddescription>
<para>The palette may be used when converting <ref refid="classwx_image" kindref="compound">wxImage</ref> to <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> (MSW only at present) or in file save operations (none as yet). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1654"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a17f90246727d089675e7f44a414280d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxImage::SetRGB</definition>
        <argsstring>(const wxRect &amp;rect, unsigned char red, unsigned char green, unsigned char blue)</argsstring>
        <name>SetRGB</name>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>red</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>green</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>blue</declname>
        </param>
        <briefdescription>
<para>Sets the colour of the pixels within the given rectangle. </para>        </briefdescription>
        <detaileddescription>
<para>This routine performs bounds-checks for the coordinate so it can be considered a safe way to manipulate the data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1665"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1ab4a6c25da79e4f2473246108951906e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxImage::SetType</definition>
        <argsstring>(wxBitmapType type)</argsstring>
        <name>SetType</name>
        <param>
          <type><ref refid="gdicmn_8h_1a90a1eb6d85b5044a99b706fd979f27f5" kindref="member">wxBitmapType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Set the type of image returned by <ref refid="classwx_image_1ac711680e14facac5476a4a2946b7dc42" kindref="member">GetType()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>This method is mostly used internally by the library but can also be called from the user code if the image was created from data in the given bitmap format without using <ref refid="classwx_image_1aa249e657259fe6518d68a5208b9043d0" kindref="member">LoadFile()</ref> (which would set the type correctly automatically).</para><para>Notice that the image must be created before this function is called.</para><para><simplesect kind="since"><para>2.9.0</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>One of bitmap type constants, <computeroutput>wxBITMAP_TYPE_INVALID</computeroutput> is a valid value for it and can be used to reset the bitmap type to default but <computeroutput>wxBITMAP_TYPE_MAX</computeroutput> is not allowed here. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1684"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Handler management functions</header>
      <memberdef kind="function" id="classwx_image_1ab39fb3747dfb8c2d444eff9fe41fa205" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wxImage::AddHandler</definition>
        <argsstring>(wxImageHandler *handler)</argsstring>
        <name>AddHandler</name>
        <param>
          <type><ref refid="classwx_image_handler" kindref="compound">wxImageHandler</ref> *</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Register an image handler. </para>        </briefdescription>
        <detaileddescription>
<para>Typical example of use: <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_image_1ab39fb3747dfb8c2d444eff9fe41fa205" kindref="member" tooltip="Register an image handler.">wxImage::AddHandler</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxPNGHandler);</highlight></codeline>
</programlisting></para><para>See <ref refid="classwx_image_1image_handlers" kindref="member">Available image handlers</ref> for a list of the available handlers. You can also use <ref refid="group__group__funcmacro__appinitterm_1ga27f6c78d5d13374a28022b7bd44c6823" kindref="member">wxInitAllImageHandlers()</ref> to add handlers for all the image formats supported by wxWidgets at once.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>A heap-allocated handler object which will be deleted by <ref refid="classwx_image" kindref="compound">wxImage</ref> if it is removed later by <ref refid="classwx_image_1a70ef86ff481bc18c0a32f5467a071e42" kindref="member">RemoveHandler()</ref> or at program shutdown. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1711"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1aa50b222b999e7cd690f2a5be0e0e9cef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wxImage::CleanUpHandlers</definition>
        <argsstring>()</argsstring>
        <name>CleanUpHandlers</name>
        <briefdescription>
<para>Deletes all image handlers. </para>        </briefdescription>
        <detaileddescription>
<para>This function is called by wxWidgets on exit. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1717"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1abb0458fbb84d41af925f3d2c59d1adde" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image_handler" kindref="compound">wxImageHandler</ref> *</type>
        <definition>static wxImageHandler* wxImage::FindHandler</definition>
        <argsstring>(const wxString &amp;name)</argsstring>
        <name>FindHandler</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Finds the handler with the given name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler name.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the handler if found, NULL otherwise.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_image_handler" kindref="compound">wxImageHandler</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1729"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a2bd74e0e2e3ba7980e09cf14fca86a7c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image_handler" kindref="compound">wxImageHandler</ref> *</type>
        <definition>static wxImageHandler* wxImage::FindHandler</definition>
        <argsstring>(const wxString &amp;extension, wxBitmapType imageType)</argsstring>
        <name>FindHandler</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>extension</declname>
        </param>
        <param>
          <type><ref refid="gdicmn_8h_1a90a1eb6d85b5044a99b706fd979f27f5" kindref="member">wxBitmapType</ref></type>
          <declname>imageType</declname>
        </param>
        <briefdescription>
<para>Finds the handler associated with the given extension and type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>extension</parametername>
</parameternamelist>
<parameterdescription>
<para>The file extension, such as &quot;bmp&quot;. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>imageType</parametername>
</parameternamelist>
<parameterdescription>
<para>The image type; one of the <ref refid="gdicmn_8h_1a90a1eb6d85b5044a99b706fd979f27f5" kindref="member">wxBitmapType</ref> values.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the handler if found, NULL otherwise.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_image_handler" kindref="compound">wxImageHandler</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1744"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1ae7b426b2352950992181c0760425e5e4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image_handler" kindref="compound">wxImageHandler</ref> *</type>
        <definition>static wxImageHandler* wxImage::FindHandler</definition>
        <argsstring>(wxBitmapType imageType)</argsstring>
        <name>FindHandler</name>
        <param>
          <type><ref refid="gdicmn_8h_1a90a1eb6d85b5044a99b706fd979f27f5" kindref="member">wxBitmapType</ref></type>
          <declname>imageType</declname>
        </param>
        <briefdescription>
<para>Finds the handler associated with the given image type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>imageType</parametername>
</parameternamelist>
<parameterdescription>
<para>The image type; one of the <ref refid="gdicmn_8h_1a90a1eb6d85b5044a99b706fd979f27f5" kindref="member">wxBitmapType</ref> values.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the handler if found, NULL otherwise.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_image_handler" kindref="compound">wxImageHandler</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1756"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a5e3f7cb7089c70f91e977fa2fa896b52" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image_handler" kindref="compound">wxImageHandler</ref> *</type>
        <definition>static wxImageHandler* wxImage::FindHandlerMime</definition>
        <argsstring>(const wxString &amp;mimetype)</argsstring>
        <name>FindHandlerMime</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>mimetype</declname>
        </param>
        <briefdescription>
<para>Finds the handler associated with the given MIME type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mimetype</parametername>
</parameternamelist>
<parameterdescription>
<para>MIME type.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the handler if found, NULL otherwise.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_image_handler" kindref="compound">wxImageHandler</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1768"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a4c3a141a4d1e953e7e64e4c9477a76fb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxList &amp;</type>
        <definition>static wxList&amp; wxImage::GetHandlers</definition>
        <argsstring>()</argsstring>
        <name>GetHandlers</name>
        <briefdescription>
<para>Returns the static list of image format handlers. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_image_handler" kindref="compound">wxImageHandler</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1775"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1ab2f032e0b7766dc69d4f092f4a55fd60" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wxImage::InitStandardHandlers</definition>
        <argsstring>()</argsstring>
        <name>InitStandardHandlers</name>
        <briefdescription>
<para>Internal use only. </para>        </briefdescription>
        <detaileddescription>
<para>Adds standard image format handlers. It only install wxBMPHandler for the time being, which is used by <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref>.</para><para>This function is called by wxWidgets on startup, and shouldn&apos;t be called by the user.</para><para><simplesect kind="see"><para><ref refid="classwx_image_handler" kindref="compound">wxImageHandler</ref>, <ref refid="group__group__funcmacro__appinitterm_1ga27f6c78d5d13374a28022b7bd44c6823" kindref="member">wxInitAllImageHandlers()</ref>, <ref refid="classwx_quantize" kindref="compound">wxQuantize</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1786"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1adcecda55890d6e9e3c827751a9ec42b0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wxImage::InsertHandler</definition>
        <argsstring>(wxImageHandler *handler)</argsstring>
        <name>InsertHandler</name>
        <param>
          <type><ref refid="classwx_image_handler" kindref="compound">wxImageHandler</ref> *</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Adds a handler at the start of the static list of format handlers. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>A new image format handler object. There is usually only one instance of a given handler class in an application session.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classwx_image_handler" kindref="compound">wxImageHandler</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1797"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a70ef86ff481bc18c0a32f5467a071e42" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool wxImage::RemoveHandler</definition>
        <argsstring>(const wxString &amp;name)</argsstring>
        <name>RemoveHandler</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Finds the handler with the given name, and removes it. </para>        </briefdescription>
        <detaileddescription>
<para>The handler is also deleted.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler name.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the handler was found and removed, false otherwise.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_image_handler" kindref="compound">wxImageHandler</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1811"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_image_1abea8ef407ac0c0cf829ea8a3c9e101ee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int wxImage::GetImageCount</definition>
        <argsstring>(const wxString &amp;filename, wxBitmapType type=wxBITMAP_TYPE_ANY)</argsstring>
        <name>GetImageCount</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="gdicmn_8h_1a90a1eb6d85b5044a99b706fd979f27f5" kindref="member">wxBitmapType</ref></type>
          <declname>type</declname>
          <defval>wxBITMAP_TYPE_ANY</defval>
        </param>
        <briefdescription>
<para>If the image file contains more than one image and the image handler is capable of retrieving these individually, this function will return the number of available images. </para>        </briefdescription>
        <detaileddescription>
<para>For the overload taking the parameter <emphasis>filename</emphasis>, that&apos;s the name of the file to query. For the overload taking the parameter <emphasis>stream</emphasis>, that&apos;s the opened input stream with image data.</para><para>See <ref refid="classwx_image_handler_1a06a38c24bf48bff1745f042c3b1cd16b" kindref="member">wxImageHandler::GetImageCount()</ref> for more info.</para><para>The parameter <emphasis>type</emphasis> may be one of the following values: <itemizedlist>
<listitem><para>wxBITMAP_TYPE_BMP: Load a Windows bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_GIF: Load a GIF bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_JPEG: Load a JPEG bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_PNG: Load a PNG bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_PCX: Load a PCX bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_PNM: Load a PNM bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_TIFF: Load a TIFF bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_TGA: Load a TGA bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_XPM: Load a XPM bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_ICO: Load a Windows icon file (ICO). </para></listitem>
<listitem><para>wxBITMAP_TYPE_CUR: Load a Windows cursor file (CUR). </para></listitem>
<listitem><para>wxBITMAP_TYPE_ANI: Load a Windows animated cursor file (ANI). </para></listitem>
<listitem><para>wxBITMAP_TYPE_ANY: Will try to autodetect the format.</para></listitem>
</itemizedlist>
<simplesect kind="return"><para>Number of available images. For most image handlers, this is 1 (exceptions are TIFF and ICO formats as well as animated GIFs for which this function returns the number of frames in the animation). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1866"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a54665a3517668fab312e7205de0b88ca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int wxImage::GetImageCount</definition>
        <argsstring>(wxInputStream &amp;stream, wxBitmapType type=wxBITMAP_TYPE_ANY)</argsstring>
        <name>GetImageCount</name>
        <param>
          <type><ref refid="classwx_input_stream" kindref="compound">wxInputStream</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="gdicmn_8h_1a90a1eb6d85b5044a99b706fd979f27f5" kindref="member">wxBitmapType</ref></type>
          <declname>type</declname>
          <defval>wxBITMAP_TYPE_ANY</defval>
        </param>
        <briefdescription>
<para>If the image file contains more than one image and the image handler is capable of retrieving these individually, this function will return the number of available images. </para>        </briefdescription>
        <detaileddescription>
<para>For the overload taking the parameter <emphasis>filename</emphasis>, that&apos;s the name of the file to query. For the overload taking the parameter <emphasis>stream</emphasis>, that&apos;s the opened input stream with image data.</para><para>See <ref refid="classwx_image_handler_1a06a38c24bf48bff1745f042c3b1cd16b" kindref="member">wxImageHandler::GetImageCount()</ref> for more info.</para><para>The parameter <emphasis>type</emphasis> may be one of the following values: <itemizedlist>
<listitem><para>wxBITMAP_TYPE_BMP: Load a Windows bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_GIF: Load a GIF bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_JPEG: Load a JPEG bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_PNG: Load a PNG bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_PCX: Load a PCX bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_PNM: Load a PNM bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_TIFF: Load a TIFF bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_TGA: Load a TGA bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_XPM: Load a XPM bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_ICO: Load a Windows icon file (ICO). </para></listitem>
<listitem><para>wxBITMAP_TYPE_CUR: Load a Windows cursor file (CUR). </para></listitem>
<listitem><para>wxBITMAP_TYPE_ANI: Load a Windows animated cursor file (ANI). </para></listitem>
<listitem><para>wxBITMAP_TYPE_ANY: Will try to autodetect the format.</para></listitem>
</itemizedlist>
<simplesect kind="return"><para>Number of available images. For most image handlers, this is 1 (exceptions are TIFF and ICO formats as well as animated GIFs for which this function returns the number of frames in the animation). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1868"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_image_1a0a2febdc997f1d09c98f76fdaf85113d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxImage::wxImage</definition>
        <argsstring>()</argsstring>
        <name>wxImage</name>
        <briefdescription>
<para>Creates an empty <ref refid="classwx_image" kindref="compound">wxImage</ref> object without an alpha channel. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="493"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a21652c36c8e51bc696756afeaefe2d01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxImage::wxImage</definition>
        <argsstring>(int width, int height, bool clear=true)</argsstring>
        <name>wxImage</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clear</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Creates an image with the given size and clears it if requested. </para>        </briefdescription>
        <detaileddescription>
<para>Does not create an alpha channel.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the width of the image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the height of the image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clear</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, initialize the image to black. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="507"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1ae071c8cdd85a48655ba59a70aeced3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxImage::wxImage</definition>
        <argsstring>(const wxSize &amp;sz, bool clear=true)</argsstring>
        <name>wxImage</name>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clear</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="512"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a2c97634b43bdd143f34418fb1f98a690" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxImage::wxImage</definition>
        <argsstring>(int width, int height, unsigned char *data, bool static_data=false)</argsstring>
        <name>wxImage</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>static_data</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Creates an image from data in memory. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>static_data</emphasis> is false then the <ref refid="classwx_image" kindref="compound">wxImage</ref> will take ownership of the data and free it afterwards. For this, it has to be allocated with <emphasis>malloc</emphasis>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the width of the image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the height of the image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to RGB data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>static_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates if the data should be free&apos;d after use </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="529"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1ae4dfc16eddb74fca38a10809f56df264" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxImage::wxImage</definition>
        <argsstring>(const wxSize &amp;sz, unsigned char *data, bool static_data=false)</argsstring>
        <name>wxImage</name>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>static_data</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="534"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1abdb7e8a7ca45e63935cda55b45869a7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxImage::wxImage</definition>
        <argsstring>(int width, int height, unsigned char *data, unsigned char *alpha, bool static_data=false)</argsstring>
        <name>wxImage</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>static_data</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Creates an image from data in memory. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>static_data</emphasis> is false then the <ref refid="classwx_image" kindref="compound">wxImage</ref> will take ownership of the data and free it afterwards. For this, it has to be allocated with <emphasis>malloc</emphasis>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the width of the image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the height of the image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to RGB data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to alpha-channel data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>static_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates if the data should be free&apos;d after use </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="554"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1ad4d64f98e90c54902bfd9d445d23db29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxImage::wxImage</definition>
        <argsstring>(const wxSize &amp;sz, unsigned char *data, unsigned char *alpha, bool static_data=false)</argsstring>
        <name>wxImage</name>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>static_data</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="560"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a5ab9262fabb41525bc669c245654579b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxImage::wxImage</definition>
        <argsstring>(const char *const *xpmData)</argsstring>
        <name>wxImage</name>
        <param>
          <type>const char *const *</type>
          <declname>xpmData</declname>
        </param>
        <briefdescription>
<para>Creates an image from XPM data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xpmData</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to XPM image data.</para></parameterdescription>
</parameteritem>
</parameterlist>
<bold>wxPerl Note:</bold> Not supported by wxPerl. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="572"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a02233007383d193ab8e0f89cc1c92864" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxImage::wxImage</definition>
        <argsstring>(const wxString &amp;name, wxBitmapType type=wxBITMAP_TYPE_ANY, int index=-1)</argsstring>
        <name>wxImage</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="gdicmn_8h_1a90a1eb6d85b5044a99b706fd979f27f5" kindref="member">wxBitmapType</ref></type>
          <declname>type</declname>
          <defval>wxBITMAP_TYPE_ANY</defval>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Creates an image from a file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file from which to load the image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>May be one of the following: <itemizedlist>
<listitem><para>wxBITMAP_TYPE_BMP: Load a Windows bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_GIF: Load a GIF bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_JPEG: Load a JPEG bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_PNG: Load a PNG bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_PCX: Load a PCX bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_PNM: Load a PNM bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_TIFF: Load a TIFF bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_TGA: Load a TGA bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_XPM: Load a XPM bitmap file. </para></listitem>
<listitem><para>wxBITMAP_TYPE_ICO: Load a Windows icon file (ICO). </para></listitem>
<listitem><para>wxBITMAP_TYPE_CUR: Load a Windows cursor file (CUR). </para></listitem>
<listitem><para>wxBITMAP_TYPE_ANI: Load a Windows animated cursor file (ANI). </para></listitem>
<listitem><para>wxBITMAP_TYPE_ANY: Will try to autodetect the format. </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the image to load in the case that the image file contains multiple images. This is only used by GIF, ICO and TIFF handlers. The default value (-1) means &quot;choose the default image&quot; and is interpreted as the first image (index=0) by the GIF and TIFF handler and as the largest and most colourful one by the ICO handler.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>Depending on how wxWidgets has been configured and by which handlers have been loaded, not all formats may be available. Any handler other than BMP must be previously initialized with <ref refid="classwx_image_1ab39fb3747dfb8c2d444eff9fe41fa205" kindref="member">wxImage::AddHandler</ref> or wxInitAllImageHandlers.</para></simplesect>
<simplesect kind="note"><para>You can use <ref refid="classwx_image_1af752636f2a2baecd5d33cd8e8501c044" kindref="member">GetOptionInt()</ref> to get the hotspot when loading cursor files: <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hotspot_x<sp/>=<sp/>image.<ref refid="classwx_image_1af752636f2a2baecd5d33cd8e8501c044" kindref="member" tooltip="Gets a user-defined integer-valued option.">GetOptionInt</ref>(<ref refid="image_8h_1a22847044c140504122efa4943b0f6e7f" kindref="member">wxIMAGE_OPTION_CUR_HOTSPOT_X</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hotspot_y<sp/>=<sp/>image.<ref refid="classwx_image_1af752636f2a2baecd5d33cd8e8501c044" kindref="member" tooltip="Gets a user-defined integer-valued option.">GetOptionInt</ref>(<ref refid="image_8h_1a420ba1d2430b0c7d92c9a09ccf41fae8" kindref="member">wxIMAGE_OPTION_CUR_HOTSPOT_Y</ref>);</highlight></codeline>
</programlisting></para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_image_1aa249e657259fe6518d68a5208b9043d0" kindref="member">LoadFile()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="615"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a6ef7dc2eb9aaa9bf34437f7c12aad5f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxImage::wxImage</definition>
        <argsstring>(const wxString &amp;name, const wxString &amp;mimetype, int index=-1)</argsstring>
        <name>wxImage</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>mimetype</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Creates an image from a file using MIME-types to specify the type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file from which to load the image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mimetype</parametername>
</parameternamelist>
<parameterdescription>
<para>MIME type string (for example &apos;image/jpeg&apos;) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>See description in <ref refid="classwx_image_1a02233007383d193ab8e0f89cc1c92864" kindref="member">wxImage(const wxString&amp;, wxBitmapType, int)</ref> overload. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="627"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1add88cc57fe901b715c637e820342d91a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxImage::wxImage</definition>
        <argsstring>(wxInputStream &amp;stream, wxBitmapType type=wxBITMAP_TYPE_ANY, int index=-1)</argsstring>
        <name>wxImage</name>
        <param>
          <type><ref refid="classwx_input_stream" kindref="compound">wxInputStream</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="gdicmn_8h_1a90a1eb6d85b5044a99b706fd979f27f5" kindref="member">wxBitmapType</ref></type>
          <declname>type</declname>
          <defval>wxBITMAP_TYPE_ANY</defval>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Creates an image from a stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Opened input stream from which to load the image. Currently, the stream must support seeking. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>See description in <ref refid="classwx_image_1a02233007383d193ab8e0f89cc1c92864" kindref="member">wxImage(const wxString&amp;, wxBitmapType, int)</ref> overload. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>See description in <ref refid="classwx_image_1a02233007383d193ab8e0f89cc1c92864" kindref="member">wxImage(const wxString&amp;, wxBitmapType, int)</ref> overload. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="640"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1af8df8e96a278f30954592c452b3c0806" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxImage::wxImage</definition>
        <argsstring>(wxInputStream &amp;stream, const wxString &amp;mimetype, int index=-1)</argsstring>
        <name>wxImage</name>
        <param>
          <type><ref refid="classwx_input_stream" kindref="compound">wxInputStream</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>mimetype</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Creates an image from a stream using MIME-types to specify the type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Opened input stream from which to load the image. Currently, the stream must support seeking. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mimetype</parametername>
</parameternamelist>
<parameterdescription>
<para>MIME type string (for example &apos;image/jpeg&apos;) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>See description in <ref refid="classwx_image_1a02233007383d193ab8e0f89cc1c92864" kindref="member">wxImage(const wxString&amp;, wxBitmapType, int)</ref> overload. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="653"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1ac20a9a1f46a1047f5947352afa9f2b09" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxImage::~wxImage</definition>
        <argsstring>()</argsstring>
        <name>~wxImage</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="overview_refcount_1overview_refcount_destruct" kindref="member">reference-counted object destruction</ref> for more info. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="661"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_image_1a786fdfa44290867e1b1fd64bcd26aded" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool wxImage::CanRead</definition>
        <argsstring>(const wxString &amp;filename)</argsstring>
        <name>CanRead</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Returns true if at least one of the available image handlers can read the file with the given name. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_image_handler_1a7c886c9f2192699183e480066e386133" kindref="member">wxImageHandler::CanRead</ref> for more info. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1822"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1aac069cba7821715661e03d9b6eeee98f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool wxImage::CanRead</definition>
        <argsstring>(wxInputStream &amp;stream)</argsstring>
        <name>CanRead</name>
        <param>
          <type><ref refid="classwx_input_stream" kindref="compound">wxInputStream</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Returns true if at least one of the available image handlers can read the data in the given stream. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_image_handler_1a7c886c9f2192699183e480066e386133" kindref="member">wxImageHandler::CanRead</ref> for more info. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1830"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a0ed7bd5c0eba03553b6533e2f79e0ff1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>static wxString wxImage::GetImageExtWildcard</definition>
        <argsstring>()</argsstring>
        <name>GetImageExtWildcard</name>
        <briefdescription>
<para>Iterates all registered <ref refid="classwx_image_handler" kindref="compound">wxImageHandler</ref> objects, and returns a string containing file extension masks suitable for passing to file open/save dialog boxes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The format of the returned string is <computeroutput>&quot;(*.ext1;*.ext2)|*.ext1;*.ext2&quot;</computeroutput>. It is usually a good idea to prepend a description before passing the result to the dialog. Example: <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_file_dialog" kindref="compound" tooltip="This class represents the file chooser dialog.">wxFileDialog</ref><sp/>FileDlg(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Choose<sp/>Image&quot;</highlight><highlight class="normal">,<sp/>::<ref refid="group__group__funcmacro__file_1gab0cc6ceca11d23f61cba353c01eeac06" kindref="member" tooltip="Returns a string containing the current (or working) directory.">wxGetCwd</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__funcmacro__string_1ga8a02b8875a521df57263a9e6f090f2d0" kindref="member" tooltip="Macro to be used around all literal strings that should be translated.">_</ref>(</highlight><highlight class="stringliteral">&quot;Image<sp/>Files<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="classwx_image_1a0ed7bd5c0eba03553b6533e2f79e0ff1" kindref="member" tooltip="Iterates all registered wxImageHandler objects, and returns a string containing file extension masks ...">wxImage::GetImageExtWildcard</ref>(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="filedlg_8h_1a16af7b253440dadd46a80a4b9fddba4da66a0a1b2dc1cea202030df12462a1026" kindref="member">wxFD_OPEN</ref><sp/>);</highlight></codeline>
</programlisting></para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_image_handler" kindref="compound">wxImageHandler</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1887"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1a28041e34c4dccaf9cba3fff358121b83" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image_1_1_h_s_v_value" kindref="compound">wxImage::HSVValue</ref></type>
        <definition>static wxImage::HSVValue wxImage::RGBtoHSV</definition>
        <argsstring>(const wxImage::RGBValue &amp;rgb)</argsstring>
        <name>RGBtoHSV</name>
        <param>
          <type>const <ref refid="classwx_image_1_1_r_g_b_value" kindref="compound">wxImage::RGBValue</ref> &amp;</type>
          <declname>rgb</declname>
        </param>
        <briefdescription>
<para>Converts a color in RGB color space to HSV color space. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1892"/>
      </memberdef>
      <memberdef kind="function" id="classwx_image_1aa72cf0a75c1e517f69787e1984717017" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image_1_1_r_g_b_value" kindref="compound">wxImage::RGBValue</ref></type>
        <definition>static wxImage::RGBValue wxImage::HSVtoRGB</definition>
        <argsstring>(const wxImage::HSVValue &amp;hsv)</argsstring>
        <name>HSVtoRGB</name>
        <param>
          <type>const <ref refid="classwx_image_1_1_h_s_v_value" kindref="compound">wxImage::HSVValue</ref> &amp;</type>
          <declname>hsv</declname>
        </param>
        <briefdescription>
<para>Converts a color in HSV color space to RGB color space. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="1897"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class encapsulates a platform-independent image. </para>    </briefdescription>
    <detaileddescription>
<para>An image can be created from data, or using <ref refid="classwx_bitmap_1a063fed54a77f63d2cfa69d12f9035fe2" kindref="member">wxBitmap::ConvertToImage</ref>. An image can be loaded from a file in a variety of formats, and is extensible to new formats via image format handlers. Functions are available to set and get image bits, so it can be used for basic image manipulation.</para><para>A <ref refid="classwx_image" kindref="compound">wxImage</ref> cannot (currently) be drawn directly to a <ref refid="classwx_d_c" kindref="compound">wxDC</ref>. Instead, a platform-specific <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> object must be created from it using the wxBitmap::wxBitmap(wxImage,int depth) constructor. This bitmap can then be drawn in a device context, using <ref refid="classwx_d_c_1af982eb2d3b10c5617ef3559d51a1defc" kindref="member">wxDC::DrawBitmap</ref>.</para><para>More on the difference between <ref refid="classwx_image" kindref="compound">wxImage</ref> and <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref>: <ref refid="classwx_image" kindref="compound">wxImage</ref> is just a buffer of RGB bytes with an optional buffer for the alpha bytes. It is all generic, platform independent and image file format independent code. It includes generic code for scaling, resizing, clipping, and other manipulations of the image data. OTOH, <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> is intended to be a wrapper of whatever is the native image format that is quickest/easiest to draw to a DC or to be the target of the drawing operations performed on a <ref refid="classwx_memory_d_c" kindref="compound">wxMemoryDC</ref>. By splitting the responsibilities between wxImage/wxBitmap like this then it&apos;s easier to use generic code shared by all platforms and image types for generic operations and platform specific code where performance or compatibility is needed.</para><para>One colour value of the image may be used as a mask colour which will lead to the automatic creation of a <ref refid="classwx_mask" kindref="compound">wxMask</ref> object associated to the bitmap object.</para><sect1 id="classwx_image_1image_alpha">
<title>Alpha channel support</title>
<para>Starting from wxWidgets 2.5.0 <ref refid="classwx_image" kindref="compound">wxImage</ref> supports alpha channel data, that is in addition to a byte for the red, green and blue colour components for each pixel it also stores a byte representing the pixel opacity.</para><para>An alpha value of 0 corresponds to a transparent pixel (null opacity) while a value of 255 means that the pixel is 100% opaque. The constants <ref refid="image_8h_1a3fc15ee0d01004d2ffcce5f303c53694" kindref="member">wxIMAGE_ALPHA_TRANSPARENT</ref> and <ref refid="image_8h_1a8d30dfb344ca95ced11109cc37c17d67" kindref="member">wxIMAGE_ALPHA_OPAQUE</ref> can be used to indicate those values in a more readable form.</para><para>While all images have RGB data, not all images have an alpha channel. Before using <ref refid="classwx_image_1a8e68eb081e49f51cc0410431385f9be9" kindref="member">wxImage::GetAlpha</ref> you should check if this image contains an alpha channel with <ref refid="classwx_image_1abd42fd2c579837850ab5909ab2bf200c" kindref="member">wxImage::HasAlpha</ref>. Currently the BMP, PNG, TGA, and TIFF format handlers have full alpha channel support for loading so if you want to use alpha you have to use one of these formats. If you initialize the image alpha channel yourself using <ref refid="classwx_image_1ab46f59f69221258da1397fd7c59e8671" kindref="member">wxImage::SetAlpha</ref>, you should save it in either PNG, TGA, or TIFF format to avoid losing it as these are the only handlers that currently support saving with alpha.</para></sect1>
<sect1 id="classwx_image_1image_handlers">
<title>Available image handlers</title>
<para>The following image handlers are available. wxBMPHandler is always installed by default. To use other image formats, install the appropriate handler with <ref refid="classwx_image_1ab39fb3747dfb8c2d444eff9fe41fa205" kindref="member">wxImage::AddHandler</ref> or call <ref refid="group__group__funcmacro__appinitterm_1ga27f6c78d5d13374a28022b7bd44c6823" kindref="member">wxInitAllImageHandlers()</ref>.</para><para><itemizedlist>
<listitem><para>wxBMPHandler: For loading (including alpha support) and saving, always installed.</para></listitem><listitem><para>wxPNGHandler: For loading and saving. Includes alpha support.</para></listitem><listitem><para>wxJPEGHandler: For loading and saving.</para></listitem><listitem><para>wxGIFHandler: For loading and saving (see below).</para></listitem><listitem><para>wxPCXHandler: For loading and saving (see below).</para></listitem><listitem><para>wxPNMHandler: For loading and saving (see below).</para></listitem><listitem><para>wxTIFFHandler: For loading and saving. Includes alpha support.</para></listitem><listitem><para>wxTGAHandler: For loading and saving. Includes alpha support.</para></listitem><listitem><para>wxIFFHandler: For loading only.</para></listitem><listitem><para>wxXPMHandler: For loading and saving.</para></listitem><listitem><para>wxICOHandler: For loading and saving.</para></listitem><listitem><para>wxCURHandler: For loading and saving.</para></listitem><listitem><para>wxANIHandler: For loading only.</para></listitem></itemizedlist>
</para><para>When saving in PCX format, wxPCXHandler will count the number of different colours in the image; if there are 256 or less colours, it will save as 8 bit, else it will save as 24 bit.</para><para>Loading PNMs only works for ASCII or raw RGB images. When saving in PNM format, wxPNMHandler will always save as raw RGB.</para><para>Saving GIFs requires images of maximum 8 bpp (see <ref refid="classwx_quantize" kindref="compound">wxQuantize</ref>), and the alpha channel converted to a mask (see <ref refid="classwx_image_1a3951b3fc49b0ff7154b109d63533a31f" kindref="member">wxImage::ConvertAlphaToMask</ref>). Saving an animated GIF requires images of the same size (see wxGIFHandler::SaveAnimation)</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__gdi" kindref="compound">Graphics Device Interface (GDI)</ref></para><para>Predefined objects/pointers: <ref refid="image_8h_1aea75fc2e13965b07bf9369ac4c5d1343" kindref="member">wxNullImage</ref></para><para><simplesect kind="see"><para><ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref>, <ref refid="group__group__funcmacro__appinitterm_1ga27f6c78d5d13374a28022b7bd44c6823" kindref="member">wxInitAllImageHandlers()</ref>, <ref refid="classwx_pixel_data" kindref="compound">wxPixelData</ref> </para></simplesect>
</para></sect1>
    </detaileddescription>
    <inheritancegraph>
      <node id="7430">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="7429">
        <label>wxImage</label>
        <link refid="classwx_image"/>
        <childnode refid="7430" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7432">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="7433" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="7433">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
      <node id="7431">
        <label>wxImage</label>
        <link refid="classwx_image"/>
        <childnode refid="7432" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" line="447" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/image.h" bodystart="446" bodyend="1898"/>
    <listofallmembers>
      <member refid="classwx_image_1ab39fb3747dfb8c2d444eff9fe41fa205" prot="public" virt="non-virtual"><scope>wxImage</scope><name>AddHandler</name></member>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxImage</scope><name>AllocExclusive</name></member>
      <member refid="classwx_image_1a5049d6166a019c182af55a94fb6e3307" prot="public" virt="non-virtual"><scope>wxImage</scope><name>Blur</name></member>
      <member refid="classwx_image_1a534300b66c2469720b1be4bd2a001822" prot="public" virt="non-virtual"><scope>wxImage</scope><name>BlurHorizontal</name></member>
      <member refid="classwx_image_1a20d4d0dd605eb5757161be251e048847" prot="public" virt="non-virtual"><scope>wxImage</scope><name>BlurVertical</name></member>
      <member refid="classwx_image_1a786fdfa44290867e1b1fd64bcd26aded" prot="public" virt="non-virtual"><scope>wxImage</scope><name>CanRead</name></member>
      <member refid="classwx_image_1aac069cba7821715661e03d9b6eeee98f" prot="public" virt="non-virtual"><scope>wxImage</scope><name>CanRead</name></member>
      <member refid="classwx_image_1aa50b222b999e7cd690f2a5be0e0e9cef" prot="public" virt="non-virtual"><scope>wxImage</scope><name>CleanUpHandlers</name></member>
      <member refid="classwx_image_1a2aa815c34284d6a85971e1ff8a2cc74c" prot="public" virt="non-virtual"><scope>wxImage</scope><name>Clear</name></member>
      <member refid="classwx_image_1a1b82ae0550626a74c3ee97d9065628b1" prot="public" virt="non-virtual"><scope>wxImage</scope><name>ClearAlpha</name></member>
      <member refid="classwx_object_1a1d39f1d3650fe0982c9a1abe7f9fe7b7" prot="protected" virt="virtual"><scope>wxImage</scope><name>CloneRefData</name></member>
      <member refid="classwx_image_1a7c9d557cd7ad577ed76e4337b1fd843a" prot="public" virt="non-virtual"><scope>wxImage</scope><name>ComputeHistogram</name></member>
      <member refid="classwx_image_1a3951b3fc49b0ff7154b109d63533a31f" prot="public" virt="non-virtual"><scope>wxImage</scope><name>ConvertAlphaToMask</name></member>
      <member refid="classwx_image_1a73c3cd71be1f97da115689a0387d197c" prot="public" virt="non-virtual"><scope>wxImage</scope><name>ConvertAlphaToMask</name></member>
      <member refid="classwx_image_1a5f5b9ac6ab0caa7b567a2fb3120f77db" prot="public" virt="non-virtual"><scope>wxImage</scope><name>ConvertToDisabled</name></member>
      <member refid="classwx_image_1af1642edf492e25cddf76edd80db5e4fc" prot="public" virt="non-virtual"><scope>wxImage</scope><name>ConvertToGreyscale</name></member>
      <member refid="classwx_image_1a7541045f59badbacceb6224d0602300e" prot="public" virt="non-virtual"><scope>wxImage</scope><name>ConvertToGreyscale</name></member>
      <member refid="classwx_image_1af9cebf3961f432b6c750463c52c9a96b" prot="public" virt="non-virtual"><scope>wxImage</scope><name>ConvertToMono</name></member>
      <member refid="classwx_image_1ab3b39f306287a212ccbb3c1e69a0b451" prot="public" virt="non-virtual"><scope>wxImage</scope><name>Copy</name></member>
      <member refid="classwx_image_1a07194d90bd6320255610a0a88a030a3e" prot="public" virt="non-virtual"><scope>wxImage</scope><name>Create</name></member>
      <member refid="classwx_image_1a37e70a8f9c684974c9c54f43f5e60a3f" prot="public" virt="non-virtual"><scope>wxImage</scope><name>Create</name></member>
      <member refid="classwx_image_1a63801a380397cdcf465cab68f313c9a6" prot="public" virt="non-virtual"><scope>wxImage</scope><name>Create</name></member>
      <member refid="classwx_image_1a717414a9d74dc882359857050bb4bdc3" prot="public" virt="non-virtual"><scope>wxImage</scope><name>Create</name></member>
      <member refid="classwx_image_1aa395d661de4f3b98c6e92a767d97bb66" prot="public" virt="non-virtual"><scope>wxImage</scope><name>Create</name></member>
      <member refid="classwx_image_1aae3a6d125108f6fb93188d8c3c4990b9" prot="public" virt="non-virtual"><scope>wxImage</scope><name>Create</name></member>
      <member refid="classwx_object_1a95c6a5e4e1e03ff23c7b9efe4cff0c1a" prot="protected" virt="virtual"><scope>wxImage</scope><name>CreateRefData</name></member>
      <member refid="classwx_image_1ac64c3524a054db164b811c380db65f97" prot="public" virt="non-virtual"><scope>wxImage</scope><name>Destroy</name></member>
      <member refid="classwx_image_1adfd2a60833d72432a0a28b54ca83a2d0" prot="public" virt="non-virtual"><scope>wxImage</scope><name>FindFirstUnusedColour</name></member>
      <member refid="classwx_image_1abb0458fbb84d41af925f3d2c59d1adde" prot="public" virt="non-virtual"><scope>wxImage</scope><name>FindHandler</name></member>
      <member refid="classwx_image_1a2bd74e0e2e3ba7980e09cf14fca86a7c" prot="public" virt="non-virtual"><scope>wxImage</scope><name>FindHandler</name></member>
      <member refid="classwx_image_1ae7b426b2352950992181c0760425e5e4" prot="public" virt="non-virtual"><scope>wxImage</scope><name>FindHandler</name></member>
      <member refid="classwx_image_1a5e3f7cb7089c70f91e977fa2fa896b52" prot="public" virt="non-virtual"><scope>wxImage</scope><name>FindHandlerMime</name></member>
      <member refid="classwx_image_1a8e68eb081e49f51cc0410431385f9be9" prot="public" virt="non-virtual"><scope>wxImage</scope><name>GetAlpha</name></member>
      <member refid="classwx_image_1a406fe67d895c815386bfd2c697a1a667" prot="public" virt="non-virtual"><scope>wxImage</scope><name>GetAlpha</name></member>
      <member refid="classwx_image_1a19bf61cbc4d66512f3244149886f2e9f" prot="public" virt="non-virtual"><scope>wxImage</scope><name>GetBlue</name></member>
      <member refid="classwx_object_1ab3a0c6f723cbaddb47be4e8dd98cc8e2" prot="public" virt="virtual"><scope>wxImage</scope><name>GetClassInfo</name></member>
      <member refid="classwx_image_1a5cac38e8fd2536852406d9c8daa55023" prot="public" virt="non-virtual"><scope>wxImage</scope><name>GetData</name></member>
      <member refid="classwx_image_1a43533994a507cd8f419759cddeef8df2" prot="public" virt="non-virtual"><scope>wxImage</scope><name>GetGreen</name></member>
      <member refid="classwx_image_1a4c3a141a4d1e953e7e64e4c9477a76fb" prot="public" virt="non-virtual"><scope>wxImage</scope><name>GetHandlers</name></member>
      <member refid="classwx_image_1a73d10c7d8ea36dc5421f2713ce1d9e48" prot="public" virt="non-virtual"><scope>wxImage</scope><name>GetHeight</name></member>
      <member refid="classwx_image_1abea8ef407ac0c0cf829ea8a3c9e101ee" prot="public" virt="non-virtual"><scope>wxImage</scope><name>GetImageCount</name></member>
      <member refid="classwx_image_1a54665a3517668fab312e7205de0b88ca" prot="public" virt="non-virtual"><scope>wxImage</scope><name>GetImageCount</name></member>
      <member refid="classwx_image_1a0ed7bd5c0eba03553b6533e2f79e0ff1" prot="public" virt="non-virtual"><scope>wxImage</scope><name>GetImageExtWildcard</name></member>
      <member refid="classwx_image_1ad5f1fc61f1343633ba80f3402f19956c" prot="public" virt="non-virtual"><scope>wxImage</scope><name>GetMaskBlue</name></member>
      <member refid="classwx_image_1acf6994b3c2706193ee910c3836e6b0ec" prot="public" virt="non-virtual"><scope>wxImage</scope><name>GetMaskGreen</name></member>
      <member refid="classwx_image_1aa9c4b367f98baac91c77f863351f7c26" prot="public" virt="non-virtual"><scope>wxImage</scope><name>GetMaskRed</name></member>
      <member refid="classwx_image_1af006480a04b88e20033bab1615e05de4" prot="public" virt="non-virtual"><scope>wxImage</scope><name>GetOption</name></member>
      <member refid="classwx_image_1af752636f2a2baecd5d33cd8e8501c044" prot="public" virt="non-virtual"><scope>wxImage</scope><name>GetOptionInt</name></member>
      <member refid="classwx_image_1a8262377d07012664242529bca77f91ab" prot="public" virt="non-virtual"><scope>wxImage</scope><name>GetOrFindMaskColour</name></member>
      <member refid="classwx_image_1a055f1cd8ae68ae83204ecc3b0fff0f57" prot="public" virt="non-virtual"><scope>wxImage</scope><name>GetPalette</name></member>
      <member refid="classwx_image_1ade7e4b89f960bffbc09a88863145397a" prot="public" virt="non-virtual"><scope>wxImage</scope><name>GetRed</name></member>
      <member refid="classwx_object_1aabdb4fc957226544a8408167844e4f42" prot="public" virt="non-virtual"><scope>wxImage</scope><name>GetRefData</name></member>
      <member refid="classwx_image_1aae7bbee7b8b53302e3656b93bba217cd" prot="public" virt="non-virtual"><scope>wxImage</scope><name>GetSize</name></member>
      <member refid="classwx_image_1a54967a3c86a41b62712dfa16fffa8cda" prot="public" virt="non-virtual"><scope>wxImage</scope><name>GetSubImage</name></member>
      <member refid="classwx_image_1ac711680e14facac5476a4a2946b7dc42" prot="public" virt="non-virtual"><scope>wxImage</scope><name>GetType</name></member>
      <member refid="classwx_image_1abd2c9f02c948813eb23ae45481977995" prot="public" virt="non-virtual"><scope>wxImage</scope><name>GetWidth</name></member>
      <member refid="classwx_image_1abd42fd2c579837850ab5909ab2bf200c" prot="public" virt="non-virtual"><scope>wxImage</scope><name>HasAlpha</name></member>
      <member refid="classwx_image_1a6b5285194b6416122381cf8b824a156d" prot="public" virt="non-virtual"><scope>wxImage</scope><name>HasMask</name></member>
      <member refid="classwx_image_1a868ae81f470e1bef6ca81dd985078782" prot="public" virt="non-virtual"><scope>wxImage</scope><name>HasOption</name></member>
      <member refid="classwx_image_1aa72cf0a75c1e517f69787e1984717017" prot="public" virt="non-virtual"><scope>wxImage</scope><name>HSVtoRGB</name></member>
      <member refid="classwx_image_1ac941b6b80262b968b575ab1b215e687b" prot="public" virt="non-virtual"><scope>wxImage</scope><name>InitAlpha</name></member>
      <member refid="classwx_image_1ab2f032e0b7766dc69d4f092f4a55fd60" prot="public" virt="non-virtual"><scope>wxImage</scope><name>InitStandardHandlers</name></member>
      <member refid="classwx_image_1adcecda55890d6e9e3c827751a9ec42b0" prot="public" virt="non-virtual"><scope>wxImage</scope><name>InsertHandler</name></member>
      <member refid="classwx_object_1af40d580385cf4f8112fae7713404b01e" prot="public" virt="non-virtual"><scope>wxImage</scope><name>IsKindOf</name></member>
      <member refid="classwx_image_1ab426714385b517d9367f7595e95714e0" prot="public" virt="non-virtual"><scope>wxImage</scope><name>IsOk</name></member>
      <member refid="classwx_object_1a80a1a3fda7b14396a9ddd3d7a46a88bd" prot="public" virt="non-virtual"><scope>wxImage</scope><name>IsSameAs</name></member>
      <member refid="classwx_image_1adbe6a22287f6bbbfc5dae4514ca62385" prot="public" virt="non-virtual"><scope>wxImage</scope><name>IsTransparent</name></member>
      <member refid="classwx_image_1aa249e657259fe6518d68a5208b9043d0" prot="public" virt="virtual"><scope>wxImage</scope><name>LoadFile</name></member>
      <member refid="classwx_image_1a2f514d576c0c086249cd39edac0c1bd6" prot="public" virt="virtual"><scope>wxImage</scope><name>LoadFile</name></member>
      <member refid="classwx_image_1a5261b155bbc93ed1719462d80ce699be" prot="public" virt="virtual"><scope>wxImage</scope><name>LoadFile</name></member>
      <member refid="classwx_image_1a318ae843ecc2e10fdc460865dff49a99" prot="public" virt="virtual"><scope>wxImage</scope><name>LoadFile</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxImage</scope><name>m_refData</name></member>
      <member refid="classwx_image_1abe3a18acec23fc0afbae68c5ec3f446f" prot="public" virt="non-virtual"><scope>wxImage</scope><name>Mirror</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxImage</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxImage</scope><name>operator new</name></member>
      <member refid="classwx_image_1a4be78fed2c5a82d53114d77aad916371" prot="public" virt="non-virtual"><scope>wxImage</scope><name>operator=</name></member>
      <member refid="classwx_image_1adb034510c331ea2fd26843e4d47b8629" prot="public" virt="non-virtual"><scope>wxImage</scope><name>Paste</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxImage</scope><name>Ref</name></member>
      <member refid="classwx_image_1a70ef86ff481bc18c0a32f5467a071e42" prot="public" virt="non-virtual"><scope>wxImage</scope><name>RemoveHandler</name></member>
      <member refid="classwx_image_1aec8466530f4aea8e2cea8cb24bfb74fb" prot="public" virt="non-virtual"><scope>wxImage</scope><name>Replace</name></member>
      <member refid="classwx_image_1a35227071eb0de3c0c035324838071001" prot="public" virt="non-virtual"><scope>wxImage</scope><name>Rescale</name></member>
      <member refid="classwx_image_1ac4dd8e967436c3206dfe4460345af794" prot="public" virt="non-virtual"><scope>wxImage</scope><name>Resize</name></member>
      <member refid="classwx_image_1a28041e34c4dccaf9cba3fff358121b83" prot="public" virt="non-virtual"><scope>wxImage</scope><name>RGBtoHSV</name></member>
      <member refid="classwx_image_1a17daea3936f98c3b25204ab2b938a55a" prot="public" virt="non-virtual"><scope>wxImage</scope><name>Rotate</name></member>
      <member refid="classwx_image_1a227870b034b06a9b1869ce636af8fea6" prot="public" virt="non-virtual"><scope>wxImage</scope><name>Rotate180</name></member>
      <member refid="classwx_image_1a55e17b1b5e664904c7b4946d315df168" prot="public" virt="non-virtual"><scope>wxImage</scope><name>Rotate90</name></member>
      <member refid="classwx_image_1a96a43d7bbb26ed775fa10c979c6e511f" prot="public" virt="non-virtual"><scope>wxImage</scope><name>RotateHue</name></member>
      <member refid="classwx_image_1adbdd72be525d71ebb3fe01a5de02607c" prot="public" virt="virtual"><scope>wxImage</scope><name>SaveFile</name></member>
      <member refid="classwx_image_1a9416097f955a828243cba8431e7044d4" prot="public" virt="virtual"><scope>wxImage</scope><name>SaveFile</name></member>
      <member refid="classwx_image_1adef2e0344bfa416816cc4d63c76375e4" prot="public" virt="virtual"><scope>wxImage</scope><name>SaveFile</name></member>
      <member refid="classwx_image_1a4c5201cc30a99d5cc006d99100dcf55d" prot="public" virt="virtual"><scope>wxImage</scope><name>SaveFile</name></member>
      <member refid="classwx_image_1af8ac6fad3c44385296cdaa1d82358ad0" prot="public" virt="virtual"><scope>wxImage</scope><name>SaveFile</name></member>
      <member refid="classwx_image_1aaf10a9f0a8284a9ccfe988d0a470d4e9" prot="public" virt="non-virtual"><scope>wxImage</scope><name>Scale</name></member>
      <member refid="classwx_image_1ab46f59f69221258da1397fd7c59e8671" prot="public" virt="non-virtual"><scope>wxImage</scope><name>SetAlpha</name></member>
      <member refid="classwx_image_1a882406861db4666fb619af90a1cb4b45" prot="public" virt="non-virtual"><scope>wxImage</scope><name>SetAlpha</name></member>
      <member refid="classwx_image_1a736a8fc26d32e5eab70682b115bacacf" prot="public" virt="non-virtual"><scope>wxImage</scope><name>SetData</name></member>
      <member refid="classwx_image_1afda57bc7ba823e7c060dbd7698c6ad31" prot="public" virt="non-virtual"><scope>wxImage</scope><name>SetData</name></member>
      <member refid="classwx_image_1a62645fe559149a8ee6b27ddc07cfc220" prot="public" virt="non-virtual"><scope>wxImage</scope><name>SetMask</name></member>
      <member refid="classwx_image_1a25fcd0777ea579c7a27d78a2a81627e5" prot="public" virt="non-virtual"><scope>wxImage</scope><name>SetMaskColour</name></member>
      <member refid="classwx_image_1aaa8be307e013440b9a3e4791eab91771" prot="public" virt="non-virtual"><scope>wxImage</scope><name>SetMaskFromImage</name></member>
      <member refid="classwx_image_1a952ee065b17ee07a8cbee568486e01a4" prot="public" virt="non-virtual"><scope>wxImage</scope><name>SetOption</name></member>
      <member refid="classwx_image_1acc3d48af8a50bff5ceca51fd649ec981" prot="public" virt="non-virtual"><scope>wxImage</scope><name>SetOption</name></member>
      <member refid="classwx_image_1acbf3a8b9f954b7da7d65adbb9cc9e026" prot="public" virt="non-virtual"><scope>wxImage</scope><name>SetPalette</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxImage</scope><name>SetRefData</name></member>
      <member refid="classwx_image_1a17f90246727d089675e7f44a414280d1" prot="public" virt="non-virtual"><scope>wxImage</scope><name>SetRGB</name></member>
      <member refid="classwx_image_1ab4a6c25da79e4f2473246108951906e6" prot="public" virt="non-virtual"><scope>wxImage</scope><name>SetType</name></member>
      <member refid="classwx_image_1a8c3ef171a27cdb93a315eb78cf7b0377" prot="public" virt="non-virtual"><scope>wxImage</scope><name>Size</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxImage</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxImage</scope><name>UnShare</name></member>
      <member refid="classwx_image_1a0a2febdc997f1d09c98f76fdaf85113d" prot="public" virt="non-virtual"><scope>wxImage</scope><name>wxImage</name></member>
      <member refid="classwx_image_1a21652c36c8e51bc696756afeaefe2d01" prot="public" virt="non-virtual"><scope>wxImage</scope><name>wxImage</name></member>
      <member refid="classwx_image_1ae071c8cdd85a48655ba59a70aeced3d4" prot="public" virt="non-virtual"><scope>wxImage</scope><name>wxImage</name></member>
      <member refid="classwx_image_1a2c97634b43bdd143f34418fb1f98a690" prot="public" virt="non-virtual"><scope>wxImage</scope><name>wxImage</name></member>
      <member refid="classwx_image_1ae4dfc16eddb74fca38a10809f56df264" prot="public" virt="non-virtual"><scope>wxImage</scope><name>wxImage</name></member>
      <member refid="classwx_image_1abdb7e8a7ca45e63935cda55b45869a7a" prot="public" virt="non-virtual"><scope>wxImage</scope><name>wxImage</name></member>
      <member refid="classwx_image_1ad4d64f98e90c54902bfd9d445d23db29" prot="public" virt="non-virtual"><scope>wxImage</scope><name>wxImage</name></member>
      <member refid="classwx_image_1a5ab9262fabb41525bc669c245654579b" prot="public" virt="non-virtual"><scope>wxImage</scope><name>wxImage</name></member>
      <member refid="classwx_image_1a02233007383d193ab8e0f89cc1c92864" prot="public" virt="non-virtual"><scope>wxImage</scope><name>wxImage</name></member>
      <member refid="classwx_image_1a6ef7dc2eb9aaa9bf34437f7c12aad5f2" prot="public" virt="non-virtual"><scope>wxImage</scope><name>wxImage</name></member>
      <member refid="classwx_image_1add88cc57fe901b715c637e820342d91a" prot="public" virt="non-virtual"><scope>wxImage</scope><name>wxImage</name></member>
      <member refid="classwx_image_1af8df8e96a278f30954592c452b3c0806" prot="public" virt="non-virtual"><scope>wxImage</scope><name>wxImage</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxImage</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxImage</scope><name>wxObject</name></member>
      <member refid="classwx_image_1ac20a9a1f46a1047f5947352afa9f2b09" prot="public" virt="virtual"><scope>wxImage</scope><name>~wxImage</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxImage</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
