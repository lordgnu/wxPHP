<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_t_c_p_connection" kind="class" prot="public">
    <compoundname>wxTCPConnection</compoundname>
    <basecompoundref refid="classwx_object" prot="public" virt="non-virtual">wxObject</basecompoundref>
    <includes local="no">wx/sckipc.h</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_t_c_p_connection_1a14a184b6e30f8bf3b636175a738d5b51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxTCPConnection::wxTCPConnection</definition>
        <argsstring>()</argsstring>
        <name>wxTCPConnection</name>
        <briefdescription>
<para>Constructs a connection object. </para>        </briefdescription>
        <detaileddescription>
<para>If no user-defined connection object is to be derived from <ref refid="classwx_t_c_p_connection" kindref="compound">wxTCPConnection</ref>, then the constructor should not be called directly, since the default connection object will be provided on requesting (or accepting) a connection.</para><para>However, if the user defines his or her own derived connection object, the <ref refid="classwx_t_c_p_server_1a7042468880f14ee549cbf75c91c889cb" kindref="member">wxTCPServer::OnAcceptConnection</ref> and/or <ref refid="classwx_t_c_p_client_1a23359471eace5dca485aad4a3e24680f" kindref="member">wxTCPClient::OnMakeConnection</ref> members should be replaced by functions which construct the new connection object.</para><para>If the arguments of the <ref refid="classwx_t_c_p_connection" kindref="compound">wxTCPConnection</ref> constructor are void, then a default buffer is associated with the connection. Otherwise, the programmer must provide a buffer and size of the buffer for the connection object to use in transactions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="193"/>
      </memberdef>
      <memberdef kind="function" id="classwx_t_c_p_connection_1ae4c765338770dbe493a0af28eade65db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxTCPConnection::wxTCPConnection</definition>
        <argsstring>(void *buffer, size_t size)</argsstring>
        <name>wxTCPConnection</name>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Constructs a connection object. </para>        </briefdescription>
        <detaileddescription>
<para>If no user-defined connection object is to be derived from <ref refid="classwx_t_c_p_connection" kindref="compound">wxTCPConnection</ref>, then the constructor should not be called directly, since the default connection object will be provided on requesting (or accepting) a connection.</para><para>However, if the user defines his or her own derived connection object, the <ref refid="classwx_t_c_p_server_1a7042468880f14ee549cbf75c91c889cb" kindref="member">wxTCPServer::OnAcceptConnection</ref> and/or <ref refid="classwx_t_c_p_client_1a23359471eace5dca485aad4a3e24680f" kindref="member">wxTCPClient::OnMakeConnection</ref> members should be replaced by functions which construct the new connection object.</para><para>If the arguments of the <ref refid="classwx_t_c_p_connection" kindref="compound">wxTCPConnection</ref> constructor are void, then a default buffer is associated with the connection. Otherwise, the programmer must provide a buffer and size of the buffer for the connection object to use in transactions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="194"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_t_c_p_connection_1adc7cc4dd3ed4af62f392e0cb91cdaed9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTCPConnection::Advise</definition>
        <argsstring>(const wxString &amp;item, const void *data, size_t size, wxIPCFormat format=wxIPC_PRIVATE)</argsstring>
        <name>Advise</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="ipcbase_8h_1a95e8d5059caf54ddbaabdaf8224fe3f2" kindref="member">wxIPCFormat</ref></type>
          <declname>format</declname>
          <defval>wxIPC_PRIVATE</defval>
        </param>
        <briefdescription>
<para>Called by the server application to advise the client of a change in the data associated with the given item. </para>        </briefdescription>
        <detaileddescription>
<para>Causes the client connection&apos;s <ref refid="classwx_t_c_p_connection_1afc89b194cbd4d4fc30b189235fa8a1bf" kindref="member">OnAdvise()</ref> member to be called.</para><para>Returns true if successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="207"/>
      </memberdef>
      <memberdef kind="function" id="classwx_t_c_p_connection_1a4a9ccea19d0903c6a617b779e2096ef0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTCPConnection::Advise</definition>
        <argsstring>(const wxString &amp;item, const char *data)</argsstring>
        <name>Advise</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Called by the server application to advise the client of a change in the data associated with the given item. </para>        </briefdescription>
        <detaileddescription>
<para>Causes the client connection&apos;s <ref refid="classwx_t_c_p_connection_1afc89b194cbd4d4fc30b189235fa8a1bf" kindref="member">OnAdvise()</ref> member to be called.</para><para>Returns true if successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="208"/>
      </memberdef>
      <memberdef kind="function" id="classwx_t_c_p_connection_1a946d24c15d11ad057a69d80c9c4158d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTCPConnection::Advise</definition>
        <argsstring>(const wxString &amp;item, const wchar_t *data)</argsstring>
        <name>Advise</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Called by the server application to advise the client of a change in the data associated with the given item. </para>        </briefdescription>
        <detaileddescription>
<para>Causes the client connection&apos;s <ref refid="classwx_t_c_p_connection_1afc89b194cbd4d4fc30b189235fa8a1bf" kindref="member">OnAdvise()</ref> member to be called.</para><para>Returns true if successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="209"/>
      </memberdef>
      <memberdef kind="function" id="classwx_t_c_p_connection_1a9e6fa84fe6b8aa720fda4ea6625eddee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTCPConnection::Advise</definition>
        <argsstring>(const wxString &amp;item, const wxString data)</argsstring>
        <name>Advise</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref></type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Called by the server application to advise the client of a change in the data associated with the given item. </para>        </briefdescription>
        <detaileddescription>
<para>Causes the client connection&apos;s <ref refid="classwx_t_c_p_connection_1afc89b194cbd4d4fc30b189235fa8a1bf" kindref="member">OnAdvise()</ref> member to be called.</para><para>Returns true if successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="210"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_t_c_p_connection_1a641117e1e951023a991bf2d9701cb021" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTCPConnection::Execute</definition>
        <argsstring>(const void *data, size_t size, wxIPCFormat format=wxIPC_PRIVATE)</argsstring>
        <name>Execute</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="ipcbase_8h_1a95e8d5059caf54ddbaabdaf8224fe3f2" kindref="member">wxIPCFormat</ref></type>
          <declname>format</declname>
          <defval>wxIPC_PRIVATE</defval>
        </param>
        <briefdescription>
<para>Called by the client application to execute a command on the server. </para>        </briefdescription>
        <detaileddescription>
<para>Can also be used to transfer arbitrary data to the server (similar to <ref refid="classwx_t_c_p_connection_1ab9a0d9650141a968fc143e5402869729" kindref="member">Poke()</ref> in that respect). Causes the server connection&apos;s <ref refid="classwx_t_c_p_connection_1a0748b23c702f79a69b0a32c1e9a54561" kindref="member">OnExecute()</ref> member to be called.</para><para>Returns true if successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="236"/>
      </memberdef>
      <memberdef kind="function" id="classwx_t_c_p_connection_1a769489b5552ee8bf4f9adb7641c5d2ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTCPConnection::Execute</definition>
        <argsstring>(const char *data)</argsstring>
        <name>Execute</name>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Called by the client application to execute a command on the server. </para>        </briefdescription>
        <detaileddescription>
<para>Can also be used to transfer arbitrary data to the server (similar to <ref refid="classwx_t_c_p_connection_1ab9a0d9650141a968fc143e5402869729" kindref="member">Poke()</ref> in that respect). Causes the server connection&apos;s <ref refid="classwx_t_c_p_connection_1a0748b23c702f79a69b0a32c1e9a54561" kindref="member">OnExecute()</ref> member to be called.</para><para>Returns true if successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="237"/>
      </memberdef>
      <memberdef kind="function" id="classwx_t_c_p_connection_1ab1ef7d71025cfa7bd2f23fd9250b310f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTCPConnection::Execute</definition>
        <argsstring>(const wchar_t *data)</argsstring>
        <name>Execute</name>
        <param>
          <type>const wchar_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Called by the client application to execute a command on the server. </para>        </briefdescription>
        <detaileddescription>
<para>Can also be used to transfer arbitrary data to the server (similar to <ref refid="classwx_t_c_p_connection_1ab9a0d9650141a968fc143e5402869729" kindref="member">Poke()</ref> in that respect). Causes the server connection&apos;s <ref refid="classwx_t_c_p_connection_1a0748b23c702f79a69b0a32c1e9a54561" kindref="member">OnExecute()</ref> member to be called.</para><para>Returns true if successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="238"/>
      </memberdef>
      <memberdef kind="function" id="classwx_t_c_p_connection_1a2c6e4b9f85685bd29341ca7922c8ab96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTCPConnection::Execute</definition>
        <argsstring>(const wxString data)</argsstring>
        <name>Execute</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref></type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Called by the client application to execute a command on the server. </para>        </briefdescription>
        <detaileddescription>
<para>Can also be used to transfer arbitrary data to the server (similar to <ref refid="classwx_t_c_p_connection_1ab9a0d9650141a968fc143e5402869729" kindref="member">Poke()</ref> in that respect). Causes the server connection&apos;s <ref refid="classwx_t_c_p_connection_1a0748b23c702f79a69b0a32c1e9a54561" kindref="member">OnExecute()</ref> member to be called.</para><para>Returns true if successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="239"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_t_c_p_connection_1ab9a0d9650141a968fc143e5402869729" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTCPConnection::Poke</definition>
        <argsstring>(const wxString &amp;item, const void *data, size_t size, wxIPCFormat format=wxIPC_PRIVATE)</argsstring>
        <name>Poke</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="ipcbase_8h_1a95e8d5059caf54ddbaabdaf8224fe3f2" kindref="member">wxIPCFormat</ref></type>
          <declname>format</declname>
          <defval>wxIPC_PRIVATE</defval>
        </param>
        <briefdescription>
<para>Called by the client application to poke data into the server. </para>        </briefdescription>
        <detaileddescription>
<para>Can be used to transfer arbitrary data to the server. Causes the server connection&apos;s <ref refid="classwx_t_c_p_connection_1a49e8aa8f754c9c8c4d284f312019167c" kindref="member">OnPoke()</ref> member to be called. Returns true if successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="312"/>
      </memberdef>
      <memberdef kind="function" id="classwx_t_c_p_connection_1a3162a7c98869a229913b79bfd4ee73c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTCPConnection::Poke</definition>
        <argsstring>(const wxString &amp;item, const char *data)</argsstring>
        <name>Poke</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Called by the client application to poke data into the server. </para>        </briefdescription>
        <detaileddescription>
<para>Can be used to transfer arbitrary data to the server. Causes the server connection&apos;s <ref refid="classwx_t_c_p_connection_1a49e8aa8f754c9c8c4d284f312019167c" kindref="member">OnPoke()</ref> member to be called. Returns true if successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="313"/>
      </memberdef>
      <memberdef kind="function" id="classwx_t_c_p_connection_1a8240df8d32aca9ef2007bfcd735f3b83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTCPConnection::Poke</definition>
        <argsstring>(const wxString &amp;item, const wchar_t *data)</argsstring>
        <name>Poke</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Called by the client application to poke data into the server. </para>        </briefdescription>
        <detaileddescription>
<para>Can be used to transfer arbitrary data to the server. Causes the server connection&apos;s <ref refid="classwx_t_c_p_connection_1a49e8aa8f754c9c8c4d284f312019167c" kindref="member">OnPoke()</ref> member to be called. Returns true if successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="314"/>
      </memberdef>
      <memberdef kind="function" id="classwx_t_c_p_connection_1ad8428f33c71b01f539eeaab68f5aa40b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTCPConnection::Poke</definition>
        <argsstring>(const wxString &amp;item, const wxString data)</argsstring>
        <name>Poke</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref></type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Called by the client application to poke data into the server. </para>        </briefdescription>
        <detaileddescription>
<para>Can be used to transfer arbitrary data to the server. Causes the server connection&apos;s <ref refid="classwx_t_c_p_connection_1a49e8aa8f754c9c8c4d284f312019167c" kindref="member">OnPoke()</ref> member to be called. Returns true if successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="315"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_t_c_p_connection_1a28b3b2826a1ff7606c4b3912d1b008ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTCPConnection::Disconnect</definition>
        <argsstring>()</argsstring>
        <name>Disconnect</name>
        <briefdescription>
<para>Called by the client or server application to disconnect from the other program; it causes the <ref refid="classwx_t_c_p_connection_1aa66169feb0200153f993ab5af86703ee" kindref="member">OnDisconnect()</ref> message to be sent to the corresponding connection object in the other program. </para>        </briefdescription>
        <detaileddescription>
<para>The default behaviour of <bold>OnDisconnect</bold> is to delete the connection, but the calling application must explicitly delete its side of the connection having called <bold>Disconnect</bold>.</para><para>Returns true if successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="224"/>
      </memberdef>
      <memberdef kind="function" id="classwx_t_c_p_connection_1afc89b194cbd4d4fc30b189235fa8a1bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTCPConnection::OnAdvise</definition>
        <argsstring>(const wxString &amp;topic, const wxString &amp;item, const void *data, size_t size, wxIPCFormat format)</argsstring>
        <name>OnAdvise</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>topic</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="ipcbase_8h_1a95e8d5059caf54ddbaabdaf8224fe3f2" kindref="member">wxIPCFormat</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Message sent to the client application when the server notifies it of a change in the data associated with the given item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="250"/>
      </memberdef>
      <memberdef kind="function" id="classwx_t_c_p_connection_1aa66169feb0200153f993ab5af86703ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTCPConnection::OnDisconnect</definition>
        <argsstring>()</argsstring>
        <name>OnDisconnect</name>
        <briefdescription>
<para>Message sent to the client or server application when the other application notifies it to delete the connection. </para>        </briefdescription>
        <detaileddescription>
<para>Default behaviour is to delete the connection object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="257"/>
      </memberdef>
      <memberdef kind="function" id="classwx_t_c_p_connection_1a0748b23c702f79a69b0a32c1e9a54561" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTCPConnection::OnExecute</definition>
        <argsstring>(const wxString &amp;topic, const void *data, size_t size, wxIPCFormat format)</argsstring>
        <name>OnExecute</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>topic</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="ipcbase_8h_1a95e8d5059caf54ddbaabdaf8224fe3f2" kindref="member">wxIPCFormat</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Message sent to the server application when the client notifies it to execute the given data. </para>        </briefdescription>
        <detaileddescription>
<para>Note that there is no item associated with this message. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="266"/>
      </memberdef>
      <memberdef kind="function" id="classwx_t_c_p_connection_1a49e8aa8f754c9c8c4d284f312019167c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTCPConnection::OnPoke</definition>
        <argsstring>(const wxString &amp;topic, const wxString &amp;item, const void *data, size_t size, wxIPCFormat format)</argsstring>
        <name>OnPoke</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>topic</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="ipcbase_8h_1a95e8d5059caf54ddbaabdaf8224fe3f2" kindref="member">wxIPCFormat</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Message sent to the server application when the client notifies it to accept the given data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="275"/>
      </memberdef>
      <memberdef kind="function" id="classwx_t_c_p_connection_1a62fd57f6d0a56194ce25e4d7594ab251" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>const void *</type>
        <definition>virtual const void* wxTCPConnection::OnRequest</definition>
        <argsstring>(const wxString &amp;topic, const wxString &amp;item, size_t *size, wxIPCFormat format)</argsstring>
        <name>OnRequest</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>topic</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="ipcbase_8h_1a95e8d5059caf54ddbaabdaf8224fe3f2" kindref="member">wxIPCFormat</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Message sent to the server application when the client calls <ref refid="classwx_t_c_p_connection_1a72b129804884c02058f729647a35bb1a" kindref="member">Request()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>The server should respond by returning a character string from <bold>OnRequest</bold>, or NULL to indicate no data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="286"/>
      </memberdef>
      <memberdef kind="function" id="classwx_t_c_p_connection_1af2e09ce74dc7252983a0c0c4f4aa3d79" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTCPConnection::OnStartAdvise</definition>
        <argsstring>(const wxString &amp;topic, const wxString &amp;item)</argsstring>
        <name>OnStartAdvise</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>topic</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Message sent to the server application by the client, when the client wishes to start an &apos;advise loop&apos; for the given topic and item. </para>        </briefdescription>
        <detaileddescription>
<para>The server can refuse to participate by returning false. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="294"/>
      </memberdef>
      <memberdef kind="function" id="classwx_t_c_p_connection_1af38ae616a3af2569a7dde96fb6e95e8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTCPConnection::OnStopAdvise</definition>
        <argsstring>(const wxString &amp;topic, const wxString &amp;item)</argsstring>
        <name>OnStopAdvise</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>topic</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Message sent to the server application by the client, when the client wishes to stop an &apos;advise loop&apos; for the given topic and item. </para>        </briefdescription>
        <detaileddescription>
<para>The server can refuse to stop the advise loop by returning false, although this doesn&apos;t have much meaning in practice. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="303"/>
      </memberdef>
      <memberdef kind="function" id="classwx_t_c_p_connection_1a72b129804884c02058f729647a35bb1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>const void *</type>
        <definition>virtual const void* wxTCPConnection::Request</definition>
        <argsstring>(const wxString &amp;item, size_t *size=0, wxIPCFormat format=wxIPC_TEXT)</argsstring>
        <name>Request</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="ipcbase_8h_1a95e8d5059caf54ddbaabdaf8224fe3f2" kindref="member">wxIPCFormat</ref></type>
          <declname>format</declname>
          <defval>wxIPC_TEXT</defval>
        </param>
        <briefdescription>
<para>Called by the client application to request data from the server. </para>        </briefdescription>
        <detaileddescription>
<para>Causes the server connection&apos;s <ref refid="classwx_t_c_p_connection_1a62fd57f6d0a56194ce25e4d7594ab251" kindref="member">OnRequest()</ref> member to be called.</para><para>Returns a character string (actually a pointer to the connection&apos;s buffer) if successful, NULL otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="326"/>
      </memberdef>
      <memberdef kind="function" id="classwx_t_c_p_connection_1a2bc425519ddda572c7dbf292f525fd43" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTCPConnection::StartAdvise</definition>
        <argsstring>(const wxString &amp;item)</argsstring>
        <name>StartAdvise</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Called by the client application to ask if an advise loop can be started with the server. </para>        </briefdescription>
        <detaileddescription>
<para>Causes the server connection&apos;s <ref refid="classwx_t_c_p_connection_1af2e09ce74dc7252983a0c0c4f4aa3d79" kindref="member">OnStartAdvise()</ref> member to be called. Returns true if the server okays it, false otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="335"/>
      </memberdef>
      <memberdef kind="function" id="classwx_t_c_p_connection_1a06987cc9489bd3fe6ea1002975807b68" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTCPConnection::StopAdvise</definition>
        <argsstring>(const wxString &amp;item)</argsstring>
        <name>StopAdvise</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Called by the client application to ask if an advise loop can be stopped. </para>        </briefdescription>
        <detaileddescription>
<para>Causes the server connection&apos;s <ref refid="classwx_t_c_p_connection_1af38ae616a3af2569a7dde96fb6e95e8e" kindref="member">OnStopAdvise()</ref> member to be called. Returns true if the server okays it, false otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="342"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A <ref refid="classwx_t_c_p_client" kindref="compound">wxTCPClient</ref> object represents the connection between a client and a server. </para>    </briefdescription>
    <detaileddescription>
<para>It emulates a DDE-style protocol, but uses TCP/IP which is available on most platforms.</para><para>A DDE-based implementation for Windows is available using <ref refid="classwx_d_d_e_connection" kindref="compound">wxDDEConnection</ref>.</para><para>A <ref refid="classwx_t_c_p_connection" kindref="compound">wxTCPConnection</ref> object can be created by making a connection using a <ref refid="classwx_t_c_p_client" kindref="compound">wxTCPClient</ref> object, or by the acceptance of a connection by a <ref refid="classwx_t_c_p_server" kindref="compound">wxTCPServer</ref> object. The bulk of a conversation is controlled by calling members in a <bold><ref refid="classwx_t_c_p_connection" kindref="compound">wxTCPConnection</ref></bold> object or by overriding its members.</para><para>An application should normally derive a new connection class from <ref refid="classwx_t_c_p_connection" kindref="compound">wxTCPConnection</ref>, in order to override the communication event handlers to do something interesting.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxnet" kindref="member">wxNet</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__net" kindref="compound">Networking</ref></para><para><simplesect kind="see"><para><ref refid="classwx_t_c_p_client" kindref="compound">wxTCPClient</ref>, <ref refid="classwx_t_c_p_server" kindref="compound">wxTCPServer</ref>, <ref refid="overview_ipc" kindref="compound">Interprocess Communication</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="10907">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="10906">
        <label>wxTCPConnection</label>
        <link refid="classwx_t_c_p_connection"/>
        <childnode refid="10907" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10909">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="10910" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="10908">
        <label>wxTCPConnection</label>
        <link refid="classwx_t_c_p_connection"/>
        <childnode refid="10909" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10910">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" line="174" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/sckipc.h" bodystart="173" bodyend="343"/>
    <listofallmembers>
      <member refid="classwx_t_c_p_connection_1adc7cc4dd3ed4af62f392e0cb91cdaed9" prot="public" virt="non-virtual"><scope>wxTCPConnection</scope><name>Advise</name></member>
      <member refid="classwx_t_c_p_connection_1a4a9ccea19d0903c6a617b779e2096ef0" prot="public" virt="non-virtual"><scope>wxTCPConnection</scope><name>Advise</name></member>
      <member refid="classwx_t_c_p_connection_1a946d24c15d11ad057a69d80c9c4158d2" prot="public" virt="non-virtual"><scope>wxTCPConnection</scope><name>Advise</name></member>
      <member refid="classwx_t_c_p_connection_1a9e6fa84fe6b8aa720fda4ea6625eddee" prot="public" virt="non-virtual"><scope>wxTCPConnection</scope><name>Advise</name></member>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxTCPConnection</scope><name>AllocExclusive</name></member>
      <member refid="classwx_object_1a1d39f1d3650fe0982c9a1abe7f9fe7b7" prot="protected" virt="virtual"><scope>wxTCPConnection</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a95c6a5e4e1e03ff23c7b9efe4cff0c1a" prot="protected" virt="virtual"><scope>wxTCPConnection</scope><name>CreateRefData</name></member>
      <member refid="classwx_t_c_p_connection_1a28b3b2826a1ff7606c4b3912d1b008ed" prot="public" virt="virtual"><scope>wxTCPConnection</scope><name>Disconnect</name></member>
      <member refid="classwx_t_c_p_connection_1a641117e1e951023a991bf2d9701cb021" prot="public" virt="non-virtual"><scope>wxTCPConnection</scope><name>Execute</name></member>
      <member refid="classwx_t_c_p_connection_1a769489b5552ee8bf4f9adb7641c5d2ea" prot="public" virt="non-virtual"><scope>wxTCPConnection</scope><name>Execute</name></member>
      <member refid="classwx_t_c_p_connection_1ab1ef7d71025cfa7bd2f23fd9250b310f" prot="public" virt="non-virtual"><scope>wxTCPConnection</scope><name>Execute</name></member>
      <member refid="classwx_t_c_p_connection_1a2c6e4b9f85685bd29341ca7922c8ab96" prot="public" virt="non-virtual"><scope>wxTCPConnection</scope><name>Execute</name></member>
      <member refid="classwx_object_1ab3a0c6f723cbaddb47be4e8dd98cc8e2" prot="public" virt="virtual"><scope>wxTCPConnection</scope><name>GetClassInfo</name></member>
      <member refid="classwx_object_1aabdb4fc957226544a8408167844e4f42" prot="public" virt="non-virtual"><scope>wxTCPConnection</scope><name>GetRefData</name></member>
      <member refid="classwx_object_1af40d580385cf4f8112fae7713404b01e" prot="public" virt="non-virtual"><scope>wxTCPConnection</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a80a1a3fda7b14396a9ddd3d7a46a88bd" prot="public" virt="non-virtual"><scope>wxTCPConnection</scope><name>IsSameAs</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxTCPConnection</scope><name>m_refData</name></member>
      <member refid="classwx_t_c_p_connection_1afc89b194cbd4d4fc30b189235fa8a1bf" prot="public" virt="virtual"><scope>wxTCPConnection</scope><name>OnAdvise</name></member>
      <member refid="classwx_t_c_p_connection_1aa66169feb0200153f993ab5af86703ee" prot="public" virt="virtual"><scope>wxTCPConnection</scope><name>OnDisconnect</name></member>
      <member refid="classwx_t_c_p_connection_1a0748b23c702f79a69b0a32c1e9a54561" prot="public" virt="virtual"><scope>wxTCPConnection</scope><name>OnExecute</name></member>
      <member refid="classwx_t_c_p_connection_1a49e8aa8f754c9c8c4d284f312019167c" prot="public" virt="virtual"><scope>wxTCPConnection</scope><name>OnPoke</name></member>
      <member refid="classwx_t_c_p_connection_1a62fd57f6d0a56194ce25e4d7594ab251" prot="public" virt="virtual"><scope>wxTCPConnection</scope><name>OnRequest</name></member>
      <member refid="classwx_t_c_p_connection_1af2e09ce74dc7252983a0c0c4f4aa3d79" prot="public" virt="virtual"><scope>wxTCPConnection</scope><name>OnStartAdvise</name></member>
      <member refid="classwx_t_c_p_connection_1af38ae616a3af2569a7dde96fb6e95e8e" prot="public" virt="virtual"><scope>wxTCPConnection</scope><name>OnStopAdvise</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxTCPConnection</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxTCPConnection</scope><name>operator new</name></member>
      <member refid="classwx_t_c_p_connection_1ab9a0d9650141a968fc143e5402869729" prot="public" virt="non-virtual"><scope>wxTCPConnection</scope><name>Poke</name></member>
      <member refid="classwx_t_c_p_connection_1a3162a7c98869a229913b79bfd4ee73c9" prot="public" virt="non-virtual"><scope>wxTCPConnection</scope><name>Poke</name></member>
      <member refid="classwx_t_c_p_connection_1a8240df8d32aca9ef2007bfcd735f3b83" prot="public" virt="non-virtual"><scope>wxTCPConnection</scope><name>Poke</name></member>
      <member refid="classwx_t_c_p_connection_1ad8428f33c71b01f539eeaab68f5aa40b" prot="public" virt="non-virtual"><scope>wxTCPConnection</scope><name>Poke</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxTCPConnection</scope><name>Ref</name></member>
      <member refid="classwx_t_c_p_connection_1a72b129804884c02058f729647a35bb1a" prot="public" virt="virtual"><scope>wxTCPConnection</scope><name>Request</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxTCPConnection</scope><name>SetRefData</name></member>
      <member refid="classwx_t_c_p_connection_1a2bc425519ddda572c7dbf292f525fd43" prot="public" virt="virtual"><scope>wxTCPConnection</scope><name>StartAdvise</name></member>
      <member refid="classwx_t_c_p_connection_1a06987cc9489bd3fe6ea1002975807b68" prot="public" virt="virtual"><scope>wxTCPConnection</scope><name>StopAdvise</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxTCPConnection</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxTCPConnection</scope><name>UnShare</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxTCPConnection</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxTCPConnection</scope><name>wxObject</name></member>
      <member refid="classwx_t_c_p_connection_1a14a184b6e30f8bf3b636175a738d5b51" prot="public" virt="non-virtual"><scope>wxTCPConnection</scope><name>wxTCPConnection</name></member>
      <member refid="classwx_t_c_p_connection_1ae4c765338770dbe493a0af28eade65db" prot="public" virt="non-virtual"><scope>wxTCPConnection</scope><name>wxTCPConnection</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxTCPConnection</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
