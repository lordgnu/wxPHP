<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_conv_auto" kind="class" prot="public">
    <compoundname>wxConvAuto</compoundname>
    <basecompoundref refid="classwx_m_b_conv" prot="public" virt="non-virtual">wxMBConv</basecompoundref>
    <includes local="no">wx/convauto.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_conv_auto_1a88494409bdecddb4822470dd1ba8834a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxConvAuto::wxConvAuto</definition>
        <argsstring>(wxFontEncoding enc=wxFONTENCODING_DEFAULT)</argsstring>
        <name>wxConvAuto</name>
        <param>
          <type><ref refid="interface_2wx_2font_8h_1a09016a7497d1ec6defdf13fd6439acca" kindref="member">wxFontEncoding</ref></type>
          <declname>enc</declname>
          <defval>wxFONTENCODING_DEFAULT</defval>
        </param>
        <briefdescription>
<para>Constructs a new <ref refid="classwx_conv_auto" kindref="compound">wxConvAuto</ref> instance. </para>        </briefdescription>
        <detaileddescription>
<para>The object will try to detect the input of the multibyte text given to its <ref refid="classwx_m_b_conv_1a22ad1976c06a540a95dfa878038d65f2" kindref="member">wxMBConv::ToWChar()</ref> method automatically but if the automatic detection of Unicode encodings fails, the fall-back encoding <emphasis>enc</emphasis> will be used to interpret it as multibyte text.</para><para>The default value of <emphasis>enc</emphasis>, <computeroutput>wxFONTENCODING_DEFAULT</computeroutput>, means that the global default value (which can be set using <ref refid="classwx_conv_auto_1a5c3f9760a2ae03fbf4748423367e7903" kindref="member">SetFallbackEncoding()</ref>) should be used. As with that method, passing <computeroutput>wxFONTENCODING_MAX</computeroutput> inhibits using this encoding completely so the input multibyte text will always be interpreted as UTF-8 in the absence of BOM and the conversion will fail if the input doesn&apos;t form valid UTF-8 sequence.</para><para>Another special value is <computeroutput>wxFONTENCODING_SYSTEM</computeroutput> which means to use the encoding currently used on the user system, i.e. the encoding returned by <ref refid="classwx_locale_1aa807dd0db36c3bd6556c2a37014239d6" kindref="member">wxLocale::GetSystemEncoding()</ref>. Any other encoding will be used as is, e.g. passing <computeroutput>wxFONTENCODING_ISO8859_1</computeroutput> ensures that non-UTF-8 input will be treated as latin1. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/convauto.h" line="135"/>
      </memberdef>
      <memberdef kind="function" id="classwx_conv_auto_1a0d64e621be1c3cd491c483f1f7559a85" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="convauto_8h_1af393832da543c9238919f38be4536f60" kindref="member">wxBOM</ref></type>
        <definition>wxBOM wxConvAuto::GetBOM</definition>
        <argsstring>() const </argsstring>
        <name>GetBOM</name>
        <briefdescription>
<para>Return the detected BOM type. </para>        </briefdescription>
        <detaileddescription>
<para>The BOM type is detected after sufficiently many initial bytes have passed through this conversion object so it will always return wxBOM_Unknown immediately after the object creation but may return a different value later.</para><para><simplesect kind="since"><para>2.9.3 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/convauto.h" line="148"/>
      </memberdef>
      <memberdef kind="function" id="classwx_conv_auto_1a708201fd5509f31db43fb2e265432a7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* wxConvAuto::GetBOMChars</definition>
        <argsstring>(wxBOM bom, size_t *count)</argsstring>
        <name>GetBOMChars</name>
        <param>
          <type><ref refid="convauto_8h_1af393832da543c9238919f38be4536f60" kindref="member">wxBOM</ref></type>
          <declname>bom</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Return a pointer to the characters that makes up this BOM. </para>        </briefdescription>
        <detaileddescription>
<para>The returned character count is 2, 3 or 4, or undefined if the return value is NULL.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bom</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid BOM type, i.e. not wxBOM_Unknown or wxBOM_None. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>A non-NULL pointer receiving the number of characters in this BOM. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to characters composing the BOM or NULL if BOM is unknown or invalid. Notice that the returned string is not NUL-terminated and may contain embedded NULs so <emphasis>count</emphasis> must be used to handle it correctly.</para></simplesect>
<simplesect kind="since"><para>2.9.3 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/convauto.h" line="168"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_conv_auto_1af3751c63cbf505639501f8819318efdb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wxConvAuto::DisableFallbackEncoding</definition>
        <argsstring>()</argsstring>
        <name>DisableFallbackEncoding</name>
        <briefdescription>
<para>Disable the use of the fall back encoding: if the input doesn&apos;t have a BOM and is not valid UTF-8, the conversion will fail. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/convauto.h" line="174"/>
      </memberdef>
      <memberdef kind="function" id="classwx_conv_auto_1a7dc2532ac7a49fddf4da770b1a814abd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interface_2wx_2font_8h_1a09016a7497d1ec6defdf13fd6439acca" kindref="member">wxFontEncoding</ref></type>
        <definition>static wxFontEncoding wxConvAuto::GetFallbackEncoding</definition>
        <argsstring>()</argsstring>
        <name>GetFallbackEncoding</name>
        <briefdescription>
<para>Returns the encoding used by default by <ref refid="classwx_conv_auto" kindref="compound">wxConvAuto</ref> if no other encoding is explicitly specified in constructor. </para>        </briefdescription>
        <detaileddescription>
<para>By default, returns <computeroutput>wxFONTENCODING_ISO8859_1</computeroutput> but can be changed using <ref refid="classwx_conv_auto_1a5c3f9760a2ae03fbf4748423367e7903" kindref="member">SetFallbackEncoding()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/convauto.h" line="182"/>
      </memberdef>
      <memberdef kind="function" id="classwx_conv_auto_1a5c3f9760a2ae03fbf4748423367e7903" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wxConvAuto::SetFallbackEncoding</definition>
        <argsstring>(wxFontEncoding enc)</argsstring>
        <name>SetFallbackEncoding</name>
        <param>
          <type><ref refid="interface_2wx_2font_8h_1a09016a7497d1ec6defdf13fd6439acca" kindref="member">wxFontEncoding</ref></type>
          <declname>enc</declname>
        </param>
        <briefdescription>
<para>Changes the encoding used by default by <ref refid="classwx_conv_auto" kindref="compound">wxConvAuto</ref> if no other encoding is explicitly specified in constructor. </para>        </briefdescription>
        <detaileddescription>
<para>The default value, which can be retrieved using <ref refid="classwx_conv_auto_1a7dc2532ac7a49fddf4da770b1a814abd" kindref="member">GetFallbackEncoding()</ref>, is <computeroutput>wxFONTENCODING_ISO8859_1</computeroutput>.</para><para>Special values of <computeroutput>wxFONTENCODING_SYSTEM</computeroutput> or <computeroutput>wxFONTENCODING_MAX</computeroutput> can be used for the <emphasis>enc</emphasis> parameter to use the encoding of the current user locale as fall back or not use any encoding for fall back at all, respectively (just as with the similar constructor parameter). However, <computeroutput>wxFONTENCODING_DEFAULT</computeroutput> can&apos;t be used here. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/convauto.h" line="195"/>
      </memberdef>
      <memberdef kind="function" id="classwx_conv_auto_1a51eb3693a422ca8712ae9d168dace637" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="convauto_8h_1af393832da543c9238919f38be4536f60" kindref="member">wxBOM</ref></type>
        <definition>static wxBOM wxConvAuto::DetectBOM</definition>
        <argsstring>(const char *src, size_t srcLen)</argsstring>
        <name>DetectBOM</name>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>srcLen</declname>
        </param>
        <briefdescription>
<para>Return the BOM type of this buffer. </para>        </briefdescription>
        <detaileddescription>
<para>This is a helper function which is normally only used internally by <ref refid="classwx_conv_auto" kindref="compound">wxConvAuto</ref> but provided for convenience of the code that wants to detect the encoding of a stream by checking it for BOM presence on its own.</para><para><simplesect kind="since"><para>2.9.3 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/convauto.h" line="207"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class implements a Unicode to/from multibyte converter capable of automatically recognizing the encoding of the multibyte text on input. </para>    </briefdescription>
    <detaileddescription>
<para>The logic used is very simple: the class uses the BOM (byte order mark) if it&apos;s present and tries to interpret the input as UTF-8 otherwise. If this fails, the input is interpreted as being in the default multibyte encoding which can be specified in the constructor of a <ref refid="classwx_conv_auto" kindref="compound">wxConvAuto</ref> instance and, in turn, defaults to the value of <ref refid="classwx_conv_auto_1a7dc2532ac7a49fddf4da770b1a814abd" kindref="member">GetFallbackEncoding()</ref> if not explicitly given.</para><para>For the conversion from Unicode to multibyte, the same encoding as was previously used for multibyte to Unicode conversion is reused. If there had been no previous multibyte to Unicode conversion, UTF-8 is used by default. Notice that once the multibyte encoding is automatically detected, it doesn&apos;t change any more, i.e. it is entirely determined by the first use of <ref refid="classwx_conv_auto" kindref="compound">wxConvAuto</ref> object in the multibyte-to-Unicode direction. However creating a copy of <ref refid="classwx_conv_auto" kindref="compound">wxConvAuto</ref> object, either via the usual copy constructor or assignment operator, or using <ref refid="classwx_m_b_conv_1ae6fd1020a2c7c82191c4822682e80d05" kindref="member">wxMBConv::Clone()</ref>, resets the automatically detected encoding so that the new copy will try to detect the encoding of the input on first use.</para><para>This class is used by default in wxWidgets classes and functions reading text from files such as <ref refid="classwx_file" kindref="compound">wxFile</ref>, <ref refid="classwx_f_file" kindref="compound">wxFFile</ref>, <ref refid="classwx_text_file" kindref="compound">wxTextFile</ref>, <ref refid="classwx_file_config" kindref="compound">wxFileConfig</ref> and various stream classes so the encoding set with its <ref refid="classwx_conv_auto_1a5c3f9760a2ae03fbf4748423367e7903" kindref="member">SetFallbackEncoding()</ref> method will affect how these classes treat input files. In particular, use this method to change the fall-back multibyte encoding used to interpret the contents of the files whose contents isn&apos;t valid UTF-8 or to disallow it completely.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__data" kindref="compound">Data Structures</ref></para><para><simplesect kind="see"><para><ref refid="overview_mbconv" kindref="compound">wxMBConv Overview</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="5294">
        <label>wxConvAuto</label>
        <link refid="classwx_conv_auto"/>
        <childnode refid="5295" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5295">
        <label>wxMBConv</label>
        <link refid="classwx_m_b_conv"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5296">
        <label>wxConvAuto</label>
        <link refid="classwx_conv_auto"/>
        <childnode refid="5297" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5297">
        <label>wxMBConv</label>
        <link refid="classwx_m_b_conv"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/convauto.h" line="113" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/convauto.h" bodystart="112" bodyend="208"/>
    <listofallmembers>
      <member refid="classwx_m_b_conv_1ae6fd1020a2c7c82191c4822682e80d05" prot="public" virt="pure-virtual"><scope>wxConvAuto</scope><name>Clone</name></member>
      <member refid="classwx_m_b_conv_1a0e572efeda6c5c73ddff1292609fa211" prot="public" virt="non-virtual"><scope>wxConvAuto</scope><name>cMB2WC</name></member>
      <member refid="classwx_m_b_conv_1aced3961b0bdad13f390343b2b70d49b1" prot="public" virt="non-virtual"><scope>wxConvAuto</scope><name>cMB2WC</name></member>
      <member refid="classwx_m_b_conv_1a62b723fea6758812e786a3ec5797f8ba" prot="public" virt="non-virtual"><scope>wxConvAuto</scope><name>cMB2WX</name></member>
      <member refid="classwx_m_b_conv_1af8632260d14b0afcba0f2bc524ca2134" prot="public" virt="non-virtual"><scope>wxConvAuto</scope><name>cMB2WX</name></member>
      <member refid="classwx_m_b_conv_1a496c808fc769800659e5de1a74115a54" prot="public" virt="non-virtual"><scope>wxConvAuto</scope><name>cWC2MB</name></member>
      <member refid="classwx_m_b_conv_1a34d1ea0725e5001e4f74a5dbf5c81c4f" prot="public" virt="non-virtual"><scope>wxConvAuto</scope><name>cWC2MB</name></member>
      <member refid="classwx_m_b_conv_1a9bcb820aebfdd3d3e50a929b01c52f8d" prot="public" virt="non-virtual"><scope>wxConvAuto</scope><name>cWC2WX</name></member>
      <member refid="classwx_m_b_conv_1ac6c7885e9186d5ce2786b49169c872f1" prot="public" virt="non-virtual"><scope>wxConvAuto</scope><name>cWC2WX</name></member>
      <member refid="classwx_m_b_conv_1a15f4266aa96806bb5eebc9b1c4eaff05" prot="public" virt="non-virtual"><scope>wxConvAuto</scope><name>cWX2MB</name></member>
      <member refid="classwx_m_b_conv_1a3bbb71a7814c12dac290f6b61a3acc15" prot="public" virt="non-virtual"><scope>wxConvAuto</scope><name>cWX2MB</name></member>
      <member refid="classwx_m_b_conv_1ae08f0764f8acb6b075846c8bf126f57b" prot="public" virt="non-virtual"><scope>wxConvAuto</scope><name>cWX2WC</name></member>
      <member refid="classwx_m_b_conv_1ab4eec03d83e532986aca1e41ad472bb8" prot="public" virt="non-virtual"><scope>wxConvAuto</scope><name>cWX2WC</name></member>
      <member refid="classwx_conv_auto_1a51eb3693a422ca8712ae9d168dace637" prot="public" virt="non-virtual"><scope>wxConvAuto</scope><name>DetectBOM</name></member>
      <member refid="classwx_conv_auto_1af3751c63cbf505639501f8819318efdb" prot="public" virt="non-virtual"><scope>wxConvAuto</scope><name>DisableFallbackEncoding</name></member>
      <member refid="classwx_m_b_conv_1a149c15b515e008fdd1f69a852f11594e" prot="public" virt="virtual"><scope>wxConvAuto</scope><name>FromWChar</name></member>
      <member refid="classwx_conv_auto_1a0d64e621be1c3cd491c483f1f7559a85" prot="public" virt="non-virtual"><scope>wxConvAuto</scope><name>GetBOM</name></member>
      <member refid="classwx_conv_auto_1a708201fd5509f31db43fb2e265432a7d" prot="public" virt="non-virtual"><scope>wxConvAuto</scope><name>GetBOMChars</name></member>
      <member refid="classwx_conv_auto_1a7dc2532ac7a49fddf4da770b1a814abd" prot="public" virt="non-virtual"><scope>wxConvAuto</scope><name>GetFallbackEncoding</name></member>
      <member refid="classwx_m_b_conv_1a9d22d211135f265ed018e103590a61f0" prot="public" virt="non-virtual"><scope>wxConvAuto</scope><name>GetMaxMBNulLen</name></member>
      <member refid="classwx_m_b_conv_1a2d6590cbcc686be76a9c4f1c071ff99f" prot="public" virt="virtual"><scope>wxConvAuto</scope><name>GetMBNulLen</name></member>
      <member refid="classwx_m_b_conv_1a79d63eff51836148157c986943835742" prot="public" virt="virtual"><scope>wxConvAuto</scope><name>MB2WC</name></member>
      <member refid="classwx_conv_auto_1a5c3f9760a2ae03fbf4748423367e7903" prot="public" virt="non-virtual"><scope>wxConvAuto</scope><name>SetFallbackEncoding</name></member>
      <member refid="classwx_m_b_conv_1a22ad1976c06a540a95dfa878038d65f2" prot="public" virt="virtual"><scope>wxConvAuto</scope><name>ToWChar</name></member>
      <member refid="classwx_m_b_conv_1a537a0f90ab4738e3e9be58d9a77b71b1" prot="public" virt="virtual"><scope>wxConvAuto</scope><name>WC2MB</name></member>
      <member refid="classwx_conv_auto_1a88494409bdecddb4822470dd1ba8834a" prot="public" virt="non-virtual"><scope>wxConvAuto</scope><name>wxConvAuto</name></member>
      <member refid="classwx_m_b_conv_1ab2348d20301679ce0cf5c565446b0080" prot="public" virt="non-virtual"><scope>wxConvAuto</scope><name>wxMBConv</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
