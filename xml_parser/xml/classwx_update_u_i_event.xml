<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_update_u_i_event" kind="class" prot="public">
    <compoundname>wxUpdateUIEvent</compoundname>
    <basecompoundref refid="classwx_command_event" prot="public" virt="non-virtual">wxCommandEvent</basecompoundref>
    <includes local="no">wx/event.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_update_u_i_event_1aa25df58e7047f819f5dd0520eb2cc8ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxUpdateUIEvent::wxUpdateUIEvent</definition>
        <argsstring>(wxWindowID commandId=0)</argsstring>
        <name>wxUpdateUIEvent</name>
        <param>
          <type><ref refid="windowid_8h_1ae8091432cc2cb2485d45f2302fb51133" kindref="member">wxWindowID</ref></type>
          <declname>commandId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2004"/>
      </memberdef>
      <memberdef kind="function" id="classwx_update_u_i_event_1abba131bbbd81478236298a606e3ed3cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxUpdateUIEvent::Check</definition>
        <argsstring>(bool check)</argsstring>
        <name>Check</name>
        <param>
          <type>bool</type>
          <declname>check</declname>
        </param>
        <briefdescription>
<para>Check or uncheck the UI element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2026"/>
      </memberdef>
      <memberdef kind="function" id="classwx_update_u_i_event_1a1105167b0e80d6ae19021656c5c404b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxUpdateUIEvent::Enable</definition>
        <argsstring>(bool enable)</argsstring>
        <name>Enable</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable or disable the UI element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2031"/>
      </memberdef>
      <memberdef kind="function" id="classwx_update_u_i_event_1a2a55bfa5867263047c079736a100fe2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxUpdateUIEvent::GetChecked</definition>
        <argsstring>() const </argsstring>
        <name>GetChecked</name>
        <briefdescription>
<para>Returns true if the UI element should be checked. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2036"/>
      </memberdef>
      <memberdef kind="function" id="classwx_update_u_i_event_1a25d9c2e56638b3a5da39006f62f9467b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxUpdateUIEvent::GetEnabled</definition>
        <argsstring>() const </argsstring>
        <name>GetEnabled</name>
        <briefdescription>
<para>Returns true if the UI element should be enabled. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2041"/>
      </memberdef>
      <memberdef kind="function" id="classwx_update_u_i_event_1a429569edeef0c908ec61465273af1209" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxUpdateUIEvent::GetSetChecked</definition>
        <argsstring>() const </argsstring>
        <name>GetSetChecked</name>
        <briefdescription>
<para>Returns true if the application has called <ref refid="classwx_update_u_i_event_1abba131bbbd81478236298a606e3ed3cd" kindref="member">Check()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>For wxWidgets internal use only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2056"/>
      </memberdef>
      <memberdef kind="function" id="classwx_update_u_i_event_1ac61d7606adecfe42790e199180572bf5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxUpdateUIEvent::GetSetEnabled</definition>
        <argsstring>() const </argsstring>
        <name>GetSetEnabled</name>
        <briefdescription>
<para>Returns true if the application has called <ref refid="classwx_update_u_i_event_1a1105167b0e80d6ae19021656c5c404b8" kindref="member">Enable()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>For wxWidgets internal use only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2062"/>
      </memberdef>
      <memberdef kind="function" id="classwx_update_u_i_event_1a8983c44ec3b4398d307cd98e09b7c5c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxUpdateUIEvent::GetSetShown</definition>
        <argsstring>() const </argsstring>
        <name>GetSetShown</name>
        <briefdescription>
<para>Returns true if the application has called <ref refid="classwx_update_u_i_event_1a9269df1c4a3345267dc3d7ef8ee8423c" kindref="member">Show()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>For wxWidgets internal use only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2068"/>
      </memberdef>
      <memberdef kind="function" id="classwx_update_u_i_event_1a8212fb8f73b47cd5f99d8f7106de6661" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxUpdateUIEvent::GetSetText</definition>
        <argsstring>() const </argsstring>
        <name>GetSetText</name>
        <briefdescription>
<para>Returns true if the application has called <ref refid="classwx_update_u_i_event_1a157efca52b0a423836610d115b4f69f7" kindref="member">SetText()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>For wxWidgets internal use only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2074"/>
      </memberdef>
      <memberdef kind="function" id="classwx_update_u_i_event_1ac536fb92f55435abd1f3459d507de06f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxUpdateUIEvent::GetShown</definition>
        <argsstring>() const </argsstring>
        <name>GetShown</name>
        <briefdescription>
<para>Returns true if the UI element should be shown. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2079"/>
      </memberdef>
      <memberdef kind="function" id="classwx_update_u_i_event_1ab0aeaf65ea4fcae740afc061395d6fcd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxUpdateUIEvent::GetText</definition>
        <argsstring>() const </argsstring>
        <name>GetText</name>
        <briefdescription>
<para>Returns the text that should be set for the UI element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2084"/>
      </memberdef>
      <memberdef kind="function" id="classwx_update_u_i_event_1a157efca52b0a423836610d115b4f69f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxUpdateUIEvent::SetText</definition>
        <argsstring>(const wxString &amp;text)</argsstring>
        <name>SetText</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Sets the text for this UI element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2117"/>
      </memberdef>
      <memberdef kind="function" id="classwx_update_u_i_event_1a9269df1c4a3345267dc3d7ef8ee8423c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxUpdateUIEvent::Show</definition>
        <argsstring>(bool show)</argsstring>
        <name>Show</name>
        <param>
          <type>bool</type>
          <declname>show</declname>
        </param>
        <briefdescription>
<para>Show or hide the UI element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2135"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_update_u_i_event_1a82d4a0dd8adea9d37d4b04cebe190d5f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool wxUpdateUIEvent::CanUpdate</definition>
        <argsstring>(wxWindow *window)</argsstring>
        <name>CanUpdate</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Returns true if it is appropriate to update (send UI update events to) this window. </para>        </briefdescription>
        <detaileddescription>
<para>This function looks at the mode used (see <ref refid="classwx_update_u_i_event_1ab3a94b31cf5c72ae84ffa8b7cc1777e7" kindref="member">wxUpdateUIEvent::SetMode</ref>), the wxWS_EX_PROCESS_UI_UPDATES flag in <emphasis>window</emphasis>, the time update events were last sent in idle time, and the update interval, to determine whether events should be sent to this window now. By default this will always return true because the update mode is initially wxUPDATE_UI_PROCESS_ALL and the interval is set to 0; so update events will be sent as often as possible. You can reduce the frequency that events are sent by changing the mode and/or setting an update interval.</para><para><simplesect kind="see"><para><ref refid="classwx_update_u_i_event_1acc9e27c48a04d2f798fd0836bd8c2988" kindref="member">ResetUpdateTime()</ref>, <ref refid="classwx_update_u_i_event_1a24daac56f682b866baac592e761ccede" kindref="member">SetUpdateInterval()</ref>, <ref refid="classwx_update_u_i_event_1ab3a94b31cf5c72ae84ffa8b7cc1777e7" kindref="member">SetMode()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2021"/>
      </memberdef>
      <memberdef kind="function" id="classwx_update_u_i_event_1a2c9b40117664969aa4e3458034349840" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="event_8h_1afd2fee4ca28a8255a68a0b06970aae9b" kindref="member">wxUpdateUIMode</ref></type>
        <definition>static wxUpdateUIMode wxUpdateUIEvent::GetMode</definition>
        <argsstring>()</argsstring>
        <name>GetMode</name>
        <briefdescription>
<para>Static function returning a value specifying how wxWidgets will send update events: to all windows, or only to those which specify that they will process the events. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_update_u_i_event_1ab3a94b31cf5c72ae84ffa8b7cc1777e7" kindref="member">SetMode()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2050"/>
      </memberdef>
      <memberdef kind="function" id="classwx_update_u_i_event_1af0218813302173f9eb33094f115ed565" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>static long wxUpdateUIEvent::GetUpdateInterval</definition>
        <argsstring>()</argsstring>
        <name>GetUpdateInterval</name>
        <briefdescription>
<para>Returns the current interval between updates in milliseconds. </para>        </briefdescription>
        <detaileddescription>
<para>The value -1 disables updates, 0 updates as frequently as possible.</para><para><simplesect kind="see"><para><ref refid="classwx_update_u_i_event_1a24daac56f682b866baac592e761ccede" kindref="member">SetUpdateInterval()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2092"/>
      </memberdef>
      <memberdef kind="function" id="classwx_update_u_i_event_1acc9e27c48a04d2f798fd0836bd8c2988" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wxUpdateUIEvent::ResetUpdateTime</definition>
        <argsstring>()</argsstring>
        <name>ResetUpdateTime</name>
        <briefdescription>
<para>Used internally to reset the last-updated time to the current time. </para>        </briefdescription>
        <detaileddescription>
<para>It is assumed that update events are normally sent in idle time, so this is called at the end of idle processing.</para><para><simplesect kind="see"><para><ref refid="classwx_update_u_i_event_1a82d4a0dd8adea9d37d4b04cebe190d5f" kindref="member">CanUpdate()</ref>, <ref refid="classwx_update_u_i_event_1a24daac56f682b866baac592e761ccede" kindref="member">SetUpdateInterval()</ref>, <ref refid="classwx_update_u_i_event_1ab3a94b31cf5c72ae84ffa8b7cc1777e7" kindref="member">SetMode()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2102"/>
      </memberdef>
      <memberdef kind="function" id="classwx_update_u_i_event_1ab3a94b31cf5c72ae84ffa8b7cc1777e7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wxUpdateUIEvent::SetMode</definition>
        <argsstring>(wxUpdateUIMode mode)</argsstring>
        <name>SetMode</name>
        <param>
          <type><ref refid="event_8h_1afd2fee4ca28a8255a68a0b06970aae9b" kindref="member">wxUpdateUIMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Specify how wxWidgets will send update events: to all windows, or only to those which specify that they will process the events. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>this parameter may be one of the <ref refid="event_8h_1afd2fee4ca28a8255a68a0b06970aae9b" kindref="member">wxUpdateUIMode</ref> enumeration values. The default mode is wxUPDATE_UI_PROCESS_ALL. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2112"/>
      </memberdef>
      <memberdef kind="function" id="classwx_update_u_i_event_1a24daac56f682b866baac592e761ccede" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wxUpdateUIEvent::SetUpdateInterval</definition>
        <argsstring>(long updateInterval)</argsstring>
        <name>SetUpdateInterval</name>
        <param>
          <type>long</type>
          <declname>updateInterval</declname>
        </param>
        <briefdescription>
<para>Sets the interval between updates in milliseconds. </para>        </briefdescription>
        <detaileddescription>
<para>Set to -1 to disable updates, or to 0 to update as frequently as possible. The default is 0.</para><para>Use this to reduce the overhead of UI update events if your application has a lot of windows. If you set the value to -1 or greater than 0, you may also need to call <ref refid="classwx_window_1adf0a4987728bd0bf69f922641b3efbfc" kindref="member">wxWindow::UpdateWindowUI</ref> at appropriate points in your application, such as when a dialog is about to be shown. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2130"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class is used for pseudo-events which are called by wxWidgets to give an application the chance to update various user interface elements. </para>    </briefdescription>
    <detaileddescription>
<para>Without update UI events, an application has to work hard to check/uncheck, enable/disable, show/hide, and set the text for elements such as menu items and toolbar buttons. The code for doing this has to be mixed up with the code that is invoked when an action is invoked for a menu item or button.</para><para>With update UI events, you define an event handler to look at the state of the application and change UI elements accordingly. wxWidgets will call your member functions in idle time, so you don&apos;t have to worry where to call this code.</para><para>In addition to being a clearer and more declarative method, it also means you don&apos;t have to worry whether you&apos;re updating a toolbar or menubar identifier. The same handler can update a menu item and toolbar button, if the identifier is the same. Instead of directly manipulating the menu or button, you call functions in the event object, such as <ref refid="classwx_update_u_i_event_1abba131bbbd81478236298a606e3ed3cd" kindref="member">wxUpdateUIEvent::Check</ref>. wxWidgets will determine whether such a call has been made, and which UI element to update.</para><para>These events will work for popup menus as well as menubars. Just before a menu is popped up, <ref refid="classwx_menu_1aedd1c1536176ffec144f7e8bea85bd89" kindref="member">wxMenu::UpdateUI</ref> is called to process any UI events for the window that owns the menu.</para><para>If you find that the overhead of UI update processing is affecting your application, you can do one or both of the following: <itemizedlist>
<listitem><para>Call <ref refid="classwx_update_u_i_event_1ab3a94b31cf5c72ae84ffa8b7cc1777e7" kindref="member">wxUpdateUIEvent::SetMode</ref> with a value of wxUPDATE_UI_PROCESS_SPECIFIED, and set the extra style wxWS_EX_PROCESS_UI_UPDATES for every window that should receive update events. No other windows will receive update events. </para></listitem>
<listitem><para>Call <ref refid="classwx_update_u_i_event_1a24daac56f682b866baac592e761ccede" kindref="member">wxUpdateUIEvent::SetUpdateInterval</ref> with a millisecond value to set the delay between updates. You may need to call <ref refid="classwx_window_1adf0a4987728bd0bf69f922641b3efbfc" kindref="member">wxWindow::UpdateWindowUI</ref> at critical points, for example when a dialog is about to be shown, in case the user sees a slight delay before windows are updated.</para></listitem>
</itemizedlist>
Note that although events are sent in idle time, defining a <ref refid="classwx_idle_event" kindref="compound">wxIdleEvent</ref> handler for a window does not affect this because the events are sent from <ref refid="classwx_window_1a6b5654c0c6c6245d592c279521f7099c" kindref="member">wxWindow::OnInternalIdle</ref> which is always called in idle time.</para><para>wxWidgets tries to optimize update events on some platforms. On Windows and GTK+, events for menubar items are only sent when the menu is about to be shown, and not in idle time.</para><para><heading level="2">Events using this class</heading>
</para><para>The following event handler macros redirect the events to member function handlers &apos;<bold>func</bold>&apos; with prototypes like: void<nonbreakablespace/>handlerFuncName(<ref refid="classwx_update_u_i_event" kindref="compound">wxUpdateUIEvent</ref>&amp;<nonbreakablespace/>event)Event macros: <itemizedlist>
<listitem><para>EVT_UPDATE_UI(id,  func): Process a <computeroutput>wxEVT_UPDATE_UI</computeroutput> event for the command with the given id. </para></listitem>
<listitem><para>EVT_UPDATE_UI_RANGE(id1,  id2,  func): Process a <computeroutput>wxEVT_UPDATE_UI</computeroutput> event for any command with id included in the given range. </para></listitem>
</itemizedlist>
<heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__events" kindref="compound">Events</ref></para><para><simplesect kind="see"><para><ref refid="overview_events" kindref="compound">Events and Event Handling</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="11444">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="11441">
        <label>wxUpdateUIEvent</label>
        <link refid="classwx_update_u_i_event"/>
        <childnode refid="11442" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11442">
        <label>wxCommandEvent</label>
        <link refid="classwx_command_event"/>
        <childnode refid="11443" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11443">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="11444" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11448">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="11449" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="11445">
        <label>wxUpdateUIEvent</label>
        <link refid="classwx_update_u_i_event"/>
        <childnode refid="11446" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11446">
        <label>wxCommandEvent</label>
        <link refid="classwx_command_event"/>
        <childnode refid="11447" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11447">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="11448" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11449">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="1999" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" bodystart="1998" bodyend="2136"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>AllocExclusive</name></member>
      <member refid="classwx_update_u_i_event_1a82d4a0dd8adea9d37d4b04cebe190d5f" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>CanUpdate</name></member>
      <member refid="classwx_update_u_i_event_1abba131bbbd81478236298a606e3ed3cd" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>Check</name></member>
      <member refid="classwx_event_1a26878097a702e8d0368da150125d4158" prot="public" virt="pure-virtual"><scope>wxUpdateUIEvent</scope><name>Clone</name></member>
      <member refid="classwx_object_1a1d39f1d3650fe0982c9a1abe7f9fe7b7" prot="protected" virt="virtual"><scope>wxUpdateUIEvent</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a95c6a5e4e1e03ff23c7b9efe4cff0c1a" prot="protected" virt="virtual"><scope>wxUpdateUIEvent</scope><name>CreateRefData</name></member>
      <member refid="classwx_update_u_i_event_1a1105167b0e80d6ae19021656c5c404b8" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>Enable</name></member>
      <member refid="classwx_update_u_i_event_1a2a55bfa5867263047c079736a100fe2e" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>GetChecked</name></member>
      <member refid="classwx_object_1ab3a0c6f723cbaddb47be4e8dd98cc8e2" prot="public" virt="virtual"><scope>wxUpdateUIEvent</scope><name>GetClassInfo</name></member>
      <member refid="classwx_command_event_1ae23c23fb440b31f32498dbe1b54faf32" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>GetClientData</name></member>
      <member refid="classwx_command_event_1a6aba95aef4930c03fbba5808b395c93f" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>GetClientObject</name></member>
      <member refid="classwx_update_u_i_event_1a25d9c2e56638b3a5da39006f62f9467b" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>GetEnabled</name></member>
      <member refid="classwx_event_1a525e5c576e64090af493cb81db2da59b" prot="public" virt="virtual"><scope>wxUpdateUIEvent</scope><name>GetEventCategory</name></member>
      <member refid="classwx_event_1abdc74e95c8c2f32f2cc2bd84b88985ee" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>GetEventObject</name></member>
      <member refid="classwx_event_1ac1e62dc3000d4bff0ebbd90a3d290695" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>GetEventType</name></member>
      <member refid="classwx_command_event_1aadd8fc10e9e32755f7bca503fe10f5fc" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>GetExtraLong</name></member>
      <member refid="classwx_event_1ac732828ac14cfc289d798a4fea437246" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>GetId</name></member>
      <member refid="classwx_command_event_1abaf0dde08fd04018feba4b458b757a7f" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>GetInt</name></member>
      <member refid="classwx_update_u_i_event_1a2c9b40117664969aa4e3458034349840" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>GetMode</name></member>
      <member refid="classwx_object_1aabdb4fc957226544a8408167844e4f42" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>GetRefData</name></member>
      <member refid="classwx_command_event_1a3e16380f20769b1ed4053c69fe614b13" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>GetSelection</name></member>
      <member refid="classwx_update_u_i_event_1a429569edeef0c908ec61465273af1209" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>GetSetChecked</name></member>
      <member refid="classwx_update_u_i_event_1ac61d7606adecfe42790e199180572bf5" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>GetSetEnabled</name></member>
      <member refid="classwx_update_u_i_event_1a8983c44ec3b4398d307cd98e09b7c5c2" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>GetSetShown</name></member>
      <member refid="classwx_update_u_i_event_1a8212fb8f73b47cd5f99d8f7106de6661" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>GetSetText</name></member>
      <member refid="classwx_update_u_i_event_1ac536fb92f55435abd1f3459d507de06f" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>GetShown</name></member>
      <member refid="classwx_event_1a448d5ef08f617a3ae316235fcf804377" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>GetSkipped</name></member>
      <member refid="classwx_command_event_1a24323d78936e5f6cd7f4780371f373e0" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>GetString</name></member>
      <member refid="classwx_update_u_i_event_1ab0aeaf65ea4fcae740afc061395d6fcd" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>GetText</name></member>
      <member refid="classwx_event_1a8a42d5b35d442052b58c53077ff4ae60" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>GetTimestamp</name></member>
      <member refid="classwx_update_u_i_event_1af0218813302173f9eb33094f115ed565" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>GetUpdateInterval</name></member>
      <member refid="classwx_command_event_1a787f616f732b35c6ed30ab10b74147e4" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>IsChecked</name></member>
      <member refid="classwx_event_1ad70c9cfaf0d626c1115b2d42ea047c2d" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>IsCommandEvent</name></member>
      <member refid="classwx_object_1af40d580385cf4f8112fae7713404b01e" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a80a1a3fda7b14396a9ddd3d7a46a88bd" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>IsSameAs</name></member>
      <member refid="classwx_command_event_1a4bb9cda53263b6c666ce2ab7159203f1" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>IsSelection</name></member>
      <member refid="classwx_event_1ac81911194f1f59e1454c0397b87975d4" prot="protected" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>m_propagationLevel</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>Ref</name></member>
      <member refid="classwx_update_u_i_event_1acc9e27c48a04d2f798fd0836bd8c2988" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>ResetUpdateTime</name></member>
      <member refid="classwx_event_1a0acb5c75f6e67b8822ad8ba3c5bdc4fe" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>ResumePropagation</name></member>
      <member refid="classwx_command_event_1a1778d16766134e08cafcdb49b06855ce" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>SetClientData</name></member>
      <member refid="classwx_command_event_1a752e5a0fb8992b062c4dec6866171586" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>SetClientObject</name></member>
      <member refid="classwx_event_1a3460217d04c36393ab868ba453fde13d" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>SetEventObject</name></member>
      <member refid="classwx_event_1aa29fb7459d64602e09837fea1e516d27" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>SetEventType</name></member>
      <member refid="classwx_command_event_1a13ac3c581b99d110bac2c6b74803d2df" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>SetExtraLong</name></member>
      <member refid="classwx_event_1ab9973f687bfa8a60318d8d9bd629d0d4" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>SetId</name></member>
      <member refid="classwx_command_event_1aeaed91ffb1d02f07d7ea40f029f95a7c" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>SetInt</name></member>
      <member refid="classwx_update_u_i_event_1ab3a94b31cf5c72ae84ffa8b7cc1777e7" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>SetMode</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>SetRefData</name></member>
      <member refid="classwx_command_event_1a06ca56ac6680fe3b3178d8abd913d450" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>SetString</name></member>
      <member refid="classwx_update_u_i_event_1a157efca52b0a423836610d115b4f69f7" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>SetText</name></member>
      <member refid="classwx_event_1ad4380dff3144a986cb960473051a1d8d" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>SetTimestamp</name></member>
      <member refid="classwx_update_u_i_event_1a24daac56f682b866baac592e761ccede" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>SetUpdateInterval</name></member>
      <member refid="classwx_event_1ad265ef226445cb6b72a2697dd9d3b406" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>ShouldPropagate</name></member>
      <member refid="classwx_update_u_i_event_1a9269df1c4a3345267dc3d7ef8ee8423c" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>Show</name></member>
      <member refid="classwx_event_1a98eb20b76106f9a933c2eb3ee119f66c" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>Skip</name></member>
      <member refid="classwx_event_1a060a7d222404daff4d3cef30cddeaae3" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>StopPropagation</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>UnShare</name></member>
      <member refid="classwx_command_event_1aad941347872cd71fedcfc765fae7b2f7" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>wxCommandEvent</name></member>
      <member refid="classwx_event_1aaf2a5cf056d006859cea36689ba13d36" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>wxEvent</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>wxObject</name></member>
      <member refid="classwx_update_u_i_event_1aa25df58e7047f819f5dd0520eb2cc8ea" prot="public" virt="non-virtual"><scope>wxUpdateUIEvent</scope><name>wxUpdateUIEvent</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxUpdateUIEvent</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
