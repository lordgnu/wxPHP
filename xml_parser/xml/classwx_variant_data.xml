<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_variant_data" kind="class" prot="public">
    <compoundname>wxVariantData</compoundname>
    <basecompoundref refid="classwx_object_ref_data" prot="public" virt="non-virtual">wxObjectRefData</basecompoundref>
    <includes local="no">wx/variant.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_variant_data_1ac6f6a975c310013dca16b71ce891f39e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxVariantData::wxVariantData</definition>
        <argsstring>()</argsstring>
        <name>wxVariantData</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/variant.h" line="608"/>
      </memberdef>
      <memberdef kind="function" id="classwx_variant_data_1a1dff3469897917c2d583c54ec03a1795" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_variant_data" kindref="compound">wxVariantData</ref> *</type>
        <definition>virtual wxVariantData* wxVariantData::Clone</definition>
        <argsstring>() const </argsstring>
        <name>Clone</name>
        <briefdescription>
<para>This function can be overridden to clone the data. </para>        </briefdescription>
        <detaileddescription>
<para>You must implement this function in order for <ref refid="classwx_variant_1af5021c0a8bfb8ce1b987764ab662b132" kindref="member">wxVariant::Unshare()</ref> to work for your data. This function is implemented for all built-in data types. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/variant.h" line="615"/>
      </memberdef>
      <memberdef kind="function" id="classwx_variant_data_1a5c90358b8b5d3bc99c0c3410cf565010" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxVariantData::DecRef</definition>
        <argsstring>()</argsstring>
        <name>DecRef</name>
        <briefdescription>
<para>Decreases reference count. </para>        </briefdescription>
        <detaileddescription>
<para>If the count reaches zero, the object is automatically deleted.</para><para><simplesect kind="note"><para>The destructor of <ref refid="classwx_variant_data" kindref="compound">wxVariantData</ref> is protected, so delete cannot be used as normal. Instead, <ref refid="classwx_variant_data_1a5c90358b8b5d3bc99c0c3410cf565010" kindref="member">DecRef()</ref> should be called. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/variant.h" line="624"/>
      </memberdef>
      <memberdef kind="function" id="classwx_variant_data_1a528c7c86af3dd554e5b72d2e5fdead6f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool wxVariantData::Eq</definition>
        <argsstring>(wxVariantData &amp;data) const =0</argsstring>
        <name>Eq</name>
        <param>
          <type><ref refid="classwx_variant_data" kindref="compound">wxVariantData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Returns true if this object is equal to <emphasis>data</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/variant.h" line="629"/>
      </memberdef>
      <memberdef kind="function" id="classwx_variant_data_1aa8d683f29eb3c502ca6cb7a98a92fa0e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxVariantData::GetAny</definition>
        <argsstring>(wxAny *any) const </argsstring>
        <name>GetAny</name>
        <param>
          <type><ref refid="classwx_any" kindref="compound">wxAny</ref> *</type>
          <declname>any</declname>
        </param>
        <briefdescription>
<para>Converts value to <ref refid="classwx_any" kindref="compound">wxAny</ref>, if possible. </para>        </briefdescription>
        <detaileddescription>
<para>Return true if successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/variant.h" line="634"/>
      </memberdef>
      <memberdef kind="function" id="classwx_variant_data_1a56789ab40ed58d058e655576ec1e81bc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxVariantData::GetType</definition>
        <argsstring>() const =0</argsstring>
        <name>GetType</name>
        <briefdescription>
<para>Returns the string type of the data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/variant.h" line="639"/>
      </memberdef>
      <memberdef kind="function" id="classwx_variant_data_1a00e53db157b5eef10b07b648f2f1e623" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_class_info" kindref="compound">wxClassInfo</ref> *</type>
        <definition>virtual wxClassInfo* wxVariantData::GetValueClassInfo</definition>
        <argsstring>()</argsstring>
        <name>GetValueClassInfo</name>
        <briefdescription>
<para>If the data is a <ref refid="classwx_object" kindref="compound">wxObject</ref> returns a pointer to the objects <ref refid="classwx_class_info" kindref="compound">wxClassInfo</ref> structure, if the data isn&apos;t a <ref refid="classwx_object" kindref="compound">wxObject</ref> the method returns NULL. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/variant.h" line="645"/>
      </memberdef>
      <memberdef kind="function" id="classwx_variant_data_1ae25c62e3451463ed287367a7b709e51d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxVariantData::IncRef</definition>
        <argsstring>()</argsstring>
        <name>IncRef</name>
        <briefdescription>
<para>Increases reference count. </para>        </briefdescription>
        <detaileddescription>
<para>Note that initially <ref refid="classwx_variant_data" kindref="compound">wxVariantData</ref> has reference count of 1. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/variant.h" line="651"/>
      </memberdef>
      <memberdef kind="function" id="classwx_variant_data_1a1007dbb33d60c210caab567d2d12feae" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxVariantData::Read</definition>
        <argsstring>(istream &amp;stream)</argsstring>
        <name>Read</name>
        <param>
          <type>istream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Reads the data from <emphasis>stream</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/variant.h" line="656"/>
      </memberdef>
      <memberdef kind="function" id="classwx_variant_data_1a478c208420802aade488e57de371d27b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxVariantData::Read</definition>
        <argsstring>(wxString &amp;string)</argsstring>
        <name>Read</name>
        <param>
          <type><ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
<para>Reads the data from <emphasis>string</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/variant.h" line="661"/>
      </memberdef>
      <memberdef kind="function" id="classwx_variant_data_1a6229f1f0f28174a5256778c9acde711f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxVariantData::Write</definition>
        <argsstring>(ostream &amp;stream) const </argsstring>
        <name>Write</name>
        <param>
          <type>ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Writes the data to <emphasis>stream</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/variant.h" line="666"/>
      </memberdef>
      <memberdef kind="function" id="classwx_variant_data_1aee0322acdcf0957c9b5e17cb4b29f503" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxVariantData::Write</definition>
        <argsstring>(wxString &amp;string) const </argsstring>
        <name>Write</name>
        <param>
          <type><ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
<para>Writes the data to <emphasis>string</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/variant.h" line="670"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classwx_variant_data" kindref="compound">wxVariantData</ref> class is used to implement a new type for <ref refid="classwx_variant" kindref="compound">wxVariant</ref>. </para>    </briefdescription>
    <detaileddescription>
<para>Derive from <ref refid="classwx_variant_data" kindref="compound">wxVariantData</ref>, and override the pure virtual functions.</para><para><ref refid="classwx_variant_data" kindref="compound">wxVariantData</ref> is <ref refid="overview_refcount" kindref="compound">reference counted</ref>, but you don&apos;t normally have to care about this, as <ref refid="classwx_variant" kindref="compound">wxVariant</ref> manages the count automatically. However, in case your application needs to take ownership of <ref refid="classwx_variant_data" kindref="compound">wxVariantData</ref>, be aware that the object is created with a reference count of 1, and passing it to <ref refid="classwx_variant" kindref="compound">wxVariant</ref> will not increase this. In other words, <ref refid="classwx_variant_data_1ae25c62e3451463ed287367a7b709e51d" kindref="member">IncRef()</ref> needs to be called only if you both take ownership of <ref refid="classwx_variant_data" kindref="compound">wxVariantData</ref> and pass it to a <ref refid="classwx_variant" kindref="compound">wxVariant</ref>. Also note that the destructor is protected, so you can never explicitly delete a <ref refid="classwx_variant_data" kindref="compound">wxVariantData</ref> instance. Instead, <ref refid="classwx_variant_data_1a5c90358b8b5d3bc99c0c3410cf565010" kindref="member">DecRef()</ref> will delete the object automatically when the reference count reaches zero.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__data" kindref="compound">Data Structures</ref></para><para><simplesect kind="see"><para><ref refid="classwx_variant" kindref="compound">wxVariant</ref>, <ref refid="group__group__funcmacro__rtti_1ga0c6d4b0411eda94d041198d6385980cb" kindref="member">wxGetVariantCast()</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="11508">
        <label>wxVariantData</label>
        <link refid="classwx_variant_data"/>
        <childnode refid="11509" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11509">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11510">
        <label>wxVariantData</label>
        <link refid="classwx_variant_data"/>
        <childnode refid="11511" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11511">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/variant.h" line="603" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/variant.h" bodystart="602" bodyend="671"/>
    <listofallmembers>
      <member refid="classwx_variant_data_1a1dff3469897917c2d583c54ec03a1795" prot="public" virt="virtual"><scope>wxVariantData</scope><name>Clone</name></member>
      <member refid="classwx_variant_data_1a5c90358b8b5d3bc99c0c3410cf565010" prot="public" virt="non-virtual"><scope>wxVariantData</scope><name>DecRef</name></member>
      <member refid="classwx_variant_data_1a528c7c86af3dd554e5b72d2e5fdead6f" prot="public" virt="pure-virtual"><scope>wxVariantData</scope><name>Eq</name></member>
      <member refid="classwx_variant_data_1aa8d683f29eb3c502ca6cb7a98a92fa0e" prot="public" virt="virtual"><scope>wxVariantData</scope><name>GetAny</name></member>
      <member refid="classwx_variant_data_1a56789ab40ed58d058e655576ec1e81bc" prot="public" virt="pure-virtual"><scope>wxVariantData</scope><name>GetType</name></member>
      <member refid="classwx_variant_data_1a00e53db157b5eef10b07b648f2f1e623" prot="public" virt="virtual"><scope>wxVariantData</scope><name>GetValueClassInfo</name></member>
      <member refid="classwx_variant_data_1ae25c62e3451463ed287367a7b709e51d" prot="public" virt="non-virtual"><scope>wxVariantData</scope><name>IncRef</name></member>
      <member refid="classwx_variant_data_1a1007dbb33d60c210caab567d2d12feae" prot="public" virt="virtual"><scope>wxVariantData</scope><name>Read</name></member>
      <member refid="classwx_variant_data_1a478c208420802aade488e57de371d27b" prot="public" virt="virtual"><scope>wxVariantData</scope><name>Read</name></member>
      <member refid="classwx_variant_data_1a6229f1f0f28174a5256778c9acde711f" prot="public" virt="virtual"><scope>wxVariantData</scope><name>Write</name></member>
      <member refid="classwx_variant_data_1aee0322acdcf0957c9b5e17cb4b29f503" prot="public" virt="virtual"><scope>wxVariantData</scope><name>Write</name></member>
      <member refid="classwx_variant_data_1ac6f6a975c310013dca16b71ce891f39e" prot="public" virt="non-virtual"><scope>wxVariantData</scope><name>wxVariantData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
