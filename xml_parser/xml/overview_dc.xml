<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="overview_dc" kind="page">
    <compoundname>overview_dc</compoundname>
    <title>Device Contexts</title>
    <detaileddescription>
<para>Classes: <ref refid="classwx_buffered_d_c" kindref="compound">wxBufferedDC</ref>, <ref refid="classwx_buffered_paint_d_c" kindref="compound">wxBufferedPaintDC</ref>, <ref refid="classwx_d_c" kindref="compound">wxDC</ref>, <ref refid="classwx_post_script_d_c" kindref="compound">wxPostScriptDC</ref>, <ref refid="classwx_metafile_d_c" kindref="compound">wxMetafileDC</ref>, <ref refid="classwx_memory_d_c" kindref="compound">wxMemoryDC</ref>, <ref refid="classwx_printer_d_c" kindref="compound">wxPrinterDC</ref>, <ref refid="classwx_screen_d_c" kindref="compound">wxScreenDC</ref>, <ref refid="classwx_client_d_c" kindref="compound">wxClientDC</ref>, <ref refid="classwx_paint_d_c" kindref="compound">wxPaintDC</ref>, <ref refid="classwx_window_d_c" kindref="compound">wxWindowDC</ref>.</para><para>A <ref refid="classwx_d_c" kindref="compound">wxDC</ref> is a <emphasis>device</emphasis> context onto which graphics and text can be drawn. The device context is intended to represent a number of output devices in a generic way, with the same API being used throughout.</para><para>Some device contexts are created temporarily in order to draw on a window. This is true of <ref refid="classwx_screen_d_c" kindref="compound">wxScreenDC</ref>, <ref refid="classwx_client_d_c" kindref="compound">wxClientDC</ref>, <ref refid="classwx_paint_d_c" kindref="compound">wxPaintDC</ref>, and <ref refid="classwx_window_d_c" kindref="compound">wxWindowDC</ref>. The following describes the differences between these device contexts and when you should use them.</para><para><itemizedlist>
<listitem><para><bold><ref refid="classwx_screen_d_c" kindref="compound">wxScreenDC</ref></bold>. Use this to paint on the screen, as opposed to an individual window. </para></listitem>
<listitem><para><bold><ref refid="classwx_client_d_c" kindref="compound">wxClientDC</ref></bold>. Use this to paint on the client area of window (the part without borders and other decorations), but do not use it from within an <ref refid="classwx_paint_event" kindref="compound">wxPaintEvent</ref>. </para></listitem>
<listitem><para><bold><ref refid="classwx_paint_d_c" kindref="compound">wxPaintDC</ref></bold>. Use this to paint on the client area of a window, but <emphasis>only</emphasis> from within a <ref refid="classwx_paint_event" kindref="compound">wxPaintEvent</ref>. </para></listitem>
<listitem><para><bold><ref refid="classwx_window_d_c" kindref="compound">wxWindowDC</ref></bold>. Use this to paint on the whole area of a window, including decorations. This may not be available on non-Windows platforms.</para></listitem>
</itemizedlist>
To use a client, paint or window device context, create an object on the stack with the window as argument, for example:</para><para><programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MyWindow::OnMyCmd(<ref refid="classwx_command_event" kindref="compound" tooltip="This event class contains information about command events, which originate from a variety of simple ...">wxCommandEvent</ref>&amp;<sp/>event)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwx_client_d_c" kindref="compound" tooltip="A wxClientDC must be constructed if an application wishes to paint on the client area of a window fro...">wxClientDC</ref><sp/>dc(window);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>DrawMyPicture(dc);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para>Try to write code so it is parameterised by <ref refid="classwx_d_c" kindref="compound">wxDC</ref> - if you do this, the same piece of code may write to a number of different devices, by passing a different device context. This doesn&apos;t work for everything (for example not all device contexts support bitmap drawing) but will work most of the time. </para>    </detaileddescription>
  </compounddef>
</doxygen>
