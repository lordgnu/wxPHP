<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_task_bar_icon" kind="class" prot="public">
    <compoundname>wxTaskBarIcon</compoundname>
    <basecompoundref refid="classwx_evt_handler" prot="public" virt="non-virtual">wxEvtHandler</basecompoundref>
    <includes local="no">wx/taskbar.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_task_bar_icon_1a8cd4bb6d88cfdc336aa11aa578529d53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxTaskBarIcon::wxTaskBarIcon</definition>
        <argsstring>(wxTaskBarIconType iconType=wxTBI_DEFAULT_TYPE)</argsstring>
        <name>wxTaskBarIcon</name>
        <param>
          <type><ref refid="taskbar_8h_1a51fd8660b8ae3cd5773bc21a02883db2" kindref="member">wxTaskBarIconType</ref></type>
          <declname>iconType</declname>
          <defval>wxTBI_DEFAULT_TYPE</defval>
        </param>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
<para>The iconType is only applicable on wxOSX_Cocoa. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/taskbar.h" line="97"/>
      </memberdef>
      <memberdef kind="function" id="classwx_task_bar_icon_1af484f4a2fec3d8d927c5e8b802d293d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxTaskBarIcon::~wxTaskBarIcon</definition>
        <argsstring>()</argsstring>
        <name>~wxTaskBarIcon</name>
        <briefdescription>
<para>Destroys the <ref refid="classwx_task_bar_icon" kindref="compound">wxTaskBarIcon</ref> object, removing the icon if not already removed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/taskbar.h" line="102"/>
      </memberdef>
      <memberdef kind="function" id="classwx_task_bar_icon_1a6f70b76af5364d616d67fb0610724780" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTaskBarIcon::Destroy</definition>
        <argsstring>()</argsstring>
        <name>Destroy</name>
        <briefdescription>
<para>This method is similar to <ref refid="classwx_window_1a6bf0c5be864544d9ce0560087667b7fc" kindref="member">wxWindow::Destroy</ref> and can be used to schedule the task bar icon object for the delayed destruction: it will be deleted during the next event loop iteration, which allows the task bar icon to process any pending events for it before being destroyed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/taskbar.h" line="110"/>
      </memberdef>
      <memberdef kind="function" id="classwx_task_bar_icon_1a5191762c5744a4d94839b43398300cd1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTaskBarIcon::IsIconInstalled</definition>
        <argsstring>() const </argsstring>
        <name>IsIconInstalled</name>
        <briefdescription>
<para>Returns true if <ref refid="classwx_task_bar_icon_1a95251b440ebda58172c4398c68e525e7" kindref="member">SetIcon()</ref> was called with no subsequent <ref refid="classwx_task_bar_icon_1ae2144fbd2527eff10fe4b7ec8e96ecdc" kindref="member">RemoveIcon()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/taskbar.h" line="115"/>
      </memberdef>
      <memberdef kind="function" id="classwx_task_bar_icon_1a163d781d08e0dc1ab45551c4e08b32f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTaskBarIcon::IsOk</definition>
        <argsstring>() const </argsstring>
        <name>IsOk</name>
        <briefdescription>
<para>Returns true if the object initialized successfully. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/taskbar.h" line="120"/>
      </memberdef>
      <memberdef kind="function" id="classwx_task_bar_icon_1a5f67b426e34077c690c49f4e6dcc6919" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTaskBarIcon::PopupMenu</definition>
        <argsstring>(wxMenu *menu)</argsstring>
        <name>PopupMenu</name>
        <param>
          <type><ref refid="classwx_menu" kindref="compound">wxMenu</ref> *</type>
          <declname>menu</declname>
        </param>
        <briefdescription>
<para>Pops up a menu at the current mouse position. </para>        </briefdescription>
        <detaileddescription>
<para>The events can be handled by a class derived from <ref refid="classwx_task_bar_icon" kindref="compound">wxTaskBarIcon</ref>.</para><para><simplesect kind="note"><para>It is recommended to override <ref refid="classwx_task_bar_icon_1a739c81dc5cadf9e550d38001cee419f6" kindref="member">CreatePopupMenu()</ref> callback instead of calling this method from event handler, because some ports (e.g. wxCocoa) may not implement <ref refid="classwx_task_bar_icon_1a5f67b426e34077c690c49f4e6dcc6919" kindref="member">PopupMenu()</ref> and mouse click events at all. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/taskbar.h" line="131"/>
      </memberdef>
      <memberdef kind="function" id="classwx_task_bar_icon_1ae2144fbd2527eff10fe4b7ec8e96ecdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTaskBarIcon::RemoveIcon</definition>
        <argsstring>()</argsstring>
        <name>RemoveIcon</name>
        <briefdescription>
<para>Removes the icon previously set with <ref refid="classwx_task_bar_icon_1a95251b440ebda58172c4398c68e525e7" kindref="member">SetIcon()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/taskbar.h" line="136"/>
      </memberdef>
      <memberdef kind="function" id="classwx_task_bar_icon_1a95251b440ebda58172c4398c68e525e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTaskBarIcon::SetIcon</definition>
        <argsstring>(const wxIcon &amp;icon, const wxString &amp;tooltip=wxEmptyString)</argsstring>
        <name>SetIcon</name>
        <param>
          <type>const <ref refid="classwx_icon" kindref="compound">wxIcon</ref> &amp;</type>
          <declname>icon</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>tooltip</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <briefdescription>
<para>Sets the icon, and optional tooltip text. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/taskbar.h" line="142"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_task_bar_icon_1a287bb3303f01651f50c8de17e314a147" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool wxTaskBarIcon::IsAvailable</definition>
        <argsstring>()</argsstring>
        <name>IsAvailable</name>
        <briefdescription>
<para>Returns true if system tray is available in the desktop environment the app runs under. </para>        </briefdescription>
        <detaileddescription>
<para>On Windows and Mac OS X, the tray is always available and this function simply returns true.</para><para>On Unix, X11 environment may or may not provide the tray, depending on user&apos;s desktop environment. Most modern desktops support the tray via the System Tray Protocol by freedesktop.org (<ulink url="http://freedesktop.org/wiki/Specifications/systemtray-spec">http://freedesktop.org/wiki/Specifications/systemtray-spec</ulink>).</para><para><simplesect kind="note"><para>Tray availability may change during application&apos;s lifetime under X11 and so applications shouldn&apos;t cache the result.</para><simplesectsep/><para><ref refid="classwx_task_bar_icon" kindref="compound">wxTaskBarIcon</ref> supports older GNOME 1.2 and KDE 1/2 methods of adding icons to tray, but they are unreliable and this method doesn&apos;t detect them.</para></simplesect>
<simplesect kind="since"><para>2.9.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/taskbar.h" line="165"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classwx_task_bar_icon_1a739c81dc5cadf9e550d38001cee419f6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_menu" kindref="compound">wxMenu</ref> *</type>
        <definition>virtual wxMenu* wxTaskBarIcon::CreatePopupMenu</definition>
        <argsstring>()</argsstring>
        <name>CreatePopupMenu</name>
        <briefdescription>
<para>This method is called by the library when the user requests popup menu (on Windows and Unix platforms, this is when the user right-clicks the icon). </para>        </briefdescription>
        <detaileddescription>
<para>Override this function in order to provide popup menu associated with the icon. If <ref refid="classwx_task_bar_icon_1a739c81dc5cadf9e550d38001cee419f6" kindref="member">CreatePopupMenu()</ref> returns NULL (this happens by default), no menu is shown, otherwise the menu is displayed and then deleted by the library as soon as the user dismisses it.</para><para>The events can be handled by a class derived from <ref refid="classwx_task_bar_icon" kindref="compound">wxTaskBarIcon</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/taskbar.h" line="180"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class represents a taskbar icon. </para>    </briefdescription>
    <detaileddescription>
<para>A taskbar icon is an icon that appears in the &apos;system tray&apos; and responds to mouse clicks, optionally with a tooltip above it to help provide information.</para><sect1 id="classwx_task_bar_icon_1taskbaricon_xnote">
<title>X Window System Note</title>
<para>Under X Window System, the window manager must support either the &quot;System Tray Protocol&quot; (see <ulink url="http://freedesktop.org/wiki/Specifications/systemtray-spec">http://freedesktop.org/wiki/Specifications/systemtray-spec</ulink>) by freedesktop.org (WMs used by modern desktop environments such as GNOME &gt;= 2, KDE &gt;= 3 and XFCE &gt;= 4 all do) or the older methods used in GNOME 1.2 and KDE 1 and 2.</para><para>If it doesn&apos;t, the icon will appear as a toplevel window on user&apos;s desktop. Because not all window managers have system tray, there&apos;s no guarantee that <ref refid="classwx_task_bar_icon" kindref="compound">wxTaskBarIcon</ref> will work correctly under X Window System and so the applications should use it only as an optional component of their user interface. The user should be required to explicitly enable the taskbar icon on Unix, it shouldn&apos;t be on by default.</para><para><heading level="2">Events emitted by this class</heading>
</para><para>The following event handler macros redirect the events to member function handlers &apos;<bold>func</bold>&apos; with prototypes like: void<nonbreakablespace/>handlerFuncName(<ref refid="classwx_task_bar_icon_event" kindref="compound">wxTaskBarIconEvent</ref>&amp;<nonbreakablespace/>event)Event macros for events emitted by this class: Note that not all ports are required to send these events and so it&apos;s better to override <ref refid="classwx_task_bar_icon_1a739c81dc5cadf9e550d38001cee419f6" kindref="member">wxTaskBarIcon::CreatePopupMenu()</ref> if all that the application does is that it shows a popup menu in reaction to mouse click. <itemizedlist>
<listitem><para>EVT_TASKBAR_MOVE(func): Process a <computeroutput>wxEVT_TASKBAR_MOVE</computeroutput> event. </para></listitem>
<listitem><para>EVT_TASKBAR_LEFT_DOWN(func): Process a <computeroutput>wxEVT_TASKBAR_LEFT_DOWN</computeroutput> event. </para></listitem>
<listitem><para>EVT_TASKBAR_LEFT_UP(func): Process a <computeroutput>wxEVT_TASKBAR_LEFT_UP</computeroutput> event. </para></listitem>
<listitem><para>EVT_TASKBAR_RIGHT_DOWN(func): Process a <computeroutput>wxEVT_TASKBAR_RIGHT_DOWN</computeroutput> event. </para></listitem>
<listitem><para>EVT_TASKBAR_RIGHT_UP(func): Process a <computeroutput>wxEVT_TASKBAR_RIGHT_UP</computeroutput> event. </para></listitem>
<listitem><para>EVT_TASKBAR_LEFT_DCLICK(func): Process a <computeroutput>wxEVT_TASKBAR_LEFT_DCLICK</computeroutput> event. </para></listitem>
<listitem><para>EVT_TASKBAR_RIGHT_DCLICK(func): Process a <computeroutput>wxEVT_TASKBAR_RIGHT_DCLICK</computeroutput> event. </para></listitem>
<listitem><para>EVT_TASKBAR_CLICK(func): This is a synonym for either EVT_TASKBAR_RIGHT_DOWN or UP depending on the platform, use this event macro to catch the event which should result in the menu being displayed on the current platform. </para></listitem>
</itemizedlist>
<heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxadv" kindref="member">wxAdvanced</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__misc" kindref="compound">Miscellaneous</ref> </para></sect1>
    </detaileddescription>
    <inheritancegraph>
      <node id="10887">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="10886">
        <label>wxEvtHandler</label>
        <link refid="classwx_evt_handler"/>
        <childnode refid="10887" relation="public-inheritance">
        </childnode>
        <childnode refid="10888" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10888">
        <label>wxTrackable</label>
        <link refid="classwx_trackable"/>
      </node>
      <node id="10885">
        <label>wxTaskBarIcon</label>
        <link refid="classwx_task_bar_icon"/>
        <childnode refid="10886" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10891">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="10892" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="10890">
        <label>wxEvtHandler</label>
        <link refid="classwx_evt_handler"/>
        <childnode refid="10891" relation="public-inheritance">
        </childnode>
        <childnode refid="10893" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10893">
        <label>wxTrackable</label>
        <link refid="classwx_trackable"/>
      </node>
      <node id="10889">
        <label>wxTaskBarIcon</label>
        <link refid="classwx_task_bar_icon"/>
        <childnode refid="10890" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10892">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/taskbar.h" line="92" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/taskbar.h" bodystart="91" bodyend="181"/>
    <listofallmembers>
      <member refid="classwx_evt_handler_1a7dc3c701781f4044372049de5004137e" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>AddFilter</name></member>
      <member refid="classwx_evt_handler_1a0737c6d2cbcd5ded4b1ecdd53ed0def3" prot="public" virt="virtual"><scope>wxTaskBarIcon</scope><name>AddPendingEvent</name></member>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>AllocExclusive</name></member>
      <member refid="classwx_evt_handler_1a84b1e446053bda8f76f13336839e8b64" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>Bind</name></member>
      <member refid="classwx_evt_handler_1a95520e770e157ef93d1d60e03db66e5c" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>Bind</name></member>
      <member refid="classwx_object_1a1d39f1d3650fe0982c9a1abe7f9fe7b7" prot="protected" virt="virtual"><scope>wxTaskBarIcon</scope><name>CloneRefData</name></member>
      <member refid="classwx_evt_handler_1a78719e8b82c9f9c6e4056b3449df1943" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>Connect</name></member>
      <member refid="classwx_evt_handler_1a1e8b5fc4c7e7f6d32d40bc00d4108ba4" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>Connect</name></member>
      <member refid="classwx_evt_handler_1aa290d9b67348e74c1da8497955a4e35c" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>Connect</name></member>
      <member refid="classwx_task_bar_icon_1a739c81dc5cadf9e550d38001cee419f6" prot="protected" virt="virtual"><scope>wxTaskBarIcon</scope><name>CreatePopupMenu</name></member>
      <member refid="classwx_object_1a95c6a5e4e1e03ff23c7b9efe4cff0c1a" prot="protected" virt="virtual"><scope>wxTaskBarIcon</scope><name>CreateRefData</name></member>
      <member refid="classwx_evt_handler_1a6e7f9cf4ebd0623c1d94979855d096f8" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>DeletePendingEvents</name></member>
      <member refid="classwx_task_bar_icon_1a6f70b76af5364d616d67fb0610724780" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>Destroy</name></member>
      <member refid="classwx_evt_handler_1a13061cf0ed01ac10a804ac057ef4bdbc" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>Disconnect</name></member>
      <member refid="classwx_evt_handler_1a2f171e19444b9c4034c5e11f24fa9c91" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>Disconnect</name></member>
      <member refid="classwx_evt_handler_1a16a6f823853e4b74b43dd9a2cf3abee6" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>Disconnect</name></member>
      <member refid="classwx_object_1ab3a0c6f723cbaddb47be4e8dd98cc8e2" prot="public" virt="virtual"><scope>wxTaskBarIcon</scope><name>GetClassInfo</name></member>
      <member refid="classwx_evt_handler_1ad6e543115a9405962152630138645588" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>GetClientData</name></member>
      <member refid="classwx_evt_handler_1a2b3949eaba1f25cb48618163a7c0583b" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>GetClientObject</name></member>
      <member refid="classwx_evt_handler_1a533e62afcb125abf1fcc8bb53fbc2e81" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>GetEvtHandlerEnabled</name></member>
      <member refid="classwx_evt_handler_1a4b2f853f5c7a64432ae72f9b606698f9" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>GetNextHandler</name></member>
      <member refid="classwx_evt_handler_1aad1ba7fa9ccbf12ee2d80f5f12350adb" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>GetPreviousHandler</name></member>
      <member refid="classwx_object_1aabdb4fc957226544a8408167844e4f42" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>GetRefData</name></member>
      <member refid="classwx_task_bar_icon_1a287bb3303f01651f50c8de17e314a147" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>IsAvailable</name></member>
      <member refid="classwx_task_bar_icon_1a5191762c5744a4d94839b43398300cd1" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>IsIconInstalled</name></member>
      <member refid="classwx_object_1af40d580385cf4f8112fae7713404b01e" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>IsKindOf</name></member>
      <member refid="classwx_task_bar_icon_1a163d781d08e0dc1ab45551c4e08b32f4" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>IsOk</name></member>
      <member refid="classwx_object_1a80a1a3fda7b14396a9ddd3d7a46a88bd" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>IsSameAs</name></member>
      <member refid="classwx_evt_handler_1a360fdeefcf53b62fb49fb828406bb8a6" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>IsUnlinked</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>operator new</name></member>
      <member refid="classwx_task_bar_icon_1a5f67b426e34077c690c49f4e6dcc6919" prot="public" virt="virtual"><scope>wxTaskBarIcon</scope><name>PopupMenu</name></member>
      <member refid="classwx_evt_handler_1a65968dd27f3aac7718f2dd6b2ddd5a08" prot="public" virt="virtual"><scope>wxTaskBarIcon</scope><name>ProcessEvent</name></member>
      <member refid="classwx_evt_handler_1ac0f5d2cb29a04c1f7f82eb6b351f79fb" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>ProcessEventLocally</name></member>
      <member refid="classwx_evt_handler_1a6f643dbdcf8e914ae1c8b70dd305e6f2" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>ProcessPendingEvents</name></member>
      <member refid="classwx_evt_handler_1acffd03bf407a856166ea71ef0318b59a" prot="public" virt="virtual"><scope>wxTaskBarIcon</scope><name>QueueEvent</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>Ref</name></member>
      <member refid="classwx_evt_handler_1a67a57b759c447b121bf70a7c9804c8f2" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>RemoveFilter</name></member>
      <member refid="classwx_task_bar_icon_1ae2144fbd2527eff10fe4b7ec8e96ecdc" prot="public" virt="virtual"><scope>wxTaskBarIcon</scope><name>RemoveIcon</name></member>
      <member refid="classwx_evt_handler_1a8205cb1a5a00d8b550b3ead22266b16b" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>SafelyProcessEvent</name></member>
      <member refid="classwx_evt_handler_1a3c07426130d2868a5ae7fa918a251f49" prot="public" virt="virtual"><scope>wxTaskBarIcon</scope><name>SearchEventTable</name></member>
      <member refid="classwx_evt_handler_1a82c74f2cebfa02cb3c1563d459c872bf" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>SetClientData</name></member>
      <member refid="classwx_evt_handler_1af1e33a06087b8b2ddc43c7d15a91b326" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>SetClientObject</name></member>
      <member refid="classwx_evt_handler_1a7388ae19c8657e5656471b658c320036" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>SetEvtHandlerEnabled</name></member>
      <member refid="classwx_task_bar_icon_1a95251b440ebda58172c4398c68e525e7" prot="public" virt="virtual"><scope>wxTaskBarIcon</scope><name>SetIcon</name></member>
      <member refid="classwx_evt_handler_1a68e2ef2d2b7d68c4c9c18ca92933031b" prot="public" virt="virtual"><scope>wxTaskBarIcon</scope><name>SetNextHandler</name></member>
      <member refid="classwx_evt_handler_1aff0d1836464be82e2ad723ad3a58eccc" prot="public" virt="virtual"><scope>wxTaskBarIcon</scope><name>SetPreviousHandler</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>SetRefData</name></member>
      <member refid="classwx_evt_handler_1a5e25fece1cb6cbc11fd1d41ec140319c" prot="protected" virt="virtual"><scope>wxTaskBarIcon</scope><name>TryAfter</name></member>
      <member refid="classwx_evt_handler_1ad4b0eac704dd005ac6a88fdb1e673c13" prot="protected" virt="virtual"><scope>wxTaskBarIcon</scope><name>TryBefore</name></member>
      <member refid="classwx_evt_handler_1a5d3854b4dfb6230fd9d3cf3871c6a607" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>Unbind</name></member>
      <member refid="classwx_evt_handler_1a9992b15750a133127d76ad6e9be7e11f" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>Unbind</name></member>
      <member refid="classwx_evt_handler_1a22e5db2ec1d19c8252c056fd116975d7" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>Unlink</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>UnShare</name></member>
      <member refid="classwx_evt_handler_1a3f0166c4154227d05575b01eb2c8d4be" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>wxEvtHandler</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>wxObject</name></member>
      <member refid="classwx_task_bar_icon_1a8cd4bb6d88cfdc336aa11aa578529d53" prot="public" virt="non-virtual"><scope>wxTaskBarIcon</scope><name>wxTaskBarIcon</name></member>
      <member refid="classwx_evt_handler_1a372d2239d91521eddc8fd2715fcab584" prot="public" virt="virtual"><scope>wxTaskBarIcon</scope><name>~wxEvtHandler</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxTaskBarIcon</scope><name>~wxObject</name></member>
      <member refid="classwx_task_bar_icon_1af484f4a2fec3d8d927c5e8b802d293d7" prot="public" virt="virtual"><scope>wxTaskBarIcon</scope><name>~wxTaskBarIcon</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
