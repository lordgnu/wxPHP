<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_active_x_event" kind="class" prot="public">
    <compoundname>wxActiveXEvent</compoundname>
    <basecompoundref refid="classwx_command_event" prot="public" virt="non-virtual">wxCommandEvent</basecompoundref>
    <includes local="no">wx/msw/ole/activex.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_active_x_event_1a9619bad2e56f43c7acb7a92d3f123c76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>DISPID</type>
        <definition>DISPID wxActiveXEvent::GetDispatchId</definition>
        <argsstring>(int idx) const </argsstring>
        <name>GetDispatchId</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Returns the dispatch id of this ActiveX event. </para>        </briefdescription>
        <detaileddescription>
<para>This is the numeric value from the .idl file specified by the id(). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/msw/ole/activex.h" line="46"/>
      </memberdef>
      <memberdef kind="function" id="classwx_active_x_event_1a1ae5d3cd751c448e7884c83af3e28d67" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxActiveXEvent::ParamCount</definition>
        <argsstring>() const </argsstring>
        <name>ParamCount</name>
        <briefdescription>
<para>Obtains the number of parameters passed through the ActiveX event. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/msw/ole/activex.h" line="51"/>
      </memberdef>
      <memberdef kind="function" id="classwx_active_x_event_1ac79b05bfe9aea3937db9b2f1d8c3a496" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxActiveXEvent::ParamName</definition>
        <argsstring>(size_t idx) const </argsstring>
        <name>ParamName</name>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Obtains the param name of the param number idx specifies as a string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/msw/ole/activex.h" line="56"/>
      </memberdef>
      <memberdef kind="function" id="classwx_active_x_event_1ac820291b0d1f4b556f7219c9d14ff283" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxActiveXEvent::ParamType</definition>
        <argsstring>(size_t idx) const </argsstring>
        <name>ParamType</name>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Obtains the param type of the param number idx specifies as a string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/msw/ole/activex.h" line="61"/>
      </memberdef>
      <memberdef kind="function" id="classwx_active_x_event_1a228781b71eedc945f2669ac4c2e7342c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_variant" kindref="compound">wxVariant</ref></type>
        <definition>wxVariant wxActiveXEvent::operator[]</definition>
        <argsstring>(size_t idx)</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Obtains the actual parameter value specified by idx. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/msw/ole/activex.h" line="66"/>
      </memberdef>
      <memberdef kind="function" id="classwx_active_x_event_1af7d71e2433aef27681e6eec254ddf1dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>wxActiveXEventNativeMSW *</type>
        <definition>wxActiveXEventNativeMSW* wxActiveXEvent::GetNativeParameters</definition>
        <argsstring>() const </argsstring>
        <name>GetNativeParameters</name>
        <briefdescription>
<para>Obtain the original MSW parameters for the event. </para>        </briefdescription>
        <detaileddescription>
<para>Event handlers can use this information to handle complex event parameters that are beyond the scope of <ref refid="classwx_variant" kindref="compound">wxVariant</ref>. The information returned here is the information passed to the original &apos;Invoke&apos; method call. <simplesect kind="return"><para>a pointer to a struct containing the original MSW event parameters </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/msw/ole/activex.h" line="76"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An event class for handling ActiveX events passed from <ref refid="classwx_active_x_container" kindref="compound">wxActiveXContainer</ref>. </para>    </briefdescription>
    <detaileddescription>
<para>ActiveX events are basically a function call with the parameters passed through an array of wxVariants along with a return value that is a <ref refid="classwx_variant" kindref="compound">wxVariant</ref> itself. What type the parameters or return value are depends on the context (i.e. what the .idl specifies).</para><para><heading level="2">Events using this class</heading>
</para><para>The following event handler macros redirect the events to member function handlers &apos;<bold>func</bold>&apos; with prototypes like: void<nonbreakablespace/>handlerFuncName(<ref refid="classwx_active_x_event" kindref="compound">wxActiveXEvent</ref>&amp;<nonbreakablespace/>event)Event macros: <itemizedlist>
<listitem><para>EVT_ACTIVEX(func): Sent when the ActiveX control hosted by <ref refid="classwx_active_x_container" kindref="compound">wxActiveXContainer</ref> receives an ActiveX event. </para></listitem>
</itemizedlist>
ActiveX event parameters can get extremely complex and may be beyond the abilities of <ref refid="classwx_variant" kindref="compound">wxVariant</ref>. If &apos;operator[]&apos; fails, prints an error messages or crashes the application, event handlers should use <ref refid="classwx_active_x_event_1af7d71e2433aef27681e6eec254ddf1dc" kindref="member">GetNativeParameters()</ref> instead to obtain the original event information. Calls to operator[] and GetNativeParmeters() can be mixed. It is valid to handle some parameters of an event with operator[] and others directly through <ref refid="classwx_active_x_event_1af7d71e2433aef27681e6eec254ddf1dc" kindref="member">GetNativeParameters()</ref>. It is <bold>not</bold> valid however to manipulate the same parameter using both approaches at the same time.</para><para>Availability:<nonbreakablespace/><nonbreakablespace/>only available for the <ref refid="page_port_1page_port_wxmsw" kindref="member">wxMSW</ref> port.  <onlyfor>wxmsw</onlyfor> </para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__events" kindref="compound">Events</ref> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="4304">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="4302">
        <label>wxCommandEvent</label>
        <link refid="classwx_command_event"/>
        <childnode refid="4303" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4301">
        <label>wxActiveXEvent</label>
        <link refid="classwx_active_x_event"/>
        <childnode refid="4302" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4303">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="4304" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4308">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="4309" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="4306">
        <label>wxCommandEvent</label>
        <link refid="classwx_command_event"/>
        <childnode refid="4307" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4305">
        <label>wxActiveXEvent</label>
        <link refid="classwx_active_x_event"/>
        <childnode refid="4306" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4307">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="4308" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4309">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/msw/ole/activex.h" line="40" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/msw/ole/activex.h" bodystart="39" bodyend="77"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxActiveXEvent</scope><name>AllocExclusive</name></member>
      <member refid="classwx_event_1a26878097a702e8d0368da150125d4158" prot="public" virt="pure-virtual"><scope>wxActiveXEvent</scope><name>Clone</name></member>
      <member refid="classwx_object_1a1d39f1d3650fe0982c9a1abe7f9fe7b7" prot="protected" virt="virtual"><scope>wxActiveXEvent</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a95c6a5e4e1e03ff23c7b9efe4cff0c1a" prot="protected" virt="virtual"><scope>wxActiveXEvent</scope><name>CreateRefData</name></member>
      <member refid="classwx_object_1ab3a0c6f723cbaddb47be4e8dd98cc8e2" prot="public" virt="virtual"><scope>wxActiveXEvent</scope><name>GetClassInfo</name></member>
      <member refid="classwx_command_event_1ae23c23fb440b31f32498dbe1b54faf32" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>GetClientData</name></member>
      <member refid="classwx_command_event_1a6aba95aef4930c03fbba5808b395c93f" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>GetClientObject</name></member>
      <member refid="classwx_active_x_event_1a9619bad2e56f43c7acb7a92d3f123c76" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>GetDispatchId</name></member>
      <member refid="classwx_event_1a525e5c576e64090af493cb81db2da59b" prot="public" virt="virtual"><scope>wxActiveXEvent</scope><name>GetEventCategory</name></member>
      <member refid="classwx_event_1abdc74e95c8c2f32f2cc2bd84b88985ee" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>GetEventObject</name></member>
      <member refid="classwx_event_1ac1e62dc3000d4bff0ebbd90a3d290695" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>GetEventType</name></member>
      <member refid="classwx_command_event_1aadd8fc10e9e32755f7bca503fe10f5fc" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>GetExtraLong</name></member>
      <member refid="classwx_event_1ac732828ac14cfc289d798a4fea437246" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>GetId</name></member>
      <member refid="classwx_command_event_1abaf0dde08fd04018feba4b458b757a7f" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>GetInt</name></member>
      <member refid="classwx_active_x_event_1af7d71e2433aef27681e6eec254ddf1dc" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>GetNativeParameters</name></member>
      <member refid="classwx_object_1aabdb4fc957226544a8408167844e4f42" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>GetRefData</name></member>
      <member refid="classwx_command_event_1a3e16380f20769b1ed4053c69fe614b13" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>GetSelection</name></member>
      <member refid="classwx_event_1a448d5ef08f617a3ae316235fcf804377" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>GetSkipped</name></member>
      <member refid="classwx_command_event_1a24323d78936e5f6cd7f4780371f373e0" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>GetString</name></member>
      <member refid="classwx_event_1a8a42d5b35d442052b58c53077ff4ae60" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>GetTimestamp</name></member>
      <member refid="classwx_command_event_1a787f616f732b35c6ed30ab10b74147e4" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>IsChecked</name></member>
      <member refid="classwx_event_1ad70c9cfaf0d626c1115b2d42ea047c2d" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>IsCommandEvent</name></member>
      <member refid="classwx_object_1af40d580385cf4f8112fae7713404b01e" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a80a1a3fda7b14396a9ddd3d7a46a88bd" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>IsSameAs</name></member>
      <member refid="classwx_command_event_1a4bb9cda53263b6c666ce2ab7159203f1" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>IsSelection</name></member>
      <member refid="classwx_event_1ac81911194f1f59e1454c0397b87975d4" prot="protected" virt="non-virtual"><scope>wxActiveXEvent</scope><name>m_propagationLevel</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxActiveXEvent</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>operator new</name></member>
      <member refid="classwx_active_x_event_1a228781b71eedc945f2669ac4c2e7342c" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>operator[]</name></member>
      <member refid="classwx_active_x_event_1a1ae5d3cd751c448e7884c83af3e28d67" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>ParamCount</name></member>
      <member refid="classwx_active_x_event_1ac79b05bfe9aea3937db9b2f1d8c3a496" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>ParamName</name></member>
      <member refid="classwx_active_x_event_1ac820291b0d1f4b556f7219c9d14ff283" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>ParamType</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>Ref</name></member>
      <member refid="classwx_event_1a0acb5c75f6e67b8822ad8ba3c5bdc4fe" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>ResumePropagation</name></member>
      <member refid="classwx_command_event_1a1778d16766134e08cafcdb49b06855ce" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>SetClientData</name></member>
      <member refid="classwx_command_event_1a752e5a0fb8992b062c4dec6866171586" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>SetClientObject</name></member>
      <member refid="classwx_event_1a3460217d04c36393ab868ba453fde13d" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>SetEventObject</name></member>
      <member refid="classwx_event_1aa29fb7459d64602e09837fea1e516d27" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>SetEventType</name></member>
      <member refid="classwx_command_event_1a13ac3c581b99d110bac2c6b74803d2df" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>SetExtraLong</name></member>
      <member refid="classwx_event_1ab9973f687bfa8a60318d8d9bd629d0d4" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>SetId</name></member>
      <member refid="classwx_command_event_1aeaed91ffb1d02f07d7ea40f029f95a7c" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>SetInt</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>SetRefData</name></member>
      <member refid="classwx_command_event_1a06ca56ac6680fe3b3178d8abd913d450" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>SetString</name></member>
      <member refid="classwx_event_1ad4380dff3144a986cb960473051a1d8d" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>SetTimestamp</name></member>
      <member refid="classwx_event_1ad265ef226445cb6b72a2697dd9d3b406" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>ShouldPropagate</name></member>
      <member refid="classwx_event_1a98eb20b76106f9a933c2eb3ee119f66c" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>Skip</name></member>
      <member refid="classwx_event_1a060a7d222404daff4d3cef30cddeaae3" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>StopPropagation</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>UnShare</name></member>
      <member refid="classwx_command_event_1aad941347872cd71fedcfc765fae7b2f7" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>wxCommandEvent</name></member>
      <member refid="classwx_event_1aaf2a5cf056d006859cea36689ba13d36" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>wxEvent</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxActiveXEvent</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxActiveXEvent</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
