<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="overview_dnd" kind="page">
    <compoundname>overview_dnd</compoundname>
    <title>Drag and Drop Overview</title>
    <detaileddescription>
<para>Classes: <ref refid="classwx_data_object" kindref="compound">wxDataObject</ref>, <ref refid="classwx_text_data_object" kindref="compound">wxTextDataObject</ref>, <ref refid="classwx_drop_source" kindref="compound">wxDropSource</ref>, <ref refid="classwx_drop_target" kindref="compound">wxDropTarget</ref>, <ref refid="classwx_text_drop_target" kindref="compound">wxTextDropTarget</ref>, <ref refid="classwx_file_drop_target" kindref="compound">wxFileDropTarget</ref></para><para>Note that <computeroutput>wxUSE_DRAG_AND_DROP</computeroutput> must be defined in <computeroutput>setup.h</computeroutput> in order to use drag and drop in wxWidgets.</para><para>See also: <ref refid="overview_dataobject" kindref="compound">wxDataObject Overview</ref> and <ref refid="page_samples_1page_samples_dnd" kindref="member">Drag &amp; Drop Sample</ref>.</para><para>It may be noted that data transfer to and from the clipboard is quite similar to data transfer with drag and drop and the code to implement these two types is almost the same. In particular, both data transfer mechanisms store data in some kind of <ref refid="classwx_data_object" kindref="compound">wxDataObject</ref> and identify its format(s) using the <ref refid="classwx_data_format" kindref="compound">wxDataFormat</ref> class.</para><para>To be a <emphasis>drag</emphasis> source, i.e. to provide the data which may be dragged by the user elsewhere, you should implement the following steps:</para><para><itemizedlist>
<listitem><para><bold>Preparation:</bold> First of all, a data object must be created and initialized with the data you wish to drag. For example:</para></listitem>
</itemizedlist>
<programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwx_text_data_object" kindref="compound" tooltip="wxTextDataObject is a specialization of wxDataObjectSimple for text data.">wxTextDataObject</ref><sp/>my_data(</highlight><highlight class="stringliteral">&quot;This<sp/>text<sp/>will<sp/>be<sp/>dragged.&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para><para><itemizedlist>
<listitem><para><bold>Drag start</bold>: To start the dragging process (typically in response to a mouse click) you must call <ref refid="classwx_drop_source_1a7053f3286614a78d0fd8c282c286778d" kindref="member">wxDropSource::DoDragDrop</ref> like this:</para></listitem>
</itemizedlist>
<programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwx_drop_source" kindref="compound" tooltip="This class represents a source for a drag and drop operation.">wxDropSource</ref><sp/>dragSource(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>dragSource.SetData(<sp/>my_data<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interface_2wx_2dnd_8h_1adbd4b292582eebbc9a6ce3dee31c2afb" kindref="member" tooltip="Result returned from a wxDropSource::DoDragDrop() call.">wxDragResult</ref><sp/>result<sp/>=<sp/>dragSource.DoDragDrop(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
</programlisting></para><para><itemizedlist>
<listitem><para><bold>Dragging:</bold> The call to DoDragDrop() blocks the program until the user releases the mouse button (unless you override the <ref refid="classwx_drop_source_1a2b667de6f631839d4c4383f436726f7f" kindref="member">wxDropSource::GiveFeedback</ref> function to do something special). When the mouse moves in a window of a program which understands the same drag-and-drop protocol (any program under Windows or any program supporting the XDnD protocol under X Windows), the corresponding <ref refid="classwx_drop_target" kindref="compound">wxDropTarget</ref> methods are called - see below.</para></listitem>
</itemizedlist>
<itemizedlist>
<listitem><para><bold>Processing the result</bold>: DoDragDrop() returns an <emphasis>effect</emphasis> code which is one of the values of <computeroutput>wxDragResult</computeroutput> enum (explained in <ref refid="classwx_drop_target" kindref="compound">wxDropTarget</ref> page):</para></listitem>
</itemizedlist>
<programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(result)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="interface_2wx_2dnd_8h_1adbd4b292582eebbc9a6ce3dee31c2afba736c04c59caf8154a096e0d350492fc1" kindref="member" tooltip="The data was successfully copied.">wxDragCopy</ref>:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="interface_2wx_2dnd_8h_1adbd4b292582eebbc9a6ce3dee31c2afba8b2ba916ca49cc93ef34a5e20684d18e" kindref="member" tooltip="The data was successfully moved (MSW only).">wxDragMove</ref>:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
</programlisting></para><para>To be a <emphasis>drop</emphasis> target, i.e. to receive the data dropped by the user you should follow the instructions below:</para><para><itemizedlist>
<listitem><para><bold>Initialization:</bold> For a window to be a drop target, it needs to have an associated <ref refid="classwx_drop_target" kindref="compound">wxDropTarget</ref> object. Normally, you will call <ref refid="classwx_window_1ae34b4d45433ca8287df0e47d46411e58" kindref="member">wxWindow::SetDropTarget</ref> during window creation associating your drop target with it. You must derive a class from <ref refid="classwx_drop_target" kindref="compound">wxDropTarget</ref> and override its pure virtual methods. Alternatively, you may derive from <ref refid="classwx_text_drop_target" kindref="compound">wxTextDropTarget</ref> or <ref refid="classwx_file_drop_target" kindref="compound">wxFileDropTarget</ref> and override their OnDropText() or OnDropFiles() method.</para></listitem>
</itemizedlist>
<itemizedlist>
<listitem><para><bold>Drop:</bold> When the user releases the mouse over a window, wxWidgets asks the associated <ref refid="classwx_drop_target" kindref="compound">wxDropTarget</ref> object if it accepts the data. For this, a <ref refid="classwx_data_object" kindref="compound">wxDataObject</ref> must be associated with the drop target and this data object will be responsible for the format negotiation between the drag source and the drop target. If all goes well, then <ref refid="classwx_drop_target_1a375af32f4f5b00251212a75ee056d08d" kindref="member">wxDropTarget::OnData</ref> will get called and the <ref refid="classwx_data_object" kindref="compound">wxDataObject</ref> belonging to the drop target can get filled with data.</para></listitem>
</itemizedlist>
<itemizedlist>
<listitem><para><bold>The end</bold>: After processing the data, DoDragDrop() returns either wxDragCopy or wxDragMove depending on the state of the keys Ctrl, Shift and Alt at the moment of the drop. There is currently no way for the drop target to change this return code. </para></listitem>
</itemizedlist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
