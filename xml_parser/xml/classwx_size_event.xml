<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_size_event" kind="class" prot="public">
    <compoundname>wxSizeEvent</compoundname>
    <basecompoundref refid="classwx_event" prot="public" virt="non-virtual">wxEvent</basecompoundref>
    <includes local="no">wx/event.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_size_event_1acce432b5d8aa28bd845022fa44a868cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxSizeEvent::wxSizeEvent</definition>
        <argsstring>(const wxSize &amp;sz, int id=0)</argsstring>
        <name>wxSizeEvent</name>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="4096"/>
      </memberdef>
      <memberdef kind="function" id="classwx_size_event_1ab4630e0469e7eaf1952e7afacadb7031" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxSizeEvent::GetSize</definition>
        <argsstring>() const </argsstring>
        <name>GetSize</name>
        <briefdescription>
<para>Returns the entire size of the window generating the size change event. </para>        </briefdescription>
        <detaileddescription>
<para>This is the new total size of the window, i.e. the same size as would be returned by <ref refid="classwx_window_1a124c12cff1e7b6e96a5e1fd3e48dca34" kindref="member">wxWindow::GetSize()</ref> if it were called now. Use <ref refid="classwx_window_1ae56fc53268b815b58570f66bfc33838f" kindref="member">wxWindow::GetClientSize()</ref> if you catch this event in a top level window such as <ref refid="classwx_frame" kindref="compound">wxFrame</ref> to find the size available for the window contents. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="4106"/>
      </memberdef>
      <memberdef kind="function" id="classwx_size_event_1a10feb0885d50853a00bf302e1a1c6a22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizeEvent::SetSize</definition>
        <argsstring>(wxSize size)</argsstring>
        <name>SetSize</name>
        <param>
          <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="4107"/>
      </memberdef>
      <memberdef kind="function" id="classwx_size_event_1af43d08bdee3bf87b2cfd12e6c684ec87" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_rect" kindref="compound">wxRect</ref></type>
        <definition>wxRect wxSizeEvent::GetRect</definition>
        <argsstring>() const </argsstring>
        <name>GetRect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="4109"/>
      </memberdef>
      <memberdef kind="function" id="classwx_size_event_1aec71605403d6b11aa858d194fd486850" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizeEvent::SetRect</definition>
        <argsstring>(wxRect rect)</argsstring>
        <name>SetRect</name>
        <param>
          <type><ref refid="classwx_rect" kindref="compound">wxRect</ref></type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="4110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A size event holds information about size change events of <ref refid="classwx_window" kindref="compound">wxWindow</ref>. </para>    </briefdescription>
    <detaileddescription>
<para>The EVT_SIZE handler function will be called when the window has been resized.</para><para>You may wish to use this for frames to resize their child windows as appropriate.</para><para>Note that the size passed is of the whole window: call <ref refid="classwx_window_1ae56fc53268b815b58570f66bfc33838f" kindref="member">wxWindow::GetClientSize()</ref> for the area which may be used by the application.</para><para>When a window is resized, usually only a small part of the window is damaged and you may only need to repaint that area. However, if your drawing depends on the size of the window, you may need to clear the DC explicitly and repaint the whole window. In which case, you may need to call <ref refid="classwx_window_1a29dc7251746154c821b17841b9877830" kindref="member">wxWindow::Refresh</ref> to invalidate the entire window.</para><para><bold>Important</bold> : Sizers ( see <ref refid="overview_sizer" kindref="compound">Sizers Overview</ref> ) rely on size events to function correctly. Therefore, in a sizer-based layout, do not forget to call Skip on all size events you catch (and don&apos;t catch size events at all when you don&apos;t need to).</para><para><heading level="2">Events using this class</heading>
</para><para>The following event handler macros redirect the events to member function handlers &apos;<bold>func</bold>&apos; with prototypes like: void<nonbreakablespace/>handlerFuncName(<ref refid="classwx_size_event" kindref="compound">wxSizeEvent</ref>&amp;<nonbreakablespace/>event)Event macros: <itemizedlist>
<listitem><para>EVT_SIZE(func): Process a <computeroutput>wxEVT_SIZE</computeroutput> event. </para></listitem>
</itemizedlist>
<heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__events" kindref="compound">Events</ref></para><para><simplesect kind="see"><para><ref refid="classwx_size" kindref="compound">wxSize</ref>, <ref refid="overview_events" kindref="compound">Events and Event Handling</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="10412">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="10410">
        <label>wxSizeEvent</label>
        <link refid="classwx_size_event"/>
        <childnode refid="10411" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10411">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="10412" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10415">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="10416" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="10413">
        <label>wxSizeEvent</label>
        <link refid="classwx_size_event"/>
        <childnode refid="10414" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10414">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="10415" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10416">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="4091" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" bodystart="4090" bodyend="4111"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxSizeEvent</scope><name>AllocExclusive</name></member>
      <member refid="classwx_event_1a26878097a702e8d0368da150125d4158" prot="public" virt="pure-virtual"><scope>wxSizeEvent</scope><name>Clone</name></member>
      <member refid="classwx_object_1a1d39f1d3650fe0982c9a1abe7f9fe7b7" prot="protected" virt="virtual"><scope>wxSizeEvent</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a95c6a5e4e1e03ff23c7b9efe4cff0c1a" prot="protected" virt="virtual"><scope>wxSizeEvent</scope><name>CreateRefData</name></member>
      <member refid="classwx_object_1ab3a0c6f723cbaddb47be4e8dd98cc8e2" prot="public" virt="virtual"><scope>wxSizeEvent</scope><name>GetClassInfo</name></member>
      <member refid="classwx_event_1a525e5c576e64090af493cb81db2da59b" prot="public" virt="virtual"><scope>wxSizeEvent</scope><name>GetEventCategory</name></member>
      <member refid="classwx_event_1abdc74e95c8c2f32f2cc2bd84b88985ee" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>GetEventObject</name></member>
      <member refid="classwx_event_1ac1e62dc3000d4bff0ebbd90a3d290695" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>GetEventType</name></member>
      <member refid="classwx_event_1ac732828ac14cfc289d798a4fea437246" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>GetId</name></member>
      <member refid="classwx_size_event_1af43d08bdee3bf87b2cfd12e6c684ec87" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>GetRect</name></member>
      <member refid="classwx_object_1aabdb4fc957226544a8408167844e4f42" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>GetRefData</name></member>
      <member refid="classwx_size_event_1ab4630e0469e7eaf1952e7afacadb7031" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>GetSize</name></member>
      <member refid="classwx_event_1a448d5ef08f617a3ae316235fcf804377" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>GetSkipped</name></member>
      <member refid="classwx_event_1a8a42d5b35d442052b58c53077ff4ae60" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>GetTimestamp</name></member>
      <member refid="classwx_event_1ad70c9cfaf0d626c1115b2d42ea047c2d" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>IsCommandEvent</name></member>
      <member refid="classwx_object_1af40d580385cf4f8112fae7713404b01e" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a80a1a3fda7b14396a9ddd3d7a46a88bd" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>IsSameAs</name></member>
      <member refid="classwx_event_1ac81911194f1f59e1454c0397b87975d4" prot="protected" virt="non-virtual"><scope>wxSizeEvent</scope><name>m_propagationLevel</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxSizeEvent</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>Ref</name></member>
      <member refid="classwx_event_1a0acb5c75f6e67b8822ad8ba3c5bdc4fe" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>ResumePropagation</name></member>
      <member refid="classwx_event_1a3460217d04c36393ab868ba453fde13d" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>SetEventObject</name></member>
      <member refid="classwx_event_1aa29fb7459d64602e09837fea1e516d27" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>SetEventType</name></member>
      <member refid="classwx_event_1ab9973f687bfa8a60318d8d9bd629d0d4" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>SetId</name></member>
      <member refid="classwx_size_event_1aec71605403d6b11aa858d194fd486850" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>SetRect</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>SetRefData</name></member>
      <member refid="classwx_size_event_1a10feb0885d50853a00bf302e1a1c6a22" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>SetSize</name></member>
      <member refid="classwx_event_1ad4380dff3144a986cb960473051a1d8d" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>SetTimestamp</name></member>
      <member refid="classwx_event_1ad265ef226445cb6b72a2697dd9d3b406" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>ShouldPropagate</name></member>
      <member refid="classwx_event_1a98eb20b76106f9a933c2eb3ee119f66c" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>Skip</name></member>
      <member refid="classwx_event_1a060a7d222404daff4d3cef30cddeaae3" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>StopPropagation</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>UnShare</name></member>
      <member refid="classwx_event_1aaf2a5cf056d006859cea36689ba13d36" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>wxEvent</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>wxObject</name></member>
      <member refid="classwx_size_event_1acce432b5d8aa28bd845022fa44a868cc" prot="public" virt="non-virtual"><scope>wxSizeEvent</scope><name>wxSizeEvent</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxSizeEvent</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
