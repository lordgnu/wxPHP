<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_command_event" kind="class" prot="public">
    <compoundname>wxCommandEvent</compoundname>
    <basecompoundref refid="classwx_event" prot="public" virt="non-virtual">wxEvent</basecompoundref>
    <derivedcompoundref refid="classwx_active_x_event" prot="public" virt="non-virtual">wxActiveXEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_child_focus_event" prot="public" virt="non-virtual">wxChildFocusEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_clipboard_text_event" prot="public" virt="non-virtual">wxClipboardTextEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_collapsible_pane_event" prot="public" virt="non-virtual">wxCollapsiblePaneEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_colour_picker_event" prot="public" virt="non-virtual">wxColourPickerEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_context_menu_event" prot="public" virt="non-virtual">wxContextMenuEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_date_event" prot="public" virt="non-virtual">wxDateEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_file_ctrl_event" prot="public" virt="non-virtual">wxFileCtrlEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_file_dir_picker_event" prot="public" virt="non-virtual">wxFileDirPickerEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_find_dialog_event" prot="public" virt="non-virtual">wxFindDialogEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_font_picker_event" prot="public" virt="non-virtual">wxFontPickerEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_grid_editor_created_event" prot="public" virt="non-virtual">wxGridEditorCreatedEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_help_event" prot="public" virt="non-virtual">wxHelpEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_html_cell_event" prot="public" virt="non-virtual">wxHtmlCellEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_html_link_event" prot="public" virt="non-virtual">wxHtmlLinkEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_hyperlink_event" prot="public" virt="non-virtual">wxHyperlinkEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_notify_event" prot="public" virt="non-virtual">wxNotifyEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_property_grid_event" prot="public" virt="non-virtual">wxPropertyGridEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_ribbon_button_bar_event" prot="public" virt="non-virtual">wxRibbonButtonBarEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_ribbon_gallery_event" prot="public" virt="non-virtual">wxRibbonGalleryEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_sash_event" prot="public" virt="non-virtual">wxSashEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_scroll_event" prot="public" virt="non-virtual">wxScrollEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_styled_text_event" prot="public" virt="non-virtual">wxStyledTextEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_update_u_i_event" prot="public" virt="non-virtual">wxUpdateUIEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_window_create_event" prot="public" virt="non-virtual">wxWindowCreateEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_window_destroy_event" prot="public" virt="non-virtual">wxWindowDestroyEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_window_modal_dialog_event" prot="public" virt="non-virtual">wxWindowModalDialogEvent</derivedcompoundref>
    <includes local="no">wx/event.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_command_event_1aad941347872cd71fedcfc765fae7b2f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxCommandEvent::wxCommandEvent</definition>
        <argsstring>(wxEventType commandEventType=wxEVT_NULL, int id=0)</argsstring>
        <name>wxCommandEvent</name>
        <param>
          <type><ref refid="group__group__funcmacro__events_1ga6a7fd172612c0d6d9029bfa3aa91aca0" kindref="member">wxEventType</ref></type>
          <declname>commandEventType</declname>
          <defval><ref refid="group__group__funcmacro__events_1ga310bc3f7977ae79ac1198c7a287dbffe" kindref="member">wxEVT_NULL</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2695"/>
      </memberdef>
      <memberdef kind="function" id="classwx_command_event_1ae23c23fb440b31f32498dbe1b54faf32" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* wxCommandEvent::GetClientData</definition>
        <argsstring>() const </argsstring>
        <name>GetClientData</name>
        <briefdescription>
<para>Returns client data pointer for a listbox or choice selection event (not valid for a deselection). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2701"/>
      </memberdef>
      <memberdef kind="function" id="classwx_command_event_1a6aba95aef4930c03fbba5808b395c93f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_client_data" kindref="compound">wxClientData</ref> *</type>
        <definition>wxClientData* wxCommandEvent::GetClientObject</definition>
        <argsstring>() const </argsstring>
        <name>GetClientObject</name>
        <briefdescription>
<para>Returns client object pointer for a listbox or choice selection event (not valid for a deselection). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2707"/>
      </memberdef>
      <memberdef kind="function" id="classwx_command_event_1aadd8fc10e9e32755f7bca503fe10f5fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long wxCommandEvent::GetExtraLong</definition>
        <argsstring>() const </argsstring>
        <name>GetExtraLong</name>
        <briefdescription>
<para>Returns extra information dependent on the event objects type. </para>        </briefdescription>
        <detaileddescription>
<para>If the event comes from a listbox selection, it is a boolean determining whether the event was a selection (true) or a deselection (false). A listbox deselection only occurs for multiple-selection boxes, and in this case the index and string values are indeterminate and the listbox must be examined by the application. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2718"/>
      </memberdef>
      <memberdef kind="function" id="classwx_command_event_1abaf0dde08fd04018feba4b458b757a7f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxCommandEvent::GetInt</definition>
        <argsstring>() const </argsstring>
        <name>GetInt</name>
        <briefdescription>
<para>Returns the integer identifier corresponding to a listbox, choice or radiobox selection (only if the event was a selection, not a deselection), or a boolean value representing the value of a checkbox. </para>        </briefdescription>
        <detaileddescription>
<para>For a menu item, this method returns -1 if the item is not checkable or a boolean value (true or false) for checkable items indicating the new state of the item. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2729"/>
      </memberdef>
      <memberdef kind="function" id="classwx_command_event_1a3e16380f20769b1ed4053c69fe614b13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxCommandEvent::GetSelection</definition>
        <argsstring>() const </argsstring>
        <name>GetSelection</name>
        <reimplementedby refid="classwx_book_ctrl_event_1af2721f1f6e9d6e5b83612f03ef36c4b5">GetSelection</reimplementedby>
        <briefdescription>
<para>Returns item index for a listbox or choice selection event (not valid for a deselection). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2735"/>
      </memberdef>
      <memberdef kind="function" id="classwx_command_event_1a24323d78936e5f6cd7f4780371f373e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxCommandEvent::GetString</definition>
        <argsstring>() const </argsstring>
        <name>GetString</name>
        <briefdescription>
<para>Returns item string for a listbox or choice selection event. </para>        </briefdescription>
        <detaileddescription>
<para>If one or several items have been deselected, returns the index of the first deselected item. If some items have been selected and others deselected at the same time, it will return the index of the first selected item. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2743"/>
      </memberdef>
      <memberdef kind="function" id="classwx_command_event_1a787f616f732b35c6ed30ab10b74147e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxCommandEvent::IsChecked</definition>
        <argsstring>() const </argsstring>
        <name>IsChecked</name>
        <briefdescription>
<para>This method can be used with checkbox and menu events: for the checkboxes, the method returns true for a selection event and false for a deselection one. </para>        </briefdescription>
        <detaileddescription>
<para>For the menu events, this method indicates if the menu item just has become checked or unchecked (and thus only makes sense for checkable menu items).</para><para>Notice that this method cannot be used with <ref refid="classwx_check_list_box" kindref="compound">wxCheckListBox</ref> currently. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2753"/>
      </memberdef>
      <memberdef kind="function" id="classwx_command_event_1a4bb9cda53263b6c666ce2ab7159203f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxCommandEvent::IsSelection</definition>
        <argsstring>() const </argsstring>
        <name>IsSelection</name>
        <briefdescription>
<para>For a listbox or similar event, returns true if it is a selection, false if it is a deselection. </para>        </briefdescription>
        <detaileddescription>
<para>If some items have been selected and others deselected at the same time, it will return true. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2760"/>
      </memberdef>
      <memberdef kind="function" id="classwx_command_event_1a1778d16766134e08cafcdb49b06855ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxCommandEvent::SetClientData</definition>
        <argsstring>(void *clientData)</argsstring>
        <name>SetClientData</name>
        <param>
          <type>void *</type>
          <declname>clientData</declname>
        </param>
        <briefdescription>
<para>Sets the client data for this event. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2765"/>
      </memberdef>
      <memberdef kind="function" id="classwx_command_event_1a752e5a0fb8992b062c4dec6866171586" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxCommandEvent::SetClientObject</definition>
        <argsstring>(wxClientData *clientObject)</argsstring>
        <name>SetClientObject</name>
        <param>
          <type><ref refid="classwx_client_data" kindref="compound">wxClientData</ref> *</type>
          <declname>clientObject</declname>
        </param>
        <briefdescription>
<para>Sets the client object for this event. </para>        </briefdescription>
        <detaileddescription>
<para>The client object is not owned by the event object and the event object will not delete the client object in its destructor.</para><para>The client object must be owned and deleted by another object (e.g. a control) that has longer life time than the event object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2774"/>
      </memberdef>
      <memberdef kind="function" id="classwx_command_event_1a13ac3c581b99d110bac2c6b74803d2df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxCommandEvent::SetExtraLong</definition>
        <argsstring>(long extraLong)</argsstring>
        <name>SetExtraLong</name>
        <param>
          <type>long</type>
          <declname>extraLong</declname>
        </param>
        <briefdescription>
<para>Sets the <bold>m_extraLong</bold> member. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2779"/>
      </memberdef>
      <memberdef kind="function" id="classwx_command_event_1aeaed91ffb1d02f07d7ea40f029f95a7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxCommandEvent::SetInt</definition>
        <argsstring>(int intCommand)</argsstring>
        <name>SetInt</name>
        <param>
          <type>int</type>
          <declname>intCommand</declname>
        </param>
        <briefdescription>
<para>Sets the <bold>m_commandInt</bold> member. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2784"/>
      </memberdef>
      <memberdef kind="function" id="classwx_command_event_1a06ca56ac6680fe3b3178d8abd913d450" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxCommandEvent::SetString</definition>
        <argsstring>(const wxString &amp;string)</argsstring>
        <name>SetString</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
<para>Sets the <bold>m_commandString</bold> member. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2789"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This event class contains information about command events, which originate from a variety of simple controls. </para>    </briefdescription>
    <detaileddescription>
<para>Note that wxCommandEvents and wxCommandEvent-derived event classes by default and unlike other wxEvent-derived classes propagate upward from the source window (the window which emits the event) up to the first parent which processes the event. Be sure to read <ref refid="overview_events_1overview_events_propagation" kindref="member">How Events Propagate Upwards</ref>.</para><para>More complex controls, such as <ref refid="classwx_tree_ctrl" kindref="compound">wxTreeCtrl</ref>, have separate command event classes.</para><para><heading level="2">Events using this class</heading>
</para><para>The following event handler macros redirect the events to member function handlers &apos;<bold>func</bold>&apos; with prototypes like: void<nonbreakablespace/>handlerFuncName(<ref refid="classwx_command_event" kindref="compound">wxCommandEvent</ref>&amp;<nonbreakablespace/>event)Event macros: <itemizedlist>
<listitem><para>EVT_COMMAND(id,  event,  func): Process a command, supplying the window identifier, command event identifier, and member function. </para></listitem>
<listitem><para>EVT_COMMAND_RANGE(id1,  id2,  event,  func): Process a command for a range of window identifiers, supplying the minimum and maximum window identifiers, command event identifier, and member function. </para></listitem>
<listitem><para>EVT_BUTTON(id,  func): Process a <computeroutput>wxEVT_COMMAND_BUTTON_CLICKED</computeroutput> command, which is generated by a <ref refid="classwx_button" kindref="compound">wxButton</ref> control. </para></listitem>
<listitem><para>EVT_CHECKBOX(id,  func): Process a <computeroutput>wxEVT_COMMAND_CHECKBOX_CLICKED</computeroutput> command, which is generated by a <ref refid="classwx_check_box" kindref="compound">wxCheckBox</ref> control. </para></listitem>
<listitem><para>EVT_CHOICE(id,  func): Process a <computeroutput>wxEVT_COMMAND_CHOICE_SELECTED</computeroutput> command, which is generated by a <ref refid="classwx_choice" kindref="compound">wxChoice</ref> control. </para></listitem>
<listitem><para>EVT_COMBOBOX(id,  func): Process a <computeroutput>wxEVT_COMMAND_COMBOBOX_SELECTED</computeroutput> command, which is generated by a <ref refid="classwx_combo_box" kindref="compound">wxComboBox</ref> control. </para></listitem>
<listitem><para>EVT_LISTBOX(id,  func): Process a <computeroutput>wxEVT_COMMAND_LISTBOX_SELECTED</computeroutput> command, which is generated by a <ref refid="classwx_list_box" kindref="compound">wxListBox</ref> control. </para></listitem>
<listitem><para>EVT_LISTBOX_DCLICK(id,  func): Process a <computeroutput>wxEVT_COMMAND_LISTBOX_DOUBLECLICKED</computeroutput> command, which is generated by a <ref refid="classwx_list_box" kindref="compound">wxListBox</ref> control. </para></listitem>
<listitem><para>EVT_CHECKLISTBOX(id,  func): Process a <computeroutput>wxEVT_COMMAND_CHECKLISTBOX_TOGGLED</computeroutput> command, which is generated by a <ref refid="classwx_check_list_box" kindref="compound">wxCheckListBox</ref> control. </para></listitem>
<listitem><para>EVT_MENU(id,  func): Process a <computeroutput>wxEVT_COMMAND_MENU_SELECTED</computeroutput> command, which is generated by a menu item. </para></listitem>
<listitem><para>EVT_MENU_RANGE(id1,  id2,  func): Process a <computeroutput>wxEVT_COMMAND_MENU_RANGE</computeroutput> command, which is generated by a range of menu items. </para></listitem>
<listitem><para>EVT_CONTEXT_MENU(func): Process the event generated when the user has requested a popup menu to appear by pressing a special keyboard key (under Windows) or by right clicking the mouse. </para></listitem>
<listitem><para>EVT_RADIOBOX(id,  func): Process a <computeroutput>wxEVT_COMMAND_RADIOBOX_SELECTED</computeroutput> command, which is generated by a <ref refid="classwx_radio_box" kindref="compound">wxRadioBox</ref> control. </para></listitem>
<listitem><para>EVT_RADIOBUTTON(id,  func): Process a <computeroutput>wxEVT_COMMAND_RADIOBUTTON_SELECTED</computeroutput> command, which is generated by a <ref refid="classwx_radio_button" kindref="compound">wxRadioButton</ref> control. </para></listitem>
<listitem><para>EVT_SCROLLBAR(id,  func): Process a <computeroutput>wxEVT_COMMAND_SCROLLBAR_UPDATED</computeroutput> command, which is generated by a <ref refid="classwx_scroll_bar" kindref="compound">wxScrollBar</ref> control. This is provided for compatibility only; more specific scrollbar event macros should be used instead (see <ref refid="classwx_scroll_event" kindref="compound">wxScrollEvent</ref>). </para></listitem>
<listitem><para>EVT_SLIDER(id,  func): Process a <computeroutput>wxEVT_COMMAND_SLIDER_UPDATED</computeroutput> command, which is generated by a <ref refid="classwx_slider" kindref="compound">wxSlider</ref> control. </para></listitem>
<listitem><para>EVT_TEXT(id,  func): Process a <computeroutput>wxEVT_COMMAND_TEXT_UPDATED</computeroutput> command, which is generated by a <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> control. </para></listitem>
<listitem><para>EVT_TEXT_ENTER(id,  func): Process a <computeroutput>wxEVT_COMMAND_TEXT_ENTER</computeroutput> command, which is generated by a <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> control. Note that you must use wxTE_PROCESS_ENTER flag when creating the control if you want it to generate such events. </para></listitem>
<listitem><para>EVT_TEXT_MAXLEN(id,  func): Process a <computeroutput>wxEVT_COMMAND_TEXT_MAXLEN</computeroutput> command, which is generated by a <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> control when the user tries to enter more characters into it than the limit previously set with SetMaxLength(). </para></listitem>
<listitem><para>EVT_TOGGLEBUTTON(id,  func): Process a <computeroutput>wxEVT_COMMAND_TOGGLEBUTTON_CLICKED</computeroutput> event. </para></listitem>
<listitem><para>EVT_TOOL(id,  func): Process a <computeroutput>wxEVT_COMMAND_TOOL_CLICKED</computeroutput> event (a synonym for <computeroutput>wxEVT_COMMAND_MENU_SELECTED</computeroutput>). Pass the id of the tool. </para></listitem>
<listitem><para>EVT_TOOL_RANGE(id1,  id2,  func): Process a <computeroutput>wxEVT_COMMAND_TOOL_CLICKED</computeroutput> event for a range of identifiers. Pass the ids of the tools. </para></listitem>
<listitem><para>EVT_TOOL_RCLICKED(id,  func): Process a <computeroutput>wxEVT_COMMAND_TOOL_RCLICKED</computeroutput> event. Pass the id of the tool. (Not available on wxOSX.) </para></listitem>
<listitem><para>EVT_TOOL_RCLICKED_RANGE(id1,  id2,  func): Process a <computeroutput>wxEVT_COMMAND_TOOL_RCLICKED</computeroutput> event for a range of ids. Pass the ids of the tools. (Not available on wxOSX.) </para></listitem>
<listitem><para>EVT_TOOL_ENTER(id,  func): Process a <computeroutput>wxEVT_COMMAND_TOOL_ENTER</computeroutput> event. Pass the id of the toolbar itself. The value of <ref refid="classwx_command_event_1a3e16380f20769b1ed4053c69fe614b13" kindref="member">wxCommandEvent::GetSelection()</ref> is the tool id, or -1 if the mouse cursor has moved off a tool. (Not available on wxOSX.) </para></listitem>
<listitem><para>EVT_COMMAND_LEFT_CLICK(id,  func): Process a <computeroutput>wxEVT_COMMAND_LEFT_CLICK</computeroutput> command, which is generated by a control (wxMSW only). </para></listitem>
<listitem><para>EVT_COMMAND_LEFT_DCLICK(id,  func): Process a <computeroutput>wxEVT_COMMAND_LEFT_DCLICK</computeroutput> command, which is generated by a control (wxMSW only). </para></listitem>
<listitem><para>EVT_COMMAND_RIGHT_CLICK(id,  func): Process a <computeroutput>wxEVT_COMMAND_RIGHT_CLICK</computeroutput> command, which is generated by a control (wxMSW only). </para></listitem>
<listitem><para>EVT_COMMAND_SET_FOCUS(id,  func): Process a <computeroutput>wxEVT_COMMAND_SET_FOCUS</computeroutput> command, which is generated by a control (wxMSW only). </para></listitem>
<listitem><para>EVT_COMMAND_KILL_FOCUS(id,  func): Process a <computeroutput>wxEVT_COMMAND_KILL_FOCUS</computeroutput> command, which is generated by a control (wxMSW only). </para></listitem>
<listitem><para>EVT_COMMAND_ENTER(id,  func): Process a <computeroutput>wxEVT_COMMAND_ENTER</computeroutput> command, which is generated by a control. </para></listitem>
</itemizedlist>
<heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__events" kindref="compound">Events</ref> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="5069">
        <label>wxHtmlLinkEvent</label>
        <link refid="classwx_html_link_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5056">
        <label>wxClipboardTextEvent</label>
        <link refid="classwx_clipboard_text_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5082">
        <label>wxRibbonBarEvent</label>
        <link refid="classwx_ribbon_bar_event"/>
        <childnode refid="5071" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5092">
        <label>wxRibbonButtonBarEvent</label>
        <link refid="classwx_ribbon_button_bar_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5059">
        <label>wxContextMenuEvent</label>
        <link refid="classwx_context_menu_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5053">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="5068">
        <label>wxHtmlCellEvent</label>
        <link refid="classwx_html_cell_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5075">
        <label>wxDataViewEvent</label>
        <link refid="classwx_data_view_event"/>
        <childnode refid="5071" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5095">
        <label>wxScrollEvent</label>
        <link refid="classwx_scroll_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5097">
        <label>wxUpdateUIEvent</label>
        <link refid="classwx_update_u_i_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5051">
        <label>wxCommandEvent</label>
        <link refid="classwx_command_event"/>
        <childnode refid="5052" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5063">
        <label>wxFileDirPickerEvent</label>
        <link refid="classwx_file_dir_picker_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5078">
        <label>wxGridSizeEvent</label>
        <link refid="classwx_grid_size_event"/>
        <childnode refid="5071" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5070">
        <label>wxHyperlinkEvent</label>
        <link refid="classwx_hyperlink_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5088">
        <label>wxTreeListEvent</label>
        <link refid="classwx_tree_list_event"/>
        <childnode refid="5071" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5064">
        <label>wxFindDialogEvent</label>
        <link refid="classwx_find_dialog_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5100">
        <label>wxWindowModalDialogEvent</label>
        <link refid="classwx_window_modal_dialog_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5081">
        <label>wxMediaEvent</label>
        <link refid="classwx_media_event"/>
        <childnode refid="5071" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5080">
        <label>wxListEvent</label>
        <link refid="classwx_list_event"/>
        <childnode refid="5071" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5073">
        <label>wxBookCtrlEvent</label>
        <link refid="classwx_book_ctrl_event"/>
        <childnode refid="5071" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5086">
        <label>wxSplitterEvent</label>
        <link refid="classwx_splitter_event"/>
        <childnode refid="5071" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5054">
        <label>wxActiveXEvent</label>
        <link refid="classwx_active_x_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5090">
        <label>wxWizardEvent</label>
        <link refid="classwx_wizard_event"/>
        <childnode refid="5071" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5084">
        <label>wxSpinDoubleEvent</label>
        <link refid="classwx_spin_double_event"/>
        <childnode refid="5071" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5060">
        <label>wxDateEvent</label>
        <link refid="classwx_date_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5065">
        <label>wxFontPickerEvent</label>
        <link refid="classwx_font_picker_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5066">
        <label>wxGridEditorCreatedEvent</label>
        <link refid="classwx_grid_editor_created_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5058">
        <label>wxColourPickerEvent</label>
        <link refid="classwx_colour_picker_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5094">
        <label>wxSashEvent</label>
        <link refid="classwx_sash_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5076">
        <label>wxGridEvent</label>
        <link refid="classwx_grid_event"/>
        <childnode refid="5071" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5089">
        <label>wxWebViewEvent</label>
        <link refid="classwx_web_view_event"/>
        <childnode refid="5071" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5093">
        <label>wxRibbonGalleryEvent</label>
        <link refid="classwx_ribbon_gallery_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5071">
        <label>wxNotifyEvent</label>
        <link refid="classwx_notify_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5055">
        <label>wxChildFocusEvent</label>
        <link refid="classwx_child_focus_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5096">
        <label>wxStyledTextEvent</label>
        <link refid="classwx_styled_text_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5077">
        <label>wxGridRangeSelectEvent</label>
        <link refid="classwx_grid_range_select_event"/>
        <childnode refid="5071" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5085">
        <label>wxSpinEvent</label>
        <link refid="classwx_spin_event"/>
        <childnode refid="5071" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5061">
        <label>wxCalendarEvent</label>
        <link refid="classwx_calendar_event"/>
        <childnode refid="5060" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5098">
        <label>wxWindowCreateEvent</label>
        <link refid="classwx_window_create_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5072">
        <label>wxAuiToolBarEvent</label>
        <link refid="classwx_aui_tool_bar_event"/>
        <childnode refid="5071" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5079">
        <label>wxHeaderCtrlEvent</label>
        <link refid="classwx_header_ctrl_event"/>
        <childnode refid="5071" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5074">
        <label>wxAuiNotebookEvent</label>
        <link refid="classwx_aui_notebook_event"/>
        <childnode refid="5073" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5091">
        <label>wxPropertyGridEvent</label>
        <link refid="classwx_property_grid_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5057">
        <label>wxCollapsiblePaneEvent</label>
        <link refid="classwx_collapsible_pane_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5083">
        <label>wxRichTextEvent</label>
        <link refid="classwx_rich_text_event"/>
        <childnode refid="5071" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5087">
        <label>wxTreeEvent</label>
        <link refid="classwx_tree_event"/>
        <childnode refid="5071" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5052">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="5053" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5062">
        <label>wxFileCtrlEvent</label>
        <link refid="classwx_file_ctrl_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5067">
        <label>wxHelpEvent</label>
        <link refid="classwx_help_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5099">
        <label>wxWindowDestroyEvent</label>
        <link refid="classwx_window_destroy_event"/>
        <childnode refid="5051" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5103">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="5104" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="5101">
        <label>wxCommandEvent</label>
        <link refid="classwx_command_event"/>
        <childnode refid="5102" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5102">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="5103" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5104">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" line="2690" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/event.h" bodystart="2689" bodyend="2790"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxCommandEvent</scope><name>AllocExclusive</name></member>
      <member refid="classwx_event_1a26878097a702e8d0368da150125d4158" prot="public" virt="pure-virtual"><scope>wxCommandEvent</scope><name>Clone</name></member>
      <member refid="classwx_object_1a1d39f1d3650fe0982c9a1abe7f9fe7b7" prot="protected" virt="virtual"><scope>wxCommandEvent</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a95c6a5e4e1e03ff23c7b9efe4cff0c1a" prot="protected" virt="virtual"><scope>wxCommandEvent</scope><name>CreateRefData</name></member>
      <member refid="classwx_object_1ab3a0c6f723cbaddb47be4e8dd98cc8e2" prot="public" virt="virtual"><scope>wxCommandEvent</scope><name>GetClassInfo</name></member>
      <member refid="classwx_command_event_1ae23c23fb440b31f32498dbe1b54faf32" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>GetClientData</name></member>
      <member refid="classwx_command_event_1a6aba95aef4930c03fbba5808b395c93f" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>GetClientObject</name></member>
      <member refid="classwx_event_1a525e5c576e64090af493cb81db2da59b" prot="public" virt="virtual"><scope>wxCommandEvent</scope><name>GetEventCategory</name></member>
      <member refid="classwx_event_1abdc74e95c8c2f32f2cc2bd84b88985ee" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>GetEventObject</name></member>
      <member refid="classwx_event_1ac1e62dc3000d4bff0ebbd90a3d290695" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>GetEventType</name></member>
      <member refid="classwx_command_event_1aadd8fc10e9e32755f7bca503fe10f5fc" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>GetExtraLong</name></member>
      <member refid="classwx_event_1ac732828ac14cfc289d798a4fea437246" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>GetId</name></member>
      <member refid="classwx_command_event_1abaf0dde08fd04018feba4b458b757a7f" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>GetInt</name></member>
      <member refid="classwx_object_1aabdb4fc957226544a8408167844e4f42" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>GetRefData</name></member>
      <member refid="classwx_command_event_1a3e16380f20769b1ed4053c69fe614b13" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>GetSelection</name></member>
      <member refid="classwx_event_1a448d5ef08f617a3ae316235fcf804377" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>GetSkipped</name></member>
      <member refid="classwx_command_event_1a24323d78936e5f6cd7f4780371f373e0" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>GetString</name></member>
      <member refid="classwx_event_1a8a42d5b35d442052b58c53077ff4ae60" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>GetTimestamp</name></member>
      <member refid="classwx_command_event_1a787f616f732b35c6ed30ab10b74147e4" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>IsChecked</name></member>
      <member refid="classwx_event_1ad70c9cfaf0d626c1115b2d42ea047c2d" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>IsCommandEvent</name></member>
      <member refid="classwx_object_1af40d580385cf4f8112fae7713404b01e" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a80a1a3fda7b14396a9ddd3d7a46a88bd" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>IsSameAs</name></member>
      <member refid="classwx_command_event_1a4bb9cda53263b6c666ce2ab7159203f1" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>IsSelection</name></member>
      <member refid="classwx_event_1ac81911194f1f59e1454c0397b87975d4" prot="protected" virt="non-virtual"><scope>wxCommandEvent</scope><name>m_propagationLevel</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxCommandEvent</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>Ref</name></member>
      <member refid="classwx_event_1a0acb5c75f6e67b8822ad8ba3c5bdc4fe" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>ResumePropagation</name></member>
      <member refid="classwx_command_event_1a1778d16766134e08cafcdb49b06855ce" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>SetClientData</name></member>
      <member refid="classwx_command_event_1a752e5a0fb8992b062c4dec6866171586" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>SetClientObject</name></member>
      <member refid="classwx_event_1a3460217d04c36393ab868ba453fde13d" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>SetEventObject</name></member>
      <member refid="classwx_event_1aa29fb7459d64602e09837fea1e516d27" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>SetEventType</name></member>
      <member refid="classwx_command_event_1a13ac3c581b99d110bac2c6b74803d2df" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>SetExtraLong</name></member>
      <member refid="classwx_event_1ab9973f687bfa8a60318d8d9bd629d0d4" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>SetId</name></member>
      <member refid="classwx_command_event_1aeaed91ffb1d02f07d7ea40f029f95a7c" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>SetInt</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>SetRefData</name></member>
      <member refid="classwx_command_event_1a06ca56ac6680fe3b3178d8abd913d450" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>SetString</name></member>
      <member refid="classwx_event_1ad4380dff3144a986cb960473051a1d8d" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>SetTimestamp</name></member>
      <member refid="classwx_event_1ad265ef226445cb6b72a2697dd9d3b406" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>ShouldPropagate</name></member>
      <member refid="classwx_event_1a98eb20b76106f9a933c2eb3ee119f66c" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>Skip</name></member>
      <member refid="classwx_event_1a060a7d222404daff4d3cef30cddeaae3" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>StopPropagation</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>UnShare</name></member>
      <member refid="classwx_command_event_1aad941347872cd71fedcfc765fae7b2f7" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>wxCommandEvent</name></member>
      <member refid="classwx_event_1aaf2a5cf056d006859cea36689ba13d36" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>wxEvent</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxCommandEvent</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxCommandEvent</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
