<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_property_grid_interface" kind="class" prot="public">
    <compoundname>wxPropertyGridInterface</compoundname>
    <derivedcompoundref refid="classwx_property_grid" prot="public" virt="non-virtual">wxPropertyGrid</derivedcompoundref>
    <derivedcompoundref refid="classwx_property_grid_manager" prot="public" virt="non-virtual">wxPropertyGridManager</derivedcompoundref>
    <derivedcompoundref refid="classwx_property_grid_page" prot="public" virt="non-virtual">wxPropertyGridPage</derivedcompoundref>
    <includes local="no">wx/propgrid/propgridiface.h</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_property_grid_interface_1a41ab8661411082563c8191f614f91007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_property_grid_iterator" kindref="compound">wxPropertyGridIterator</ref></type>
        <definition>wxPropertyGridIterator wxPropertyGridInterface::GetIterator</definition>
        <argsstring>(int flags=wxPG_ITERATE_DEFAULT, wxPGProperty *firstProp=NULL)</argsstring>
        <name>GetIterator</name>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>wxPG_ITERATE_DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
          <declname>firstProp</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Returns iterator class instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>See <ref refid="propgridpagestate_8h_1propgrid_iterator_flags" kindref="member">wxPropertyGridIterator Flags</ref>. Value wxPG_ITERATE_DEFAULT causes iteration over everything except private child properties. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>firstProp</parametername>
</parameternamelist>
<parameterdescription>
<para>Property to start iteration from. If NULL, then first child of root is used. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="235"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1acc9bc495b14420b8c87506b8914fc4f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>wxPropertyGridConstIterator</type>
        <definition>wxPropertyGridConstIterator wxPropertyGridInterface::GetIterator</definition>
        <argsstring>(int flags=wxPG_ITERATE_DEFAULT, wxPGProperty *firstProp=NULL) const </argsstring>
        <name>GetIterator</name>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>wxPG_ITERATE_DEFAULT</defval>
        </param>
        <param>
          <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
          <declname>firstProp</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Returns iterator class instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>See <ref refid="propgridpagestate_8h_1propgrid_iterator_flags" kindref="member">wxPropertyGridIterator Flags</ref>. Value wxPG_ITERATE_DEFAULT causes iteration over everything except private child properties. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>firstProp</parametername>
</parameternamelist>
<parameterdescription>
<para>Property to start iteration from. If NULL, then first child of root is used. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="237"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_property_grid_interface_1acef8d8a08d18b0f78a29d52c96c85d8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_property_grid_iterator" kindref="compound">wxPropertyGridIterator</ref></type>
        <definition>wxPropertyGridIterator wxPropertyGridInterface::GetIterator</definition>
        <argsstring>(int flags, int startPos)</argsstring>
        <name>GetIterator</name>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startPos</declname>
        </param>
        <briefdescription>
<para>Returns iterator class instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>See <ref refid="propgridpagestate_8h_1propgrid_iterator_flags" kindref="member">wxPropertyGridIterator Flags</ref>. Value wxPG_ITERATE_DEFAULT causes iteration over everything except private child properties. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startPos</parametername>
</parameternamelist>
<parameterdescription>
<para>Either wxTOP or wxBOTTOM. wxTOP will indicate that iterations start from the first property from the top, and wxBOTTOM means that the iteration will instead begin from bottommost valid item. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="253"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a081cfe3d6c48372981f38a134594dff2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>wxPropertyGridConstIterator</type>
        <definition>wxPropertyGridConstIterator wxPropertyGridInterface::GetIterator</definition>
        <argsstring>(int flags, int startPos) const </argsstring>
        <name>GetIterator</name>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startPos</declname>
        </param>
        <briefdescription>
<para>Returns iterator class instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>See <ref refid="propgridpagestate_8h_1propgrid_iterator_flags" kindref="member">wxPropertyGridIterator Flags</ref>. Value wxPG_ITERATE_DEFAULT causes iteration over everything except private child properties. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startPos</parametername>
</parameternamelist>
<parameterdescription>
<para>Either wxTOP or wxBOTTOM. wxTOP will indicate that iterations start from the first property from the top, and wxBOTTOM means that the iteration will instead begin from bottommost valid item. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="254"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classwx_property_grid_interface_1acd38be5728243d99365e0f371b6c19ae" prot="public" static="no">
        <name>EditableStateFlags</name>
        <enumvalue id="classwx_property_grid_interface_1acd38be5728243d99365e0f371b6c19aeacf359fdb91a019696f4cd34644e624f3" prot="public">
          <name>SelectionState</name>
          <initializer> 0x01</initializer>
          <briefdescription>
<para>Include selected property. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classwx_property_grid_interface_1acd38be5728243d99365e0f371b6c19aeaa59cf2646aedbb9c00aeb8754b11610b" prot="public">
          <name>ExpandedState</name>
          <initializer> 0x02</initializer>
          <briefdescription>
<para>Include expanded/collapsed property information. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classwx_property_grid_interface_1acd38be5728243d99365e0f371b6c19aeaae0ce13a64f1cdf3e208e2ede6615d66" prot="public">
          <name>ScrollPosState</name>
          <initializer> 0x04</initializer>
          <briefdescription>
<para>Include scrolled position. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classwx_property_grid_interface_1acd38be5728243d99365e0f371b6c19aea37f63cb4a3bca8249c62a09dc6d973ff" prot="public">
          <name>PageState</name>
          <initializer> 0x08</initializer>
          <briefdescription>
<para>Include selected page information. </para>          </briefdescription>
          <detaileddescription>
<para>Only applies to <ref refid="classwx_property_grid_manager" kindref="compound">wxPropertyGridManager</ref>. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="classwx_property_grid_interface_1acd38be5728243d99365e0f371b6c19aea1cc473f6d94d75e3e97159ccd4a325d3" prot="public">
          <name>SplitterPosState</name>
          <initializer> 0x10</initializer>
          <briefdescription>
<para>Include splitter position. </para>          </briefdescription>
          <detaileddescription>
<para>Stored for each page. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="classwx_property_grid_interface_1acd38be5728243d99365e0f371b6c19aea0619889c5d768946557ac361b5fff7e5" prot="public">
          <name>DescBoxState</name>
          <initializer> 0x20</initializer>
          <briefdescription>
<para>Include description box size. </para>          </briefdescription>
          <detaileddescription>
<para>Only applies to <ref refid="classwx_property_grid_manager" kindref="compound">wxPropertyGridManager</ref>. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="classwx_property_grid_interface_1acd38be5728243d99365e0f371b6c19aea19c3af2d76e93bca4d687865b1ea27f4" prot="public">
          <name>AllStates</name>
          <initializer> SelectionState |
                           ExpandedState |
                           ScrollPosState |
                           PageState |
                           SplitterPosState |
                           DescBoxState</initializer>
          <briefdescription>
<para>Include all supported user editable state information. </para>          </briefdescription>
          <detaileddescription>
<para>This is usually the default value. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><anchor id="classwx_property_grid_interface_1propgridinterface_editablestate_flags"/></para><para>Flags for <ref refid="classwx_property_grid_interface_1a09dcfdf53629918183615627957afe39" kindref="member">wxPropertyGridInterface::SaveEditableState()</ref> and <ref refid="classwx_property_grid_interface_1aceb7f1ca6c7079c075d9876b94a2cb0f" kindref="member">wxPropertyGridInterface::RestoreEditableState()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="629" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" bodystart="628" bodyend="654"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_property_grid_interface_1a42cd83135362d4de8db6d5de968cd2ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual wxPropertyGridInterface::~wxPropertyGridInterface</definition>
        <argsstring>()</argsstring>
        <name>~wxPropertyGridInterface</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="33" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a8496963f469db86941157f8ce67896c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
        <definition>wxPGProperty* wxPropertyGridInterface::Append</definition>
        <argsstring>(wxPGProperty *property)</argsstring>
        <name>Append</name>
        <param>
          <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
          <declname>property</declname>
        </param>
        <briefdescription>
<para>Appends property to the list. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="classwx_property_grid" kindref="compound">wxPropertyGrid</ref> assumes ownership of the object. Becomes child of most recently added category.</para><para><simplesect kind="remark"><para><itemizedlist>
<listitem><para><ref refid="classwx_property_grid" kindref="compound">wxPropertyGrid</ref> takes the ownership of the property pointer.</para></listitem><listitem><para>If appending a category with name identical to a category already in the <ref refid="classwx_property_grid" kindref="compound">wxPropertyGrid</ref>, then newly created category is deleted, and most recently added category (under which properties are appended) is set to the one with same name. This allows easier adding of items to same categories in multiple passes.</para></listitem><listitem><para>Does not automatically redraw the control, so you may need to call Refresh() when calling this function after control has been shown for the first time.</para></listitem><listitem><para>This functions deselects selected property, if any. Validation failure option wxPG_VFB_STAY_IN_PROPERTY is not respected, ie. selection is cleared even if editor had invalid value. </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="53"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a7ae5812ea47c050f981aec0b8ccbe83e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
        <definition>wxPGProperty* wxPropertyGridInterface::AppendIn</definition>
        <argsstring>(wxPGPropArg id, wxPGProperty *newProperty)</argsstring>
        <name>AppendIn</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
          <declname>newProperty</declname>
        </param>
        <briefdescription>
<para>Same as <ref refid="classwx_property_grid_interface_1a8496963f469db86941157f8ce67896c4" kindref="member">Append()</ref>, but appends under given parent property. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Name or pointer to parent property.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newProperty</parametername>
</parameternamelist>
<parameterdescription>
<para>Property to be added. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="64"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a4917f17cd9f415db313942157788e8bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::BeginAddChildren</definition>
        <argsstring>(wxPGPropArg id)</argsstring>
        <name>BeginAddChildren</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>In order to add new items into a property with private children (for instance, wxFlagsProperty), you need to call this method. </para>        </briefdescription>
        <detaileddescription>
<para>After populating has been finished, you need to call <ref refid="classwx_property_grid_interface_1a1715d4804457f8b44e9382b3127b0140" kindref="member">EndAddChildren()</ref>.</para><para><simplesect kind="see"><para><ref refid="classwx_property_grid_interface_1a1715d4804457f8b44e9382b3127b0140" kindref="member">EndAddChildren()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="73"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a787e4282dbb85994af0e29a948efa98c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxPropertyGridInterface::Clear</definition>
        <argsstring>()=0</argsstring>
        <name>Clear</name>
        <reimplementedby refid="classwx_property_grid_1a48ef39121da1882f16f2cbf868cc0f2c">Clear</reimplementedby>
        <reimplementedby refid="classwx_property_grid_manager_1aef52885fcf7fece27641a69e9685a4f1">Clear</reimplementedby>
        <reimplementedby refid="classwx_property_grid_page_1a702b0d8cd205cf29c8888e80e3e426a4">Clear</reimplementedby>
        <briefdescription>
<para>Deletes all properties. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This functions deselects selected property, if any. Validation failure option wxPG_VFB_STAY_IN_PROPERTY is not respected, ie. selection is cleared even if editor had invalid value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="82"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1ad9630e6b319fafefcfac15c1060278dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxPropertyGridInterface::ClearSelection</definition>
        <argsstring>(bool validation=false)</argsstring>
        <name>ClearSelection</name>
        <param>
          <type>bool</type>
          <declname>validation</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Clears current selection, if any. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>validation</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to false, deselecting the property will always work, even if its editor had invalid value in it.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successful or if there was no selection. May fail if validation was enabled and active editor had invalid value.</para></simplesect>
<simplesect kind="remark"><para>In <ref refid="classwx_property_grid" kindref="compound">wxPropertyGrid</ref> 1.4, this member function used to send wxPG_EVT_SELECTED. In wxWidgets 2.9 and later, it no longer does that.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_property_grid_1ab2c5acf3ce62377a8d570fd089cb815b" kindref="member">wxPropertyGrid::SelectProperty()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="101"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a52aca4e7bbec0d9ac775ad4b5492544e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::ClearModifiedStatus</definition>
        <argsstring>()</argsstring>
        <name>ClearModifiedStatus</name>
        <briefdescription>
<para>Resets modified status of all properties. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="106"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1adc64e1889b8be3f775f34e9c91087596" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxPropertyGridInterface::Collapse</definition>
        <argsstring>(wxPGPropArg id)</argsstring>
        <name>Collapse</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Collapses given category or property with children. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns true if actually collapsed.</para></simplesect>
<simplesect kind="remark"><para>This function may deselect selected property, if any. Validation failure option wxPG_VFB_STAY_IN_PROPERTY is not respected, ie. selection is cleared even if editor had invalid value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="117"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a3acfb29c90820199472ee16d8be40cf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxPropertyGridInterface::CollapseAll</definition>
        <argsstring>()</argsstring>
        <name>CollapseAll</name>
        <briefdescription>
<para>Collapses all items that can be collapsed. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This functions clears selection. Validation failure option wxPG_VFB_STAY_IN_PROPERTY is not respected, ie. selection is cleared even if editor had invalid value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="126"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a03e60ec606ffc2a9e1ea944f832ba4d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxPropertyGridInterface::ChangePropertyValue</definition>
        <argsstring>(wxPGPropArg id, wxVariant newValue)</argsstring>
        <name>ChangePropertyValue</name>
        <reimplementedby refid="classwx_property_grid_1a6958b5c1a1f71512afaf6f2c07c1becd">ChangePropertyValue</reimplementedby>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="classwx_variant" kindref="compound">wxVariant</ref></type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
<para>Changes value of a property, as if by user. </para>        </briefdescription>
        <detaileddescription>
<para>Use this instead of <ref refid="classwx_property_grid_interface_1aa652e127ce0c9d4e80821cbdcfe4983c" kindref="member">SetPropertyValue()</ref> if you need the value to run through validation process, and also send the property change event.</para><para><simplesect kind="return"><para>Returns true if value was successfully changed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="135"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1ad7f72b604efa4854a673ebb722b26c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::DeleteProperty</definition>
        <argsstring>(wxPGPropArg id)</argsstring>
        <name>DeleteProperty</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Removes and deletes a property and any children. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer or name of a property.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>If you delete a property in a <ref refid="classwx_property_grid" kindref="compound">wxPropertyGrid</ref> event handler, the actual deletion is postponed until the next idle event.</para></simplesect>
This functions deselects selected property, if any. Validation failure option wxPG_VFB_STAY_IN_PROPERTY is not respected, ie. selection is cleared even if editor had invalid value. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="152"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1ac2b62fc91927b5b4f9e9a95eebbb26d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxPropertyGridInterface::DisableProperty</definition>
        <argsstring>(wxPGPropArg id)</argsstring>
        <name>DisableProperty</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Disables a property. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_property_grid_interface_1ab46cadeb40c717d902daef74005431bf" kindref="member">EnableProperty()</ref>, <ref refid="classwx_p_g_property_1aa024322106dfb1300ed68919c27dd1e1" kindref="member">wxPGProperty::Enable()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="159"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a7718a5497b7e5211d847b5a8134bc2ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxPropertyGridInterface::EditorValidate</definition>
        <argsstring>()</argsstring>
        <name>EditorValidate</name>
        <briefdescription>
<para>Returns true if all property grid data changes have been committed. </para>        </briefdescription>
        <detaileddescription>
<para>Usually only returns false if value in active editor has been invalidated by a <ref refid="classwx_validator" kindref="compound">wxValidator</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="166"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1ab46cadeb40c717d902daef74005431bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxPropertyGridInterface::EnableProperty</definition>
        <argsstring>(wxPGPropArg id, bool enable=true)</argsstring>
        <name>EnableProperty</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Enables or disables property. </para>        </briefdescription>
        <detaileddescription>
<para>Disabled property usually appears as having grey text.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Name or pointer to a property. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>If false, property is disabled instead.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classwx_p_g_property_1aa024322106dfb1300ed68919c27dd1e1" kindref="member">wxPGProperty::Enable()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="179"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a1715d4804457f8b44e9382b3127b0140" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::EndAddChildren</definition>
        <argsstring>(wxPGPropArg id)</argsstring>
        <name>EndAddChildren</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Called after population of property with fixed children has finished. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_property_grid_interface_1a4917f17cd9f415db313942157788e8bf" kindref="member">BeginAddChildren()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="186"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a9e37a22d7a60feb41f724119678b663e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxPropertyGridInterface::Expand</definition>
        <argsstring>(wxPGPropArg id)</argsstring>
        <name>Expand</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Expands given category or property with children. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns true if actually expanded.</para></simplesect>
<simplesect kind="remark"><para>This function may deselect selected property, if any. Validation failure option wxPG_VFB_STAY_IN_PROPERTY is not respected, ie. selection is cleared even if editor had invalid value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="197"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a678020610f0af4140eda4726cd89d728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxPropertyGridInterface::ExpandAll</definition>
        <argsstring>(bool expand=true)</argsstring>
        <name>ExpandAll</name>
        <param>
          <type>bool</type>
          <declname>expand</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Expands all items that can be expanded. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This functions clears selection. Validation failure option wxPG_VFB_STAY_IN_PROPERTY is not respected, ie. selection is cleared even if editor had invalid value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="206"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1ac39b51cf43d0dd8cc9b6cf4d54119da8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxPropertyGridInterface::GetColumnProportion</definition>
        <argsstring>(unsigned int column) const </argsstring>
        <name>GetColumnProportion</name>
        <param>
          <type>unsigned int</type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Returns auto-resize proportion of the given column. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_property_grid_interface_1a5df440361d9e85f3a48d79d7b45667e1" kindref="member">SetColumnProportion()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="213"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1abf1d15cc10bf6c37aeaf84dfc390d743" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
        <definition>wxPGProperty* wxPropertyGridInterface::GetFirstChild</definition>
        <argsstring>(wxPGPropArg id)</argsstring>
        <name>GetFirstChild</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns id of first child of given property. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>Does not return private children! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="220"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a408afe75901ecc8092fba0abd3ec1750" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
        <definition>wxPGProperty* wxPropertyGridInterface::GetFirst</definition>
        <argsstring>(int flags=wxPG_ITERATE_ALL)</argsstring>
        <name>GetFirst</name>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>wxPG_ITERATE_ALL</defval>
        </param>
        <briefdescription>
<para>Returns id of first item that matches given criteria. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>See <ref refid="propgridpagestate_8h_1propgrid_iterator_flags" kindref="member">wxPropertyGridIterator Flags</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="263"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a41c6a2d0535f4fce0cb8c351ae324667" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
        <definition>wxPGProperty* wxPropertyGridInterface::GetProperty</definition>
        <argsstring>(const wxString &amp;name) const </argsstring>
        <name>GetProperty</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns pointer to a property with given name (case-sensitive). </para>        </briefdescription>
        <detaileddescription>
<para>If there is no property with such name, NULL pointer is returned.</para><para><simplesect kind="remark"><para>Properties which have non-category, non-root parent cannot be accessed globally by their name. Instead, use &quot;&lt;property&gt;.&lt;subproperty&gt;&quot; instead of &quot;&lt;subproperty&gt;&quot;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="273"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a16e7c98c641c293be0f5bfd569b7c097" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::GetPropertiesWithFlag</definition>
        <argsstring>(wxArrayPGProperty *targetArr, wxPGProperty::FlagType flags, bool inverse=false, int iterFlags=(wxPG_ITERATE_PROPERTIES|wxPG_ITERATE_HIDDEN|wxPG_ITERATE_CATEGORIES)) const </argsstring>
        <name>GetPropertiesWithFlag</name>
        <param>
          <type>wxArrayPGProperty *</type>
          <declname>targetArr</declname>
        </param>
        <param>
          <type><ref refid="classwx_p_g_property_1a68b0ae8aab37c387f5fc4b7e9c53968e" kindref="member">wxPGProperty::FlagType</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inverse</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>int</type>
          <declname>iterFlags</declname>
          <defval>(wxPG_ITERATE_PROPERTIES|wxPG_ITERATE_HIDDEN|wxPG_ITERATE_CATEGORIES)</defval>
        </param>
        <briefdescription>
<para>Adds to &apos;targetArr&apos; pointers to properties that have given flags &apos;flags&apos; set. </para>        </briefdescription>
        <detaileddescription>
<para>However, if <emphasis>&apos;inverse&apos;</emphasis> is set to true, then only properties without given flags are stored.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>targetArr</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="todo_1_todo000046"><xreftitle>Todo</xreftitle><xrefdescription><para>docme </para></xrefdescription></xrefsect><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Property flags to use. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inverse</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="todo_1_todo000047"><xreftitle>Todo</xreftitle><xrefdescription><para>docme </para></xrefdescription></xrefsect><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iterFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator flags to use. Default is everything expect private children. See <ref refid="propgridpagestate_8h_1propgrid_iterator_flags" kindref="member">wxPropertyGridIterator Flags</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="293"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1ab982d81a75a957158473a468e265b314" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_variant" kindref="compound">wxVariant</ref></type>
        <definition>wxVariant wxPropertyGridInterface::GetPropertyAttribute</definition>
        <argsstring>(wxPGPropArg id, const wxString &amp;attrName) const </argsstring>
        <name>GetPropertyAttribute</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>attrName</declname>
        </param>
        <briefdescription>
<para>Returns value of given attribute. </para>        </briefdescription>
        <detaileddescription>
<para>If none found, returns wxNullVariant. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="298"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a9470a7b6978212358409e47c5b862832" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_colour" kindref="compound">wxColour</ref></type>
        <definition>wxColour wxPropertyGridInterface::GetPropertyBackgroundColour</definition>
        <argsstring>(wxPGPropArg id) const </argsstring>
        <name>GetPropertyBackgroundColour</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns background colour of first cell of a property. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="303"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a761a3de09cb1483d83b6a8f603144f87" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>wxPropertyCategory *</type>
        <definition>wxPropertyCategory* wxPropertyGridInterface::GetPropertyCategory</definition>
        <argsstring>(wxPGPropArg id) const </argsstring>
        <name>GetPropertyCategory</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns pointer of property&apos;s nearest parent category. </para>        </briefdescription>
        <detaileddescription>
<para>If no category found, returns NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="309"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a69d52777f04e6f2aea99e1d969b8f708" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* wxPropertyGridInterface::GetPropertyClientData</definition>
        <argsstring>(wxPGPropArg id) const </argsstring>
        <name>GetPropertyClientData</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns client data (void*) of a property. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="312"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1ab65c6edc3921c9feb18868398261634f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
        <definition>wxPGProperty* wxPropertyGridInterface::GetPropertyByLabel</definition>
        <argsstring>(const wxString &amp;label) const </argsstring>
        <name>GetPropertyByLabel</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <briefdescription>
<para>Returns first property which label matches given string. </para>        </briefdescription>
        <detaileddescription>
<para>NULL if none found. Note that this operation is very slow when compared to <ref refid="classwx_property_grid_interface_1ac5723b61ae48d373671343e774632ed3" kindref="member">GetPropertyByName()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="319"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1ac5723b61ae48d373671343e774632ed3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
        <definition>wxPGProperty* wxPropertyGridInterface::GetPropertyByName</definition>
        <argsstring>(const wxString &amp;name) const </argsstring>
        <name>GetPropertyByName</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns pointer to a property with given name (case-sensitive). </para>        </briefdescription>
        <detaileddescription>
<para>If there is no property with such name, NULL pointer is returned.</para><para><simplesect kind="remark"><para>Properties which have non-category, non-root parent cannot be accessed globally by their name. Instead, use &quot;&lt;property&gt;.&lt;subproperty&gt;&quot; instead of &quot;&lt;subproperty&gt;&quot;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="329"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a96e5b736b9598a307282a6c9e35ee2bc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
        <definition>wxPGProperty* wxPropertyGridInterface::GetPropertyByName</definition>
        <argsstring>(const wxString &amp;name, const wxString &amp;subname) const </argsstring>
        <name>GetPropertyByName</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>subname</declname>
        </param>
        <briefdescription>
<para>Returns child property &apos;subname&apos; of property &apos;name&apos;. </para>        </briefdescription>
        <detaileddescription>
<para>Same as calling GetPropertyByName(&quot;name.subname&quot;), albeit slightly faster. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="336"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1aade92682f7b251d97d3ec2b53bba1e18" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_p_g_editor" kindref="compound">wxPGEditor</ref> *</type>
        <definition>const wxPGEditor* wxPropertyGridInterface::GetPropertyEditor</definition>
        <argsstring>(wxPGPropArg id) const </argsstring>
        <name>GetPropertyEditor</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns property&apos;s editor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="341"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1ac1bb46f25b7e2c4f66e386d5961aeba3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxPropertyGridInterface::GetPropertyHelpString</definition>
        <argsstring>(wxPGPropArg id) const </argsstring>
        <name>GetPropertyHelpString</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns help string associated with a property. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="346"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a5938a486c4704ff1e5554c92afc582b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> *</type>
        <definition>wxBitmap* wxPropertyGridInterface::GetPropertyImage</definition>
        <argsstring>(wxPGPropArg id) const </argsstring>
        <name>GetPropertyImage</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns property&apos;s custom value image (NULL of none). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="351"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a74f0ff31b45b8ea24d37d7e219de28f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>const wxString&amp; wxPropertyGridInterface::GetPropertyLabel</definition>
        <argsstring>(wxPGPropArg id)</argsstring>
        <name>GetPropertyLabel</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns label of a property. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="354"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1ab107b3f96a158e498f648888149b3bf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxPropertyGridInterface::GetPropertyName</definition>
        <argsstring>(wxPGProperty *property)</argsstring>
        <name>GetPropertyName</name>
        <param>
          <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
          <declname>property</declname>
        </param>
        <briefdescription>
<para>Returns property&apos;s name, by which it is globally accessible. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="357"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a8faf37918f55abf39788b48c75505635" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_colour" kindref="compound">wxColour</ref></type>
        <definition>wxColour wxPropertyGridInterface::GetPropertyTextColour</definition>
        <argsstring>(wxPGPropArg id) const </argsstring>
        <name>GetPropertyTextColour</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns text colour of first cell of a property. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="362"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a5fa00509e8d8afde8462a64509ba5682" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_validator" kindref="compound">wxValidator</ref> *</type>
        <definition>wxValidator* wxPropertyGridInterface::GetPropertyValidator</definition>
        <argsstring>(wxPGPropArg id)</argsstring>
        <name>GetPropertyValidator</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns validator of a property as a reference, which you can pass to any number of SetPropertyValidator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="368"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1aa1164652240e4b157ce5250769af537e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_variant" kindref="compound">wxVariant</ref></type>
        <definition>wxVariant wxPropertyGridInterface::GetPropertyValue</definition>
        <argsstring>(wxPGPropArg id)</argsstring>
        <name>GetPropertyValue</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns property&apos;s value as <ref refid="classwx_variant" kindref="compound">wxVariant</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>If property value is unspecified, Null variant is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="375"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1aa464c5932add72e06c8022ac2277709c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dynarray_8h_1add87f199292e36ee87efd6d7f0d4ee66" kindref="member">wxArrayInt</ref></type>
        <definition>wxArrayInt wxPropertyGridInterface::GetPropertyValueAsArrayInt</definition>
        <argsstring>(wxPGPropArg id) const </argsstring>
        <name>GetPropertyValueAsArrayInt</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Return&apos;s property&apos;s value as wxArrayInt. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="378"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1afbb1de85a87a1d20fbf70054a144ec19" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_array_string" kindref="compound">wxArrayString</ref></type>
        <definition>wxArrayString wxPropertyGridInterface::GetPropertyValueAsArrayString</definition>
        <argsstring>(wxPGPropArg id) const </argsstring>
        <name>GetPropertyValueAsArrayString</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns property&apos;s value as <ref refid="classwx_array_string" kindref="compound">wxArrayString</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="381"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a0ac35a786a34eddc9d006a23110fcb61" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxPropertyGridInterface::GetPropertyValueAsBool</definition>
        <argsstring>(wxPGPropArg id) const </argsstring>
        <name>GetPropertyValueAsBool</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns property&apos;s value as bool. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="384"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a254a437531a9edc4509b485054e9a97b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_date_time" kindref="compound">wxDateTime</ref></type>
        <definition>wxDateTime wxPropertyGridInterface::GetPropertyValueAsDateTime</definition>
        <argsstring>(wxPGPropArg id) const </argsstring>
        <name>GetPropertyValueAsDateTime</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Return&apos;s property&apos;s value as <ref refid="classwx_date_time" kindref="compound">wxDateTime</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="387"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a7a75d55eb01cc869cae75fa1cffeac44" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double wxPropertyGridInterface::GetPropertyValueAsDouble</definition>
        <argsstring>(wxPGPropArg id) const </argsstring>
        <name>GetPropertyValueAsDouble</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns property&apos;s value as double-precision floating point number. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="390"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a3c72f929f0f28f6477faaf6e05bfc210" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxPropertyGridInterface::GetPropertyValueAsInt</definition>
        <argsstring>(wxPGPropArg id) const </argsstring>
        <name>GetPropertyValueAsInt</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns property&apos;s value as integer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="393"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a2bf4b075b0b25c504a9c78a5b13fe033" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long wxPropertyGridInterface::GetPropertyValueAsLong</definition>
        <argsstring>(wxPGPropArg id) const </argsstring>
        <name>GetPropertyValueAsLong</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns property&apos;s value as integer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="396"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a0dc9044f30292c40659e09c28b9b0ee8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>wxLongLong_t</type>
        <definition>wxLongLong_t wxPropertyGridInterface::GetPropertyValueAsLongLong</definition>
        <argsstring>(wxPGPropArg id) const </argsstring>
        <name>GetPropertyValueAsLongLong</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns property&apos;s value as native signed 64-bit integer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="399"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a42537d846f644d3e8cfdb89bd37d9650" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxPropertyGridInterface::GetPropertyValueAsString</definition>
        <argsstring>(wxPGPropArg id) const </argsstring>
        <name>GetPropertyValueAsString</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns property&apos;s value as <ref refid="classwx_string" kindref="compound">wxString</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>If property does not use string value type, then its value is converted using <ref refid="classwx_p_g_property_1a29f70a60e4844efbebc140270e1a4358" kindref="member">wxPGProperty::GetValueAsString()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="406"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1aa4eb719d3b547bf64b2a5e297ec7bc2d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long wxPropertyGridInterface::GetPropertyValueAsULong</definition>
        <argsstring>(wxPGPropArg id) const </argsstring>
        <name>GetPropertyValueAsULong</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns property&apos;s value as unsigned integer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="409"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a573c609faf91311707b7227f1ec63acb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>wxULongLong_t</type>
        <definition>wxULongLong_t wxPropertyGridInterface::GetPropertyValueAsULongLong</definition>
        <argsstring>(wxPGPropArg id) const </argsstring>
        <name>GetPropertyValueAsULongLong</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns property&apos;s value as native unsigned 64-bit integer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="412"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a1abce6843caee96faaeeee952f970105" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_variant" kindref="compound">wxVariant</ref></type>
        <definition>wxVariant wxPropertyGridInterface::GetPropertyValues</definition>
        <argsstring>(const wxString &amp;listname=wxEmptyString, wxPGProperty *baseparent=NULL, long flags=0) const </argsstring>
        <name>GetPropertyValues</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>listname</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <param>
          <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
          <declname>baseparent</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>long</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns a <ref refid="classwx_variant" kindref="compound">wxVariant</ref> list containing <ref refid="classwx_variant" kindref="compound">wxVariant</ref> versions of all property values. </para>        </briefdescription>
        <detaileddescription>
<para>Order is not guaranteed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>listname</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="todo_1_todo000048"><xreftitle>Todo</xreftitle><xrefdescription><para>docme </para></xrefdescription></xrefsect><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>baseparent</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="todo_1_todo000049"><xreftitle>Todo</xreftitle><xrefdescription><para>docme </para></xrefdescription></xrefsect><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Use wxPG_KEEP_STRUCTURE to retain category structure; each sub category will be its own wxVariantList of <ref refid="classwx_variant" kindref="compound">wxVariant</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
Use wxPG_INC_ATTRIBUTES to include property attributes as well. Each attribute will be stored as list variant named &quot;@@&lt;propname&gt;@@attr.&quot; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="431"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a49ccd0da1d0f4a68004e1a174bf5f998" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const wxArrayPGProperty &amp;</type>
        <definition>const wxArrayPGProperty&amp; wxPropertyGridInterface::GetSelectedProperties</definition>
        <argsstring>() const </argsstring>
        <name>GetSelectedProperties</name>
        <briefdescription>
<para>Returns list of currently selected properties. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>wxArrayPGProperty should be compatible with std::vector API. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="438"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a302ae0ff624d48131544f6010373e599" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
        <definition>wxPGProperty* wxPropertyGridInterface::GetSelection</definition>
        <argsstring>() const </argsstring>
        <name>GetSelection</name>
        <reimplementedby refid="classwx_property_grid_1ac2be24e5df0f27b041dc895007ad64f4">GetSelection</reimplementedby>
        <reimplementedby refid="classwx_property_grid_manager_1a1e409fede5d20f32967c0a19d490d663">GetSelection</reimplementedby>
        <briefdescription>
<para>Returns currently selected property. </para>        </briefdescription>
        <detaileddescription>
<para>NULL if none.</para><para><simplesect kind="remark"><para>When wxPG_EX_MULTIPLE_SELECTION extra style is used, this member function returns the focused property, that is the one which can have active editor. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="447"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a96a1c13733c0a83d7b509fd7a9e9a61a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_p_g_v_iterator" kindref="compound">wxPGVIterator</ref></type>
        <definition>virtual wxPGVIterator wxPropertyGridInterface::GetVIterator</definition>
        <argsstring>(int flags) const </argsstring>
        <name>GetVIterator</name>
        <reimplementedby refid="classwx_property_grid_manager_1a189b6489e0c9354685652af65dc1fe1e">GetVIterator</reimplementedby>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Similar to <ref refid="classwx_property_grid_interface_1a41ab8661411082563c8191f614f91007" kindref="member">GetIterator()</ref>, but instead returns <ref refid="classwx_p_g_v_iterator" kindref="compound">wxPGVIterator</ref> instance, which can be useful for forward-iterating through arbitrary property containers. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>See <ref refid="propgridpagestate_8h_1propgrid_iterator_flags" kindref="member">wxPropertyGridIterator Flags</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="457"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1aac3d5502e764989ed8b031a3d75b8814" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxPropertyGridInterface::HideProperty</definition>
        <argsstring>(wxPGPropArg id, bool hide=true, int flags=wxPG_RECURSE)</argsstring>
        <name>HideProperty</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hide</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>wxPG_RECURSE</defval>
        </param>
        <briefdescription>
<para>Hides or reveals a property. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="todo_1_todo000050"><xreftitle>Todo</xreftitle><xrefdescription><para>docme </para></xrefdescription></xrefsect><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hide</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, hides property, otherwise reveals it. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>By default changes are applied recursively. Set this parameter wxPG_DONT_RECURSE to prevent this. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="470"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1aed2f5e12acc0bc460c2295ac1564b735" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
        <definition>wxPGProperty* wxPropertyGridInterface::Insert</definition>
        <argsstring>(wxPGPropArg priorThis, wxPGProperty *newProperty)</argsstring>
        <name>Insert</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>priorThis</declname>
        </param>
        <param>
          <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
          <declname>newProperty</declname>
        </param>
        <briefdescription>
<para>Inserts property to the property container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>priorThis</parametername>
</parameternamelist>
<parameterdescription>
<para>New property is inserted just prior to this. Available only in the first variant. There are two versions of this function to allow this parameter to be either an id or name to a property. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newProperty</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the inserted property. <ref refid="classwx_property_grid" kindref="compound">wxPropertyGrid</ref> will take ownership of this object.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns newProperty.</para></simplesect>
<simplesect kind="remark"><para></para></simplesect>
<itemizedlist>
<listitem><para><ref refid="classwx_property_grid" kindref="compound">wxPropertyGrid</ref> takes the ownership of the property pointer.</para></listitem></itemizedlist>
</para><para><itemizedlist>
<listitem><para>While Append may be faster way to add items, make note that when both types of data storage (categoric and non-categoric) are active, Insert becomes even more slow. This is especially true if current mode is non-categoric.</para></listitem></itemizedlist>
</para><para><itemizedlist>
<listitem><para>This functions deselects selected property, if any. Validation failure option wxPG_VFB_STAY_IN_PROPERTY is not respected, ie. selection is cleared even if editor had invalid value.</para></listitem></itemizedlist>
</para><para>Example of use:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>append<sp/>category</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_p_g_property" kindref="compound" tooltip="wxPGProperty is base class for all wxPropertyGrid properties.">wxPGProperty</ref>*<sp/>my_cat_id<sp/>=<sp/>propertygrid-&gt;Append(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxPropertyCategory(</highlight><highlight class="stringliteral">&quot;My<sp/>Category&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>into<sp/>category<sp/>-<sp/>using<sp/>second<sp/>variant</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_p_g_property" kindref="compound" tooltip="wxPGProperty is base class for all wxPropertyGrid properties.">wxPGProperty</ref>*<sp/>my_item_id_1<sp/>=<sp/>propertygrid-&gt;Insert(<sp/>my_cat_id,<sp/>0,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxStringProperty(</highlight><highlight class="stringliteral">&quot;My<sp/>String<sp/>1&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>before<sp/>to<sp/>first<sp/>item<sp/>-<sp/>using<sp/>first<sp/>variant</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_p_g_property" kindref="compound" tooltip="wxPGProperty is base class for all wxPropertyGrid properties.">wxPGProperty</ref>*<sp/>my_item_id_2<sp/>=<sp/>propertygrid-&gt;Insert(<sp/>my_item_id,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxStringProperty(</highlight><highlight class="stringliteral">&quot;My<sp/>String<sp/>2&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="523"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1af6ced8d055116ef38522b868ac62f229" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
        <definition>wxPGProperty* wxPropertyGridInterface::Insert</definition>
        <argsstring>(wxPGPropArg parent, int index, wxPGProperty *newProperty)</argsstring>
        <name>Insert</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
          <declname>newProperty</declname>
        </param>
        <briefdescription>
<para>Inserts property to the property container. </para>        </briefdescription>
        <detaileddescription>
<para>See the other overload for more details.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>New property is inserted under this category. Available only in the second variant. There are two versions of this function to allow this parameter to be either an id or name to a property. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index under category. Available only in the second variant. If index is &lt; 0, property is appended in category. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newProperty</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the inserted property. <ref refid="classwx_property_grid" kindref="compound">wxPropertyGrid</ref> will take ownership of this object.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns newProperty. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="543"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a7dc38b7ce9ba010c49d63935328097b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxPropertyGridInterface::IsPropertyCategory</definition>
        <argsstring>(wxPGPropArg id) const </argsstring>
        <name>IsPropertyCategory</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns true if property is a category. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="546"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1ab9ca28beec8a1da397ca984926d1186d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxPropertyGridInterface::IsPropertyEnabled</definition>
        <argsstring>(wxPGPropArg id) const </argsstring>
        <name>IsPropertyEnabled</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns true if property is enabled. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="549"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1aa3677cf3904d78407f5d60af032760d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxPropertyGridInterface::IsPropertyExpanded</definition>
        <argsstring>(wxPGPropArg id) const </argsstring>
        <name>IsPropertyExpanded</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns true if given property is expanded. </para>        </briefdescription>
        <detaileddescription>
<para>Naturally, always returns false for properties that cannot be expanded. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="555"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1ae2640335c9e3e0071bac8a473ba3bf2a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxPropertyGridInterface::IsPropertyModified</definition>
        <argsstring>(wxPGPropArg id) const </argsstring>
        <name>IsPropertyModified</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns true if property has been modified after value set or modify flag clear by software. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="561"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a60c2e3e8cbf8788f30189ce3b754b465" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxPropertyGridInterface::IsPropertySelected</definition>
        <argsstring>(wxPGPropArg id) const </argsstring>
        <name>IsPropertySelected</name>
        <reimplementedby refid="classwx_property_grid_manager_1a521008dc912d8340ee064b27acc135f6">IsPropertySelected</reimplementedby>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns true if property is selected. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="566"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a2005aa0ab6855cc4c4ecee816f97f791" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxPropertyGridInterface::IsPropertyShown</definition>
        <argsstring>(wxPGPropArg id) const </argsstring>
        <name>IsPropertyShown</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns true if property is shown (ie. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="classwx_property_grid_interface_1aac3d5502e764989ed8b031a3d75b8814" kindref="member">HideProperty()</ref> with true not called for it). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="572"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a71187c9c857cd578e167ff78d544e229" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxPropertyGridInterface::IsPropertyValueUnspecified</definition>
        <argsstring>(wxPGPropArg id) const </argsstring>
        <name>IsPropertyValueUnspecified</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns true if property value is set to unspecified. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="577"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1aac3d13601fb3a97f531b86923b20d5ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::LimitPropertyEditing</definition>
        <argsstring>(wxPGPropArg id, bool limit=true)</argsstring>
        <name>LimitPropertyEditing</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>limit</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Disables (limit = true) or enables (limit = false) <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> editor of a property, if it is not the sole mean to edit the value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="583"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a48485b2134b49f0bfb9adeb744d5c1a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
        <definition>wxPGProperty* wxPropertyGridInterface::RemoveProperty</definition>
        <argsstring>(wxPGPropArg id)</argsstring>
        <name>RemoveProperty</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Removes a property. </para>        </briefdescription>
        <detaileddescription>
<para>Does not delete the property object, but instead returns it.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer or name of a property.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>Removed property cannot have any children.</para></simplesect>
Also, if you remove property in a <ref refid="classwx_property_grid" kindref="compound">wxPropertyGrid</ref> event handler, the actual removal is postponed until the next idle event. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="606"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1ac0b507d04a4420f3aa8fec0c38e99cd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
        <definition>wxPGProperty* wxPropertyGridInterface::ReplaceProperty</definition>
        <argsstring>(wxPGPropArg id, wxPGProperty *property)</argsstring>
        <name>ReplaceProperty</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *</type>
          <declname>property</declname>
        </param>
        <briefdescription>
<para>Replaces property with id with newly created one. </para>        </briefdescription>
        <detaileddescription>
<para>For example, this code replaces existing property named &quot;Flags&quot; with one that will have different set of items:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pg-&gt;ReplaceProperty(</highlight><highlight class="stringliteral">&quot;Flags&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxFlagsProperty(</highlight><highlight class="stringliteral">&quot;Flags&quot;</highlight><highlight class="normal">,<sp/>wxPG_LABEL,<sp/>newItems))</highlight></codeline>
</programlisting></para><para><simplesect kind="see"><para><ref refid="classwx_property_grid_interface_1aed2f5e12acc0bc460c2295ac1564b735" kindref="member">Insert()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="620"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1aceb7f1ca6c7079c075d9876b94a2cb0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxPropertyGridInterface::RestoreEditableState</definition>
        <argsstring>(const wxString &amp;src, int restoreStates=AllStates)</argsstring>
        <name>RestoreEditableState</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>restoreStates</declname>
          <defval>AllStates</defval>
        </param>
        <briefdescription>
<para>Restores user-editable state. </para>        </briefdescription>
        <detaileddescription>
<para>See also <ref refid="classwx_property_grid_interface_1a09dcfdf53629918183615627957afe39" kindref="member">wxPropertyGridInterface::SaveEditableState()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>String generated by SaveEditableState.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>restoreStates</parametername>
</parameternamelist>
<parameterdescription>
<para>Which parts to restore from source string. See <ref refid="classwx_property_grid_interface_1propgridinterface_editablestate_flags" kindref="member">list of editable state flags</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns false if there was problem reading the string.</para></simplesect>
<simplesect kind="remark"><para>If some parts of state (such as scrolled or splitter position) fail to restore correctly, please make sure that you call this function after <ref refid="classwx_property_grid" kindref="compound">wxPropertyGrid</ref> size has been set (this may sometimes be tricky when sizers are used). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="674"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a09dcfdf53629918183615627957afe39" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxPropertyGridInterface::SaveEditableState</definition>
        <argsstring>(int includedStates=AllStates) const </argsstring>
        <name>SaveEditableState</name>
        <param>
          <type>int</type>
          <declname>includedStates</declname>
          <defval>AllStates</defval>
        </param>
        <briefdescription>
<para>Used to acquire user-editable state (selected property, expanded properties, scrolled position, splitter positions). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>includedStates</parametername>
</parameternamelist>
<parameterdescription>
<para>Which parts of state to include. See <ref refid="classwx_property_grid_interface_1propgridinterface_editablestate_flags" kindref="member">list of editable state flags</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="684"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a5df440361d9e85f3a48d79d7b45667e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxPropertyGridInterface::SetColumnProportion</definition>
        <argsstring>(unsigned int column, int proportion)</argsstring>
        <name>SetColumnProportion</name>
        <param>
          <type>unsigned int</type>
          <declname>column</declname>
        </param>
        <param>
          <type>int</type>
          <declname>proportion</declname>
        </param>
        <briefdescription>
<para>Set proportion of a auto-stretchable column. </para>        </briefdescription>
        <detaileddescription>
<para>wxPG_SPLITTER_AUTO_CENTER window style needs to be used to indicate that columns are auto- resizable.</para><para><simplesect kind="return"><para>Returns false on failure.</para></simplesect>
<simplesect kind="remark"><para>You should call this for individual pages of <ref refid="classwx_property_grid_manager" kindref="compound">wxPropertyGridManager</ref> (if used).</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_property_grid_interface_1ac39b51cf43d0dd8cc9b6cf4d54119da8" kindref="member">GetColumnProportion()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="707"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a129a37f9d87a2a08516772de9860432d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyAttribute</definition>
        <argsstring>(wxPGPropArg id, const wxString &amp;attrName, wxVariant value, long argFlags=0)</argsstring>
        <name>SetPropertyAttribute</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>attrName</declname>
        </param>
        <param>
          <type><ref refid="classwx_variant" kindref="compound">wxVariant</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>long</type>
          <declname>argFlags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Sets an attribute for this property. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="todo_1_todo000051"><xreftitle>Todo</xreftitle><xrefdescription><para>docme </para></xrefdescription></xrefsect><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attrName</parametername>
</parameternamelist>
<parameterdescription>
<para>Text identifier of attribute. See <ref refid="property_8h_1propgrid_property_attributes" kindref="member">wxPropertyGrid Property Attribute Identifiers</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of attribute. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional. Use wxPG_RECURSE to set the attribute to child properties recursively.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>Setting attribute&apos;s value to Null variant will simply remove it from property&apos;s set of attributes. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="726"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a9ae755985b70254e3e8a27a629c3fead" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyAttributeAll</definition>
        <argsstring>(const wxString &amp;attrName, wxVariant value)</argsstring>
        <name>SetPropertyAttributeAll</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>attrName</declname>
        </param>
        <param>
          <type><ref refid="classwx_variant" kindref="compound">wxVariant</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets property attribute for all applicapple properties. </para>        </briefdescription>
        <detaileddescription>
<para>Be sure to use this method only after all properties have been added to the grid. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="733"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a5727a38c6fa10713bac1b4fe6e90991c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyBackgroundColour</definition>
        <argsstring>(wxPGPropArg id, const wxColour &amp;colour, int flags=wxPG_RECURSE)</argsstring>
        <name>SetPropertyBackgroundColour</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>colour</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>wxPG_RECURSE</defval>
        </param>
        <briefdescription>
<para>Sets background colour of a property. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Property name or pointer.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>colour</parametername>
</parameternamelist>
<parameterdescription>
<para>New background colour.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Default is wxPG_RECURSE which causes colour to be set recursively. Omit this flag to only set colour for the property in question and not any of its children. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="751"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1afd6721e817062d6c9dbb522334c029a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyCell</definition>
        <argsstring>(wxPGPropArg id, int column, const wxString &amp;text=wxEmptyString, const wxBitmap &amp;bitmap=wxNullBitmap, const wxColour &amp;fgCol=wxNullColour, const wxColour &amp;bgCol=wxNullColour)</argsstring>
        <name>SetPropertyCell</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>column</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>bitmap</declname>
          <defval><ref refid="interface_2wx_2bitmap_8h_1a2947690e84b8fdb2e37b79a4af8f8a21" kindref="member">wxNullBitmap</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>fgCol</declname>
          <defval><ref refid="colour_8h_1a882fc9395ce82080f0c2c91ca04731d6" kindref="member">wxNullColour</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>bgCol</declname>
          <defval><ref refid="colour_8h_1a882fc9395ce82080f0c2c91ca04731d6" kindref="member">wxNullColour</ref></defval>
        </param>
        <briefdescription>
<para>Sets text, bitmap, and colours for given column&apos;s cell. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para><itemizedlist>
<listitem><para>You can set label cell by using column 0.</para></listitem><listitem><para>You can use wxPG_LABEL as text to use default text for column. </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="765"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1ab65193f9761bc7b63141ff115db00efd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyClientData</definition>
        <argsstring>(wxPGPropArg id, void *clientData)</argsstring>
        <name>SetPropertyClientData</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>clientData</declname>
        </param>
        <briefdescription>
<para>Sets client data (void*) of a property. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This untyped client data has to be deleted manually. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="773"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a1a8b70c4e648dee652525c1bcb1d63e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyColoursToDefault</definition>
        <argsstring>(wxPGPropArg id)</argsstring>
        <name>SetPropertyColoursToDefault</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Resets text and background colours of given property. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="778"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1aff961af9dd2787fb97f510ea5ce46407" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyEditor</definition>
        <argsstring>(wxPGPropArg id, const wxPGEditor *editor)</argsstring>
        <name>SetPropertyEditor</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_p_g_editor" kindref="compound">wxPGEditor</ref> *</type>
          <declname>editor</declname>
        </param>
        <briefdescription>
<para>Sets editor for a property. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="todo_1_todo000052"><xreftitle>Todo</xreftitle><xrefdescription><para>docme </para></xrefdescription></xrefsect><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>editor</parametername>
</parameternamelist>
<parameterdescription>
<para>For builtin editors, use wxPGEditor_X, where X is builtin editor&apos;s name (TextCtrl, Choice, etc. see <ref refid="classwx_p_g_editor" kindref="compound">wxPGEditor</ref> documentation for full list).</para></parameterdescription>
</parameteritem>
</parameterlist>
For custom editors, use pointer you received from <ref refid="classwx_property_grid_1adb8c3d0d29d1c051a8a9ece93d40f6b7" kindref="member">wxPropertyGrid::RegisterEditorClass()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="792"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a7155520a900a212c6ba48924a0398817" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyEditor</definition>
        <argsstring>(wxPGPropArg id, const wxString &amp;editorName)</argsstring>
        <name>SetPropertyEditor</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>editorName</declname>
        </param>
        <briefdescription>
<para>Sets editor control of a property. </para>        </briefdescription>
        <detaileddescription>
<para>As editor argument, use editor name string, such as &quot;TextCtrl&quot; or &quot;Choice&quot;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="798"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1ad7cc77546762cc92e69078d6ac161c63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyLabel</definition>
        <argsstring>(wxPGPropArg id, const wxString &amp;newproplabel)</argsstring>
        <name>SetPropertyLabel</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>newproplabel</declname>
        </param>
        <briefdescription>
<para>Sets label of a property. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para><itemizedlist>
<listitem><para>Properties under same parent may have same labels. However, property names must still remain unique. </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="807"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1af7b3c2349b7293076a223720274921e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyName</definition>
        <argsstring>(wxPGPropArg id, const wxString &amp;newName)</argsstring>
        <name>SetPropertyName</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>newName</declname>
        </param>
        <briefdescription>
<para>Sets name of a property. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Name or pointer of property which name to change.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newName</parametername>
</parameternamelist>
<parameterdescription>
<para>New name for property. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="818"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1af5442c56a869f8f03c530a0d34555cd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyReadOnly</definition>
        <argsstring>(wxPGPropArg id, bool set=true, int flags=wxPG_RECURSE)</argsstring>
        <name>SetPropertyReadOnly</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>set</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>wxPG_RECURSE</defval>
        </param>
        <briefdescription>
<para>Sets property (and, recursively, its children) to have read-only value. </para>        </briefdescription>
        <detaileddescription>
<para>In other words, user cannot change the value in the editor, but they can still copy it.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Property name or pointer.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>set</parametername>
</parameternamelist>
<parameterdescription>
<para>Use true to enable read-only, false to disable it.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>By default changes are applied recursively. Set this parameter wxPG_DONT_RECURSE to prevent this.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>This is mainly for use with textctrl editor. Only some other editors fully support it. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="839"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1ad0354321e04ed670c1d4904ef68f9ea0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyValueUnspecified</definition>
        <argsstring>(wxPGPropArg id)</argsstring>
        <name>SetPropertyValueUnspecified</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Sets property&apos;s value to unspecified. </para>        </briefdescription>
        <detaileddescription>
<para>If it has children (it may be category), then the same thing is done to them. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="845"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a85caa9196b0278e844df1af5f12c800b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyValues</definition>
        <argsstring>(const wxVariantList &amp;list, wxPGPropArg defaultCategory=wxNullProperty)</argsstring>
        <name>SetPropertyValues</name>
        <param>
          <type>const wxVariantList &amp;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>wxPGPropArg</type>
          <declname>defaultCategory</declname>
          <defval>wxNullProperty</defval>
        </param>
        <briefdescription>
<para>Sets property values from a list of wxVariants. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="851"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a59408c331ac19855ce3b55ff26f82a38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyValues</definition>
        <argsstring>(const wxVariant &amp;list, wxPGPropArg defaultCategory=wxNullProperty)</argsstring>
        <name>SetPropertyValues</name>
        <param>
          <type>const <ref refid="classwx_variant" kindref="compound">wxVariant</ref> &amp;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>wxPGPropArg</type>
          <declname>defaultCategory</declname>
          <defval>wxNullProperty</defval>
        </param>
        <briefdescription>
<para>Sets property values from a list of wxVariants. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="857"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a5793ea3ef9afa47fe2c1c5bf437dd583" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyHelpString</definition>
        <argsstring>(wxPGPropArg id, const wxString &amp;helpString)</argsstring>
        <name>SetPropertyHelpString</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>helpString</declname>
        </param>
        <briefdescription>
<para>Associates the help string with property. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>By default, text is shown either in the manager&apos;s &quot;description&quot; text box or in the status bar. If extra window style wxPG_EX_HELP_AS_TOOLTIPS is used, then the text will appear as a tooltip. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="867"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a88befed8aa91d5c6e62844da2166bb3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyImage</definition>
        <argsstring>(wxPGPropArg id, wxBitmap &amp;bmp)</argsstring>
        <name>SetPropertyImage</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>bmp</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> in front of the value. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>Bitmap will be scaled to a size returned by <ref refid="classwx_property_grid_1ad7a4a2400a020312ade2d1346c3ec498" kindref="member">wxPropertyGrid::GetImageSize()</ref>; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="875"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a51ae4dc2d3732d6e681c5a474abc0da9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxPropertyGridInterface::SetPropertyMaxLength</definition>
        <argsstring>(wxPGPropArg id, int maxLen)</argsstring>
        <name>SetPropertyMaxLength</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxLen</declname>
        </param>
        <briefdescription>
<para>Sets max length of property&apos;s text. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="880"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1ab2249b7bb57055b3620cb180956353db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyTextColour</definition>
        <argsstring>(wxPGPropArg id, const wxColour &amp;colour, int flags=wxPG_RECURSE)</argsstring>
        <name>SetPropertyTextColour</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>colour</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>wxPG_RECURSE</defval>
        </param>
        <briefdescription>
<para>Sets text colour of a property. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Property name or pointer.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>colour</parametername>
</parameternamelist>
<parameterdescription>
<para>New background colour.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Default is wxPG_RECURSE which causes colour to be set recursively. Omit this flag to only set colour for the property in question and not any of its children. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="899"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1ad83fe8ad87751101316345a14133c45f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyValidator</definition>
        <argsstring>(wxPGPropArg id, const wxValidator &amp;validator)</argsstring>
        <name>SetPropertyValidator</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_validator" kindref="compound">wxValidator</ref> &amp;</type>
          <declname>validator</declname>
        </param>
        <briefdescription>
<para>Sets validator of a property. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="904"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1aa652e127ce0c9d4e80821cbdcfe4983c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyValue</definition>
        <argsstring>(wxPGPropArg id, long value)</argsstring>
        <name>SetPropertyValue</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets value (integer) of a property. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="907"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a7f13128f8275004348ec252bdad097b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyValue</definition>
        <argsstring>(wxPGPropArg id, int value)</argsstring>
        <name>SetPropertyValue</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets value (integer) of a property. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="910"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1afc31048af8214a81b9fc24daaa13b56e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyValue</definition>
        <argsstring>(wxPGPropArg id, double value)</argsstring>
        <name>SetPropertyValue</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets value (floating point) of a property. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="913"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1ab3c7f74d260993c2bb679c37dc7ae69b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyValue</definition>
        <argsstring>(wxPGPropArg id, bool value)</argsstring>
        <name>SetPropertyValue</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets value (bool) of a property. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="916"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a4d2cbc3ea3d92c59e87372f4a05cba99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyValue</definition>
        <argsstring>(wxPGPropArg id, const wxString &amp;value)</argsstring>
        <name>SetPropertyValue</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets value (string) of a property. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="919"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a63730146d50d376c6e8cce75a88180c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyValue</definition>
        <argsstring>(wxPGPropArg id, const wxArrayString &amp;value)</argsstring>
        <name>SetPropertyValue</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_array_string" kindref="compound">wxArrayString</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets value (<ref refid="classwx_array_string" kindref="compound">wxArrayString</ref>) of a property. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="922"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a5be36e8a366457d8d8000ec73554eb10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyValue</definition>
        <argsstring>(wxPGPropArg id, const wxDateTime &amp;value)</argsstring>
        <name>SetPropertyValue</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_date_time" kindref="compound">wxDateTime</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets value (<ref refid="classwx_date_time" kindref="compound">wxDateTime</ref>) of a property. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="925"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1ac14f033b18667d9965776c2d19dd7bb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyValue</definition>
        <argsstring>(wxPGPropArg id, wxObject *value)</argsstring>
        <name>SetPropertyValue</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="classwx_object" kindref="compound">wxObject</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets value (wxObject*) of a property. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="928"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a44f390c4041e9c84cc74f078e2c65fec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyValue</definition>
        <argsstring>(wxPGPropArg id, wxObject &amp;value)</argsstring>
        <name>SetPropertyValue</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="classwx_object" kindref="compound">wxObject</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets value (<ref refid="classwx_object" kindref="compound">wxObject</ref>&amp;) of a property. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="931"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1aad1fe3813ff98b201bd77071156994f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyValue</definition>
        <argsstring>(wxPGPropArg id, wxLongLong_t value)</argsstring>
        <name>SetPropertyValue</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>wxLongLong_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets value (native 64-bit int) of a property. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="934"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a2682d90e94b61601f6402bf930a98f1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyValue</definition>
        <argsstring>(wxPGPropArg id, wxULongLong_t value)</argsstring>
        <name>SetPropertyValue</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>wxULongLong_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets value (native 64-bit unsigned int) of a property. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="937"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a51719a02370c475b2c61f32cd7b32ea0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyValue</definition>
        <argsstring>(wxPGPropArg id, const wxArrayInt &amp;value)</argsstring>
        <name>SetPropertyValue</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="dynarray_8h_1add87f199292e36ee87efd6d7f0d4ee66" kindref="member">wxArrayInt</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets value (wxArrayInt&amp;) of a property. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="940"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a26e16b29e987c5f3b6782e80b23dc956" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyValueString</definition>
        <argsstring>(wxPGPropArg id, const wxString &amp;value)</argsstring>
        <name>SetPropertyValueString</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets value (<ref refid="classwx_string" kindref="compound">wxString</ref>) of a property. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This method uses <ref refid="classwx_p_g_property_1a0fbb7142a10cfcf02bb45000ab4527cd" kindref="member">wxPGProperty::SetValueFromString()</ref>, which all properties should implement. This means that there should not be a type error, and instead the string is converted to property&apos;s actual value type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="950"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a07d4eb7ae9fc0014cc72bb320e36fa4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetPropertyValue</definition>
        <argsstring>(wxPGPropArg id, wxVariant value)</argsstring>
        <name>SetPropertyValue</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="classwx_variant" kindref="compound">wxVariant</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets value (<ref refid="classwx_variant" kindref="compound">wxVariant</ref>&amp;) of a property. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>Use <ref refid="classwx_property_grid_1a6958b5c1a1f71512afaf6f2c07c1becd" kindref="member">wxPropertyGrid::ChangePropertyValue()</ref> instead if you need to run through validation process and send property change event. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="958"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1ade72c97a047aa409dc7429010f640bb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SetValidationFailureBehavior</definition>
        <argsstring>(int vfbFlags)</argsstring>
        <name>SetValidationFailureBehavior</name>
        <param>
          <type>int</type>
          <declname>vfbFlags</declname>
        </param>
        <briefdescription>
<para>Adjusts how <ref refid="classwx_property_grid" kindref="compound">wxPropertyGrid</ref> behaves when invalid value is entered in a property. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vfbFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>See <ref refid="interface_2wx_2propgrid_2propgrid_8h_1propgrid_vfbflags" kindref="member">wxPropertyGrid Validation Failure behaviour Flags</ref> for possible values. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="967"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a68c73043fc89e18169207c0cee737852" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::Sort</definition>
        <argsstring>(int flags=0)</argsstring>
        <name>Sort</name>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Sorts all properties recursively. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>This can contain any of the following options: wxPG_SORT_TOP_LEVEL_ONLY: Only sort categories and their immediate children. Sorting done by wxPG_AUTO_SORT option uses this.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classwx_property_grid_interface_1a5e99b4ebcbdc6ee1c59d8284df0bfa8f" kindref="member">SortChildren</ref>, <ref refid="classwx_property_grid_1ad413c2a9f94db90466bc9039f928afe6" kindref="member">wxPropertyGrid::SetSortFunction</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="980"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a5e99b4ebcbdc6ee1c59d8284df0bfa8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPropertyGridInterface::SortChildren</definition>
        <argsstring>(wxPGPropArg id, int flags=0)</argsstring>
        <name>SortChildren</name>
        <param>
          <type>wxPGPropArg</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Sorts children of a property. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Name or pointer to a property.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>This can contain any of the following options: wxPG_RECURSE: Sorts recursively.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classwx_property_grid_interface_1a68c73043fc89e18169207c0cee737852" kindref="member">Sort</ref>, <ref refid="classwx_property_grid_1ad413c2a9f94db90466bc9039f928afe6" kindref="member">wxPropertyGrid::SetSortFunction</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="994"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_property_grid_interface_1a38bd0419a578467da07d01aef288848d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wxPropertyGridInterface::InitAllTypeHandlers</definition>
        <argsstring>()</argsstring>
        <name>InitAllTypeHandlers</name>
        <briefdescription>
<para>Initializes *all* property types. </para>        </briefdescription>
        <detaileddescription>
<para>Causes references to most object files in the library, so calling this may cause significant increase in executable size when linking with static library. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="477"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1a330dc911b08378e967955f8a6a938612" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wxPropertyGridInterface::RegisterAdditionalEditors</definition>
        <argsstring>()</argsstring>
        <name>RegisterAdditionalEditors</name>
        <briefdescription>
<para>Initializes additional property editors (SpinCtrl etc.). </para>        </briefdescription>
        <detaileddescription>
<para>Causes references to most object files in the library, so calling this may cause significant increase in executable size when linking with static library. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="591"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1ac02e6f40e5c5138a40c99a4f7b98100b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wxPropertyGridInterface::SetBoolChoices</definition>
        <argsstring>(const wxString &amp;trueChoice, const wxString &amp;falseChoice)</argsstring>
        <name>SetBoolChoices</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>trueChoice</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>falseChoice</declname>
        </param>
        <briefdescription>
<para>Sets strings listed in the choice dropdown of a wxBoolProperty. </para>        </briefdescription>
        <detaileddescription>
<para>Defaults are &quot;True&quot; and &quot;False&quot;, so changing them to, say, &quot;Yes&quot; and &quot;No&quot; may be useful in some less technical applications. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="693"/>
      </memberdef>
      <memberdef kind="function" id="classwx_property_grid_interface_1ac79128278621fc7878c4cbe5340bbc1f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_p_g_editor" kindref="compound">wxPGEditor</ref> *</type>
        <definition>static wxPGEditor* wxPropertyGridInterface::GetEditorByName</definition>
        <argsstring>(const wxString &amp;editorName)</argsstring>
        <name>GetEditorByName</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>editorName</declname>
        </param>
        <briefdescription>
<para>Returns editor pointer of editor with given name;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="999"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Most of the shared property manipulation interface shared by <ref refid="classwx_property_grid" kindref="compound">wxPropertyGrid</ref>, <ref refid="classwx_property_grid_page" kindref="compound">wxPropertyGridPage</ref>, and <ref refid="classwx_property_grid_manager" kindref="compound">wxPropertyGridManager</ref> is defined in this class. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="remark"><para><itemizedlist>
<listitem><para>In separate <ref refid="classwx_property_grid" kindref="compound">wxPropertyGrid</ref> component this class was known as wxPropertyContainerMethods.</para></listitem></itemizedlist>
</para></simplesect>
<itemizedlist>
<listitem><para>wxPropertyGridInterface&apos;s property operation member functions all accept a special wxPGPropArg id argument, using which you can refer to properties either by their pointer (for performance) or by their name (for conveniency).</para></listitem></itemizedlist>
</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxpropgrid" kindref="member">wxPropertyGrid</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__propgrid" kindref="compound">wxPropertyGrid</ref> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="9081">
        <label>wxPropertyGridManager</label>
        <link refid="classwx_property_grid_manager"/>
        <childnode refid="9079" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9080">
        <label>wxPropertyGrid</label>
        <link refid="classwx_property_grid"/>
        <childnode refid="9079" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9082">
        <label>wxPropertyGridPage</label>
        <link refid="classwx_property_grid_page"/>
        <childnode refid="9079" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9079">
        <label>wxPropertyGridInterface</label>
        <link refid="classwx_property_grid_interface"/>
      </node>
    </inheritancegraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" line="29" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/propgrid/propgridiface.h" bodystart="28" bodyend="1000"/>
    <listofallmembers>
      <member refid="classwx_property_grid_interface_1acd38be5728243d99365e0f371b6c19aea19c3af2d76e93bca4d687865b1ea27f4" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>AllStates</name></member>
      <member refid="classwx_property_grid_interface_1a8496963f469db86941157f8ce67896c4" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>Append</name></member>
      <member refid="classwx_property_grid_interface_1a7ae5812ea47c050f981aec0b8ccbe83e" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>AppendIn</name></member>
      <member refid="classwx_property_grid_interface_1a4917f17cd9f415db313942157788e8bf" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>BeginAddChildren</name></member>
      <member refid="classwx_property_grid_interface_1a03e60ec606ffc2a9e1ea944f832ba4d4" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>ChangePropertyValue</name></member>
      <member refid="classwx_property_grid_interface_1a787e4282dbb85994af0e29a948efa98c" prot="public" virt="pure-virtual"><scope>wxPropertyGridInterface</scope><name>Clear</name></member>
      <member refid="classwx_property_grid_interface_1a52aca4e7bbec0d9ac775ad4b5492544e" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>ClearModifiedStatus</name></member>
      <member refid="classwx_property_grid_interface_1ad9630e6b319fafefcfac15c1060278dd" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>ClearSelection</name></member>
      <member refid="classwx_property_grid_interface_1adc64e1889b8be3f775f34e9c91087596" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>Collapse</name></member>
      <member refid="classwx_property_grid_interface_1a3acfb29c90820199472ee16d8be40cf2" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>CollapseAll</name></member>
      <member refid="classwx_property_grid_interface_1ad7f72b604efa4854a673ebb722b26c94" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>DeleteProperty</name></member>
      <member refid="classwx_property_grid_interface_1acd38be5728243d99365e0f371b6c19aea0619889c5d768946557ac361b5fff7e5" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>DescBoxState</name></member>
      <member refid="classwx_property_grid_interface_1ac2b62fc91927b5b4f9e9a95eebbb26d1" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>DisableProperty</name></member>
      <member refid="classwx_property_grid_interface_1acd38be5728243d99365e0f371b6c19ae" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>EditableStateFlags</name></member>
      <member refid="classwx_property_grid_interface_1a7718a5497b7e5211d847b5a8134bc2ab" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>EditorValidate</name></member>
      <member refid="classwx_property_grid_interface_1ab46cadeb40c717d902daef74005431bf" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>EnableProperty</name></member>
      <member refid="classwx_property_grid_interface_1a1715d4804457f8b44e9382b3127b0140" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>EndAddChildren</name></member>
      <member refid="classwx_property_grid_interface_1a9e37a22d7a60feb41f724119678b663e" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>Expand</name></member>
      <member refid="classwx_property_grid_interface_1a678020610f0af4140eda4726cd89d728" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>ExpandAll</name></member>
      <member refid="classwx_property_grid_interface_1acd38be5728243d99365e0f371b6c19aeaa59cf2646aedbb9c00aeb8754b11610b" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>ExpandedState</name></member>
      <member refid="classwx_property_grid_interface_1ac39b51cf43d0dd8cc9b6cf4d54119da8" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetColumnProportion</name></member>
      <member refid="classwx_property_grid_interface_1ac79128278621fc7878c4cbe5340bbc1f" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetEditorByName</name></member>
      <member refid="classwx_property_grid_interface_1a408afe75901ecc8092fba0abd3ec1750" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetFirst</name></member>
      <member refid="classwx_property_grid_interface_1abf1d15cc10bf6c37aeaf84dfc390d743" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetFirstChild</name></member>
      <member refid="classwx_property_grid_interface_1a41ab8661411082563c8191f614f91007" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetIterator</name></member>
      <member refid="classwx_property_grid_interface_1acc9bc495b14420b8c87506b8914fc4f9" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetIterator</name></member>
      <member refid="classwx_property_grid_interface_1acef8d8a08d18b0f78a29d52c96c85d8d" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetIterator</name></member>
      <member refid="classwx_property_grid_interface_1a081cfe3d6c48372981f38a134594dff2" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetIterator</name></member>
      <member refid="classwx_property_grid_interface_1a16e7c98c641c293be0f5bfd569b7c097" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertiesWithFlag</name></member>
      <member refid="classwx_property_grid_interface_1a41c6a2d0535f4fce0cb8c351ae324667" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetProperty</name></member>
      <member refid="classwx_property_grid_interface_1ab982d81a75a957158473a468e265b314" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyAttribute</name></member>
      <member refid="classwx_property_grid_interface_1a9470a7b6978212358409e47c5b862832" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyBackgroundColour</name></member>
      <member refid="classwx_property_grid_interface_1ab65c6edc3921c9feb18868398261634f" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyByLabel</name></member>
      <member refid="classwx_property_grid_interface_1ac5723b61ae48d373671343e774632ed3" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyByName</name></member>
      <member refid="classwx_property_grid_interface_1a96e5b736b9598a307282a6c9e35ee2bc" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyByName</name></member>
      <member refid="classwx_property_grid_interface_1a761a3de09cb1483d83b6a8f603144f87" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyCategory</name></member>
      <member refid="classwx_property_grid_interface_1a69d52777f04e6f2aea99e1d969b8f708" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyClientData</name></member>
      <member refid="classwx_property_grid_interface_1aade92682f7b251d97d3ec2b53bba1e18" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyEditor</name></member>
      <member refid="classwx_property_grid_interface_1ac1bb46f25b7e2c4f66e386d5961aeba3" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyHelpString</name></member>
      <member refid="classwx_property_grid_interface_1a5938a486c4704ff1e5554c92afc582b8" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyImage</name></member>
      <member refid="classwx_property_grid_interface_1a74f0ff31b45b8ea24d37d7e219de28f1" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyLabel</name></member>
      <member refid="classwx_property_grid_interface_1ab107b3f96a158e498f648888149b3bf4" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyName</name></member>
      <member refid="classwx_property_grid_interface_1a8faf37918f55abf39788b48c75505635" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyTextColour</name></member>
      <member refid="classwx_property_grid_interface_1a5fa00509e8d8afde8462a64509ba5682" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyValidator</name></member>
      <member refid="classwx_property_grid_interface_1aa1164652240e4b157ce5250769af537e" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyValue</name></member>
      <member refid="classwx_property_grid_interface_1aa464c5932add72e06c8022ac2277709c" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyValueAsArrayInt</name></member>
      <member refid="classwx_property_grid_interface_1afbb1de85a87a1d20fbf70054a144ec19" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyValueAsArrayString</name></member>
      <member refid="classwx_property_grid_interface_1a0ac35a786a34eddc9d006a23110fcb61" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyValueAsBool</name></member>
      <member refid="classwx_property_grid_interface_1a254a437531a9edc4509b485054e9a97b" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyValueAsDateTime</name></member>
      <member refid="classwx_property_grid_interface_1a7a75d55eb01cc869cae75fa1cffeac44" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyValueAsDouble</name></member>
      <member refid="classwx_property_grid_interface_1a3c72f929f0f28f6477faaf6e05bfc210" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyValueAsInt</name></member>
      <member refid="classwx_property_grid_interface_1a2bf4b075b0b25c504a9c78a5b13fe033" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyValueAsLong</name></member>
      <member refid="classwx_property_grid_interface_1a0dc9044f30292c40659e09c28b9b0ee8" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyValueAsLongLong</name></member>
      <member refid="classwx_property_grid_interface_1a42537d846f644d3e8cfdb89bd37d9650" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyValueAsString</name></member>
      <member refid="classwx_property_grid_interface_1aa4eb719d3b547bf64b2a5e297ec7bc2d" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyValueAsULong</name></member>
      <member refid="classwx_property_grid_interface_1a573c609faf91311707b7227f1ec63acb" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyValueAsULongLong</name></member>
      <member refid="classwx_property_grid_interface_1a1abce6843caee96faaeeee952f970105" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetPropertyValues</name></member>
      <member refid="classwx_property_grid_interface_1a49ccd0da1d0f4a68004e1a174bf5f998" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetSelectedProperties</name></member>
      <member refid="classwx_property_grid_interface_1a302ae0ff624d48131544f6010373e599" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>GetSelection</name></member>
      <member refid="classwx_property_grid_interface_1a96a1c13733c0a83d7b509fd7a9e9a61a" prot="public" virt="virtual"><scope>wxPropertyGridInterface</scope><name>GetVIterator</name></member>
      <member refid="classwx_property_grid_interface_1aac3d5502e764989ed8b031a3d75b8814" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>HideProperty</name></member>
      <member refid="classwx_property_grid_interface_1a38bd0419a578467da07d01aef288848d" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>InitAllTypeHandlers</name></member>
      <member refid="classwx_property_grid_interface_1aed2f5e12acc0bc460c2295ac1564b735" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>Insert</name></member>
      <member refid="classwx_property_grid_interface_1af6ced8d055116ef38522b868ac62f229" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>Insert</name></member>
      <member refid="classwx_property_grid_interface_1a7dc38b7ce9ba010c49d63935328097b8" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>IsPropertyCategory</name></member>
      <member refid="classwx_property_grid_interface_1ab9ca28beec8a1da397ca984926d1186d" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>IsPropertyEnabled</name></member>
      <member refid="classwx_property_grid_interface_1aa3677cf3904d78407f5d60af032760d8" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>IsPropertyExpanded</name></member>
      <member refid="classwx_property_grid_interface_1ae2640335c9e3e0071bac8a473ba3bf2a" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>IsPropertyModified</name></member>
      <member refid="classwx_property_grid_interface_1a60c2e3e8cbf8788f30189ce3b754b465" prot="public" virt="virtual"><scope>wxPropertyGridInterface</scope><name>IsPropertySelected</name></member>
      <member refid="classwx_property_grid_interface_1a2005aa0ab6855cc4c4ecee816f97f791" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>IsPropertyShown</name></member>
      <member refid="classwx_property_grid_interface_1a71187c9c857cd578e167ff78d544e229" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>IsPropertyValueUnspecified</name></member>
      <member refid="classwx_property_grid_interface_1aac3d13601fb3a97f531b86923b20d5ff" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>LimitPropertyEditing</name></member>
      <member refid="classwx_property_grid_interface_1acd38be5728243d99365e0f371b6c19aea37f63cb4a3bca8249c62a09dc6d973ff" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>PageState</name></member>
      <member refid="classwx_property_grid_interface_1a330dc911b08378e967955f8a6a938612" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>RegisterAdditionalEditors</name></member>
      <member refid="classwx_property_grid_interface_1a48485b2134b49f0bfb9adeb744d5c1a5" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>RemoveProperty</name></member>
      <member refid="classwx_property_grid_interface_1ac0b507d04a4420f3aa8fec0c38e99cd1" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>ReplaceProperty</name></member>
      <member refid="classwx_property_grid_interface_1aceb7f1ca6c7079c075d9876b94a2cb0f" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>RestoreEditableState</name></member>
      <member refid="classwx_property_grid_interface_1a09dcfdf53629918183615627957afe39" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SaveEditableState</name></member>
      <member refid="classwx_property_grid_interface_1acd38be5728243d99365e0f371b6c19aeaae0ce13a64f1cdf3e208e2ede6615d66" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>ScrollPosState</name></member>
      <member refid="classwx_property_grid_interface_1acd38be5728243d99365e0f371b6c19aeacf359fdb91a019696f4cd34644e624f3" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SelectionState</name></member>
      <member refid="classwx_property_grid_interface_1ac02e6f40e5c5138a40c99a4f7b98100b" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetBoolChoices</name></member>
      <member refid="classwx_property_grid_interface_1a5df440361d9e85f3a48d79d7b45667e1" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetColumnProportion</name></member>
      <member refid="classwx_property_grid_interface_1a129a37f9d87a2a08516772de9860432d" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyAttribute</name></member>
      <member refid="classwx_property_grid_interface_1a9ae755985b70254e3e8a27a629c3fead" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyAttributeAll</name></member>
      <member refid="classwx_property_grid_interface_1a5727a38c6fa10713bac1b4fe6e90991c" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyBackgroundColour</name></member>
      <member refid="classwx_property_grid_interface_1afd6721e817062d6c9dbb522334c029a0" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyCell</name></member>
      <member refid="classwx_property_grid_interface_1ab65193f9761bc7b63141ff115db00efd" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyClientData</name></member>
      <member refid="classwx_property_grid_interface_1a1a8b70c4e648dee652525c1bcb1d63e6" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyColoursToDefault</name></member>
      <member refid="classwx_property_grid_interface_1aff961af9dd2787fb97f510ea5ce46407" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyEditor</name></member>
      <member refid="classwx_property_grid_interface_1a7155520a900a212c6ba48924a0398817" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyEditor</name></member>
      <member refid="classwx_property_grid_interface_1a5793ea3ef9afa47fe2c1c5bf437dd583" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyHelpString</name></member>
      <member refid="classwx_property_grid_interface_1a88befed8aa91d5c6e62844da2166bb3c" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyImage</name></member>
      <member refid="classwx_property_grid_interface_1ad7cc77546762cc92e69078d6ac161c63" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyLabel</name></member>
      <member refid="classwx_property_grid_interface_1a51ae4dc2d3732d6e681c5a474abc0da9" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyMaxLength</name></member>
      <member refid="classwx_property_grid_interface_1af7b3c2349b7293076a223720274921e5" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyName</name></member>
      <member refid="classwx_property_grid_interface_1af5442c56a869f8f03c530a0d34555cd2" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyReadOnly</name></member>
      <member refid="classwx_property_grid_interface_1ab2249b7bb57055b3620cb180956353db" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyTextColour</name></member>
      <member refid="classwx_property_grid_interface_1ad83fe8ad87751101316345a14133c45f" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyValidator</name></member>
      <member refid="classwx_property_grid_interface_1aa652e127ce0c9d4e80821cbdcfe4983c" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyValue</name></member>
      <member refid="classwx_property_grid_interface_1a7f13128f8275004348ec252bdad097b8" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyValue</name></member>
      <member refid="classwx_property_grid_interface_1afc31048af8214a81b9fc24daaa13b56e" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyValue</name></member>
      <member refid="classwx_property_grid_interface_1ab3c7f74d260993c2bb679c37dc7ae69b" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyValue</name></member>
      <member refid="classwx_property_grid_interface_1a4d2cbc3ea3d92c59e87372f4a05cba99" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyValue</name></member>
      <member refid="classwx_property_grid_interface_1a63730146d50d376c6e8cce75a88180c4" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyValue</name></member>
      <member refid="classwx_property_grid_interface_1a5be36e8a366457d8d8000ec73554eb10" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyValue</name></member>
      <member refid="classwx_property_grid_interface_1ac14f033b18667d9965776c2d19dd7bb9" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyValue</name></member>
      <member refid="classwx_property_grid_interface_1a44f390c4041e9c84cc74f078e2c65fec" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyValue</name></member>
      <member refid="classwx_property_grid_interface_1aad1fe3813ff98b201bd77071156994f1" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyValue</name></member>
      <member refid="classwx_property_grid_interface_1a2682d90e94b61601f6402bf930a98f1c" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyValue</name></member>
      <member refid="classwx_property_grid_interface_1a51719a02370c475b2c61f32cd7b32ea0" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyValue</name></member>
      <member refid="classwx_property_grid_interface_1a07d4eb7ae9fc0014cc72bb320e36fa4f" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyValue</name></member>
      <member refid="classwx_property_grid_interface_1a85caa9196b0278e844df1af5f12c800b" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyValues</name></member>
      <member refid="classwx_property_grid_interface_1a59408c331ac19855ce3b55ff26f82a38" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyValues</name></member>
      <member refid="classwx_property_grid_interface_1a26e16b29e987c5f3b6782e80b23dc956" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyValueString</name></member>
      <member refid="classwx_property_grid_interface_1ad0354321e04ed670c1d4904ef68f9ea0" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetPropertyValueUnspecified</name></member>
      <member refid="classwx_property_grid_interface_1ade72c97a047aa409dc7429010f640bb6" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SetValidationFailureBehavior</name></member>
      <member refid="classwx_property_grid_interface_1a68c73043fc89e18169207c0cee737852" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>Sort</name></member>
      <member refid="classwx_property_grid_interface_1a5e99b4ebcbdc6ee1c59d8284df0bfa8f" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SortChildren</name></member>
      <member refid="classwx_property_grid_interface_1acd38be5728243d99365e0f371b6c19aea1cc473f6d94d75e3e97159ccd4a325d3" prot="public" virt="non-virtual"><scope>wxPropertyGridInterface</scope><name>SplitterPosState</name></member>
      <member refid="classwx_property_grid_interface_1a42cd83135362d4de8db6d5de968cd2ab" prot="public" virt="virtual"><scope>wxPropertyGridInterface</scope><name>~wxPropertyGridInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
