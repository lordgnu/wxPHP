<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_html_parser" kind="class" prot="public">
    <compoundname>wxHtmlParser</compoundname>
    <derivedcompoundref refid="classwx_html_win_parser" prot="public" virt="non-virtual">wxHtmlWinParser</derivedcompoundref>
    <includes local="no">wx/html/htmlpars.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_html_parser_1a2c2f4cd486c0bfaee31132b7dfea1387" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxHtmlParser::wxHtmlParser</definition>
        <argsstring>()</argsstring>
        <name>wxHtmlParser</name>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/html/htmlpars.h" line="115"/>
      </memberdef>
      <memberdef kind="function" id="classwx_html_parser_1a67e06c2e5023fb50c893a1a283205e45" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxHtmlParser::AddTagHandler</definition>
        <argsstring>(wxHtmlTagHandler *handler)</argsstring>
        <name>AddTagHandler</name>
        <param>
          <type><ref refid="classwx_html_tag_handler" kindref="compound">wxHtmlTagHandler</ref> *</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Adds handler to the internal list ( hash table) of handlers. </para>        </briefdescription>
        <detaileddescription>
<para>This method should not be called directly by user but rather by derived class&apos; constructor.</para><para>This adds the handler to this <bold>instance</bold> of <ref refid="classwx_html_parser" kindref="compound">wxHtmlParser</ref>, not to all objects of this class! (Static front-end to AddTagHandler is provided by <ref refid="classwx_html_win_parser" kindref="compound">wxHtmlWinParser</ref>).</para><para>All handlers are deleted on object deletion. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/html/htmlpars.h" line="128"/>
      </memberdef>
      <memberdef kind="function" id="classwx_html_parser_1ae4856660f14cbcb812b48678b4984665" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxHtmlParser::AddWord</definition>
        <argsstring>(const wxString &amp;txt)</argsstring>
        <name>AddWord</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>txt</declname>
        </param>
        <briefdescription>
<para>Must be overwritten in derived class. </para>        </briefdescription>
        <detaileddescription>
<para>This method is called by <ref refid="classwx_html_parser_1a743a08491352f57043d2069df5cc7a7e" kindref="member">DoParsing()</ref> each time a part of text is parsed. <emphasis>txt</emphasis> is NOT only one word, it is substring of input. It is not formatted or preprocessed (so white spaces are unmodified). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/html/htmlpars.h" line="137"/>
      </memberdef>
      <memberdef kind="function" id="classwx_html_parser_1ac04230b82e6de6dde10757cbe6149980" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxHtmlParser::DoParsing</definition>
        <argsstring>(const const_iterator &amp;begin_pos, const const_iterator &amp;end_pos)</argsstring>
        <name>DoParsing</name>
        <param>
          <type>const const_iterator &amp;</type>
          <declname>begin_pos</declname>
        </param>
        <param>
          <type>const const_iterator &amp;</type>
          <declname>end_pos</declname>
        </param>
        <briefdescription>
<para>Parses the m_Source from <emphasis>begin_pos</emphasis> to <emphasis>end_pos</emphasis> - 1. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/html/htmlpars.h" line="142"/>
      </memberdef>
      <memberdef kind="function" id="classwx_html_parser_1a743a08491352f57043d2069df5cc7a7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxHtmlParser::DoParsing</definition>
        <argsstring>()</argsstring>
        <name>DoParsing</name>
        <briefdescription>
<para>Parses the whole m_Source. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/html/htmlpars.h" line="147"/>
      </memberdef>
      <memberdef kind="function" id="classwx_html_parser_1a354d30d5071266b868a225b13333cd0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxHtmlParser::DoneParser</definition>
        <argsstring>()</argsstring>
        <name>DoneParser</name>
        <briefdescription>
<para>This must be called after <ref refid="classwx_html_parser_1a743a08491352f57043d2069df5cc7a7e" kindref="member">DoParsing()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/html/htmlpars.h" line="152"/>
      </memberdef>
      <memberdef kind="function" id="classwx_html_parser_1aaea2ccc752d947e65dfe49d4ff1a1e2d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_file_system" kindref="compound">wxFileSystem</ref> *</type>
        <definition>wxFileSystem* wxHtmlParser::GetFS</definition>
        <argsstring>() const </argsstring>
        <name>GetFS</name>
        <briefdescription>
<para>Returns pointer to the file system. </para>        </briefdescription>
        <detaileddescription>
<para>Because each tag handler has reference to it is parent parser it can easily request the file by calling: <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_f_s_file" kindref="compound" tooltip="This class represents a single file opened by wxFileSystem.">wxFSFile</ref><sp/>*f<sp/>=<sp/>m_Parser<sp/>-&gt;<sp/><ref refid="classwx_html_parser_1aaea2ccc752d947e65dfe49d4ff1a1e2d" kindref="member" tooltip="Returns pointer to the file system.">GetFS</ref>()<sp/>-&gt;<sp/>OpenFile(</highlight><highlight class="stringliteral">&quot;image.jpg&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/html/htmlpars.h" line="162"/>
      </memberdef>
      <memberdef kind="function" id="classwx_html_parser_1a9b715eb585661ec4a9a1e9bf48fe660f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classwx_object" kindref="compound">wxObject</ref> *</type>
        <definition>virtual wxObject* wxHtmlParser::GetProduct</definition>
        <argsstring>()=0</argsstring>
        <name>GetProduct</name>
        <briefdescription>
<para>Returns product of parsing. </para>        </briefdescription>
        <detaileddescription>
<para>Returned value is result of parsing of the document.</para><para>The type of this result depends on internal representation in derived parser (but it must be derived from wxObject!). See <ref refid="classwx_html_win_parser" kindref="compound">wxHtmlWinParser</ref> for details. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/html/htmlpars.h" line="172"/>
      </memberdef>
      <memberdef kind="function" id="classwx_html_parser_1a7e1be4b2e16a3cee02ffc2906b14992b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> *</type>
        <definition>const wxString* wxHtmlParser::GetSource</definition>
        <argsstring>()</argsstring>
        <name>GetSource</name>
        <briefdescription>
<para>Returns pointer to the source being parsed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/html/htmlpars.h" line="177"/>
      </memberdef>
      <memberdef kind="function" id="classwx_html_parser_1ad047fa0b03c8241080e0561fd9a5d8b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxHtmlParser::InitParser</definition>
        <argsstring>(const wxString &amp;source)</argsstring>
        <name>InitParser</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Setups the parser for parsing the <emphasis>source</emphasis> string. </para>        </briefdescription>
        <detaileddescription>
<para>(Should be overridden in derived class) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/html/htmlpars.h" line="183"/>
      </memberdef>
      <memberdef kind="function" id="classwx_html_parser_1aaecb050ca8be6e6d980f28774aa35bef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_f_s_file" kindref="compound">wxFSFile</ref> *</type>
        <definition>virtual wxFSFile* wxHtmlParser::OpenURL</definition>
        <argsstring>(wxHtmlURLType type, const wxString &amp;url) const </argsstring>
        <name>OpenURL</name>
        <param>
          <type>wxHtmlURLType</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>url</declname>
        </param>
        <briefdescription>
<para>Opens given URL and returns <computeroutput><ref refid="classwx_f_s_file" kindref="compound">wxFSFile</ref></computeroutput> object that can be used to read data from it. </para>        </briefdescription>
        <detaileddescription>
<para>This method may return NULL in one of two cases: either the URL doesn&apos;t point to any valid resource or the URL is blocked by overridden implementation of <emphasis>OpenURL</emphasis> in derived class.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates type of the resource. Is one of:<itemizedlist>
<listitem><para>wxHTML_URL_PAGE: Opening a HTML page.</para></listitem><listitem><para>wxHTML_URL_IMAGE: Opening an image.</para></listitem><listitem><para>wxHTML_URL_OTHER: Opening a resource that doesn&apos;t fall into any other category. </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>url</parametername>
</parameternamelist>
<parameterdescription>
<para>URL being opened.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Always use this method in tag handlers instead of <ref refid="classwx_html_parser_1aaea2ccc752d947e65dfe49d4ff1a1e2d" kindref="member">GetFS()</ref>-&gt;OpenFile() because it can block the URL and is thus more secure. Default behaviour is to call <ref refid="classwx_html_window_1aaeca6abb2c4c5248d418ca19ee51206d" kindref="member">wxHtmlWindow::OnOpeningURL</ref> of the associated <ref refid="classwx_html_window" kindref="compound">wxHtmlWindow</ref> object (which may decide to block the URL or redirect it to another one),if there&apos;s any, and always open the URL if the parser is not used with <ref refid="classwx_html_window" kindref="compound">wxHtmlWindow</ref>. Returned <ref refid="classwx_f_s_file" kindref="compound">wxFSFile</ref> object is not guaranteed to point to url, it might have been redirected! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/html/htmlpars.h" line="210"/>
      </memberdef>
      <memberdef kind="function" id="classwx_html_parser_1ad2a0f4c4a60f7745f31a0b0bac9ceac5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_object" kindref="compound">wxObject</ref> *</type>
        <definition>wxObject* wxHtmlParser::Parse</definition>
        <argsstring>(const wxString &amp;source)</argsstring>
        <name>Parse</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Proceeds parsing of the document. </para>        </briefdescription>
        <detaileddescription>
<para>This is end-user method. You can simply call it when you need to obtain parsed output (which is parser-specific).</para><para>The method does these things:<orderedlist>
<listitem><para>calls InitParser(source)</para></listitem><listitem><para>calls <ref refid="classwx_html_parser_1a743a08491352f57043d2069df5cc7a7e" kindref="member">DoParsing()</ref></para></listitem><listitem><para>calls <ref refid="classwx_html_parser_1a9b715eb585661ec4a9a1e9bf48fe660f" kindref="member">GetProduct()</ref></para></listitem><listitem><para>calls <ref refid="classwx_html_parser_1a354d30d5071266b868a225b13333cd0e" kindref="member">DoneParser()</ref></para></listitem><listitem><para>returns value returned by <ref refid="classwx_html_parser_1a9b715eb585661ec4a9a1e9bf48fe660f" kindref="member">GetProduct()</ref></para></listitem></orderedlist>
</para><para>You shouldn&apos;t use <ref refid="classwx_html_parser_1ad047fa0b03c8241080e0561fd9a5d8b6" kindref="member">InitParser()</ref>, <ref refid="classwx_html_parser_1a743a08491352f57043d2069df5cc7a7e" kindref="member">DoParsing()</ref>, <ref refid="classwx_html_parser_1a9b715eb585661ec4a9a1e9bf48fe660f" kindref="member">GetProduct()</ref> or <ref refid="classwx_html_parser_1a354d30d5071266b868a225b13333cd0e" kindref="member">DoneParser()</ref> directly. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/html/htmlpars.h" line="225"/>
      </memberdef>
      <memberdef kind="function" id="classwx_html_parser_1a8cc9ec3e59aa0d12116988831d4708dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxHtmlParser::PopTagHandler</definition>
        <argsstring>()</argsstring>
        <name>PopTagHandler</name>
        <briefdescription>
<para>Restores parser&apos;s state before last call to <ref refid="classwx_html_parser_1a80498b0ad245e26f6041915e9bae934a" kindref="member">PushTagHandler()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/html/htmlpars.h" line="230"/>
      </memberdef>
      <memberdef kind="function" id="classwx_html_parser_1a80498b0ad245e26f6041915e9bae934a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxHtmlParser::PushTagHandler</definition>
        <argsstring>(wxHtmlTagHandler *handler, const wxString &amp;tags)</argsstring>
        <name>PushTagHandler</name>
        <param>
          <type><ref refid="classwx_html_tag_handler" kindref="compound">wxHtmlTagHandler</ref> *</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>tags</declname>
        </param>
        <briefdescription>
<para>Forces the handler to handle additional tags (not returned by <ref refid="classwx_html_tag_handler_1a4659531bcbb3cbcafea31d31a227f747" kindref="member">wxHtmlTagHandler::GetSupportedTags</ref>). </para>        </briefdescription>
        <detaileddescription>
<para>The handler should already be added to this parser.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>the handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tags</parametername>
</parameternamelist>
<parameterdescription>
<para>List of tags (in same format as GetSupportedTags()&apos;s return value). The parser will redirect these tags to handler (until call to <ref refid="classwx_html_parser_1a8cc9ec3e59aa0d12116988831d4708dd" kindref="member">PopTagHandler()</ref>).</para></parameterdescription>
</parameteritem>
</parameterlist>
Example:</para><para>Imagine you want to parse following pseudo-html structure: <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;myitems&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;param<sp/>name=</highlight><highlight class="stringliteral">&quot;one&quot;</highlight><highlight class="normal"><sp/>value=</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;param<sp/>name=</highlight><highlight class="stringliteral">&quot;two&quot;</highlight><highlight class="normal"><sp/>value=</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/myitems&gt;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;execute&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;param<sp/>program=</highlight><highlight class="stringliteral">&quot;text.exe&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/execute&gt;</highlight></codeline>
</programlisting></para><para>It is obvious that you cannot use only one tag handler for &lt;param&gt; tag. Instead you must use context-sensitive handlers for &lt;param&gt; inside &lt;myitems&gt; and &lt;param&gt; inside &lt;execute&gt;. This is the preferred solution:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TAG_HANDLER_BEGIN(MYITEM,<sp/></highlight><highlight class="stringliteral">&quot;MYITEMS&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TAG_HANDLER_PROC(tag)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...something...</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Parser<sp/>-&gt;<sp/><ref refid="classwx_html_parser_1a80498b0ad245e26f6041915e9bae934a" kindref="member" tooltip="Forces the handler to handle additional tags (not returned by wxHtmlTagHandler::GetSupportedTags).">PushTagHandler</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PARAM&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParseInner(tag);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Parser<sp/>-&gt;<sp/><ref refid="classwx_html_parser_1a8cc9ec3e59aa0d12116988831d4708dd" kindref="member" tooltip="Restores parser&amp;#39;s state before last call to PushTagHandler().">PopTagHandler</ref>();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...something...</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TAG_HANDLER_END(MYITEM)</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/html/htmlpars.h" line="278"/>
      </memberdef>
      <memberdef kind="function" id="classwx_html_parser_1ae49af4d0bc1de1476e9d6d0f235e2766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxHtmlParser::SetFS</definition>
        <argsstring>(wxFileSystem *fs)</argsstring>
        <name>SetFS</name>
        <param>
          <type><ref refid="classwx_file_system" kindref="compound">wxFileSystem</ref> *</type>
          <declname>fs</declname>
        </param>
        <briefdescription>
<para>Sets the virtual file system that will be used to request additional files. </para>        </briefdescription>
        <detaileddescription>
<para>(For example <computeroutput>IMG</computeroutput> tag handler requests <ref refid="classwx_f_s_file" kindref="compound">wxFSFile</ref> with the image data.) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/html/htmlpars.h" line="284"/>
      </memberdef>
      <memberdef kind="function" id="classwx_html_parser_1af32c63cbcc6c42ac522b2aba269a422b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxHtmlParser::StopParsing</definition>
        <argsstring>()</argsstring>
        <name>StopParsing</name>
        <briefdescription>
<para>Call this function to interrupt parsing from a tag handler. </para>        </briefdescription>
        <detaileddescription>
<para>No more tags will be parsed afterward. This function may only be called from <ref refid="classwx_html_parser_1ad2a0f4c4a60f7745f31a0b0bac9ceac5" kindref="member">Parse()</ref> or any function called by it (i.e. from tag handlers). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/html/htmlpars.h" line="291"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classwx_html_parser_1a78f5d8c42846d23b6b33093f585f1352" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxHtmlParser::AddTag</definition>
        <argsstring>(const wxHtmlTag &amp;tag)</argsstring>
        <name>AddTag</name>
        <param>
          <type>const <ref refid="classwx_html_tag" kindref="compound">wxHtmlTag</ref> &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
<para>This may (and may not) be overwritten in derived class. </para>        </briefdescription>
        <detaileddescription>
<para>This method is called each time new tag is about to be added. <emphasis>tag</emphasis> contains information about the tag. (See <ref refid="classwx_html_tag" kindref="compound">wxHtmlTag</ref> for details.)</para><para>Default (<ref refid="classwx_html_parser" kindref="compound">wxHtmlParser</ref>) behaviour is this: first it finds a handler capable of handling this tag and then it calls handler&apos;s HandleTag() method. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/html/htmlpars.h" line="304"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Classes derived from this handle the <bold>generic</bold> parsing of HTML documents: it scans the document and divide it into blocks of tags (where one block consists of beginning and ending tag and of text between these two tags). </para>    </briefdescription>
    <detaileddescription>
<para>It is independent from <ref refid="classwx_html_window" kindref="compound">wxHtmlWindow</ref> and can be used as stand-alone parser.</para><para>It uses system of tag handlers to parse the HTML document. Tag handlers are not statically shared by all instances but are created for each <ref refid="classwx_html_parser" kindref="compound">wxHtmlParser</ref> instance. The reason is that the handler may contain document-specific temporary data used during parsing (e.g. complicated structures like tables).</para><para>Typically the user calls only the <ref refid="classwx_html_parser_1ad2a0f4c4a60f7745f31a0b0bac9ceac5" kindref="member">wxHtmlParser::Parse</ref> method.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxhtml" kindref="member">wxHTML</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__html" kindref="compound">HTML</ref></para><para><simplesect kind="see"><para><ref refid="overview_html_1overview_html_cells" kindref="member">Cells and Containers</ref>, <ref refid="overview_html_1overview_html_handlers" kindref="member">Tag Handlers</ref>, <ref refid="classwx_html_tag" kindref="compound">wxHtmlTag</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="7290">
        <label>wxHtmlWinParser</label>
        <link refid="classwx_html_win_parser"/>
        <childnode refid="7289" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7289">
        <label>wxHtmlParser</label>
        <link refid="classwx_html_parser"/>
      </node>
    </inheritancegraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/html/htmlpars.h" line="110" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/html/htmlpars.h" bodystart="109" bodyend="305"/>
    <listofallmembers>
      <member refid="classwx_html_parser_1a78f5d8c42846d23b6b33093f585f1352" prot="protected" virt="virtual"><scope>wxHtmlParser</scope><name>AddTag</name></member>
      <member refid="classwx_html_parser_1a67e06c2e5023fb50c893a1a283205e45" prot="public" virt="virtual"><scope>wxHtmlParser</scope><name>AddTagHandler</name></member>
      <member refid="classwx_html_parser_1ae4856660f14cbcb812b48678b4984665" prot="public" virt="virtual"><scope>wxHtmlParser</scope><name>AddWord</name></member>
      <member refid="classwx_html_parser_1a354d30d5071266b868a225b13333cd0e" prot="public" virt="virtual"><scope>wxHtmlParser</scope><name>DoneParser</name></member>
      <member refid="classwx_html_parser_1ac04230b82e6de6dde10757cbe6149980" prot="public" virt="non-virtual"><scope>wxHtmlParser</scope><name>DoParsing</name></member>
      <member refid="classwx_html_parser_1a743a08491352f57043d2069df5cc7a7e" prot="public" virt="non-virtual"><scope>wxHtmlParser</scope><name>DoParsing</name></member>
      <member refid="classwx_html_parser_1aaea2ccc752d947e65dfe49d4ff1a1e2d" prot="public" virt="non-virtual"><scope>wxHtmlParser</scope><name>GetFS</name></member>
      <member refid="classwx_html_parser_1a9b715eb585661ec4a9a1e9bf48fe660f" prot="public" virt="pure-virtual"><scope>wxHtmlParser</scope><name>GetProduct</name></member>
      <member refid="classwx_html_parser_1a7e1be4b2e16a3cee02ffc2906b14992b" prot="public" virt="non-virtual"><scope>wxHtmlParser</scope><name>GetSource</name></member>
      <member refid="classwx_html_parser_1ad047fa0b03c8241080e0561fd9a5d8b6" prot="public" virt="virtual"><scope>wxHtmlParser</scope><name>InitParser</name></member>
      <member refid="classwx_html_parser_1aaecb050ca8be6e6d980f28774aa35bef" prot="public" virt="virtual"><scope>wxHtmlParser</scope><name>OpenURL</name></member>
      <member refid="classwx_html_parser_1ad2a0f4c4a60f7745f31a0b0bac9ceac5" prot="public" virt="non-virtual"><scope>wxHtmlParser</scope><name>Parse</name></member>
      <member refid="classwx_html_parser_1a8cc9ec3e59aa0d12116988831d4708dd" prot="public" virt="non-virtual"><scope>wxHtmlParser</scope><name>PopTagHandler</name></member>
      <member refid="classwx_html_parser_1a80498b0ad245e26f6041915e9bae934a" prot="public" virt="non-virtual"><scope>wxHtmlParser</scope><name>PushTagHandler</name></member>
      <member refid="classwx_html_parser_1ae49af4d0bc1de1476e9d6d0f235e2766" prot="public" virt="non-virtual"><scope>wxHtmlParser</scope><name>SetFS</name></member>
      <member refid="classwx_html_parser_1af32c63cbcc6c42ac522b2aba269a422b" prot="public" virt="virtual"><scope>wxHtmlParser</scope><name>StopParsing</name></member>
      <member refid="classwx_html_parser_1a2c2f4cd486c0bfaee31132b7dfea1387" prot="public" virt="non-virtual"><scope>wxHtmlParser</scope><name>wxHtmlParser</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
