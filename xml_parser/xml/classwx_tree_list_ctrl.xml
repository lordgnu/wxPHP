<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_tree_list_ctrl" kind="class" prot="public">
    <compoundname>wxTreeListCtrl</compoundname>
    <basecompoundref refid="classwx_window" prot="public" virt="non-virtual">wxWindow</basecompoundref>
    <includes local="no">wx/treelist.h</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="variable" id="classwx_tree_list_ctrl_1a68f097e2bed86c69817fc6841a8e6ebb" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int wxTreeListCtrl::NO_IMAGE</definition>
        <argsstring></argsstring>
        <name>NO_IMAGE</name>
        <initializer> -1</initializer>
        <briefdescription>
<para>Image list methods. </para>        </briefdescription>
        <detaileddescription>
<para>Like <ref refid="classwx_tree_ctrl" kindref="compound">wxTreeCtrl</ref> and <ref refid="classwx_list_ctrl" kindref="compound">wxListCtrl</ref> this class uses <ref refid="classwx_image_list" kindref="compound">wxImageList</ref> so if you intend to use item icons with it, you must construct <ref refid="classwx_image_list" kindref="compound">wxImageList</ref> containing them first and then specify the indices of the icons in this image list when adding the items later. A constant indicating that no image should be used for an item. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="282" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1aec3d84f8fa4122f9aa5dd6a90106514c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeListCtrl::AssignImageList</definition>
        <argsstring>(wxImageList *imageList)</argsstring>
        <name>AssignImageList</name>
        <param>
          <type><ref refid="classwx_image_list" kindref="compound">wxImageList</ref> *</type>
          <declname>imageList</declname>
        </param>
        <briefdescription>
<para>Sets the image list and gives its ownership to the control. </para>        </briefdescription>
        <detaileddescription>
<para>The image list assigned with this method will be automatically deleted by <ref refid="classwx_tree_ctrl" kindref="compound">wxTreeCtrl</ref> as appropriate (i.e. it takes ownership of the list).</para><para><simplesect kind="see"><para><ref refid="classwx_tree_list_ctrl_1a2a9d3607f9e507f50187080518ab5d3d" kindref="member">SetImageList()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="292"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a2a9d3607f9e507f50187080518ab5d3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeListCtrl::SetImageList</definition>
        <argsstring>(wxImageList *imageList)</argsstring>
        <name>SetImageList</name>
        <param>
          <type><ref refid="classwx_image_list" kindref="compound">wxImageList</ref> *</type>
          <declname>imageList</declname>
        </param>
        <briefdescription>
<para>Sets the image list. </para>        </briefdescription>
        <detaileddescription>
<para>The image list assigned with this method will <bold>not</bold> be deleted by the control itself and you will need to delete it yourself, use <ref refid="classwx_tree_list_ctrl_1aec3d84f8fa4122f9aa5dd6a90106514c" kindref="member">AssignImageList()</ref> to give the image list ownership to the control.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>imageList</parametername>
</parameternamelist>
<parameterdescription>
<para>Image list to use, may be NULL to not show any images any more. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="304"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a8464b3bf449606d5da7849be6b0986a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxTreeListCtrl::AppendColumn</definition>
        <argsstring>(const wxString &amp;title, int width=wxCOL_WIDTH_AUTOSIZE, wxAlignment align=wxALIGN_LEFT, int flags=wxCOL_RESIZABLE)</argsstring>
        <name>AppendColumn</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>title</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>wxCOL_WIDTH_AUTOSIZE</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9" kindref="member">wxAlignment</ref></type>
          <declname>align</declname>
          <defval>wxALIGN_LEFT</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>wxCOL_RESIZABLE</defval>
        </param>
        <briefdescription>
<para>Column methods. </para>        </briefdescription>
        <detaileddescription>
<para>Add a column with the given title and attributes.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>The column label. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>The width of the column in pixels or the special wxCOL_WIDTH_AUTOSIZE value indicating that the column should adjust to its contents. Notice that the first column is special and will be always resized to fill all the space not taken by the other columns, i.e. the width specified here is ignored for it. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment of both the column header and its items. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Column flags, currently can include wxCOL_RESIZABLE to allow the user to resize the column and wxCOL_SORTABLE to allow the user to resort the control contents by clicking on this column. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Index of the new column or -1 on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="337"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a6dac51d39a03d3309a2578025a8d3b62" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned wxTreeListCtrl::GetColumnCount</definition>
        <argsstring>() const </argsstring>
        <name>GetColumnCount</name>
        <briefdescription>
<para>Return the total number of columns. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="340"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1aab16d6cf0e386432da7ca7b97166b155" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTreeListCtrl::DeleteColumn</definition>
        <argsstring>(unsigned col)</argsstring>
        <name>DeleteColumn</name>
        <param>
          <type>unsigned</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Delete the column with the given index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>Column index in 0 to <ref refid="classwx_tree_list_ctrl_1a6dac51d39a03d3309a2578025a8d3b62" kindref="member">GetColumnCount()</ref> (exclusive) range. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the column was deleted, false if index is invalid or deleting the column failed for some other reason. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="351"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1aa2eb8bfe9d49270b720b902b42a2ed98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeListCtrl::ClearColumns</definition>
        <argsstring>()</argsstring>
        <name>ClearColumns</name>
        <briefdescription>
<para>Delete all columns. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_tree_list_ctrl_1aaed015b3a0dbafc634f4c11c35beb250" kindref="member">DeleteAllItems()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="358"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a00be78623a0479287a0eaf974dd398eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeListCtrl::SetColumnWidth</definition>
        <argsstring>(unsigned col, int width)</argsstring>
        <name>SetColumnWidth</name>
        <param>
          <type>unsigned</type>
          <declname>col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
<para>Change the width of the given column. </para>        </briefdescription>
        <detaileddescription>
<para>Set column width to either the given value in pixels or to the value large enough to fit all of the items if width is wxCOL_WIDTH_AUTOSIZE.</para><para>Notice that setting the width of the first column is ignored as this column is always resized to fill the space left by the other columns. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="369"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a17409751eb4a1a0b36b07b191b5ee0d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxTreeListCtrl::GetColumnWidth</definition>
        <argsstring>(unsigned col) const </argsstring>
        <name>GetColumnWidth</name>
        <param>
          <type>unsigned</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Get the current width of the given column in pixels. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="372"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a891473692a6a6caf55ba767830c85c73" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxTreeListCtrl::WidthFor</definition>
        <argsstring>(const wxString &amp;text) const </argsstring>
        <name>WidthFor</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Get the width appropriate for showing the given text. </para>        </briefdescription>
        <detaileddescription>
<para>This is typically used as second argument for <ref refid="classwx_tree_list_ctrl_1a8464b3bf449606d5da7849be6b0986a5" kindref="member">AppendColumn()</ref> or with <ref refid="classwx_tree_list_ctrl_1a00be78623a0479287a0eaf974dd398eb" kindref="member">SetColumnWidth()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="380"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a35b2d82789812c71ac0a724396ef21ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
        <definition>wxTreeListItem wxTreeListCtrl::AppendItem</definition>
        <argsstring>(wxTreeListItem parent, const wxString &amp;text, int imageClosed=NO_IMAGE, int imageOpened=NO_IMAGE, wxClientData *data=NULL)</argsstring>
        <name>AppendItem</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>imageClosed</declname>
          <defval><ref refid="classwx_tree_list_ctrl_1a68f097e2bed86c69817fc6841a8e6ebb" kindref="member">NO_IMAGE</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>imageOpened</declname>
          <defval><ref refid="classwx_tree_list_ctrl_1a68f097e2bed86c69817fc6841a8e6ebb" kindref="member">NO_IMAGE</ref></defval>
        </param>
        <param>
          <type><ref refid="classwx_client_data" kindref="compound">wxClientData</ref> *</type>
          <declname>data</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Adding and removing items. </para>        </briefdescription>
        <detaileddescription>
<para>When adding items, the parent and text of the first column of the new item must always be specified, the rest is optional.</para><para>Each item can have two images: one used for closed state and another for opened one. Only the first one is ever used for the items that don&apos;t have children. And both are not set by default.</para><para>It is also possible to associate arbitrary client data pointer with the new item. It will be deleted by the control when the item is deleted (either by an explicit <ref refid="classwx_tree_list_ctrl_1a641f3ba4077db8bb3833b5f712f852cd" kindref="member">DeleteItem()</ref> call or because the entire control is destroyed). Same as <ref refid="classwx_tree_list_ctrl_1afbb4d0ca4e914ecaa96ce26bfa083018" kindref="member">InsertItem()</ref> with wxTLI_LAST. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="407"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1afbb4d0ca4e914ecaa96ce26bfa083018" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
        <definition>wxTreeListItem wxTreeListCtrl::InsertItem</definition>
        <argsstring>(wxTreeListItem parent, wxTreeListItem previous, const wxString &amp;text, int imageClosed=NO_IMAGE, int imageOpened=NO_IMAGE, wxClientData *data=NULL)</argsstring>
        <name>InsertItem</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>previous</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>imageClosed</declname>
          <defval><ref refid="classwx_tree_list_ctrl_1a68f097e2bed86c69817fc6841a8e6ebb" kindref="member">NO_IMAGE</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>imageOpened</declname>
          <defval><ref refid="classwx_tree_list_ctrl_1a68f097e2bed86c69817fc6841a8e6ebb" kindref="member">NO_IMAGE</ref></defval>
        </param>
        <param>
          <type><ref refid="classwx_client_data" kindref="compound">wxClientData</ref> *</type>
          <declname>data</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Insert a new item into the tree. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>The item parent. Must be valid, may be <ref refid="classwx_tree_list_ctrl_1a6714b7cf9b2c76a8a5bec5a60b51664c" kindref="member">GetRootItem()</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>previous</parametername>
</parameternamelist>
<parameterdescription>
<para>The previous item that this one should be inserted immediately after. It must be valid but may be one of the special values wxTLI_FIRST or wxTLI_LAST indicating that the item should be either inserted before the first child of its parent (if any) or after the last one. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>imageClosed</parametername>
</parameternamelist>
<parameterdescription>
<para>The normal item image, may be NO_IMAGE to not show any image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>imageOpened</parametername>
</parameternamelist>
<parameterdescription>
<para>The item image shown when it&apos;s in the expanded state. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional client data pointer that can be later retrieved using <ref refid="classwx_tree_list_ctrl_1a34cfeffaed0bea603c77359f22dcaeab" kindref="member">GetItemData()</ref> and will be deleted by the tree when the item itself is deleted. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="434"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1ac8e5e8796c0c7cf2233919578b49add5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
        <definition>wxTreeListItem wxTreeListCtrl::PrependItem</definition>
        <argsstring>(wxTreeListItem parent, const wxString &amp;text, int imageClosed=NO_IMAGE, int imageOpened=NO_IMAGE, wxClientData *data=NULL)</argsstring>
        <name>PrependItem</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>imageClosed</declname>
          <defval><ref refid="classwx_tree_list_ctrl_1a68f097e2bed86c69817fc6841a8e6ebb" kindref="member">NO_IMAGE</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>imageOpened</declname>
          <defval><ref refid="classwx_tree_list_ctrl_1a68f097e2bed86c69817fc6841a8e6ebb" kindref="member">NO_IMAGE</ref></defval>
        </param>
        <param>
          <type><ref refid="classwx_client_data" kindref="compound">wxClientData</ref> *</type>
          <declname>data</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Same as <ref refid="classwx_tree_list_ctrl_1afbb4d0ca4e914ecaa96ce26bfa083018" kindref="member">InsertItem()</ref> with wxTLI_FIRST. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="441"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a641f3ba4077db8bb3833b5f712f852cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeListCtrl::DeleteItem</definition>
        <argsstring>(wxTreeListItem item)</argsstring>
        <name>DeleteItem</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Delete the specified item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="444"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1aaed015b3a0dbafc634f4c11c35beb250" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeListCtrl::DeleteAllItems</definition>
        <argsstring>()</argsstring>
        <name>DeleteAllItems</name>
        <briefdescription>
<para>Delete all tree items. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="447"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a6714b7cf9b2c76a8a5bec5a60b51664c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
        <definition>wxTreeListItem wxTreeListCtrl::GetRootItem</definition>
        <argsstring>() const </argsstring>
        <name>GetRootItem</name>
        <briefdescription>
<para>Methods for the tree navigation. </para>        </briefdescription>
        <detaileddescription>
<para>The tree has an invisible root item which is the hidden parent of all top-level items in the tree. Starting from it it is possible to iterate over all tree items using <ref refid="classwx_tree_list_ctrl_1a899f7e91ef48f1f0bdb5e2f810c37947" kindref="member">GetNextItem()</ref>.</para><para>It is also possible to iterate over just the children of the given item by using <ref refid="classwx_tree_list_ctrl_1a16e904a51e7ed252bd331a8cc7332167" kindref="member">GetFirstChild()</ref> to get the first of them and then calling <ref refid="classwx_tree_list_ctrl_1a3927959341377f1861b3b0c7dd7054b7" kindref="member">GetNextSibling()</ref> to retrieve all the others. Return the (never shown) root item. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="466"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1ab7360273d360f779c4f31d6e08917f09" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
        <definition>wxTreeListItem wxTreeListCtrl::GetItemParent</definition>
        <argsstring>(wxTreeListItem item) const </argsstring>
        <name>GetItemParent</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Return the parent of the given item. </para>        </briefdescription>
        <detaileddescription>
<para>All the tree items visible in the tree have valid parent items, only the never shown root item has no parent. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="474"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a16e904a51e7ed252bd331a8cc7332167" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
        <definition>wxTreeListItem wxTreeListCtrl::GetFirstChild</definition>
        <argsstring>(wxTreeListItem item) const </argsstring>
        <name>GetFirstChild</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Return the first child of the given item. </para>        </briefdescription>
        <detaileddescription>
<para>Item may be the root item.</para><para>Return value may be invalid if the item doesn&apos;t have any children. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="483"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a3927959341377f1861b3b0c7dd7054b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
        <definition>wxTreeListItem wxTreeListCtrl::GetNextSibling</definition>
        <argsstring>(wxTreeListItem item) const </argsstring>
        <name>GetNextSibling</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Return the next sibling of the given item. </para>        </briefdescription>
        <detaileddescription>
<para>Return value may be invalid if there are no more siblings. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="490"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a5840ec74e9cb0e1790d5412e27e223a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
        <definition>wxTreeListItem wxTreeListCtrl::GetFirstItem</definition>
        <argsstring>() const </argsstring>
        <name>GetFirstItem</name>
        <briefdescription>
<para>Return the first item in the tree. </para>        </briefdescription>
        <detaileddescription>
<para>This is the first child of the root item.</para><para><simplesect kind="see"><para><ref refid="classwx_tree_list_ctrl_1a899f7e91ef48f1f0bdb5e2f810c37947" kindref="member">GetNextItem()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="499"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a899f7e91ef48f1f0bdb5e2f810c37947" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
        <definition>wxTreeListItem wxTreeListCtrl::GetNextItem</definition>
        <argsstring>(wxTreeListItem item) const </argsstring>
        <name>GetNextItem</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Get item after the given one in the depth-first tree-traversal order. </para>        </briefdescription>
        <detaileddescription>
<para>Calling this function starting with the result of <ref refid="classwx_tree_list_ctrl_1a5840ec74e9cb0e1790d5412e27e223a5" kindref="member">GetFirstItem()</ref> allows iterating over all items in the tree.</para><para>The iteration stops when this function returns an invalid item, i.e. <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classwx_tree_list_item" kindref="compound" tooltip="Unique identifier of an item in wxTreeListCtrl.">wxTreeListItem</ref><sp/>item<sp/>=<sp/>tree-&gt;GetFirstItem();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item.<ref refid="classwx_tree_list_item_1a61666cb8d9e60edbb723cda61a51283a" kindref="member" tooltip="Return true if the item is valid.">IsOk</ref>();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>tree-&gt;GetNextItem(item)<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...<sp/>Do<sp/>something<sp/>with<sp/>every<sp/>tree<sp/>item<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="517"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_tree_list_ctrl_1aaadfd7cba3fd4f873909bf73e078181a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>const wxString&amp; wxTreeListCtrl::GetItemText</definition>
        <argsstring>(wxTreeListItem item, unsigned col=0) const </argsstring>
        <name>GetItemText</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>item</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>col</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Items attributes. </para>        </briefdescription>
        <detaileddescription>
<para>Return the text of the given item.</para><para>By default, returns the text of the first column but any other one can be specified using <emphasis>col</emphasis> argument. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="533"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1ac99e85e6bd92f49b6260a3cc00c35c08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeListCtrl::SetItemText</definition>
        <argsstring>(wxTreeListItem item, unsigned col, const wxString &amp;text)</argsstring>
        <name>SetItemText</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>item</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>col</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Set the text of the specified column of the given item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="538"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a3930c806491f9670be6389def929219e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeListCtrl::SetItemText</definition>
        <argsstring>(wxTreeListItem item, const wxString &amp;text)</argsstring>
        <name>SetItemText</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>item</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Set the text of the first column of the given item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="543"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a23e02e87b4affb685d6ff4b50af3b10f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeListCtrl::SetItemImage</definition>
        <argsstring>(wxTreeListItem item, int closed, int opened=NO_IMAGE)</argsstring>
        <name>SetItemImage</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>item</declname>
        </param>
        <param>
          <type>int</type>
          <declname>closed</declname>
        </param>
        <param>
          <type>int</type>
          <declname>opened</declname>
          <defval><ref refid="classwx_tree_list_ctrl_1a68f097e2bed86c69817fc6841a8e6ebb" kindref="member">NO_IMAGE</ref></defval>
        </param>
        <briefdescription>
<para>Set the images for the given item. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_tree_list_ctrl_1afbb4d0ca4e914ecaa96ce26bfa083018" kindref="member">InsertItem()</ref> for the images parameters descriptions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="550"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a34cfeffaed0bea603c77359f22dcaeab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_client_data" kindref="compound">wxClientData</ref> *</type>
        <definition>wxClientData* wxTreeListCtrl::GetItemData</definition>
        <argsstring>(wxTreeListItem item) const </argsstring>
        <name>GetItemData</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Get the data associated with the given item. </para>        </briefdescription>
        <detaileddescription>
<para>The returned pointer may be NULL.</para><para>It must not be deleted by the caller as this will be done by the control itself. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="560"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a9ed2a69d8cd5ffb4668aaa35b5163351" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeListCtrl::SetItemData</definition>
        <argsstring>(wxTreeListItem item, wxClientData *data)</argsstring>
        <name>SetItemData</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="classwx_client_data" kindref="compound">wxClientData</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Set the data associated with the given item. </para>        </briefdescription>
        <detaileddescription>
<para>Previous client data, if any, is deleted when this function is called so it may be used to delete the current item data object and reset it by passing NULL as <emphasis>data</emphasis> argument. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="569"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a2d448f6124e09e022cb8b67a39f67bfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeListCtrl::Expand</definition>
        <argsstring>(wxTreeListItem item)</argsstring>
        <name>Expand</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Expanding and collapsing tree branches. </para>        </briefdescription>
        <detaileddescription>
<para>Notice that calling neither <ref refid="classwx_tree_list_ctrl_1a2d448f6124e09e022cb8b67a39f67bfa" kindref="member">Expand()</ref> nor <ref refid="classwx_tree_list_ctrl_1adac4372b08ada5e888bba55164eb96ba" kindref="member">Collapse()</ref> method generates any events. Expand the given tree branch. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="585"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1adac4372b08ada5e888bba55164eb96ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeListCtrl::Collapse</definition>
        <argsstring>(wxTreeListItem item)</argsstring>
        <name>Collapse</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Collapse the given tree branch. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="590"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1ab7ac8b9aedec508c93d2532a60e1855b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTreeListCtrl::IsExpanded</definition>
        <argsstring>(wxTreeListItem item) const </argsstring>
        <name>IsExpanded</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Return whether the given item is expanded. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="595"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_tree_list_ctrl_1ae03092aec1d5ed3bc059833b03e9e5e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
        <definition>wxTreeListItem wxTreeListCtrl::GetSelection</definition>
        <argsstring>() const </argsstring>
        <name>GetSelection</name>
        <briefdescription>
<para>Selection methods. </para>        </briefdescription>
        <detaileddescription>
<para>The behaviour of the control is different in single selection mode (the default) and multi-selection mode (if <computeroutput>wxTL_MULTIPLE</computeroutput> was specified when creating it). Not all methods can be used in both modes and some of those that can don&apos;t behave in the same way in two cases. Return the currently selected item.</para><para>This method can&apos;t be used with multi-selection controls, use <ref refid="classwx_tree_list_ctrl_1aeba5d008146780a684741b69a49ee938" kindref="member">GetSelections()</ref> instead.</para><para>The return value may be invalid if no item has been selected yet. Once an item in a single selection control was selected, it will keep a valid selection. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="620"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1aeba5d008146780a684741b69a49ee938" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned wxTreeListCtrl::GetSelections</definition>
        <argsstring>(wxTreeListItems &amp;selections) const </argsstring>
        <name>GetSelections</name>
        <param>
          <type><ref refid="treelist_8h_1a3ec04606155771774c62679b681e7991" kindref="member">wxTreeListItems</ref> &amp;</type>
          <declname>selections</declname>
        </param>
        <briefdescription>
<para>Fill in the provided array with all the selected items. </para>        </briefdescription>
        <detaileddescription>
<para>This method can be used in both single and multi-selection case.</para><para>The previous array contents is destroyed.</para><para>Returns the number of selected items. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="631"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1aefbb76935cf0295c758f559b0ae0d710" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeListCtrl::Select</definition>
        <argsstring>(wxTreeListItem item)</argsstring>
        <name>Select</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Select the given item. </para>        </briefdescription>
        <detaileddescription>
<para>In single selection mode, deselects any other selected items, in multi-selection case it adds to the selection. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="639"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a66d02d9ffa53b582ff8b12c4246a6918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeListCtrl::Unselect</definition>
        <argsstring>(wxTreeListItem item)</argsstring>
        <name>Unselect</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Deselect the given item. </para>        </briefdescription>
        <detaileddescription>
<para>This method can be used in multiple selection mode only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="646"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a6714801b57e4c9988ddc9433fb8eaaff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTreeListCtrl::IsSelected</definition>
        <argsstring>(wxTreeListItem item) const </argsstring>
        <name>IsSelected</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Return true if the item is selected. </para>        </briefdescription>
        <detaileddescription>
<para>This method can be used in both single and multiple selection modes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="653"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a1c3cd2ca3a68462d16e845e6e7521052" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeListCtrl::SelectAll</definition>
        <argsstring>()</argsstring>
        <name>SelectAll</name>
        <briefdescription>
<para>Select all the control items. </para>        </briefdescription>
        <detaileddescription>
<para>Can be only used in multi-selection mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="660"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a33d0d5a9ac453a895bf0469935926dd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeListCtrl::UnselectAll</definition>
        <argsstring>()</argsstring>
        <name>UnselectAll</name>
        <briefdescription>
<para>Deselect all the control items. </para>        </briefdescription>
        <detaileddescription>
<para>Can be only used in multi-selection mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="667"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a322e37f102b928817742fa6911a1407b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeListCtrl::CheckItem</definition>
        <argsstring>(wxTreeListItem item, wxCheckBoxState state=wxCHK_CHECKED)</argsstring>
        <name>CheckItem</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="checkbox_8h_1ab7ff30e019a8312536b5bb723606febf" kindref="member">wxCheckBoxState</ref></type>
          <declname>state</declname>
          <defval>wxCHK_CHECKED</defval>
        </param>
        <briefdescription>
<para>Checkbox handling. </para>        </briefdescription>
        <detaileddescription>
<para>Methods in this section can only be used with the controls created with wxTL_CHECKBOX style. Change the item checked state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>Valid non-root tree item. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>One of wxCHK_CHECKED, wxCHK_UNCHECKED or, for the controls with wxTL_3STATE or wxTL_USER_3STATE styles, wxCHK_UNDETERMINED. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="689"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1aada8dfa2eaeb57a5762aa840f4273da7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeListCtrl::CheckItemRecursively</definition>
        <argsstring>(wxTreeListItem item, wxCheckBoxState state=wxCHK_CHECKED)</argsstring>
        <name>CheckItemRecursively</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="checkbox_8h_1ab7ff30e019a8312536b5bb723606febf" kindref="member">wxCheckBoxState</ref></type>
          <declname>state</declname>
          <defval>wxCHK_CHECKED</defval>
        </param>
        <briefdescription>
<para>Change the checked state of the given item and all its children. </para>        </briefdescription>
        <detaileddescription>
<para>This is the same as <ref refid="classwx_tree_list_ctrl_1a322e37f102b928817742fa6911a1407b" kindref="member">CheckItem()</ref> but checks or unchecks not only this item itself but all its children recursively as well. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="698"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1abe354d6c31159b431eb489f06320d783" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeListCtrl::UncheckItem</definition>
        <argsstring>(wxTreeListItem item)</argsstring>
        <name>UncheckItem</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Uncheck the given item. </para>        </briefdescription>
        <detaileddescription>
<para>This is synonymous with CheckItem(wxCHK_UNCHECKED). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="705"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1afae0fb8696ebb71fab8f5c7c22170ad0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeListCtrl::UpdateItemParentStateRecursively</definition>
        <argsstring>(wxTreeListItem item)</argsstring>
        <name>UpdateItemParentStateRecursively</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Update the state of the parent item to reflect the checked state of its children. </para>        </briefdescription>
        <detaileddescription>
<para>This method updates the parent of this item recursively: if this item and all its siblings are checked, the parent will become checked as well. If this item and all its siblings are unchecked, the parent will be unchecked. And if the siblings of this item are not all in the same state, the parent will be switched to indeterminate state. And then the same logic will be applied to the parents parent and so on recursively.</para><para>This is typically called when the state of the given item has changed from EVT_TREELIST_ITEM_CHECKED() handler in the controls which have wxTL_3STATE flag. Notice that without this flag this function can&apos;t work as it would be unable to set the state of a parent with both checked and unchecked items so it&apos;s only allowed to call it when this flag is set. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="725"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a6226030a1caa9aac745865f2eaa05589" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="checkbox_8h_1ab7ff30e019a8312536b5bb723606febf" kindref="member">wxCheckBoxState</ref></type>
        <definition>wxCheckBoxState wxTreeListCtrl::GetCheckedState</definition>
        <argsstring>(wxTreeListItem item) const </argsstring>
        <name>GetCheckedState</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Return the checked state of the item. </para>        </briefdescription>
        <detaileddescription>
<para>The return value can be wxCHK_CHECKED, wxCHK_UNCHECKED or wxCHK_UNDETERMINED. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="733"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a862f11b06cf5336108e3a6d2bb0c0d48" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTreeListCtrl::AreAllChildrenInState</definition>
        <argsstring>(wxTreeListItem item, wxCheckBoxState state) const </argsstring>
        <name>AreAllChildrenInState</name>
        <param>
          <type><ref refid="classwx_tree_list_item" kindref="compound">wxTreeListItem</ref></type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="checkbox_8h_1ab7ff30e019a8312536b5bb723606febf" kindref="member">wxCheckBoxState</ref></type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Return true if all children of the given item are in the specified state. </para>        </briefdescription>
        <detaileddescription>
<para>This is especially useful for the controls with <computeroutput>wxTL_3STATE</computeroutput> style to allow to decide whether the parent effective state should be the same <emphasis>state</emphasis>, if all its children are in it, or <ref refid="checkbox_8h_1ab7ff30e019a8312536b5bb723606febfa90a7e8fc8f8943d8df2f0731581b9f3c" kindref="member">wxCHK_UNDETERMINED</ref>.</para><para><simplesect kind="see"><para><ref refid="classwx_tree_list_ctrl_1afae0fb8696ebb71fab8f5c7c22170ad0" kindref="member">UpdateItemParentStateRecursively()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="746"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_tree_list_ctrl_1af8a7315bd7efcf57971bed41337918a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeListCtrl::SetSortColumn</definition>
        <argsstring>(unsigned col, bool ascendingOrder=true)</argsstring>
        <name>SetSortColumn</name>
        <param>
          <type>unsigned</type>
          <declname>col</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ascendingOrder</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Sorting. </para>        </briefdescription>
        <detaileddescription>
<para>If some control columns were added with wxCOL_SORTABLE flag, clicking on them will automatically resort the control using the custom comparator set by <ref refid="classwx_tree_list_ctrl_1addcdef889d35ca918f1a0303cc6ef751" kindref="member">SetItemComparator()</ref> or by doing alphabetical comparison by default.</para><para>In any case, i.e. even if the user can&apos;t sort the control by clicking on its header, you may call <ref refid="classwx_tree_list_ctrl_1af8a7315bd7efcf57971bed41337918a1" kindref="member">SetSortColumn()</ref> to sort it programmatically and call <ref refid="classwx_tree_list_ctrl_1a707c2f1d1f2eee8bcb207e007ed54e68" kindref="member">GetSortColumn()</ref> to determine whether it&apos;s sorted now and, if so, by which column and in which order. Set the column to use for sorting and the order in which to sort.</para><para>Calling this method resorts the control contents using the values of the items in the specified column. Sorting uses custom comparator set with <ref refid="classwx_tree_list_ctrl_1addcdef889d35ca918f1a0303cc6ef751" kindref="member">SetItemComparator()</ref> or alphabetical comparison of items texts if none was specified.</para><para>Notice that currently there is no way to reset sort order.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid column index. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ascendingOrder</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates whether the items should be sorted in ascending (A to Z) or descending (Z to A) order. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="781"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a707c2f1d1f2eee8bcb207e007ed54e68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTreeListCtrl::GetSortColumn</definition>
        <argsstring>(unsigned *col, bool *ascendingOrder=NULL)</argsstring>
        <name>GetSortColumn</name>
        <param>
          <type>unsigned *</type>
          <declname>col</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>ascendingOrder</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Return the column currently used for sorting, if any. </para>        </briefdescription>
        <detaileddescription>
<para>If the control is currently unsorted, the function simply returns false and doesn&apos;t modify any of its output parameters.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the index of the column used for sorting if non-NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ascendingOrder</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives true or false depending on whether the items are sorted in ascending or descending order. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the control is sorted or false if it isn&apos;t sorted at all. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="797"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1addcdef889d35ca918f1a0303cc6ef751" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeListCtrl::SetItemComparator</definition>
        <argsstring>(wxTreeListItemComparator *comparator)</argsstring>
        <name>SetItemComparator</name>
        <param>
          <type><ref refid="classwx_tree_list_item_comparator" kindref="compound">wxTreeListItemComparator</ref> *</type>
          <declname>comparator</declname>
        </param>
        <briefdescription>
<para>Set the object to use for comparing the items. </para>        </briefdescription>
        <detaileddescription>
<para>This object will be used when the control is being sorted because the user clicked on a sortable column or <ref refid="classwx_tree_list_ctrl_1af8a7315bd7efcf57971bed41337918a1" kindref="member">SetSortColumn()</ref> was called.</para><para>The provided pointer is stored by the control so the object it points to must have a life-time equal or greater to that of the control itself. In addition, the pointer can be NULL to stop using custom comparator and revert to the default alphabetical comparison. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="810"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a11ecb0a29ca28b61737b1e10619ff875" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
        <definition>wxWindow* wxTreeListCtrl::GetView</definition>
        <argsstring>() const </argsstring>
        <name>GetView</name>
        <briefdescription>
<para>View window. </para>        </briefdescription>
        <detaileddescription>
<para>This control itself is entirely covered by the &quot;view window&quot; which is currently a <ref refid="classwx_data_view_ctrl" kindref="compound">wxDataViewCtrl</ref> but if you want to avoid relying on this to allow your code to work with later versions which might not be wxDataViewCtrl-based, use <ref refid="classwx_tree_list_ctrl_1a11ecb0a29ca28b61737b1e10619ff875" kindref="member">GetView()</ref> function only and only use <ref refid="classwx_tree_list_ctrl_1abb79ba2a401a85896f67895f0eadbba8" kindref="member">GetDataView()</ref> if you really need to call <ref refid="classwx_data_view_ctrl" kindref="compound">wxDataViewCtrl</ref> methods on it. Return the view part of this control as a <ref refid="classwx_window" kindref="compound">wxWindow</ref>.</para><para>This method always returns non-NULL pointer once the window was created. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="832"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1abb79ba2a401a85896f67895f0eadbba8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_ctrl" kindref="compound">wxDataViewCtrl</ref> *</type>
        <definition>wxDataViewCtrl* wxTreeListCtrl::GetDataView</definition>
        <argsstring>() const </argsstring>
        <name>GetDataView</name>
        <briefdescription>
<para>Return the view part of this control as <ref refid="classwx_data_view_ctrl" kindref="compound">wxDataViewCtrl</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>This method may return NULL in the future, non wxDataViewCtrl-based, versions of this class, use <ref refid="classwx_tree_list_ctrl_1a11ecb0a29ca28b61737b1e10619ff875" kindref="member">GetView()</ref> unless you really need to use <ref refid="classwx_data_view_ctrl" kindref="compound">wxDataViewCtrl</ref> methods on the returned object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="841"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_tree_list_ctrl_1a844c05440a63f6cf04b36aab91e9449e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxTreeListCtrl::wxTreeListCtrl</definition>
        <argsstring>()</argsstring>
        <name>wxTreeListCtrl</name>
        <briefdescription>
<para>Default constructor, call <ref refid="classwx_tree_list_ctrl_1aca79c6e9b0f49eac98450d8104de8c95" kindref="member">Create()</ref> later. </para>        </briefdescription>
        <detaileddescription>
<para>This constructor is used during two-part construction process when it is impossible or undesirable to create the window when constructing the object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="230"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1aafa1dff7beddda23c685f1c19c68aefb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxTreeListCtrl::wxTreeListCtrl</definition>
        <argsstring>(wxWindow *parent, wxWindowID id, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=wxTL_DEFAULT_STYLE, const wxString &amp;name=wxTreeListCtrlNameStr)</argsstring>
        <name>wxTreeListCtrl</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="windowid_8h_1ae8091432cc2cb2485d45f2302fb51133" kindref="member">wxWindowID</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pos</declname>
          <defval><ref refid="gdicmn_8h_1af5a90c753eaf3d3e3e5068a19ec3c1d0" kindref="member">wxDefaultPosition</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
          <defval><ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref></defval>
        </param>
        <param>
          <type>long</type>
          <declname>style</declname>
          <defval>wxTL_DEFAULT_STYLE</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
          <defval>wxTreeListCtrlNameStr</defval>
        </param>
        <briefdescription>
<para>Full constructing, creating the object and its window. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_tree_list_ctrl_1aca79c6e9b0f49eac98450d8104de8c95" kindref="member">Create()</ref> for the parameters description. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="242"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_list_ctrl_1aca79c6e9b0f49eac98450d8104de8c95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTreeListCtrl::Create</definition>
        <argsstring>(wxWindow *parent, wxWindowID id, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=wxTL_DEFAULT_STYLE, const wxString &amp;name=wxTreeListCtrlNameStr)</argsstring>
        <name>Create</name>
        <reimplements refid="classwx_window_1a95b7ca8faa033f5ab35458887c07bf38">Create</reimplements>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="windowid_8h_1ae8091432cc2cb2485d45f2302fb51133" kindref="member">wxWindowID</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pos</declname>
          <defval><ref refid="gdicmn_8h_1af5a90c753eaf3d3e3e5068a19ec3c1d0" kindref="member">wxDefaultPosition</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
          <defval><ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref></defval>
        </param>
        <param>
          <type>long</type>
          <declname>style</declname>
          <defval>wxTL_DEFAULT_STYLE</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
          <defval>wxTreeListCtrlNameStr</defval>
        </param>
        <briefdescription>
<para>Create the control window. </para>        </briefdescription>
        <detaileddescription>
<para>Can be only called for the objects created using the default constructor and exactly once.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent window, must be non-NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The window identifier, may be <ref refid="defs_8h_1ac66d0a09761e7d86b2ac0b2e0c6a8cbba1f375b01ea03a713bbb7e32a36a2589c" kindref="member">wxID_ANY</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial window position, usually unused. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial window size, usually unused. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>The window style, see their description in the class documentation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the window. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="268"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A control combining <ref refid="classwx_tree_ctrl" kindref="compound">wxTreeCtrl</ref> and <ref refid="classwx_list_ctrl" kindref="compound">wxListCtrl</ref> features. </para>    </briefdescription>
    <detaileddescription>
<para>This is a multi-column tree control optionally supporting images and checkboxes for the items in the first column.</para><para>It is currently implemented using <ref refid="classwx_data_view_ctrl" kindref="compound">wxDataViewCtrl</ref> internally but provides a much simpler interface for the common use case it addresses. Thus, one of the design principles for this control is simplicity and intentionally doesn&apos;t provide all the features of <ref refid="classwx_data_view_ctrl" kindref="compound">wxDataViewCtrl</ref>. Most importantly, this class stores all its data internally and doesn&apos;t require you to define a custom model for it.</para><para>Instead, this controls works like <ref refid="classwx_tree_ctrl" kindref="compound">wxTreeCtrl</ref> or non-virtual <ref refid="classwx_list_ctrl" kindref="compound">wxListCtrl</ref> and allows you to simply add items to it using <ref refid="classwx_tree_list_ctrl_1a35b2d82789812c71ac0a724396ef21ee" kindref="member">wxTreeListCtrl::AppendItem()</ref> and related methods. Typically, you start by setting up the columns (you must have at least one) by calling <ref refid="classwx_tree_list_ctrl_1a8464b3bf449606d5da7849be6b0986a5" kindref="member">wxTreeListCtrl::AppendColumn()</ref> and then add the items. While only the text of the first column can be specified when adding them, you can use <ref refid="classwx_tree_list_ctrl_1ac99e85e6bd92f49b6260a3cc00c35c08" kindref="member">wxTreeListCtrl::SetItemText()</ref> to set the text of the other columns.</para><para>Unlike <ref refid="classwx_tree_ctrl" kindref="compound">wxTreeCtrl</ref> or <ref refid="classwx_list_ctrl" kindref="compound">wxListCtrl</ref> this control can sort its items on its own. To allow user to sort the control contents by clicking on some column you should use wxCOL_SORTABLE flag when adding that column to the control. When a column with this flag is clicked, the control resorts itself using the values in this column. By default the sort is done using alphabetical order comparison of the items text, which is not always correct (e.g. this doesn&apos;t work for the numeric columns). To change this you may use <ref refid="classwx_tree_list_ctrl_1addcdef889d35ca918f1a0303cc6ef751" kindref="member">SetItemComparator()</ref> method to provide a custom comparator, i.e. simply an object that implements comparison between the two items. The treelist sample shows an example of doing this. And if you need to sort the control programmatically, you can call <ref refid="classwx_tree_list_ctrl_1af8a7315bd7efcf57971bed41337918a1" kindref="member">SetSortColumn()</ref> method.</para><para>Here are the styles supported by this control. Notice that using wxTL_USER_3STATE implies wxTL_3STATE and wxTL_3STATE in turn implies wxTL_CHECKBOX.</para><para><heading level="2">Styles</heading>
</para><para>This class supports the following styles: <itemizedlist>
<listitem><para>wxTL_SINGLE: Single selection, this is the default. </para></listitem>
<listitem><para>wxTL_MULTIPLE: Allow multiple selection, see <ref refid="classwx_tree_list_ctrl_1aeba5d008146780a684741b69a49ee938" kindref="member">GetSelections()</ref>. </para></listitem>
<listitem><para>wxTL_CHECKBOX: Show the usual, 2 state, checkboxes for the items in the first column. </para></listitem>
<listitem><para>wxTL_3STATE: Show the checkboxes that can possibly be set by the program, but not the user, to a third, undetermined, state, for the items in the first column. Implies wxTL_CHECKBOX. </para></listitem>
<listitem><para>wxTL_USER_3STATE: Same as wxTL_3STATE but the user can also set the checkboxes to the undetermined state. Implies wxTL_3STATE. </para></listitem>
<listitem><para>wxTL_DEFAULT_STYLE: Style used by the control by default, just wxTL_SINGLE currently. </para></listitem>
</itemizedlist>
<heading level="2">Events using this class</heading>
</para><para>The following event handler macros redirect the events to member function handlers &apos;<bold>func</bold>&apos; with prototypes like: void<nonbreakablespace/>handlerFuncName(<ref refid="classwx_tree_list_event" kindref="compound">wxTreeListEvent</ref>&amp;<nonbreakablespace/>event)Event macros: <itemizedlist>
<listitem><para>EVT_TREELIST_SELECTION_CHANGED(id,  func): Process <computeroutput>wxEVT_COMMAND_TREELIST_SELECTION_CHANGED</computeroutput> event and notifies about the selection change in the control. In the single selection case the item indicated by the event has been selected and previously selected item, if any, was deselected. In multiple selection case, the selection of this item has just changed (it may have been either selected or deselected) but notice that the selection of other items could have changed as well, use <ref refid="classwx_tree_list_ctrl_1aeba5d008146780a684741b69a49ee938" kindref="member">wxTreeListCtrl::GetSelections()</ref> to retrieve the new selection if necessary. </para></listitem>
<listitem><para>EVT_TREELIST_ITEM_EXPANDING(id,  func): Process <computeroutput>wxEVT_COMMAND_TREELIST_ITEM_EXPANDING</computeroutput> event notifying about the given branch being expanded. This event is sent before the expansion occurs and can be vetoed to prevent it from happening. </para></listitem>
<listitem><para>EVT_TREELIST_ITEM_EXPANDED(id,  func): Process <computeroutput>wxEVT_COMMAND_TREELIST_ITEM_EXPANDED</computeroutput> event notifying about the expansion of the given branch. This event is sent after the expansion occurs and can&apos;t be vetoed. </para></listitem>
<listitem><para>EVT_TREELIST_ITEM_CHECKED(id,  func): Process <computeroutput>wxEVT_COMMAND_TREELIST_ITEM_CHECKED</computeroutput> event notifying about the user checking or unchecking the item. You can use <ref refid="classwx_tree_list_ctrl_1a6226030a1caa9aac745865f2eaa05589" kindref="member">wxTreeListCtrl::GetCheckedState()</ref> to retrieve the new item state and <ref refid="classwx_tree_list_event_1a3159d398419defcd443c2dc215f6f3eb" kindref="member">wxTreeListEvent::GetOldCheckedState()</ref> to get the previous one. </para></listitem>
<listitem><para>EVT_TREELIST_ITEM_ACTIVATED(id,  func): Process <computeroutput>wxEVT_COMMAND_TREELIST_ITEM_ACTIVATED</computeroutput> event notifying about the user double clicking the item or activating it from keyboard. </para></listitem>
<listitem><para>EVT_TREELIST_ITEM_CONTEXT_MENU(id,  func): Process <computeroutput>wxEVT_COMMAND_TREELIST_ITEM_CONTEXT_MENU</computeroutput> event indicating that the popup menu for the given item should be displayed. </para></listitem>
<listitem><para>EVT_TREELIST_COLUMN_SORTED(id,  func): Process <computeroutput>wxEVT_COMMAND_TREELIST_COLUMN_SORTED</computeroutput> event indicating that the control contents has just been resorted using the specified column. The event doesn&apos;t carry the sort direction, use <ref refid="classwx_tree_list_ctrl_1a707c2f1d1f2eee8bcb207e007ed54e68" kindref="member">GetSortColumn()</ref> method if you need to know it. </para></listitem>
</itemizedlist>
<heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxadv" kindref="member">wxAdvanced</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__ctrl" kindref="compound">Controls</ref></para><para><simplesect kind="since"><para>2.9.3</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_tree_ctrl" kindref="compound">wxTreeCtrl</ref>, <ref refid="classwx_data_view_ctrl" kindref="compound">wxDataViewCtrl</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="11410">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="11409">
        <label>wxEvtHandler</label>
        <link refid="classwx_evt_handler"/>
        <childnode refid="11410" relation="public-inheritance">
        </childnode>
        <childnode refid="11411" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11411">
        <label>wxTrackable</label>
        <link refid="classwx_trackable"/>
      </node>
      <node id="11408">
        <label>wxWindow</label>
        <link refid="classwx_window"/>
        <childnode refid="11409" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11407">
        <label>wxTreeListCtrl</label>
        <link refid="classwx_tree_list_ctrl"/>
        <childnode refid="11408" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11415">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="11416" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="11414">
        <label>wxEvtHandler</label>
        <link refid="classwx_evt_handler"/>
        <childnode refid="11415" relation="public-inheritance">
        </childnode>
        <childnode refid="11417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11417">
        <label>wxTrackable</label>
        <link refid="classwx_trackable"/>
      </node>
      <node id="11413">
        <label>wxWindow</label>
        <link refid="classwx_window"/>
        <childnode refid="11414" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11412">
        <label>wxTreeListCtrl</label>
        <link refid="classwx_tree_list_ctrl"/>
        <childnode refid="11413" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11416">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" line="221" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/treelist.h" bodystart="220" bodyend="844"/>
    <listofallmembers>
      <member refid="classwx_window_1a3afbd49b1ea2f8275e3600dcac102923" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>AcceptsFocus</name></member>
      <member refid="classwx_window_1a2370bdd3ab08e7ef3c7555c6aa8301b8" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>AcceptsFocusFromKeyboard</name></member>
      <member refid="classwx_window_1ac7ed96693517630f4d2e99265b76d1a9" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>AcceptsFocusRecursively</name></member>
      <member refid="classwx_window_1abf60159278059a5bb397eb8647227bb3" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>AddChild</name></member>
      <member refid="classwx_evt_handler_1a7dc3c701781f4044372049de5004137e" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>AddFilter</name></member>
      <member refid="classwx_window_1a774b5b5548a6258727b5e2099e63ae9a" prot="protected" virt="virtual"><scope>wxTreeListCtrl</scope><name>AddPendingEvent</name></member>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>AllocExclusive</name></member>
      <member refid="classwx_window_1aae29552806a328c6a55ef8f07647f5ba" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>AlwaysShowScrollbars</name></member>
      <member refid="classwx_tree_list_ctrl_1a8464b3bf449606d5da7849be6b0986a5" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>AppendColumn</name></member>
      <member refid="classwx_tree_list_ctrl_1a35b2d82789812c71ac0a724396ef21ee" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>AppendItem</name></member>
      <member refid="classwx_tree_list_ctrl_1a862f11b06cf5336108e3a6d2bb0c0d48" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>AreAllChildrenInState</name></member>
      <member refid="classwx_tree_list_ctrl_1aec3d84f8fa4122f9aa5dd6a90106514c" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>AssignImageList</name></member>
      <member refid="classwx_evt_handler_1a84b1e446053bda8f76f13336839e8b64" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Bind</name></member>
      <member refid="classwx_evt_handler_1a95520e770e157ef93d1d60e03db66e5c" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Bind</name></member>
      <member refid="classwx_window_1a100905524d330cfd9620fd726e378066" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>CacheBestSize</name></member>
      <member refid="classwx_window_1a179f9a770f8c835f279923d2cbe5d766" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>CanScroll</name></member>
      <member refid="classwx_window_1a64f7f6fb75bf4b7281e1d33542d523c7" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>CanSetTransparent</name></member>
      <member refid="classwx_window_1a5c72c6260a73ef77bb0b1f7ec85fcfef" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>CaptureMouse</name></member>
      <member refid="classwx_window_1a06c0ecb262995b40083bfb446a6cff99" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Center</name></member>
      <member refid="classwx_window_1a2dc4e0a85d33fc55cc9650eaea1da0a4" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>CenterOnParent</name></member>
      <member refid="classwx_window_1a4a1819eeee3f2143cdde4f329ffde787" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Centre</name></member>
      <member refid="classwx_window_1ab8e9b91b0e2db344fd71259616dfd433" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>CentreOnParent</name></member>
      <member refid="classwx_tree_list_ctrl_1a322e37f102b928817742fa6911a1407b" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>CheckItem</name></member>
      <member refid="classwx_tree_list_ctrl_1aada8dfa2eaeb57a5762aa840f4273da7" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>CheckItemRecursively</name></member>
      <member refid="classwx_window_1a61e833684ee5c89775e91e88be1a9a52" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>ClearBackground</name></member>
      <member refid="classwx_tree_list_ctrl_1aa2eb8bfe9d49270b720b902b42a2ed98" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>ClearColumns</name></member>
      <member refid="classwx_window_1a29eac611e5f6b47db82bb4dd5450ba3d" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>ClientToScreen</name></member>
      <member refid="classwx_window_1a7de852b144210b93b690189e99dbe1df" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>ClientToScreen</name></member>
      <member refid="classwx_window_1a693fffbbb7ad5f36a5f442703396dafa" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>ClientToWindowSize</name></member>
      <member refid="classwx_object_1a1d39f1d3650fe0982c9a1abe7f9fe7b7" prot="protected" virt="virtual"><scope>wxTreeListCtrl</scope><name>CloneRefData</name></member>
      <member refid="classwx_window_1a3e44f4a494fc9ef4346c4fba70c8de0c" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Close</name></member>
      <member refid="classwx_tree_list_ctrl_1adac4372b08ada5e888bba55164eb96ba" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Collapse</name></member>
      <member refid="classwx_evt_handler_1a78719e8b82c9f9c6e4056b3449df1943" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Connect</name></member>
      <member refid="classwx_evt_handler_1a1e8b5fc4c7e7f6d32d40bc00d4108ba4" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Connect</name></member>
      <member refid="classwx_evt_handler_1aa290d9b67348e74c1da8497955a4e35c" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Connect</name></member>
      <member refid="classwx_window_1acb6787b6c3c314f9e015658a89ad0265" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>ConvertDialogToPixels</name></member>
      <member refid="classwx_window_1a3daf76b93f648c68224e6ccd8095066b" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>ConvertDialogToPixels</name></member>
      <member refid="classwx_window_1a449aac6a24f1d14b1a82b58003447dfe" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>ConvertPixelsToDialog</name></member>
      <member refid="classwx_window_1afd955ce9d25ec26a115bfb794b1c7d8b" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>ConvertPixelsToDialog</name></member>
      <member refid="classwx_tree_list_ctrl_1aca79c6e9b0f49eac98450d8104de8c95" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Create</name></member>
      <member refid="classwx_object_1a95c6a5e4e1e03ff23c7b9efe4cff0c1a" prot="protected" virt="virtual"><scope>wxTreeListCtrl</scope><name>CreateRefData</name></member>
      <member refid="classwx_tree_list_ctrl_1aaed015b3a0dbafc634f4c11c35beb250" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>DeleteAllItems</name></member>
      <member refid="classwx_tree_list_ctrl_1aab16d6cf0e386432da7ca7b97166b155" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>DeleteColumn</name></member>
      <member refid="classwx_tree_list_ctrl_1a641f3ba4077db8bb3833b5f712f852cd" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>DeleteItem</name></member>
      <member refid="classwx_evt_handler_1a6e7f9cf4ebd0623c1d94979855d096f8" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>DeletePendingEvents</name></member>
      <member refid="classwx_window_1a6bf0c5be864544d9ce0560087667b7fc" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>Destroy</name></member>
      <member refid="classwx_window_1aff47b32c8d42d515ea0bb6a6c2fea917" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>DestroyChildren</name></member>
      <member refid="classwx_window_1a26d7329a9a753fa0445501f01f66c41e" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Disable</name></member>
      <member refid="classwx_evt_handler_1a13061cf0ed01ac10a804ac057ef4bdbc" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Disconnect</name></member>
      <member refid="classwx_evt_handler_1a2f171e19444b9c4034c5e11f24fa9c91" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Disconnect</name></member>
      <member refid="classwx_evt_handler_1a16a6f823853e4b74b43dd9a2cf3abee6" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Disconnect</name></member>
      <member refid="classwx_window_1a2d10b472a4962d1c852c83d55252c44b" prot="protected" virt="virtual"><scope>wxTreeListCtrl</scope><name>DoCentre</name></member>
      <member refid="classwx_window_1a01e7604ab0f0b2b1a8e322a630a4669e" prot="protected" virt="virtual"><scope>wxTreeListCtrl</scope><name>DoGetBestSize</name></member>
      <member refid="classwx_window_1ae8a84a80645e99f4d24a22e5c386f626" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>DoUpdateWindowUI</name></member>
      <member refid="classwx_window_1a7e7015bc61bd79b6821d2dccaecf9eda" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>DragAcceptFiles</name></member>
      <member refid="classwx_window_1a4e933aa891f42fbb3b87438057c573af" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>Enable</name></member>
      <member refid="classwx_tree_list_ctrl_1a2d448f6124e09e022cb8b67a39f67bfa" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Expand</name></member>
      <member refid="classwx_window_1a777258379a3eef1b0530f12db6b77cab" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>FindFocus</name></member>
      <member refid="classwx_window_1a3468ef382c612b5f8e91c7c18d00a69f" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>FindWindow</name></member>
      <member refid="classwx_window_1ab2dad735acc2121b964ee1d51836cffa" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>FindWindow</name></member>
      <member refid="classwx_window_1a101201b12ccd5fba49fa06ed19b5c6fb" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>FindWindowById</name></member>
      <member refid="classwx_window_1ab8eb148fffae109e0fac86e88d569670" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>FindWindowByLabel</name></member>
      <member refid="classwx_window_1adbe4eea02f615313c12a2c00557a44c3" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>FindWindowByName</name></member>
      <member refid="classwx_window_1a2bf38a6cbd1f82fb46f274396f482994" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>Fit</name></member>
      <member refid="classwx_window_1a55aca401aab29d59f7cc53f89ba2e38d" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>FitInside</name></member>
      <member refid="classwx_window_1a15c678314cfc1d807196bc298b713ed3" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Freeze</name></member>
      <member refid="classwx_window_1aefc02d7275010ebb8d5b66569e7287c4" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetAcceleratorTable</name></member>
      <member refid="classwx_window_1ae0469b554e9c501b356b3ed4b6d8a3af" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetAccessible</name></member>
      <member refid="classwx_window_1ad7a9d7fca325112fae493a00d253b3be" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetAutoLayout</name></member>
      <member refid="classwx_window_1a3006d98a4145b7064c1f08e39487d257" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetBackgroundColour</name></member>
      <member refid="classwx_window_1a59047d52b88f2422bbcf01bbecdc4b7b" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>GetBackgroundStyle</name></member>
      <member refid="classwx_window_1a7e64b9380374e5681f146e9e319e35e3" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetBestSize</name></member>
      <member refid="classwx_window_1a0180343fa395e0c8e6de4022684ca5d6" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>GetBestVirtualSize</name></member>
      <member refid="classwx_window_1ad95a95e683e57ac6365745b737571582" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetBorder</name></member>
      <member refid="classwx_window_1aa53c8d1b5af17a8fbbe8845210e2032b" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetBorder</name></member>
      <member refid="classwx_window_1a483d3f73925bd38c3964dad058672f0a" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetCapture</name></member>
      <member refid="classwx_window_1a83ed7c9d9252b912eebc753d6132245b" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetCaret</name></member>
      <member refid="classwx_window_1a304b4446de399b240a3fa4aa83a2e468" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>GetCharHeight</name></member>
      <member refid="classwx_window_1aef2745df13435e913027107cab2a6286" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>GetCharWidth</name></member>
      <member refid="classwx_tree_list_ctrl_1a6226030a1caa9aac745865f2eaa05589" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetCheckedState</name></member>
      <member refid="classwx_window_1ad500085ad0511879b5e018706c91a494" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetChildren</name></member>
      <member refid="classwx_window_1a666cfe7cc8eda6fcecfd39c67c50f609" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetChildren</name></member>
      <member refid="classwx_window_1a170d85e4aa0cbacbfcdd0728120e1417" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetClassDefaultAttributes</name></member>
      <member refid="classwx_object_1ab3a0c6f723cbaddb47be4e8dd98cc8e2" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>GetClassInfo</name></member>
      <member refid="classwx_window_1a8fd1c0fd88d63dfbf6fefb688b7fd19e" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>GetClientAreaOrigin</name></member>
      <member refid="classwx_evt_handler_1ad6e543115a9405962152630138645588" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetClientData</name></member>
      <member refid="classwx_evt_handler_1a2b3949eaba1f25cb48618163a7c0583b" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetClientObject</name></member>
      <member refid="classwx_window_1a3928765a8dd3c5c3d6a689179c8005e0" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetClientRect</name></member>
      <member refid="classwx_window_1ae56fc53268b815b58570f66bfc33838f" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetClientSize</name></member>
      <member refid="classwx_window_1afb9fd4a3b3310b2e11049a5113f749fa" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetClientSize</name></member>
      <member refid="classwx_tree_list_ctrl_1a6dac51d39a03d3309a2578025a8d3b62" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetColumnCount</name></member>
      <member refid="classwx_tree_list_ctrl_1a17409751eb4a1a0b36b07b191b5ee0d7" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetColumnWidth</name></member>
      <member refid="classwx_window_1ac5664c7cd26848b5eebfaded2ecde7be" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetConstraints</name></member>
      <member refid="classwx_window_1ade8de9a91bb5bf49c3a52e5262a5ffea" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetContainingSizer</name></member>
      <member refid="classwx_window_1ad7ce1e9af33e6be0b608813eff2d349c" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetCursor</name></member>
      <member refid="classwx_tree_list_ctrl_1abb79ba2a401a85896f67895f0eadbba8" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetDataView</name></member>
      <member refid="classwx_window_1a24e7b8f717e91f4590d148140e853dc5" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>GetDefaultAttributes</name></member>
      <member refid="classwx_window_1a4511e71affd926a47c5c320563ca2df5" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>GetDropTarget</name></member>
      <member refid="classwx_window_1a1a54fcda8d52986482e030bd54739e9f" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>GetEffectiveMinSize</name></member>
      <member refid="classwx_window_1a72c2454cf309f30109da3cbfe237c760" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetEventHandler</name></member>
      <member refid="classwx_evt_handler_1a533e62afcb125abf1fcc8bb53fbc2e81" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetEvtHandlerEnabled</name></member>
      <member refid="classwx_window_1a8da0e59017af368c062f11c9abe2c667" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetExtraStyle</name></member>
      <member refid="classwx_tree_list_ctrl_1a16e904a51e7ed252bd331a8cc7332167" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetFirstChild</name></member>
      <member refid="classwx_tree_list_ctrl_1a5840ec74e9cb0e1790d5412e27e223a5" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetFirstItem</name></member>
      <member refid="classwx_window_1a0dcc6f6f7bda203a868ff10c413289fa" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetFont</name></member>
      <member refid="classwx_window_1acb8e9bd1c88f330bc9748255a5592964" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetForegroundColour</name></member>
      <member refid="classwx_window_1a55d3155d2d3139a84e8fb19a8900aa76" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetGrandParent</name></member>
      <member refid="classwx_window_1a185e6cd7065367b552748cb722651b27" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>GetHandle</name></member>
      <member refid="classwx_window_1a77f8a4bbee228ed333af2e6a06509cff" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetHelpText</name></member>
      <member refid="classwx_window_1afa448f4e01bedc4a5e3d4324929e5d5d" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>GetHelpTextAtPoint</name></member>
      <member refid="classwx_window_1a4633b6ad527c921598f55af5274156f0" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetId</name></member>
      <member refid="classwx_tree_list_ctrl_1a34cfeffaed0bea603c77359f22dcaeab" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetItemData</name></member>
      <member refid="classwx_tree_list_ctrl_1ab7360273d360f779c4f31d6e08917f09" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetItemParent</name></member>
      <member refid="classwx_tree_list_ctrl_1aaadfd7cba3fd4f873909bf73e078181a" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetItemText</name></member>
      <member refid="classwx_window_1a87fc676546f2ab837342b2e164dd52f0" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>GetLabel</name></member>
      <member refid="classwx_window_1a0a624f5fad4a603d58ffe94b058d4dda" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>GetLayoutDirection</name></member>
      <member refid="classwx_window_1aef9b71458720452374137cd20be24b97" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>GetMaxClientSize</name></member>
      <member refid="classwx_window_1a5cc2082eb5ddb27f97be191bd093709e" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetMaxHeight</name></member>
      <member refid="classwx_window_1a0a1672e81caf81a95eb5b48383d22065" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>GetMaxSize</name></member>
      <member refid="classwx_window_1a2e953a64c41131b87bdd7c513ced3687" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetMaxWidth</name></member>
      <member refid="classwx_window_1a8e88d1d38c2bf98a72d86b42cf3e35c0" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>GetMinClientSize</name></member>
      <member refid="classwx_window_1ae4dd9a046ff774ea3ef114caeb452681" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetMinHeight</name></member>
      <member refid="classwx_window_1a853c9a8443f996a368569a8fae551f5a" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>GetMinSize</name></member>
      <member refid="classwx_window_1a9f79aa07a1b82a9a738f6c1d9c17496f" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetMinWidth</name></member>
      <member refid="classwx_window_1aab1b302c4bdabd134ce8d401dbaaf990" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>GetName</name></member>
      <member refid="classwx_evt_handler_1a4b2f853f5c7a64432ae72f9b606698f9" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetNextHandler</name></member>
      <member refid="classwx_tree_list_ctrl_1a899f7e91ef48f1f0bdb5e2f810c37947" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetNextItem</name></member>
      <member refid="classwx_tree_list_ctrl_1a3927959341377f1861b3b0c7dd7054b7" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetNextSibling</name></member>
      <member refid="classwx_window_1a41608736affe2ff115d80d8f69dc832e" prot="public" virt="non-virtual" ambiguityscope="wxWindow::"><scope>wxTreeListCtrl</scope><name>GetNextSibling</name></member>
      <member refid="classwx_window_1a63871f881941b99b4b94328d1c4cd163" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetParent</name></member>
      <member refid="classwx_window_1a9b7de6ea85ca926b668ba0682a61a93e" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetPopupMenuSelectionFromUser</name></member>
      <member refid="classwx_window_1a00f5cb3cac003205317a565a33d4bb27" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetPopupMenuSelectionFromUser</name></member>
      <member refid="classwx_window_1a9f36392b289a1e567e95bee073d6533e" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetPosition</name></member>
      <member refid="classwx_window_1ad9a883e20827fa717e92fc2f8bd99d6b" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetPosition</name></member>
      <member refid="classwx_evt_handler_1aad1ba7fa9ccbf12ee2d80f5f12350adb" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetPreviousHandler</name></member>
      <member refid="classwx_window_1aa4cb912eb28be31279fa1b95747c6d02" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetPrevSibling</name></member>
      <member refid="classwx_window_1ac8809904bb379c32c33c79fbe38745eb" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetRect</name></member>
      <member refid="classwx_object_1aabdb4fc957226544a8408167844e4f42" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetRefData</name></member>
      <member refid="classwx_tree_list_ctrl_1a6714b7cf9b2c76a8a5bec5a60b51664c" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetRootItem</name></member>
      <member refid="classwx_window_1abd39ef50fbc1ef3771f695e7322e8c1d" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetScreenPosition</name></member>
      <member refid="classwx_window_1a32074a2c677ebadb1ed6e92ab172656c" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetScreenPosition</name></member>
      <member refid="classwx_window_1a5c0e45fac07ac4cf29eefa108337a110" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetScreenRect</name></member>
      <member refid="classwx_window_1a3e23d10c17943fd873d0acb472db0caa" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>GetScrollPos</name></member>
      <member refid="classwx_window_1a067d2a38efbf2f535f717f1027003281" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>GetScrollRange</name></member>
      <member refid="classwx_window_1a10d24c60525a1c612cd775fc44dd1953" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>GetScrollThumb</name></member>
      <member refid="classwx_tree_list_ctrl_1ae03092aec1d5ed3bc059833b03e9e5e4" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetSelection</name></member>
      <member refid="classwx_tree_list_ctrl_1aeba5d008146780a684741b69a49ee938" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetSelections</name></member>
      <member refid="classwx_window_1a124c12cff1e7b6e96a5e1fd3e48dca34" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetSize</name></member>
      <member refid="classwx_window_1a66e144ed8ab9a20e080ae6c69fc7015c" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetSize</name></member>
      <member refid="classwx_window_1ad8284cce1a2afe57724b52a89d7fac2f" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetSizer</name></member>
      <member refid="classwx_tree_list_ctrl_1a707c2f1d1f2eee8bcb207e007ed54e68" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetSortColumn</name></member>
      <member refid="classwx_window_1ac9cd7b4472d5419e518f69311914466f" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetTextExtent</name></member>
      <member refid="classwx_window_1a79e5f88a2408871663d4ab0405cd35f6" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetTextExtent</name></member>
      <member refid="classwx_window_1a0b31a21532407cf809d73aa09f34235c" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>GetThemeEnabled</name></member>
      <member refid="classwx_window_1aae94155ccf8a6e4e72ad08527c89ba89" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetToolTip</name></member>
      <member refid="classwx_window_1ad1a9c53c8e7e5010874f15b8ff4a6568" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetToolTipText</name></member>
      <member refid="classwx_window_1a7e32d9a9ffd058c931db20416bc55baa" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetUpdateClientRect</name></member>
      <member refid="classwx_window_1aa982adbcebfa7bc73fbae7465132115b" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetUpdateRegion</name></member>
      <member refid="classwx_window_1a6a332586346cb9ece4a8fe058a7b88c4" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>GetValidator</name></member>
      <member refid="classwx_tree_list_ctrl_1a11ecb0a29ca28b61737b1e10619ff875" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetView</name></member>
      <member refid="classwx_window_1a614d32c464296b7d6caabcafc18deb97" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetVirtualSize</name></member>
      <member refid="classwx_window_1a2628c6f1f4aecb790f0c86622ebf4d56" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetVirtualSize</name></member>
      <member refid="classwx_window_1afd861e553190e22a76d3d40ee5e8d628" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>GetWindowBorderSize</name></member>
      <member refid="classwx_window_1a994147d8294bd7d5a32c825d5692af28" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetWindowStyle</name></member>
      <member refid="classwx_window_1a0a0e81677bf2f0de5982a634e11d9a69" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>GetWindowStyleFlag</name></member>
      <member refid="classwx_window_1aafcccd0d5d31651484df02453c53361c" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>GetWindowVariant</name></member>
      <member refid="classwx_window_1a89d1b079de97aac170e999692095872c" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>HandleAsNavigationKey</name></member>
      <member refid="classwx_window_1a665731bbfa46a72c215b04df60216ef1" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>HandleWindowEvent</name></member>
      <member refid="classwx_window_1a9b44f61543b77317f9820e06856c5514" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>HasCapture</name></member>
      <member refid="classwx_window_1ae30b415c1ef526563161efea5b78d640" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>HasExtraStyle</name></member>
      <member refid="classwx_window_1a62ba2fb9be6422bf06bb7db5871d551f" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>HasFlag</name></member>
      <member refid="classwx_window_1a4e0abff99d64d2a595ee0ab4b415bbd6" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>HasFocus</name></member>
      <member refid="classwx_window_1abe1522483478b1f777ad8ef34fa7c44a" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>HasMultiplePages</name></member>
      <member refid="classwx_window_1a950847ecf2d488d83c14a74a3906f668" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>HasScrollbar</name></member>
      <member refid="classwx_window_1ab9cbcb6d6f4a272c2f0342e69a13b59a" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>HasTransparentBackground</name></member>
      <member refid="classwx_window_1a7ed103df04014cb3c59c6a3fb4d95328" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Hide</name></member>
      <member refid="classwx_window_1a5326fbb26557a224507a1c06e5640e89" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>HideWithEffect</name></member>
      <member refid="classwx_window_1a6a026b2a16a9f050deddd44e5586762c" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>HitTest</name></member>
      <member refid="classwx_window_1a44f4d85f42fac6090a42cafd40f24ff5" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>HitTest</name></member>
      <member refid="classwx_window_1a9fd5b6520c1b30eb8e82bb5d56bc24c0" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>InformFirstDirection</name></member>
      <member refid="classwx_window_1a6b1bf9e099704e7a493b8c4666b1f7f7" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>InheritAttributes</name></member>
      <member refid="classwx_window_1aa90a260c0a835a133043460b7d0024a8" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>InitDialog</name></member>
      <member refid="classwx_tree_list_ctrl_1afbb4d0ca4e914ecaa96ce26bfa083018" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>InsertItem</name></member>
      <member refid="classwx_window_1ae1b56ca87d8590ee5e576012229a380a" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>InvalidateBestSize</name></member>
      <member refid="classwx_window_1af918e6fe8565c2d5235973cc3de84a43" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>IsBeingDeleted</name></member>
      <member refid="classwx_window_1a469f0881da248d37691440c9d4cc7200" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>IsDescendant</name></member>
      <member refid="classwx_window_1a9d1be1bbb625ebf87ad4ad47e49a0194" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>IsDoubleBuffered</name></member>
      <member refid="classwx_window_1a59452a5bd42f5ea4b31d7fc4aa59644f" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>IsEnabled</name></member>
      <member refid="classwx_tree_list_ctrl_1ab7ac8b9aedec508c93d2532a60e1855b" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>IsExpanded</name></member>
      <member refid="classwx_window_1af27ef77c913e32050543f3b0ca435a0d" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1a31af79f647cbec4950ce31620db51753" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1a4a23e724619ec070f7d5c45ba21529d5" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1a4da9a2d13534535aaf7b45200ee8728e" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1a866c62cc23d8de88e952aad5db4d1a61" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>IsFrozen</name></member>
      <member refid="classwx_object_1af40d580385cf4f8112fae7713404b01e" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>IsKindOf</name></member>
      <member refid="classwx_window_1ae9b31dec54256b68574a4bba8cca94ab" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>IsRetained</name></member>
      <member refid="classwx_object_1a80a1a3fda7b14396a9ddd3d7a46a88bd" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>IsSameAs</name></member>
      <member refid="classwx_window_1aeeef7eaf8c8f1ec1a54e7a68d63923d0" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>IsScrollbarAlwaysShown</name></member>
      <member refid="classwx_tree_list_ctrl_1a6714801b57e4c9988ddc9433fb8eaaff" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>IsSelected</name></member>
      <member refid="classwx_window_1a95af3a39aa422580dae156ed281a7e88" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>IsShown</name></member>
      <member refid="classwx_window_1a72d70fd14e3565bf782fbcd3271d8930" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>IsShownOnScreen</name></member>
      <member refid="classwx_window_1a657ef8b6055eb06df894ac5e6ddfecf8" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>IsThisEnabled</name></member>
      <member refid="classwx_window_1a0002826ad05f2a5661b4c8995713f37f" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>IsTopLevel</name></member>
      <member refid="classwx_window_1a7940d510c5bdc062a2b109a1022dd8c2" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>IsTransparentBackgroundSupported</name></member>
      <member refid="classwx_evt_handler_1a360fdeefcf53b62fb49fb828406bb8a6" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>IsUnlinked</name></member>
      <member refid="classwx_window_1a1b143c3e72bd0af533b76db4830a6113" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>Layout</name></member>
      <member refid="classwx_window_1ade808784f0e64d9985e2f279b5ca8c02" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>LineDown</name></member>
      <member refid="classwx_window_1afc0816a174ceee6d36d1995c6824a273" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>LineUp</name></member>
      <member refid="classwx_window_1a124944524f36b71385dad8fddaad8ded" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>Lower</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>m_refData</name></member>
      <member refid="classwx_window_1ab1cb98c8d25b9e6ff7b706b1446c3df7" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Move</name></member>
      <member refid="classwx_window_1a22a22c1e23ca05776707e7999d8047fe" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Move</name></member>
      <member refid="classwx_window_1a79e66079125e8420de269811bdb6f2b6" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>MoveAfterInTabOrder</name></member>
      <member refid="classwx_window_1af2b92f61cd9f9e2e0efe4cce307e25b1" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>MoveBeforeInTabOrder</name></member>
      <member refid="classwx_window_1a86904f6785df4af6036b33383490a805" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Navigate</name></member>
      <member refid="classwx_window_1aa58039c8fc65e19160becf510ee1d1d5" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>NavigateIn</name></member>
      <member refid="classwx_window_1a8175da594e6045635a1d1cfe775cdddb" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>NewControlId</name></member>
      <member refid="classwx_tree_list_ctrl_1a68f097e2bed86c69817fc6841a8e6ebb" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>NO_IMAGE</name></member>
      <member refid="classwx_window_1a6b5654c0c6c6245d592c279521f7099c" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>OnInternalIdle</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>operator new</name></member>
      <member refid="classwx_window_1a61e78cb48ece3e9e989e37b475ac1e35" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>PageDown</name></member>
      <member refid="classwx_window_1aa7c2bbc480d8863d9f139c01d7abc1b1" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>PageUp</name></member>
      <member refid="classwx_window_1ac45c1f4cf96c70779764c14cf528790b" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>PopEventHandler</name></member>
      <member refid="classwx_window_1a8f715d238cf74a845488b0e2645e98df" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>PopupMenu</name></member>
      <member refid="classwx_window_1a834bcdfd41f5e5370ebd9ea401c92900" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>PopupMenu</name></member>
      <member refid="classwx_window_1ab1943463e6661f97e072b43337c6cc09" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>PostSizeEvent</name></member>
      <member refid="classwx_window_1aa080d8dcda58bcc6ea2abd8bea592e3e" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>PostSizeEventToParent</name></member>
      <member refid="classwx_tree_list_ctrl_1ac8e5e8796c0c7cf2233919578b49add5" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>PrependItem</name></member>
      <member refid="classwx_window_1a5ebdbd87c28644149a07f1742996df96" prot="protected" virt="virtual"><scope>wxTreeListCtrl</scope><name>ProcessEvent</name></member>
      <member refid="classwx_evt_handler_1ac0f5d2cb29a04c1f7f82eb6b351f79fb" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>ProcessEventLocally</name></member>
      <member refid="classwx_window_1a7cbee38944dab02d753a4dba74230443" prot="protected" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>ProcessPendingEvents</name></member>
      <member refid="classwx_window_1a9350b3a9c2e380707eaea92cedad12a5" prot="protected" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>ProcessThreadEvent</name></member>
      <member refid="classwx_window_1a0a76891d726ad5f9a729e27e4eab2b57" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>ProcessWindowEvent</name></member>
      <member refid="classwx_window_1a0a11aa4a50491d051f947e2618e52178" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>ProcessWindowEventLocally</name></member>
      <member refid="classwx_window_1a398c11ab9af7956067a964f560d1978c" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>PushEventHandler</name></member>
      <member refid="classwx_window_1a69e450f21b0d7013269ec1a4771f043b" prot="protected" virt="virtual"><scope>wxTreeListCtrl</scope><name>QueueEvent</name></member>
      <member refid="classwx_window_1a54808c933f22a891c5db646f6209fa4d" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>Raise</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Ref</name></member>
      <member refid="classwx_window_1a29dc7251746154c821b17841b9877830" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>Refresh</name></member>
      <member refid="classwx_window_1ab0ae6b9898cd261c39ebeb2891aa3d67" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>RefreshRect</name></member>
      <member refid="classwx_window_1a53ca57872dac5851ea6ba55a494b899b" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>RegisterHotKey</name></member>
      <member refid="classwx_window_1adcc538819c11ecb3bd3e4e5d13c5ba7a" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>ReleaseMouse</name></member>
      <member refid="classwx_window_1acee332ed4368d26e8bc3db5767c1240a" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>RemoveChild</name></member>
      <member refid="classwx_window_1aacbfe424fa527966b954229a1db96ab5" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>RemoveEventHandler</name></member>
      <member refid="classwx_evt_handler_1a67a57b759c447b121bf70a7c9804c8f2" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>RemoveFilter</name></member>
      <member refid="classwx_window_1a7977b749284e65aecfed2ce146799cb9" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>Reparent</name></member>
      <member refid="classwx_window_1a0f9814efc50316b4c57b7ec2bf78b716" prot="protected" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SafelyProcessEvent</name></member>
      <member refid="classwx_window_1a65531bbc52f9508b0e31a9c08c97bd31" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>ScreenToClient</name></member>
      <member refid="classwx_window_1a59d02b70a9107433836a977c4c0cd7a9" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>ScreenToClient</name></member>
      <member refid="classwx_window_1aa5c5b683bd11a0d9771bd2fcdf643c64" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>ScrollLines</name></member>
      <member refid="classwx_window_1adc0ed5e1c4925223cb901ced14b8343d" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>ScrollPages</name></member>
      <member refid="classwx_window_1ab7be4956ff22da37fff2b8aaa581045c" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>ScrollWindow</name></member>
      <member refid="classwx_evt_handler_1a3c07426130d2868a5ae7fa918a251f49" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SearchEventTable</name></member>
      <member refid="classwx_tree_list_ctrl_1aefbb76935cf0295c758f559b0ae0d710" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Select</name></member>
      <member refid="classwx_tree_list_ctrl_1a1c3cd2ca3a68462d16e845e6e7521052" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SelectAll</name></member>
      <member refid="classwx_window_1a7e21eb6a0819281b29134a6432d064fe" prot="protected" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SendDestroyEvent</name></member>
      <member refid="classwx_window_1a237f739b21937d3e8f1bff5fa82ba4c2" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SendSizeEvent</name></member>
      <member refid="classwx_window_1af7987987978fd8a93df88b29b19a6388" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SendSizeEventToParent</name></member>
      <member refid="classwx_window_1a0af5e9aa4dee6a4e92c0700f92605642" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetAcceleratorTable</name></member>
      <member refid="classwx_window_1a413220ead41f05a2ec2cfe10b3d573df" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetAccessible</name></member>
      <member refid="classwx_window_1ad369fe1db5c20f9d9edff7b5eb1f7226" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetAutoLayout</name></member>
      <member refid="classwx_window_1a37219df52734626e23401fd83b25d8a0" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetBackgroundColour</name></member>
      <member refid="classwx_window_1af14f8fd2ed2d30a9bbb5d4f9fd6594ec" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetBackgroundStyle</name></member>
      <member refid="classwx_window_1a2b8b2e99231a0ec1a05f5066f1b7f3d8" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetCanFocus</name></member>
      <member refid="classwx_window_1acfef5e1cada92c73e2937b84ff57ff57" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetCaret</name></member>
      <member refid="classwx_evt_handler_1a82c74f2cebfa02cb3c1563d459c872bf" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetClientData</name></member>
      <member refid="classwx_evt_handler_1af1e33a06087b8b2ddc43c7d15a91b326" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetClientObject</name></member>
      <member refid="classwx_window_1aa59f715217fffa5bcf14cd97f92e7840" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetClientSize</name></member>
      <member refid="classwx_window_1ab2aadc857ee7f55f47ab9a8669e3beb7" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetClientSize</name></member>
      <member refid="classwx_window_1a582d4d1f60a3f777627773b2da0bb2ef" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetClientSize</name></member>
      <member refid="classwx_tree_list_ctrl_1a00be78623a0479287a0eaf974dd398eb" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetColumnWidth</name></member>
      <member refid="classwx_window_1afa75d111bbd9a68f837101a5fbed60a7" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetConstraints</name></member>
      <member refid="classwx_window_1a0ccf78fe06722b500adfb7f36b8ce443" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetContainingSizer</name></member>
      <member refid="classwx_window_1ad83f9c51c6f31e0e05f598b47a19ed98" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetCursor</name></member>
      <member refid="classwx_window_1a5477a89c17fdcc3ec6c90274796eb1c3" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetDoubleBuffered</name></member>
      <member refid="classwx_window_1ae34b4d45433ca8287df0e47d46411e58" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetDropTarget</name></member>
      <member refid="classwx_window_1af6c84b7679183b377ba27a52a2f708b4" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetEventHandler</name></member>
      <member refid="classwx_evt_handler_1a7388ae19c8657e5656471b658c320036" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetEvtHandlerEnabled</name></member>
      <member refid="classwx_window_1ae9655f7c35ce7ac89cac2f6c0054b103" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetExtraStyle</name></member>
      <member refid="classwx_window_1a697f9f8d3ff389790f1c74b59bcb1d75" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetFocus</name></member>
      <member refid="classwx_window_1a6fa03f82d7917dff482754d0d2e2b1c8" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetFocusFromKbd</name></member>
      <member refid="classwx_window_1a9ab11e7da57a1d08918aa75fc33f6ad3" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetFont</name></member>
      <member refid="classwx_window_1a69f1e1c7ddd370d72e68c70f13ac8de9" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetForegroundColour</name></member>
      <member refid="classwx_window_1a4c1a2cbc7363237b3a7c70af4e702c72" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetHelpText</name></member>
      <member refid="classwx_window_1a7f27d0faed14effa013381bdc40e1bcd" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetId</name></member>
      <member refid="classwx_tree_list_ctrl_1a2a9d3607f9e507f50187080518ab5d3d" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetImageList</name></member>
      <member refid="classwx_window_1ae6dfe0b0d4a8c666b21ce8df8d96727b" prot="protected" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetInitialBestSize</name></member>
      <member refid="classwx_window_1a1b309ca50ba87e34f968c83b79af1397" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetInitialSize</name></member>
      <member refid="classwx_tree_list_ctrl_1addcdef889d35ca918f1a0303cc6ef751" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetItemComparator</name></member>
      <member refid="classwx_tree_list_ctrl_1a9ed2a69d8cd5ffb4668aaa35b5163351" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetItemData</name></member>
      <member refid="classwx_tree_list_ctrl_1a23e02e87b4affb685d6ff4b50af3b10f" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetItemImage</name></member>
      <member refid="classwx_tree_list_ctrl_1ac99e85e6bd92f49b6260a3cc00c35c08" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetItemText</name></member>
      <member refid="classwx_tree_list_ctrl_1a3930c806491f9670be6389def929219e" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetItemText</name></member>
      <member refid="classwx_window_1aa00ffea9f53587f29ae343adde033b8e" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetLabel</name></member>
      <member refid="classwx_window_1a7d494549f7fcfed44af95f8ee364c1f9" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetLayoutDirection</name></member>
      <member refid="classwx_window_1a664e5b2ddd817d9c58788269fe1d8479" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetMaxClientSize</name></member>
      <member refid="classwx_window_1a38b496214d728a3212afadee5ed51606" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetMaxSize</name></member>
      <member refid="classwx_window_1a6e35ba44b97e374dfffa460d41d94b31" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetMinClientSize</name></member>
      <member refid="classwx_window_1a3fc066f4d8083319f004ac43811d545d" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetMinSize</name></member>
      <member refid="classwx_window_1af80875cda5e1af98dcd7c8e712e3c800" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetName</name></member>
      <member refid="classwx_window_1aeab905f61df7004c1b76a3351dca9e96" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetNextHandler</name></member>
      <member refid="classwx_window_1a9a3f9d8477aab1d9176cd66ee56e75d9" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetOwnBackgroundColour</name></member>
      <member refid="classwx_window_1a89a4f62f23c1e7c845b8d07cecae4c43" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetOwnFont</name></member>
      <member refid="classwx_window_1a53f4a878e4e2d440bd00543f8014aaaa" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetOwnForegroundColour</name></member>
      <member refid="classwx_window_1aee57358435d6bd33f598c81354b47425" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetPalette</name></member>
      <member refid="classwx_window_1a81f23590239934fa10fded0566a65d8c" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetPosition</name></member>
      <member refid="classwx_window_1a07f5f7ed3f78e0ef7b3dee3f4da81001" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetPreviousHandler</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetRefData</name></member>
      <member refid="classwx_window_1aa842d59529f873683e55cd8392ec46e9" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetScrollbar</name></member>
      <member refid="classwx_window_1afbf4dc9064cf70cfe6884554b97a27bf" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetScrollPos</name></member>
      <member refid="classwx_window_1a180312d5ad4a4a5ad805b8d52d67a74e" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a8e383bc6d5ca008965922a36c676aea0" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a030a928cd854de3def97c5720f14695b" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a2ea9b25296d591aea4470c8fd99ff7cb" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a307329dc3b10f5584aeb2cbce9293ffd" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetSizeHints</name></member>
      <member refid="classwx_window_1ae813c640e1e2bc6014423247050846cf" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetSizeHints</name></member>
      <member refid="classwx_window_1abc95691b45e29a52c24aa9d33d46dec1" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetSizer</name></member>
      <member refid="classwx_window_1a29938af9828fd35da666536cdfb6b73c" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetSizerAndFit</name></member>
      <member refid="classwx_tree_list_ctrl_1af8a7315bd7efcf57971bed41337918a1" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetSortColumn</name></member>
      <member refid="classwx_window_1a41dd19ed8809fd8ec662e2aa2a9579c3" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetThemeEnabled</name></member>
      <member refid="classwx_window_1a81a9fb74e3c6c7f4416e882f5e589b8c" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetToolTip</name></member>
      <member refid="classwx_window_1a494e0b7cfca9299caa40e847767e7357" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetToolTip</name></member>
      <member refid="classwx_window_1ac8cf4398cec50ac36634760f45a0656f" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetTransparent</name></member>
      <member refid="classwx_window_1a00066c70049a7be3ce6b648d206e6432" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetValidator</name></member>
      <member refid="classwx_window_1a37f293b7904bc6668b86cccb0aea5669" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetVirtualSize</name></member>
      <member refid="classwx_window_1a8e95201edebe43b9623bd3bdc555af4d" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetVirtualSize</name></member>
      <member refid="classwx_window_1a306af30adec68689f74ed537b4f9d5fd" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetWindowStyle</name></member>
      <member refid="classwx_window_1aee2cf342f80523432e7f2299d299451b" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>SetWindowStyleFlag</name></member>
      <member refid="classwx_window_1acd955418c336e73b3e32cadf1ca46e29" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>SetWindowVariant</name></member>
      <member refid="classwx_window_1a0c43a27fa04f9c17cc28fde71fdba490" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>ShouldInheritColours</name></member>
      <member refid="classwx_window_1a7fbc92ce240a8d4f6956b6e0276ef07f" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>Show</name></member>
      <member refid="classwx_window_1a596b1715edfc7609f352b2e000ecbaec" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>ShowWithEffect</name></member>
      <member refid="classwx_window_1a279a532124073261b28131b6afb59a1e" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Thaw</name></member>
      <member refid="classwx_window_1a8a4fa47129de552bfec37db8c69688a2" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>ToggleWindowStyle</name></member>
      <member refid="classwx_window_1ab8e51f36e7d8790b361c8d8c6f37b1ad" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>TransferDataFromWindow</name></member>
      <member refid="classwx_window_1a88cc65e424a129d9b0057756cdb67ec9" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>TransferDataToWindow</name></member>
      <member refid="classwx_evt_handler_1a5e25fece1cb6cbc11fd1d41ec140319c" prot="protected" virt="virtual"><scope>wxTreeListCtrl</scope><name>TryAfter</name></member>
      <member refid="classwx_evt_handler_1ad4b0eac704dd005ac6a88fdb1e673c13" prot="protected" virt="virtual"><scope>wxTreeListCtrl</scope><name>TryBefore</name></member>
      <member refid="classwx_evt_handler_1a5d3854b4dfb6230fd9d3cf3871c6a607" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Unbind</name></member>
      <member refid="classwx_evt_handler_1a9992b15750a133127d76ad6e9be7e11f" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Unbind</name></member>
      <member refid="classwx_tree_list_ctrl_1abe354d6c31159b431eb489f06320d783" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>UncheckItem</name></member>
      <member refid="classwx_evt_handler_1a22e5db2ec1d19c8252c056fd116975d7" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Unlink</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>UnRef</name></member>
      <member refid="classwx_window_1a695f60d65f8f6c12e3c3645ad9c0c35b" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>UnregisterHotKey</name></member>
      <member refid="classwx_window_1ad9bc342d1e38d221e37f0f6396950c8c" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>UnreserveControlId</name></member>
      <member refid="classwx_tree_list_ctrl_1a66d02d9ffa53b582ff8b12c4246a6918" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>Unselect</name></member>
      <member refid="classwx_tree_list_ctrl_1a33d0d5a9ac453a895bf0469935926dd7" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>UnselectAll</name></member>
      <member refid="classwx_window_1ae75712451673658b0a533480bf5eeaa4" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>UnsetToolTip</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>UnShare</name></member>
      <member refid="classwx_window_1abaf28f1a075fd1b10f761a8febe597ec" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>Update</name></member>
      <member refid="classwx_tree_list_ctrl_1afae0fb8696ebb71fab8f5c7c22170ad0" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>UpdateItemParentStateRecursively</name></member>
      <member refid="classwx_window_1adf0a4987728bd0bf69f922641b3efbfc" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>UpdateWindowUI</name></member>
      <member refid="classwx_window_1ac87f253253a0c5eb498871c83afa40fd" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>Validate</name></member>
      <member refid="classwx_window_1ac500152d1eca3a2ee98a68e7ea7372b5" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>WarpPointer</name></member>
      <member refid="classwx_tree_list_ctrl_1a891473692a6a6caf55ba767830c85c73" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>WidthFor</name></member>
      <member refid="classwx_window_1aa456f800c9dde3b2361cad0abf54bc27" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>WindowToClientSize</name></member>
      <member refid="classwx_evt_handler_1a3f0166c4154227d05575b01eb2c8d4be" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>wxEvtHandler</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>wxObject</name></member>
      <member refid="classwx_tree_list_ctrl_1a844c05440a63f6cf04b36aab91e9449e" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>wxTreeListCtrl</name></member>
      <member refid="classwx_tree_list_ctrl_1aafa1dff7beddda23c685f1c19c68aefb" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>wxTreeListCtrl</name></member>
      <member refid="classwx_window_1a695200a4915b934926dcf32afa44544c" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>wxWindow</name></member>
      <member refid="classwx_window_1a7799009b10d1765d1bbb6db4994f922e" prot="public" virt="non-virtual"><scope>wxTreeListCtrl</scope><name>wxWindow</name></member>
      <member refid="classwx_evt_handler_1a372d2239d91521eddc8fd2715fcab584" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>~wxEvtHandler</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>~wxObject</name></member>
      <member refid="classwx_window_1a0c2a46181a89c349327f0b276f5ef8d7" prot="public" virt="virtual"><scope>wxTreeListCtrl</scope><name>~wxWindow</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
