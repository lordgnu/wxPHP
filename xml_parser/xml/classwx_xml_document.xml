<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_xml_document" kind="class" prot="public">
    <compoundname>wxXmlDocument</compoundname>
    <basecompoundref refid="classwx_object" prot="public" virt="non-virtual">wxObject</basecompoundref>
    <includes local="no">wx/xml/xml.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_xml_document_1aa32a33f35c0f3f0a24490a763372d13c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxXmlDocument::wxXmlDocument</definition>
        <argsstring>()</argsstring>
        <name>wxXmlDocument</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="530"/>
      </memberdef>
      <memberdef kind="function" id="classwx_xml_document_1acac7d814bbdfaf4b36de2acb5f1d3b8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxXmlDocument::wxXmlDocument</definition>
        <argsstring>(const wxXmlDocument &amp;doc)</argsstring>
        <name>wxXmlDocument</name>
        <param>
          <type>const <ref refid="classwx_xml_document" kindref="compound">wxXmlDocument</ref> &amp;</type>
          <declname>doc</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Deep copies all the XML tree of the given document. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="535"/>
      </memberdef>
      <memberdef kind="function" id="classwx_xml_document_1abdcc9918ef0bf28dc753b0130f819e39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxXmlDocument::wxXmlDocument</definition>
        <argsstring>(const wxString &amp;filename, const wxString &amp;encoding=&quot;UTF-8&quot;))</argsstring>
        <name>wxXmlDocument</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>encoding</declname>
          <defval>&quot;UTF-8&quot;</defval>
        </param>
        <briefdescription>
<para>Loads the given filename using the given encoding. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_xml_document_1af0dfc897ac9fd69d67a0d8b5f00d23c2" kindref="member">Load()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="541"/>
      </memberdef>
      <memberdef kind="function" id="classwx_xml_document_1a8a89e05266c37c99a1849aeb9eb1832a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxXmlDocument::wxXmlDocument</definition>
        <argsstring>(wxInputStream &amp;stream, const wxString &amp;encoding=&quot;UTF-8&quot;)</argsstring>
        <name>wxXmlDocument</name>
        <param>
          <type><ref refid="classwx_input_stream" kindref="compound">wxInputStream</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>encoding</declname>
          <defval>&quot;UTF-8&quot;</defval>
        </param>
        <briefdescription>
<para>Loads the XML document from given stream using the given encoding. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_xml_document_1af0dfc897ac9fd69d67a0d8b5f00d23c2" kindref="member">Load()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="547"/>
      </memberdef>
      <memberdef kind="function" id="classwx_xml_document_1a7dcd1d859ef9d8da939685d4fa1edbdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxXmlDocument::~wxXmlDocument</definition>
        <argsstring>()</argsstring>
        <name>~wxXmlDocument</name>
        <briefdescription>
<para>Virtual destructor. </para>        </briefdescription>
        <detaileddescription>
<para>Frees the document root node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="552"/>
      </memberdef>
      <memberdef kind="function" id="classwx_xml_document_1a03971c5dcde4411827c408ed273fbfe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxXmlDocument::AppendToProlog</definition>
        <argsstring>(wxXmlNode *node)</argsstring>
        <name>AppendToProlog</name>
        <param>
          <type><ref refid="classwx_xml_node" kindref="compound">wxXmlNode</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Appends a Process Instruction or Comment node to the document prologue. </para>        </briefdescription>
        <detaileddescription>
<para>Calling this function will create a prologue or attach the node to the end of an existing prologue.</para><para><simplesect kind="since"><para>2.9.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="562"/>
      </memberdef>
      <memberdef kind="function" id="classwx_xml_document_1a27183047f9f416fc67ad27d84ac2e74c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_xml_node" kindref="compound">wxXmlNode</ref> *</type>
        <definition>wxXmlNode* wxXmlDocument::DetachDocumentNode</definition>
        <argsstring>()</argsstring>
        <name>DetachDocumentNode</name>
        <briefdescription>
<para>Detaches the document node and returns it. </para>        </briefdescription>
        <detaileddescription>
<para>The document node will be set to NULL and thus <ref refid="classwx_xml_document_1aa610055c17d575cd3dd0058ab9216818" kindref="member">IsOk()</ref> will return false after calling this function.</para><para>Note that the caller is responsible for deleting the returned node in order to avoid memory leaks.</para><para><simplesect kind="since"><para>2.9.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="575"/>
      </memberdef>
      <memberdef kind="function" id="classwx_xml_document_1ae55d2a4fab3f8010f53aaf6a34b5a8b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_xml_node" kindref="compound">wxXmlNode</ref> *</type>
        <definition>wxXmlNode* wxXmlDocument::DetachRoot</definition>
        <argsstring>()</argsstring>
        <name>DetachRoot</name>
        <briefdescription>
<para>Detaches the root entity node and returns it. </para>        </briefdescription>
        <detaileddescription>
<para>After calling this function, the document node will remain together with any prologue nodes, but <ref refid="classwx_xml_document_1aa610055c17d575cd3dd0058ab9216818" kindref="member">IsOk()</ref> will return false since the root entity will be missing.</para><para>Note that the caller is responsible for deleting the returned node in order to avoid memory leaks. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="587"/>
      </memberdef>
      <memberdef kind="function" id="classwx_xml_document_1a8bfe22961e0bd50124bcbd2fa3cd4dfd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxXmlDocument::GetEncoding</definition>
        <argsstring>() const </argsstring>
        <name>GetEncoding</name>
        <briefdescription>
<para>Returns encoding of in-memory representation of the document (same as passed to <ref refid="classwx_xml_document_1af0dfc897ac9fd69d67a0d8b5f00d23c2" kindref="member">Load()</ref> or constructor, defaults to UTF-8). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>this is meaningless in Unicode build where data are stored as <computeroutput>wchar_t*</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="595"/>
      </memberdef>
      <memberdef kind="function" id="classwx_xml_document_1aa4fa38c9a0053060f1fd63e3fcc96d23" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>const wxString&amp; wxXmlDocument::GetFileEncoding</definition>
        <argsstring>() const </argsstring>
        <name>GetFileEncoding</name>
        <briefdescription>
<para>Returns encoding of document (may be empty). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This is the encoding original file was saved in, <bold>not</bold> the encoding of in-memory representation! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="603"/>
      </memberdef>
      <memberdef kind="function" id="classwx_xml_document_1a7efd58acc5dc3617685cd38454644ed4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_xml_node" kindref="compound">wxXmlNode</ref> *</type>
        <definition>wxXmlNode* wxXmlDocument::GetDocumentNode</definition>
        <argsstring>() const </argsstring>
        <name>GetDocumentNode</name>
        <briefdescription>
<para>Returns the document node of the document. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.9.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="610"/>
      </memberdef>
      <memberdef kind="function" id="classwx_xml_document_1a47e0477f9b42518d1143cf5468d3520f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_xml_node" kindref="compound">wxXmlNode</ref> *</type>
        <definition>wxXmlNode* wxXmlDocument::GetRoot</definition>
        <argsstring>() const </argsstring>
        <name>GetRoot</name>
        <briefdescription>
<para>Returns the root element node of the document. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="615"/>
      </memberdef>
      <memberdef kind="function" id="classwx_xml_document_1a9c3657cbf31c65f2d08f5ec865c01388" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>const wxString&amp; wxXmlDocument::GetVersion</definition>
        <argsstring>() const </argsstring>
        <name>GetVersion</name>
        <briefdescription>
<para>Returns the version of document. </para>        </briefdescription>
        <detaileddescription>
<para>This is the value in the <computeroutput>&lt;</computeroutput>?xml version=&quot;1.0&quot;?&gt; header of the XML document. If the version attribute was not explicitly given in the header, this function returns an empty string. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="624"/>
      </memberdef>
      <memberdef kind="function" id="classwx_xml_document_1aa610055c17d575cd3dd0058ab9216818" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxXmlDocument::IsOk</definition>
        <argsstring>() const </argsstring>
        <name>IsOk</name>
        <briefdescription>
<para>Returns true if the document has been loaded successfully. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="629"/>
      </memberdef>
      <memberdef kind="function" id="classwx_xml_document_1af0dfc897ac9fd69d67a0d8b5f00d23c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxXmlDocument::Load</definition>
        <argsstring>(const wxString &amp;filename, const wxString &amp;encoding=&quot;UTF-8&quot;, int flags=wxXMLDOC_NONE)</argsstring>
        <name>Load</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>encoding</declname>
          <defval>&quot;UTF-8&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>wxXMLDOC_NONE</defval>
        </param>
        <briefdescription>
<para>Parses <emphasis>filename</emphasis> as an xml document and loads its data. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>flags</emphasis> does not contain wxXMLDOC_KEEP_WHITESPACE_NODES, then, while loading, all nodes of type <computeroutput>wxXML_TEXT_NODE</computeroutput> (see <ref refid="classwx_xml_node" kindref="compound">wxXmlNode</ref>) are automatically skipped if they contain whitespaces only.</para><para>The removal of these nodes makes the load process slightly faster and requires less memory however makes impossible to recreate exactly the loaded text with a <ref refid="classwx_xml_document_1aa2bf11ff613c60cc543b536a51e8bd95" kindref="member">Save()</ref> call later. Read the initial description of this class for more info.</para><para>Returns true on success, false otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="646"/>
      </memberdef>
      <memberdef kind="function" id="classwx_xml_document_1a7eaa35dc0416b24624e167dfd6319ed5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxXmlDocument::Load</definition>
        <argsstring>(wxInputStream &amp;stream, const wxString &amp;encoding=&quot;UTF-8&quot;, int flags=wxXMLDOC_NONE)</argsstring>
        <name>Load</name>
        <param>
          <type><ref refid="classwx_input_stream" kindref="compound">wxInputStream</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>encoding</declname>
          <defval>&quot;UTF-8&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>wxXMLDOC_NONE</defval>
        </param>
        <briefdescription>
<para>Like <ref refid="classwx_xml_document_1af0dfc897ac9fd69d67a0d8b5f00d23c2" kindref="member">Load(const wxString&amp;, const wxString&amp;, int)</ref> but takes the data from given input stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="653"/>
      </memberdef>
      <memberdef kind="function" id="classwx_xml_document_1aa2bf11ff613c60cc543b536a51e8bd95" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxXmlDocument::Save</definition>
        <argsstring>(const wxString &amp;filename, int indentstep=2) const </argsstring>
        <name>Save</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indentstep</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
<para>Saves XML tree creating a file named with given string. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>indentstep</emphasis> is greater than or equal to zero, then, while saving, an automatic indentation is added with steps composed by indentstep spaces.</para><para>If <emphasis>indentstep</emphasis> is <computeroutput>wxXML_NO_INDENTATION</computeroutput>, then, automatic indentation is turned off. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="664"/>
      </memberdef>
      <memberdef kind="function" id="classwx_xml_document_1a1c70d7dd152146d14fa50ee90e52908d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxXmlDocument::Save</definition>
        <argsstring>(wxOutputStream &amp;stream, int indentstep=2) const </argsstring>
        <name>Save</name>
        <param>
          <type><ref refid="classwx_output_stream" kindref="compound">wxOutputStream</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indentstep</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
<para>Saves XML tree in the given output stream. </para>        </briefdescription>
        <detaileddescription>
<para>See Save(const wxString&amp;, int) for a description of <emphasis>indentstep</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="670"/>
      </memberdef>
      <memberdef kind="function" id="classwx_xml_document_1a679fea32f0b9750cb871db840c61658c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxXmlDocument::SetDocumentNode</definition>
        <argsstring>(wxXmlNode *node)</argsstring>
        <name>SetDocumentNode</name>
        <param>
          <type><ref refid="classwx_xml_node" kindref="compound">wxXmlNode</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Sets the document node of this document. </para>        </briefdescription>
        <detaileddescription>
<para>Deletes any previous document node. Use <ref refid="classwx_xml_document_1a27183047f9f416fc67ad27d84ac2e74c" kindref="member">DetachDocumentNode()</ref> and then <ref refid="classwx_xml_document_1a679fea32f0b9750cb871db840c61658c" kindref="member">SetDocumentNode()</ref> if you want to replace the document node without deleting the old document tree.</para><para><simplesect kind="since"><para>2.9.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="681"/>
      </memberdef>
      <memberdef kind="function" id="classwx_xml_document_1a45859e3c657c0a10bbf758069551ca00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxXmlDocument::SetEncoding</definition>
        <argsstring>(const wxString &amp;enc)</argsstring>
        <name>SetEncoding</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>enc</declname>
        </param>
        <briefdescription>
<para>Sets the encoding of the document. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="686"/>
      </memberdef>
      <memberdef kind="function" id="classwx_xml_document_1aacce1b11ea4136ceee88e35a9475ab61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxXmlDocument::SetFileEncoding</definition>
        <argsstring>(const wxString &amp;encoding)</argsstring>
        <name>SetFileEncoding</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>encoding</declname>
        </param>
        <briefdescription>
<para>Sets the enconding of the file which will be used to save the document. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="691"/>
      </memberdef>
      <memberdef kind="function" id="classwx_xml_document_1ac5b5e19c90e268ffe10d420797c29aec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxXmlDocument::SetRoot</definition>
        <argsstring>(wxXmlNode *node)</argsstring>
        <name>SetRoot</name>
        <param>
          <type><ref refid="classwx_xml_node" kindref="compound">wxXmlNode</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Sets the root element node of this document. </para>        </briefdescription>
        <detaileddescription>
<para>Will create the document node if necessary. Any previous root element node is deleted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="699"/>
      </memberdef>
      <memberdef kind="function" id="classwx_xml_document_1a84705a38b23e60aa5bb4faa509ada74b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxXmlDocument::SetVersion</definition>
        <argsstring>(const wxString &amp;version)</argsstring>
        <name>SetVersion</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>version</declname>
        </param>
        <briefdescription>
<para>Sets the version of the XML file which will be used to save the document. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="704"/>
      </memberdef>
      <memberdef kind="function" id="classwx_xml_document_1a1952959f0e8cbff332a5a22efd54bd61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_xml_document" kindref="compound">wxXmlDocument</ref> &amp;</type>
        <definition>wxXmlDocument&amp; wxXmlDocument::operator=</definition>
        <argsstring>(const wxXmlDocument &amp;doc)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classwx_xml_document" kindref="compound">wxXmlDocument</ref> &amp;</type>
          <declname>doc</declname>
        </param>
        <briefdescription>
<para>Deep copies the given document. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="709"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_xml_document_1adf6a4ae7592f4f78ce0c77993e52c88f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_version_info" kindref="compound">wxVersionInfo</ref></type>
        <definition>static wxVersionInfo wxXmlDocument::GetLibraryVersionInfo</definition>
        <argsstring>()</argsstring>
        <name>GetLibraryVersionInfo</name>
        <briefdescription>
<para>Get expat library version information. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.9.2 </para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_version_info" kindref="compound">wxVersionInfo</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="717"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class holds XML data/document as parsed by XML parser in the root node. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="classwx_xml_document" kindref="compound">wxXmlDocument</ref> internally uses the expat library which comes with wxWidgets to parse the given stream.</para><para>A simple example of using XML classes is:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwx_xml_document" kindref="compound" tooltip="This class holds XML data/document as parsed by XML parser in the root node.">wxXmlDocument</ref><sp/>doc;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!doc.<ref refid="classwx_xml_document_1af0dfc897ac9fd69d67a0d8b5f00d23c2" kindref="member" tooltip="Parses filename as an xml document and loads its data.">Load</ref>(</highlight><highlight class="stringliteral">&quot;myfile.xml&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>processing<sp/>the<sp/>XML<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doc.<ref refid="classwx_xml_document_1a47e0477f9b42518d1143cf5468d3520f" kindref="member" tooltip="Returns the root element node of the document.">GetRoot</ref>()-&gt;<ref refid="classwx_xml_node_1a0698933e2fdd3156d4c0c041327ba730" kindref="member" tooltip="Returns the name of this node.">GetName</ref>()<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;myroot-node&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>examine<sp/>prologue</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwx_xml_node" kindref="compound" tooltip="Represents a node in an XML document.">wxXmlNode</ref><sp/>*prolog<sp/>=<sp/>doc.<ref refid="classwx_xml_document_1a7efd58acc5dc3617685cd38454644ed4" kindref="member" tooltip="Returns the document node of the document.">GetDocumentNode</ref>()-&gt;<ref refid="classwx_xml_node_1ad9bb1ba74e8f01cba6107a59ccc7273b" kindref="member" tooltip="Returns the first child of this node.">GetChildren</ref>();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(prolog)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prolog-&gt;<ref refid="classwx_xml_node_1a46a55bf74bc68bb0f6cebcc50aeecb07" kindref="member" tooltip="Returns the type of this node.">GetType</ref>()<sp/>==<sp/><ref refid="xml_8h_1a8439c6a82632b0ef566fcadbcd9e7510adc8217435e23d2e3e9848a494b91c0a3" kindref="member">wxXML_PI_NODE</ref><sp/>&amp;&amp;<sp/>prolog-&gt;<ref refid="classwx_xml_node_1a0698933e2fdd3156d4c0c041327ba730" kindref="member" tooltip="Returns the name of this node.">GetName</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;target&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>Process<sp/>Instruction<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_string" kindref="compound" tooltip="The wxString class has been completely rewritten for wxWidgets 3.0 and this change was actually the m...">wxString</ref><sp/>pi<sp/>=<sp/>prolog-&gt;<ref refid="classwx_xml_node_1a630878872d56f8b9db55565bee57a891" kindref="member" tooltip="Returns the content of this node.">GetContent</ref>();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwx_xml_node" kindref="compound" tooltip="Represents a node in an XML document.">wxXmlNode</ref><sp/>*child<sp/>=<sp/>doc.<ref refid="classwx_xml_document_1a47e0477f9b42518d1143cf5468d3520f" kindref="member" tooltip="Returns the root element node of the document.">GetRoot</ref>()-&gt;<ref refid="classwx_xml_node_1ad9bb1ba74e8f01cba6107a59ccc7273b" kindref="member" tooltip="Returns the first child of this node.">GetChildren</ref>();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(child)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(child-&gt;<ref refid="classwx_xml_node_1a0698933e2fdd3156d4c0c041327ba730" kindref="member" tooltip="Returns the name of this node.">GetName</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;tag1&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>text<sp/>enclosed<sp/>by<sp/>tag1/tag1</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_string" kindref="compound" tooltip="The wxString class has been completely rewritten for wxWidgets 3.0 and this change was actually the m...">wxString</ref><sp/>content<sp/>=<sp/>child-&gt;<ref refid="classwx_xml_node_1a44831c2e36382a642aa88558d8a2d276" kindref="member" tooltip="Returns the content of the first child node of type wxXML_TEXT_NODE or wxXML_CDATA_SECTION_NODE.">GetNodeContent</ref>();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>attributes<sp/>of<sp/>tag1</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_string" kindref="compound" tooltip="The wxString class has been completely rewritten for wxWidgets 3.0 and this change was actually the m...">wxString</ref><sp/>attrvalue1<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child-&gt;<ref refid="classwx_xml_node_1a17a0abf151a15be11a9bae1d7528d65c" kindref="member" tooltip="Returns true if a attribute named attrName could be found.">GetAttribute</ref>(</highlight><highlight class="stringliteral">&quot;attr1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;default-value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_string" kindref="compound" tooltip="The wxString class has been completely rewritten for wxWidgets 3.0 and this change was actually the m...">wxString</ref><sp/>attrvalue2<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child-&gt;<ref refid="classwx_xml_node_1a17a0abf151a15be11a9bae1d7528d65c" kindref="member" tooltip="Returns true if a attribute named attrName could be found.">GetAttribute</ref>(</highlight><highlight class="stringliteral">&quot;attr2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;default-value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(child-&gt;<ref refid="classwx_xml_node_1a0698933e2fdd3156d4c0c041327ba730" kindref="member" tooltip="Returns the name of this node.">GetName</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;tag2&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>tag2<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child<sp/>=<sp/>child-&gt;<ref refid="classwx_xml_node_1a957d5728f448a8f48a5158a2abd04b10" kindref="member" tooltip="Returns a pointer to the sibling of this node or NULL if there are no siblings.">GetNext</ref>();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
</programlisting></para><para>Note that if you want to preserve the original formatting of the loaded file including whitespaces and indentation, you need to turn off whitespace-only textnode removal and automatic indentation:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwx_xml_document" kindref="compound" tooltip="This class holds XML data/document as parsed by XML parser in the root node.">wxXmlDocument</ref><sp/>doc;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc.<ref refid="classwx_xml_document_1af0dfc897ac9fd69d67a0d8b5f00d23c2" kindref="member" tooltip="Parses filename as an xml document and loads its data.">Load</ref>(</highlight><highlight class="stringliteral">&quot;myfile.xml&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;UTF-8&quot;</highlight><highlight class="normal">,<sp/>wxXMLDOC_KEEP_WHITESPACE_NODES);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>myfile2.xml<sp/>will<sp/>be<sp/>identical<sp/>to<sp/>myfile.xml<sp/>saving<sp/>it<sp/>this<sp/>way:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc.<ref refid="classwx_xml_document_1aa2bf11ff613c60cc543b536a51e8bd95" kindref="member" tooltip="Saves XML tree creating a file named with given string.">Save</ref>(</highlight><highlight class="stringliteral">&quot;myfile2.xml&quot;</highlight><highlight class="normal">,<sp/>wxXML_NO_INDENTATION);</highlight></codeline>
</programlisting></para><para>Using default parameters, you will get a reformatted document which in general is different from the original loaded content:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwx_xml_document" kindref="compound" tooltip="This class holds XML data/document as parsed by XML parser in the root node.">wxXmlDocument</ref><sp/>doc;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc.<ref refid="classwx_xml_document_1af0dfc897ac9fd69d67a0d8b5f00d23c2" kindref="member" tooltip="Parses filename as an xml document and loads its data.">Load</ref>(</highlight><highlight class="stringliteral">&quot;myfile.xml&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc.<ref refid="classwx_xml_document_1aa2bf11ff613c60cc543b536a51e8bd95" kindref="member" tooltip="Saves XML tree creating a file named with given string.">Save</ref>(</highlight><highlight class="stringliteral">&quot;myfile2.xml&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>myfile2.xml<sp/>!=<sp/>myfile.xml</highlight></codeline>
</programlisting></para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxxml" kindref="member">wxXML</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__xml" kindref="compound">XML</ref></para><para><simplesect kind="see"><para><ref refid="classwx_xml_node" kindref="compound">wxXmlNode</ref>, <ref refid="classwx_xml_attribute" kindref="compound">wxXmlAttribute</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="11928">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="11927">
        <label>wxXmlDocument</label>
        <link refid="classwx_xml_document"/>
        <childnode refid="11928" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11930">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="11931" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="11929">
        <label>wxXmlDocument</label>
        <link refid="classwx_xml_document"/>
        <childnode refid="11930" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11931">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" line="525" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/xml/xml.h" bodystart="524" bodyend="718"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxXmlDocument</scope><name>AllocExclusive</name></member>
      <member refid="classwx_xml_document_1a03971c5dcde4411827c408ed273fbfe4" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>AppendToProlog</name></member>
      <member refid="classwx_object_1a1d39f1d3650fe0982c9a1abe7f9fe7b7" prot="protected" virt="virtual"><scope>wxXmlDocument</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a95c6a5e4e1e03ff23c7b9efe4cff0c1a" prot="protected" virt="virtual"><scope>wxXmlDocument</scope><name>CreateRefData</name></member>
      <member refid="classwx_xml_document_1a27183047f9f416fc67ad27d84ac2e74c" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>DetachDocumentNode</name></member>
      <member refid="classwx_xml_document_1ae55d2a4fab3f8010f53aaf6a34b5a8b9" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>DetachRoot</name></member>
      <member refid="classwx_object_1ab3a0c6f723cbaddb47be4e8dd98cc8e2" prot="public" virt="virtual"><scope>wxXmlDocument</scope><name>GetClassInfo</name></member>
      <member refid="classwx_xml_document_1a7efd58acc5dc3617685cd38454644ed4" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>GetDocumentNode</name></member>
      <member refid="classwx_xml_document_1a8bfe22961e0bd50124bcbd2fa3cd4dfd" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>GetEncoding</name></member>
      <member refid="classwx_xml_document_1aa4fa38c9a0053060f1fd63e3fcc96d23" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>GetFileEncoding</name></member>
      <member refid="classwx_xml_document_1adf6a4ae7592f4f78ce0c77993e52c88f" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>GetLibraryVersionInfo</name></member>
      <member refid="classwx_object_1aabdb4fc957226544a8408167844e4f42" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>GetRefData</name></member>
      <member refid="classwx_xml_document_1a47e0477f9b42518d1143cf5468d3520f" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>GetRoot</name></member>
      <member refid="classwx_xml_document_1a9c3657cbf31c65f2d08f5ec865c01388" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>GetVersion</name></member>
      <member refid="classwx_object_1af40d580385cf4f8112fae7713404b01e" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>IsKindOf</name></member>
      <member refid="classwx_xml_document_1aa610055c17d575cd3dd0058ab9216818" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>IsOk</name></member>
      <member refid="classwx_object_1a80a1a3fda7b14396a9ddd3d7a46a88bd" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>IsSameAs</name></member>
      <member refid="classwx_xml_document_1af0dfc897ac9fd69d67a0d8b5f00d23c2" prot="public" virt="virtual"><scope>wxXmlDocument</scope><name>Load</name></member>
      <member refid="classwx_xml_document_1a7eaa35dc0416b24624e167dfd6319ed5" prot="public" virt="virtual"><scope>wxXmlDocument</scope><name>Load</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxXmlDocument</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>operator new</name></member>
      <member refid="classwx_xml_document_1a1952959f0e8cbff332a5a22efd54bd61" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>operator=</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>Ref</name></member>
      <member refid="classwx_xml_document_1aa2bf11ff613c60cc543b536a51e8bd95" prot="public" virt="virtual"><scope>wxXmlDocument</scope><name>Save</name></member>
      <member refid="classwx_xml_document_1a1c70d7dd152146d14fa50ee90e52908d" prot="public" virt="virtual"><scope>wxXmlDocument</scope><name>Save</name></member>
      <member refid="classwx_xml_document_1a679fea32f0b9750cb871db840c61658c" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>SetDocumentNode</name></member>
      <member refid="classwx_xml_document_1a45859e3c657c0a10bbf758069551ca00" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>SetEncoding</name></member>
      <member refid="classwx_xml_document_1aacce1b11ea4136ceee88e35a9475ab61" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>SetFileEncoding</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>SetRefData</name></member>
      <member refid="classwx_xml_document_1ac5b5e19c90e268ffe10d420797c29aec" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>SetRoot</name></member>
      <member refid="classwx_xml_document_1a84705a38b23e60aa5bb4faa509ada74b" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>SetVersion</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>UnShare</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>wxObject</name></member>
      <member refid="classwx_xml_document_1aa32a33f35c0f3f0a24490a763372d13c" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>wxXmlDocument</name></member>
      <member refid="classwx_xml_document_1acac7d814bbdfaf4b36de2acb5f1d3b8c" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>wxXmlDocument</name></member>
      <member refid="classwx_xml_document_1abdcc9918ef0bf28dc753b0130f819e39" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>wxXmlDocument</name></member>
      <member refid="classwx_xml_document_1a8a89e05266c37c99a1849aeb9eb1832a" prot="public" virt="non-virtual"><scope>wxXmlDocument</scope><name>wxXmlDocument</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxXmlDocument</scope><name>~wxObject</name></member>
      <member refid="classwx_xml_document_1a7dcd1d859ef9d8da939685d4fa1edbdb" prot="public" virt="virtual"><scope>wxXmlDocument</scope><name>~wxXmlDocument</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
