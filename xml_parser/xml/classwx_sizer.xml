<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_sizer" kind="class" prot="public">
    <compoundname>wxSizer</compoundname>
    <basecompoundref refid="classwx_object" prot="public" virt="non-virtual">wxObject</basecompoundref>
    <derivedcompoundref refid="classwx_box_sizer" prot="public" virt="non-virtual">wxBoxSizer</derivedcompoundref>
    <derivedcompoundref refid="classwx_grid_sizer" prot="public" virt="non-virtual">wxGridSizer</derivedcompoundref>
    <includes local="no">wx/sizer.h</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_sizer_1a619f8bd8f4fd641819626813b1c1f576" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxSizerItemList &amp;</type>
        <definition>wxSizerItemList&amp; wxSizer::GetChildren</definition>
        <argsstring>()</argsstring>
        <name>GetChildren</name>
        <briefdescription>
<para>Returns the list of the items in this sizer. </para>        </briefdescription>
        <detaileddescription>
<para>The elements of type-safe wxList <computeroutput>wxSizerItemList</computeroutput> are pointers to objects of type <ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="420"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a542ef0705987b3b25cec3d0607dfdca2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const wxSizerItemList &amp;</type>
        <definition>const wxSizerItemList&amp; wxSizer::GetChildren</definition>
        <argsstring>() const </argsstring>
        <name>GetChildren</name>
        <briefdescription>
<para>Returns the list of the items in this sizer. </para>        </briefdescription>
        <detaileddescription>
<para>The elements of type-safe wxList <computeroutput>wxSizerItemList</computeroutput> are pointers to objects of type <ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="421"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_sizer_1a26fc90231667639d5af7c2f8f7b75c80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSizer::SetItemMinSize</definition>
        <argsstring>(wxWindow *window, int width, int height)</argsstring>
        <name>SetItemMinSize</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Set an item&apos;s minimum size by window, sizer, or position. </para>        </briefdescription>
        <detaileddescription>
<para>This function enables an application to set the size of an item after initial creation.</para><para>The <emphasis>window</emphasis> or <emphasis>sizer</emphasis> will be found recursively in the sizer&apos;s descendants.</para><para><simplesect kind="see"><para><ref refid="classwx_sizer_item_1ae81527c4eae65c1bdc491309df643d07" kindref="member">wxSizerItem::SetMinSize()</ref></para></simplesect>
<simplesect kind="return"><para>true if the minimal size was successfully set or false if the item was not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="809"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a486d80e43e6cbd8fea5fa2879d111071" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSizer::SetItemMinSize</definition>
        <argsstring>(wxWindow *window, const wxSize &amp;size)</argsstring>
        <name>SetItemMinSize</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Set an item&apos;s minimum size by window, sizer, or position. </para>        </briefdescription>
        <detaileddescription>
<para>This function enables an application to set the size of an item after initial creation.</para><para>The <emphasis>window</emphasis> or <emphasis>sizer</emphasis> will be found recursively in the sizer&apos;s descendants.</para><para><simplesect kind="see"><para><ref refid="classwx_sizer_item_1ae81527c4eae65c1bdc491309df643d07" kindref="member">wxSizerItem::SetMinSize()</ref></para></simplesect>
<simplesect kind="return"><para>true if the minimal size was successfully set or false if the item was not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="810"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a8e4230a56ca442a3eb3577f6c47094d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSizer::SetItemMinSize</definition>
        <argsstring>(wxSizer *sizer, int width, int height)</argsstring>
        <name>SetItemMinSize</name>
        <param>
          <type><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> *</type>
          <declname>sizer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Set an item&apos;s minimum size by window, sizer, or position. </para>        </briefdescription>
        <detaileddescription>
<para>This function enables an application to set the size of an item after initial creation.</para><para>The <emphasis>window</emphasis> or <emphasis>sizer</emphasis> will be found recursively in the sizer&apos;s descendants.</para><para><simplesect kind="see"><para><ref refid="classwx_sizer_item_1ae81527c4eae65c1bdc491309df643d07" kindref="member">wxSizerItem::SetMinSize()</ref></para></simplesect>
<simplesect kind="return"><para>true if the minimal size was successfully set or false if the item was not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="812"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a9941c644acf3b215678cea0ea15aeec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSizer::SetItemMinSize</definition>
        <argsstring>(wxSizer *sizer, const wxSize &amp;size)</argsstring>
        <name>SetItemMinSize</name>
        <param>
          <type><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> *</type>
          <declname>sizer</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Set an item&apos;s minimum size by window, sizer, or position. </para>        </briefdescription>
        <detaileddescription>
<para>This function enables an application to set the size of an item after initial creation.</para><para>The <emphasis>window</emphasis> or <emphasis>sizer</emphasis> will be found recursively in the sizer&apos;s descendants.</para><para><simplesect kind="see"><para><ref refid="classwx_sizer_item_1ae81527c4eae65c1bdc491309df643d07" kindref="member">wxSizerItem::SetMinSize()</ref></para></simplesect>
<simplesect kind="return"><para>true if the minimal size was successfully set or false if the item was not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="813"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1aae51219b9dfd74c3af5823e39f558ed4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSizer::SetItemMinSize</definition>
        <argsstring>(size_t index, int width, int height)</argsstring>
        <name>SetItemMinSize</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Set an item&apos;s minimum size by window, sizer, or position. </para>        </briefdescription>
        <detaileddescription>
<para>This function enables an application to set the size of an item after initial creation.</para><para>The <emphasis>window</emphasis> or <emphasis>sizer</emphasis> will be found recursively in the sizer&apos;s descendants.</para><para><simplesect kind="see"><para><ref refid="classwx_sizer_item_1ae81527c4eae65c1bdc491309df643d07" kindref="member">wxSizerItem::SetMinSize()</ref></para></simplesect>
<simplesect kind="return"><para>true if the minimal size was successfully set or false if the item was not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="815"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1abc7a754f4a12f80025fad0d131082fbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSizer::SetItemMinSize</definition>
        <argsstring>(size_t index, const wxSize &amp;size)</argsstring>
        <name>SetItemMinSize</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Set an item&apos;s minimum size by window, sizer, or position. </para>        </briefdescription>
        <detaileddescription>
<para>This function enables an application to set the size of an item after initial creation.</para><para>The <emphasis>window</emphasis> or <emphasis>sizer</emphasis> will be found recursively in the sizer&apos;s descendants.</para><para><simplesect kind="see"><para><ref refid="classwx_sizer_item_1ae81527c4eae65c1bdc491309df643d07" kindref="member">wxSizerItem::SetMinSize()</ref></para></simplesect>
<simplesect kind="return"><para>true if the minimal size was successfully set or false if the item was not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="816"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_sizer_1ae05f76a5e5a8e721065dd5aec1bd6cb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxSizer::wxSizer</definition>
        <argsstring>()</argsstring>
        <name>wxSizer</name>
        <briefdescription>
<para>The constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Note that <ref refid="classwx_sizer" kindref="compound">wxSizer</ref> is an abstract base class and may not be instantiated. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="116"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a5d52467e4e1367939ef4d9ddc6876cfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxSizer::~wxSizer</definition>
        <argsstring>()</argsstring>
        <name>~wxSizer</name>
        <briefdescription>
<para>The destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="121"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a4e2122f2749261473c21cb192d00709f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::Add</definition>
        <argsstring>(wxWindow *window, const wxSizerFlags &amp;flags)</argsstring>
        <name>Add</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Appends a child to the sizer. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> itself is an abstract class, but the parameters are equivalent in the derived classes that you will instantiate to use it so they are described here:</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to be added to the sizer. Its initial size (either set explicitly by the user or calculated internally when using wxDefaultSize) is interpreted as the minimal and in many cases also the initial size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> object that enables you to specify most of the above parameters more conveniently. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="139"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a81d21f287c416da96739a73faa54840d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::Add</definition>
        <argsstring>(wxWindow *window, int proportion=0, int flag=0, int border=0, wxObject *userData=NULL)</argsstring>
        <name>Add</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>proportion</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flag</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>border</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classwx_object" kindref="compound">wxObject</ref> *</type>
          <declname>userData</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Appends a child to the sizer. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> itself is an abstract class, but the parameters are equivalent in the derived classes that you will instantiate to use it so they are described here:</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to be added to the sizer. Its initial size (either set explicitly by the user or calculated internally when using wxDefaultSize) is interpreted as the minimal and in many cases also the initial size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>proportion</parametername>
</parameternamelist>
<parameterdescription>
<para>Although the meaning of this parameter is undefined in <ref refid="classwx_sizer" kindref="compound">wxSizer</ref>, it is used in <ref refid="classwx_box_sizer" kindref="compound">wxBoxSizer</ref> to indicate if a child of a sizer can change its size in the main orientation of the <ref refid="classwx_box_sizer" kindref="compound">wxBoxSizer</ref> - where 0 stands for not changeable and a value of more than zero is interpreted relative to the value of other children of the same <ref refid="classwx_box_sizer" kindref="compound">wxBoxSizer</ref>. For example, you might have a horizontal <ref refid="classwx_box_sizer" kindref="compound">wxBoxSizer</ref> with three children, two of which are supposed to change their size with the sizer. Then the two stretchable windows would get a value of 1 each to make them grow and shrink equally with the sizer&apos;s horizontal dimension. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flag</parametername>
</parameternamelist>
<parameterdescription>
<para>OR-combination of flags affecting sizer&apos;s behaviour. See <ref refid="classwx_sizer_1wxsizer_flags" kindref="member">wxSizer flags list</ref> for details. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>border</parametername>
</parameternamelist>
<parameterdescription>
<para>Determines the border width, if the flag parameter is set to include any border flag. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userData</parametername>
</parameternamelist>
<parameterdescription>
<para>Allows an extra object to be attached to the sizer item, for use in derived classes when sizing information is more complex than the proportion and flag will allow for. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="179"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a1c45a17c2d1e2d669c46d558d521d891" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::Add</definition>
        <argsstring>(wxSizer *sizer, const wxSizerFlags &amp;flags)</argsstring>
        <name>Add</name>
        <param>
          <type><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> *</type>
          <declname>sizer</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Appends a child to the sizer. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> itself is an abstract class, but the parameters are equivalent in the derived classes that you will instantiate to use it so they are described here:</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sizer</parametername>
</parameternamelist>
<parameterdescription>
<para>The (child-)sizer to be added to the sizer. This allows placing a child sizer in a sizer and thus to create hierarchies of sizers (typically a vertical box as the top sizer and several horizontal boxes on the level beneath). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> object that enables you to specify most of the above parameters more conveniently. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="197"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1aaa40babf76cdb56d20f6c37fff282610" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::Add</definition>
        <argsstring>(wxSizer *sizer, int proportion=0, int flag=0, int border=0, wxObject *userData=NULL)</argsstring>
        <name>Add</name>
        <param>
          <type><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> *</type>
          <declname>sizer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>proportion</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flag</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>border</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classwx_object" kindref="compound">wxObject</ref> *</type>
          <declname>userData</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Appends a child to the sizer. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> itself is an abstract class, but the parameters are equivalent in the derived classes that you will instantiate to use it so they are described here:</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sizer</parametername>
</parameternamelist>
<parameterdescription>
<para>The (child-)sizer to be added to the sizer. This allows placing a child sizer in a sizer and thus to create hierarchies of sizers (typically a vertical box as the top sizer and several horizontal boxes on the level beneath). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>proportion</parametername>
</parameternamelist>
<parameterdescription>
<para>Although the meaning of this parameter is undefined in <ref refid="classwx_sizer" kindref="compound">wxSizer</ref>, it is used in <ref refid="classwx_box_sizer" kindref="compound">wxBoxSizer</ref> to indicate if a child of a sizer can change its size in the main orientation of the <ref refid="classwx_box_sizer" kindref="compound">wxBoxSizer</ref> - where 0 stands for not changeable and a value of more than zero is interpreted relative to the value of other children of the same <ref refid="classwx_box_sizer" kindref="compound">wxBoxSizer</ref>. For example, you might have a horizontal <ref refid="classwx_box_sizer" kindref="compound">wxBoxSizer</ref> with three children, two of which are supposed to change their size with the sizer. Then the two stretchable windows would get a value of 1 each to make them grow and shrink equally with the sizer&apos;s horizontal dimension. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flag</parametername>
</parameternamelist>
<parameterdescription>
<para>OR-combination of flags affecting sizer&apos;s behaviour. See <ref refid="classwx_sizer_1wxsizer_flags" kindref="member">wxSizer flags list</ref> for details. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>border</parametername>
</parameternamelist>
<parameterdescription>
<para>Determines the border width, if the flag parameter is set to include any border flag. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userData</parametername>
</parameternamelist>
<parameterdescription>
<para>Allows an extra object to be attached to the sizer item, for use in derived classes when sizing information is more complex than the proportion and flag will allow for. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="237"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1aa2d6009b34b1d34de920390795d8c0fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::Add</definition>
        <argsstring>(int width, int height, int proportion=0, int flag=0, int border=0, wxObject *userData=NULL)</argsstring>
        <name>Add</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>proportion</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flag</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>border</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classwx_object" kindref="compound">wxObject</ref> *</type>
          <declname>userData</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Appends a spacer child to the sizer. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> itself is an abstract class, but the parameters are equivalent in the derived classes that you will instantiate to use it so they are described here.</para><para><emphasis>width</emphasis> and <emphasis>height</emphasis> specify the dimension of a spacer to be added to the sizer. Adding spacers to sizers gives more flexibility in the design of dialogs; imagine for example a horizontal box with two buttons at the bottom of a dialog: you might want to insert a space between the two buttons and make that space stretchable using the proportion flag and the result will be that the left button will be aligned with the left side of the dialog and the right button with the right side - the space in between will shrink and grow with the dialog.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the spacer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the spacer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>proportion</parametername>
</parameternamelist>
<parameterdescription>
<para>Although the meaning of this parameter is undefined in <ref refid="classwx_sizer" kindref="compound">wxSizer</ref>, it is used in <ref refid="classwx_box_sizer" kindref="compound">wxBoxSizer</ref> to indicate if a child of a sizer can change its size in the main orientation of the <ref refid="classwx_box_sizer" kindref="compound">wxBoxSizer</ref> - where 0 stands for not changeable and a value of more than zero is interpreted relative to the value of other children of the same <ref refid="classwx_box_sizer" kindref="compound">wxBoxSizer</ref>. For example, you might have a horizontal <ref refid="classwx_box_sizer" kindref="compound">wxBoxSizer</ref> with three children, two of which are supposed to change their size with the sizer. Then the two stretchable windows would get a value of 1 each to make them grow and shrink equally with the sizer&apos;s horizontal dimension. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flag</parametername>
</parameternamelist>
<parameterdescription>
<para>OR-combination of flags affecting sizer&apos;s behaviour. See <ref refid="classwx_sizer_1wxsizer_flags" kindref="member">wxSizer flags list</ref> for details. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>border</parametername>
</parameternamelist>
<parameterdescription>
<para>Determines the border width, if the flag parameter is set to include any border flag. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userData</parametername>
</parameternamelist>
<parameterdescription>
<para>Allows an extra object to be attached to the sizer item, for use in derived classes when sizing information is more complex than the proportion and flag will allow for. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="285"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a6d7602d14f246395773e00ca46bf816a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::Add</definition>
        <argsstring>(wxSizerItem *item)</argsstring>
        <name>Add</name>
        <param>
          <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="287"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1aedfc0bfd98114c348766431dcb49c9f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>virtual wxSizerItem* wxSizer::AddSpacer</definition>
        <argsstring>(int size)</argsstring>
        <name>AddSpacer</name>
        <reimplementedby refid="classwx_box_sizer_1a58007d1fd88698b9f733ba651977ad55">AddSpacer</reimplementedby>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>This base function adds non-stretchable space to both the horizontal and vertical orientation of the sizer. </para>        </briefdescription>
        <detaileddescription>
<para>More readable way of calling: <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_sizer_1a4e2122f2749261473c21cb192d00709f" kindref="member" tooltip="Appends a child to the sizer.">wxSizer::Add</ref>(size,<sp/>size,<sp/>0).</highlight></codeline>
</programlisting> <simplesect kind="see"><para><ref refid="classwx_box_sizer_1a58007d1fd88698b9f733ba651977ad55" kindref="member">wxBoxSizer::AddSpacer()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="298"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1af529134a9dc74a0551d12e747af5c976" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::AddStretchSpacer</definition>
        <argsstring>(int prop=1)</argsstring>
        <name>AddStretchSpacer</name>
        <param>
          <type>int</type>
          <declname>prop</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Adds stretchable space to the sizer. </para>        </briefdescription>
        <detaileddescription>
<para>More readable way of calling: <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_sizer_1a4e2122f2749261473c21cb192d00709f" kindref="member" tooltip="Appends a child to the sizer.">wxSizer::Add</ref>(0,<sp/>0,<sp/>prop).</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="307"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a371b9b72e55c1fedfbea9d298bc2df77" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>virtual wxSize wxSizer::CalcMin</definition>
        <argsstring>()=0</argsstring>
        <name>CalcMin</name>
        <reimplementedby refid="classwx_wrap_sizer_1adb0c0f62bae28636b1766bcd51689386">CalcMin</reimplementedby>
        <reimplementedby refid="classwx_box_sizer_1abbb06ed94dca0aef849fd0b95d76346e">CalcMin</reimplementedby>
        <reimplementedby refid="classwx_static_box_sizer_1a744efab8da5e15d74a5f36a3f1ed4fdd">CalcMin</reimplementedby>
        <reimplementedby refid="classwx_grid_sizer_1a6ea31d3cb8b6d101d5d279e84b58ba39">CalcMin</reimplementedby>
        <reimplementedby refid="classwx_flex_grid_sizer_1add516aeac6cf56faef4cefd53542bba2">CalcMin</reimplementedby>
        <reimplementedby refid="classwx_std_dialog_button_sizer_1a30f031e45b3559f4a1bf52dbf0448ae1">CalcMin</reimplementedby>
        <reimplementedby refid="classwx_grid_bag_sizer_1ad8ae813d3acdca02d81ecb84d82e2083">CalcMin</reimplementedby>
        <briefdescription>
<para>This method is abstract and has to be overwritten by any derived class. </para>        </briefdescription>
        <detaileddescription>
<para>Here, the sizer will do the actual calculation of its children&apos;s minimal sizes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="313"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a5909429d14de1baf1b832d5c1abf7821" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxSizer::Clear</definition>
        <argsstring>(bool delete_windows=false)</argsstring>
        <name>Clear</name>
        <param>
          <type>bool</type>
          <declname>delete_windows</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Detaches all children from the sizer. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>delete_windows</emphasis> is true then child windows will also be deleted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="319"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a0da5d65c9b4192bd24cc3feb1be69e59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxSizer::ComputeFittingClientSize</definition>
        <argsstring>(wxWindow *window)</argsstring>
        <name>ComputeFittingClientSize</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Computes client area size for <emphasis>window</emphasis> so that it matches the sizer&apos;s minimal size. </para>        </briefdescription>
        <detaileddescription>
<para>Unlike <ref refid="classwx_sizer_1a9fab8d16aefe347dbd57e0bdfe0d810d" kindref="member">GetMinSize()</ref>, this method accounts for other constraints imposed on <emphasis>window</emphasis>, namely display&apos;s size (returned size will never be too large for the display) and maximum window size if previously set by <ref refid="classwx_window_1a38b496214d728a3212afadee5ed51606" kindref="member">wxWindow::SetMaxSize()</ref>.</para><para>The returned value is suitable for passing to <ref refid="classwx_window_1aa59f715217fffa5bcf14cd97f92e7840" kindref="member">wxWindow::SetClientSize()</ref> or <ref refid="classwx_window_1a6e35ba44b97e374dfffa460d41d94b31" kindref="member">wxWindow::SetMinClientSize()</ref>.</para><para><simplesect kind="since"><para>2.8.8</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_sizer_1a3056cb4d47ea296e095b6cbc35d61155" kindref="member">ComputeFittingWindowSize()</ref>, <ref refid="classwx_sizer_1abad9cedc0cbe9ade2c799da23462d17e" kindref="member">Fit()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="335"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a3056cb4d47ea296e095b6cbc35d61155" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxSizer::ComputeFittingWindowSize</definition>
        <argsstring>(wxWindow *window)</argsstring>
        <name>ComputeFittingWindowSize</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Like <ref refid="classwx_sizer_1a0da5d65c9b4192bd24cc3feb1be69e59" kindref="member">ComputeFittingClientSize()</ref>, but converts the result into window size. </para>        </briefdescription>
        <detaileddescription>
<para>The returned value is suitable for passing to <ref refid="classwx_window_1a180312d5ad4a4a5ad805b8d52d67a74e" kindref="member">wxWindow::SetSize()</ref> or <ref refid="classwx_window_1a3fc066f4d8083319f004ac43811d545d" kindref="member">wxWindow::SetMinSize()</ref>.</para><para><simplesect kind="since"><para>2.8.8</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_sizer_1a0da5d65c9b4192bd24cc3feb1be69e59" kindref="member">ComputeFittingClientSize()</ref>, <ref refid="classwx_sizer_1abad9cedc0cbe9ade2c799da23462d17e" kindref="member">Fit()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="346"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a362d7d556185fe9cd1b5d24004b86518" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxSizer::Detach</definition>
        <argsstring>(wxWindow *window)</argsstring>
        <name>Detach</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Detach the child <emphasis>window</emphasis> from the sizer without destroying it. </para>        </briefdescription>
        <detaileddescription>
<para>This method does not cause any layout or resizing to take place, call <ref refid="classwx_sizer_1a1ea8589882944f8ac78b6ff8abde1554" kindref="member">Layout()</ref> to update the layout &quot;on screen&quot; after detaching a child from the sizer.</para><para>Returns true if the child item was found and detached, false otherwise.</para><para><simplesect kind="see"><para><ref refid="classwx_sizer_1a06ef74a0bb6aba1f1d3aab02fb402fec" kindref="member">Remove()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="358"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a0283dc800bd1c03cd10d437cef240791" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxSizer::Detach</definition>
        <argsstring>(wxSizer *sizer)</argsstring>
        <name>Detach</name>
        <param>
          <type><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> *</type>
          <declname>sizer</declname>
        </param>
        <briefdescription>
<para>Detach the child <emphasis>sizer</emphasis> from the sizer without destroying it. </para>        </briefdescription>
        <detaileddescription>
<para>This method does not cause any layout or resizing to take place, call <ref refid="classwx_sizer_1a1ea8589882944f8ac78b6ff8abde1554" kindref="member">Layout()</ref> to update the layout &quot;on screen&quot; after detaching a child from the sizer.</para><para>Returns true if the child item was found and detached, false otherwise.</para><para><simplesect kind="see"><para><ref refid="classwx_sizer_1a06ef74a0bb6aba1f1d3aab02fb402fec" kindref="member">Remove()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="370"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1aef45062fe9096f2c48c20d8ae3ad6476" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxSizer::Detach</definition>
        <argsstring>(int index)</argsstring>
        <name>Detach</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Detach a item at position <emphasis>index</emphasis> from the sizer without destroying it. </para>        </briefdescription>
        <detaileddescription>
<para>This method does not cause any layout or resizing to take place, call <ref refid="classwx_sizer_1a1ea8589882944f8ac78b6ff8abde1554" kindref="member">Layout()</ref> to update the layout &quot;on screen&quot; after detaching a child from the sizer. Returns true if the child item was found and detached, false otherwise.</para><para><simplesect kind="see"><para><ref refid="classwx_sizer_1a06ef74a0bb6aba1f1d3aab02fb402fec" kindref="member">Remove()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="381"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1abad9cedc0cbe9ade2c799da23462d17e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxSizer::Fit</definition>
        <argsstring>(wxWindow *window)</argsstring>
        <name>Fit</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Tell the sizer to resize the <emphasis>window</emphasis> so that its client area matches the sizer&apos;s minimal size (<ref refid="classwx_sizer_1a0da5d65c9b4192bd24cc3feb1be69e59" kindref="member">ComputeFittingClientSize()</ref> is called to determine it). </para>        </briefdescription>
        <detaileddescription>
<para>This is commonly done in the constructor of the window itself, see sample in the description of <ref refid="classwx_box_sizer" kindref="compound">wxBoxSizer</ref>.</para><para><simplesect kind="return"><para>The new window size.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_sizer_1a0da5d65c9b4192bd24cc3feb1be69e59" kindref="member">ComputeFittingClientSize()</ref>, <ref refid="classwx_sizer_1a3056cb4d47ea296e095b6cbc35d61155" kindref="member">ComputeFittingWindowSize()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="393"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a37904ed600fd389345295ff89aa09fdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizer::FitInside</definition>
        <argsstring>(wxWindow *window)</argsstring>
        <name>FitInside</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Tell the sizer to resize the virtual size of the <emphasis>window</emphasis> to match the sizer&apos;s minimal size. </para>        </briefdescription>
        <detaileddescription>
<para>This will not alter the on screen size of the window, but may cause the addition/removal/alteration of scrollbars required to view the virtual area in windows which manage it.</para><para><simplesect kind="see"><para><ref refid="classwx_scrolled_1af5d940f364bb5097f20fee4a8e1210bb" kindref="member">wxScrolled::SetScrollbars()</ref>, <ref refid="classwx_sizer_1a92cab30589d91cc09028a3abfefe6221" kindref="member">SetVirtualSizeHints()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="403"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1ad0cc504036ef6c3a9d670dc3c98df3a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxSizer::InformFirstDirection</definition>
        <argsstring>(int direction, int size, int availableOtherDir)</argsstring>
        <name>InformFirstDirection</name>
        <reimplementedby refid="classwx_wrap_sizer_1a37961a3c5eb8f0393d035e899a17664c">InformFirstDirection</reimplementedby>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>availableOtherDir</declname>
        </param>
        <briefdescription>
<para>Inform sizer about the first direction that has been decided (by parent item). </para>        </briefdescription>
        <detaileddescription>
<para>Returns true if it made use of the information (and recalculated min size). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="410"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1afc4df63c94cf062b7ef29d274d2ee6c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
        <definition>wxWindow* wxSizer::GetContainingWindow</definition>
        <argsstring>() const </argsstring>
        <name>GetContainingWindow</name>
        <briefdescription>
<para>Returns the window this sizer is used in or NULL if none. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="427"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1ac0e0239d22c99213b99bbafdade6793d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxSizer::GetItemCount</definition>
        <argsstring>() const </argsstring>
        <name>GetItemCount</name>
        <briefdescription>
<para>Returns the number of items in the sizer. </para>        </briefdescription>
        <detaileddescription>
<para>If you just need to test whether the sizer is empty or not you can also use <ref refid="classwx_sizer_1ae456d3459b9b31545100a799eb5e8c2a" kindref="member">IsEmpty()</ref> function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="435"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1adca9ab35f05d28156ac0d4bc2e2ed6ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::GetItem</definition>
        <argsstring>(wxWindow *window, bool recursive=false)</argsstring>
        <name>GetItem</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>recursive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Finds <ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> which holds the given <emphasis>window</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Use parameter <emphasis>recursive</emphasis> to search in subsizers too. Returns pointer to item or NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="442"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1acb45fd75ab336670f41879fd557a7c65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::GetItem</definition>
        <argsstring>(wxSizer *sizer, bool recursive=false)</argsstring>
        <name>GetItem</name>
        <param>
          <type><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> *</type>
          <declname>sizer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>recursive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Finds <ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> which holds the given <emphasis>sizer</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Use parameter <emphasis>recursive</emphasis> to search in subsizers too. Returns pointer to item or NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="450"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a2aa7f3c241944ae28ee9cbd6df662227" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::GetItem</definition>
        <argsstring>(size_t index)</argsstring>
        <name>GetItem</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Finds <ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> which is located in the sizer at position <emphasis>index</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Use parameter <emphasis>recursive</emphasis> to search in subsizers too. Returns pointer to item or NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="457"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1ab94e21f858a3c82055faed4b621e4ad2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::GetItemById</definition>
        <argsstring>(int id, bool recursive=false)</argsstring>
        <name>GetItemById</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>recursive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Finds item of the sizer which has the given <emphasis>id</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>This <emphasis>id</emphasis> is not the window id but the id of the <ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> itself. This is mainly useful for retrieving the sizers created from XRC resources. Use parameter <emphasis>recursive</emphasis> to search in subsizers too. Returns pointer to item or NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="466"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a9fab8d16aefe347dbd57e0bdfe0d810d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxSizer::GetMinSize</definition>
        <argsstring>()</argsstring>
        <name>GetMinSize</name>
        <briefdescription>
<para>Returns the minimal size of the sizer. </para>        </briefdescription>
        <detaileddescription>
<para>This is either the combined minimal size of all the children and their borders or the minimal size set by <ref refid="classwx_sizer_1a97bbbf3ee6e55c321d7bb72b4c1b7d79" kindref="member">SetMinSize()</ref>, depending on which is bigger. Note that the returned value is client size, not window size. In particular, if you use the value to set toplevel window&apos;s minimal or actual size, use <ref refid="classwx_window_1a6e35ba44b97e374dfffa460d41d94b31" kindref="member">wxWindow::SetMinClientSize()</ref> or <ref refid="classwx_window_1aa59f715217fffa5bcf14cd97f92e7840" kindref="member">wxWindow::SetClientSize()</ref>, not <ref refid="classwx_window_1a3fc066f4d8083319f004ac43811d545d" kindref="member">wxWindow::SetMinSize()</ref> or <ref refid="classwx_window_1a180312d5ad4a4a5ad805b8d52d67a74e" kindref="member">wxWindow::SetSize()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="478"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a3907d4a032274c808b57de3c0c70d215" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
        <definition>wxPoint wxSizer::GetPosition</definition>
        <argsstring>() const </argsstring>
        <name>GetPosition</name>
        <briefdescription>
<para>Returns the current position of the sizer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="483"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a4898d4754c1b45e8acc79a2376fc6220" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxSizer::GetSize</definition>
        <argsstring>() const </argsstring>
        <name>GetSize</name>
        <briefdescription>
<para>Returns the current size of the sizer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="488"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a317299431009a0adb4874f9c3f39ea8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSizer::Hide</definition>
        <argsstring>(wxWindow *window, bool recursive=false)</argsstring>
        <name>Hide</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>recursive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Hides the child <emphasis>window</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>To make a sizer item disappear, use <ref refid="classwx_sizer_1a317299431009a0adb4874f9c3f39ea8c" kindref="member">Hide()</ref> followed by <ref refid="classwx_sizer_1a1ea8589882944f8ac78b6ff8abde1554" kindref="member">Layout()</ref>.</para><para>Use parameter <emphasis>recursive</emphasis> to hide elements found in subsizers. Returns true if the child item was found, false otherwise.</para><para><simplesect kind="see"><para><ref refid="classwx_sizer_1a44f05d5396f62aa3764d319489223536" kindref="member">IsShown()</ref>, <ref refid="classwx_sizer_1afb6638468fe2253d1870b4d387c57a0b" kindref="member">Show()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="500"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1ae822dbd21860bfdbf7f76ca22cdcc1f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSizer::Hide</definition>
        <argsstring>(wxSizer *sizer, bool recursive=false)</argsstring>
        <name>Hide</name>
        <param>
          <type><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> *</type>
          <declname>sizer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>recursive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Hides the child <emphasis>sizer</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>To make a sizer item disappear, use <ref refid="classwx_sizer_1a317299431009a0adb4874f9c3f39ea8c" kindref="member">Hide()</ref> followed by <ref refid="classwx_sizer_1a1ea8589882944f8ac78b6ff8abde1554" kindref="member">Layout()</ref>.</para><para>Use parameter <emphasis>recursive</emphasis> to hide elements found in subsizers. Returns true if the child item was found, false otherwise.</para><para><simplesect kind="see"><para><ref refid="classwx_sizer_1a44f05d5396f62aa3764d319489223536" kindref="member">IsShown()</ref>, <ref refid="classwx_sizer_1afb6638468fe2253d1870b4d387c57a0b" kindref="member">Show()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="512"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a53c972f52267daea500d78f606fa0032" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSizer::Hide</definition>
        <argsstring>(size_t index)</argsstring>
        <name>Hide</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Hides the item at position <emphasis>index</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>To make a sizer item disappear, use <ref refid="classwx_sizer_1a317299431009a0adb4874f9c3f39ea8c" kindref="member">Hide()</ref> followed by <ref refid="classwx_sizer_1a1ea8589882944f8ac78b6ff8abde1554" kindref="member">Layout()</ref>.</para><para>Use parameter <emphasis>recursive</emphasis> to hide elements found in subsizers. Returns true if the child item was found, false otherwise.</para><para><simplesect kind="see"><para><ref refid="classwx_sizer_1a44f05d5396f62aa3764d319489223536" kindref="member">IsShown()</ref>, <ref refid="classwx_sizer_1afb6638468fe2253d1870b4d387c57a0b" kindref="member">Show()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="524"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1aafc5f53e9d3511440be05f9805bb2871" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::Insert</definition>
        <argsstring>(size_t index, wxWindow *window, const wxSizerFlags &amp;flags)</argsstring>
        <name>Insert</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Insert a child into the sizer before any existing item at <emphasis>index</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_sizer_1a4e2122f2749261473c21cb192d00709f" kindref="member">Add()</ref> for the meaning of the other parameters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="532"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1aecb6744c0c82c0eb1ae12a532d5d019b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::Insert</definition>
        <argsstring>(size_t index, wxWindow *window, int proportion=0, int flag=0, int border=0, wxObject *userData=NULL)</argsstring>
        <name>Insert</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>proportion</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flag</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>border</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classwx_object" kindref="compound">wxObject</ref> *</type>
          <declname>userData</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Insert a child into the sizer before any existing item at <emphasis>index</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_sizer_1a4e2122f2749261473c21cb192d00709f" kindref="member">Add()</ref> for the meaning of the other parameters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="543"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a244f64c3d5c900615b2384b320f6c17b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::Insert</definition>
        <argsstring>(size_t index, wxSizer *sizer, const wxSizerFlags &amp;flags)</argsstring>
        <name>Insert</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> *</type>
          <declname>sizer</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Insert a child into the sizer before any existing item at <emphasis>index</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_sizer_1a4e2122f2749261473c21cb192d00709f" kindref="member">Add()</ref> for the meaning of the other parameters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="551"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a9308aed2cb55227ac1aec7e14707eb3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::Insert</definition>
        <argsstring>(size_t index, wxSizer *sizer, int proportion=0, int flag=0, int border=0, wxObject *userData=NULL)</argsstring>
        <name>Insert</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> *</type>
          <declname>sizer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>proportion</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flag</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>border</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classwx_object" kindref="compound">wxObject</ref> *</type>
          <declname>userData</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Insert a child into the sizer before any existing item at <emphasis>index</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_sizer_1a4e2122f2749261473c21cb192d00709f" kindref="member">Add()</ref> for the meaning of the other parameters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="562"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a43cfac9112288a7d9302ceb674694bf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::Insert</definition>
        <argsstring>(size_t index, int width, int height, int proportion=0, int flag=0, int border=0, wxObject *userData=NULL)</argsstring>
        <name>Insert</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>proportion</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flag</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>border</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classwx_object" kindref="compound">wxObject</ref> *</type>
          <declname>userData</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Insert a child into the sizer before any existing item at <emphasis>index</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_sizer_1a4e2122f2749261473c21cb192d00709f" kindref="member">Add()</ref> for the meaning of the other parameters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="573"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a6d1daeda52f9f944a0ebd667471ecf6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::Insert</definition>
        <argsstring>(size_t index, wxSizerItem *item)</argsstring>
        <name>Insert</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="575"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1afb001f9018ff92400937bf6bd494de0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::InsertSpacer</definition>
        <argsstring>(size_t index, int size)</argsstring>
        <name>InsertSpacer</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Inserts non-stretchable space to the sizer. </para>        </briefdescription>
        <detaileddescription>
<para>More readable way of calling wxSizer::Insert(index, size, size). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="581"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a8aeaaac2a98635d45a06961e505e8dde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::InsertStretchSpacer</definition>
        <argsstring>(size_t index, int prop=1)</argsstring>
        <name>InsertStretchSpacer</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>prop</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Inserts stretchable space to the sizer. </para>        </briefdescription>
        <detaileddescription>
<para>More readable way of calling wxSizer::Insert(0, 0, prop). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="587"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1ae456d3459b9b31545100a799eb5e8c2a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSizer::IsEmpty</definition>
        <argsstring>() const </argsstring>
        <name>IsEmpty</name>
        <briefdescription>
<para>Return true if the sizer has no elements. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_sizer_1ac0e0239d22c99213b99bbafdade6793d" kindref="member">GetItemCount()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="594"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a44f05d5396f62aa3764d319489223536" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSizer::IsShown</definition>
        <argsstring>(wxWindow *window) const </argsstring>
        <name>IsShown</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Returns true if the <emphasis>window</emphasis> is shown. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_sizer_1a317299431009a0adb4874f9c3f39ea8c" kindref="member">Hide()</ref>, <ref refid="classwx_sizer_1afb6638468fe2253d1870b4d387c57a0b" kindref="member">Show()</ref>, <ref refid="classwx_sizer_item_1acf4fdee6540663e5de1666bddf962c97" kindref="member">wxSizerItem::IsShown()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="601"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a5fd1c503a027709c29e4f56c9707b75c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSizer::IsShown</definition>
        <argsstring>(wxSizer *sizer) const </argsstring>
        <name>IsShown</name>
        <param>
          <type><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> *</type>
          <declname>sizer</declname>
        </param>
        <briefdescription>
<para>Returns true if the <emphasis>sizer</emphasis> is shown. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_sizer_1a317299431009a0adb4874f9c3f39ea8c" kindref="member">Hide()</ref>, <ref refid="classwx_sizer_1afb6638468fe2253d1870b4d387c57a0b" kindref="member">Show()</ref>, <ref refid="classwx_sizer_item_1acf4fdee6540663e5de1666bddf962c97" kindref="member">wxSizerItem::IsShown()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="608"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a7543a671a8ae7193ba8d15532ca8712d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSizer::IsShown</definition>
        <argsstring>(size_t index) const </argsstring>
        <name>IsShown</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns true if the item at <emphasis>index</emphasis> is shown. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_sizer_1a317299431009a0adb4874f9c3f39ea8c" kindref="member">Hide()</ref>, <ref refid="classwx_sizer_1afb6638468fe2253d1870b4d387c57a0b" kindref="member">Show()</ref>, <ref refid="classwx_sizer_item_1acf4fdee6540663e5de1666bddf962c97" kindref="member">wxSizerItem::IsShown()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="615"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a1ea8589882944f8ac78b6ff8abde1554" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxSizer::Layout</definition>
        <argsstring>()</argsstring>
        <name>Layout</name>
        <briefdescription>
<para>Call this to force layout of the children anew, e.g. </para>        </briefdescription>
        <detaileddescription>
<para>after having added a child to or removed a child (window, other sizer or space) from the sizer while keeping the current dimension. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="622"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a7417fb9b0e3b4777c11b381f14cf0153" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::Prepend</definition>
        <argsstring>(wxWindow *window, const wxSizerFlags &amp;flags)</argsstring>
        <name>Prepend</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Same as <ref refid="classwx_sizer_1a4e2122f2749261473c21cb192d00709f" kindref="member">Add()</ref>, but prepends the items to the beginning of the list of items (windows, subsizers or spaces) owned by this sizer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="628"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a66ce726dcc4bf0a283530d3bc425aae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::Prepend</definition>
        <argsstring>(wxWindow *window, int proportion=0, int flag=0, int border=0, wxObject *userData=NULL)</argsstring>
        <name>Prepend</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>proportion</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flag</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>border</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classwx_object" kindref="compound">wxObject</ref> *</type>
          <declname>userData</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Same as <ref refid="classwx_sizer_1a4e2122f2749261473c21cb192d00709f" kindref="member">Add()</ref>, but prepends the items to the beginning of the list of items (windows, subsizers or spaces) owned by this sizer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="637"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1aedfd27f1b77cd34d23c06e001670a62d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::Prepend</definition>
        <argsstring>(wxSizer *sizer, const wxSizerFlags &amp;flags)</argsstring>
        <name>Prepend</name>
        <param>
          <type><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> *</type>
          <declname>sizer</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Same as <ref refid="classwx_sizer_1a4e2122f2749261473c21cb192d00709f" kindref="member">Add()</ref>, but prepends the items to the beginning of the list of items (windows, subsizers or spaces) owned by this sizer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="644"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a968936425f2d5e6b9c15a3820737e1fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::Prepend</definition>
        <argsstring>(wxSizer *sizer, int proportion=0, int flag=0, int border=0, wxObject *userData=NULL)</argsstring>
        <name>Prepend</name>
        <param>
          <type><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> *</type>
          <declname>sizer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>proportion</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flag</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>border</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classwx_object" kindref="compound">wxObject</ref> *</type>
          <declname>userData</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Same as <ref refid="classwx_sizer_1a4e2122f2749261473c21cb192d00709f" kindref="member">Add()</ref>, but prepends the items to the beginning of the list of items (windows, subsizers or spaces) owned by this sizer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="653"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a504343f0780c3d1ea7f16bcf1e6e90b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::Prepend</definition>
        <argsstring>(int width, int height, int proportion=0, int flag=0, int border=0, wxObject *userData=NULL)</argsstring>
        <name>Prepend</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>proportion</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flag</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>border</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classwx_object" kindref="compound">wxObject</ref> *</type>
          <declname>userData</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Same as <ref refid="classwx_sizer_1a4e2122f2749261473c21cb192d00709f" kindref="member">Add()</ref>, but prepends the items to the beginning of the list of items (windows, subsizers or spaces) owned by this sizer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="663"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a0f34608b8bf5b119938cea846a4b29c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::Prepend</definition>
        <argsstring>(wxSizerItem *item)</argsstring>
        <name>Prepend</name>
        <param>
          <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="665"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1acc707e1e6d0afd18dc4e70052fa21d78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::PrependSpacer</definition>
        <argsstring>(int size)</argsstring>
        <name>PrependSpacer</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Prepends non-stretchable space to the sizer. </para>        </briefdescription>
        <detaileddescription>
<para>More readable way of calling wxSizer::Prepend(size, size, 0). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="671"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1ac102680023527ab0610a0d2a6340d4e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
        <definition>wxSizerItem* wxSizer::PrependStretchSpacer</definition>
        <argsstring>(int prop=1)</argsstring>
        <name>PrependStretchSpacer</name>
        <param>
          <type>int</type>
          <declname>prop</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Prepends stretchable space to the sizer. </para>        </briefdescription>
        <detaileddescription>
<para>More readable way of calling wxSizer::Prepend(0, 0, prop). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="677"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1ad8bbc5e78a46f85d445db3c324fe1614" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxSizer::RecalcSizes</definition>
        <argsstring>()=0</argsstring>
        <name>RecalcSizes</name>
        <reimplementedby refid="classwx_wrap_sizer_1af26c69849c7d91b7bb0976e6cfed90ae">RecalcSizes</reimplementedby>
        <reimplementedby refid="classwx_box_sizer_1ad5c32286716e5dfcc9fbaf9cd87a3080">RecalcSizes</reimplementedby>
        <reimplementedby refid="classwx_static_box_sizer_1a88215899273edc9a8503e3fc2dd72bc5">RecalcSizes</reimplementedby>
        <reimplementedby refid="classwx_grid_sizer_1ae77a4c0a71b771157989af8f1b5b44f4">RecalcSizes</reimplementedby>
        <reimplementedby refid="classwx_flex_grid_sizer_1a1e2cdf743dfd82b5c81c8e08d21ef6c7">RecalcSizes</reimplementedby>
        <reimplementedby refid="classwx_std_dialog_button_sizer_1a21a99d0261bbdc4ece1b4630d4a2ae3e">RecalcSizes</reimplementedby>
        <reimplementedby refid="classwx_grid_bag_sizer_1ac9aaee82eb6c51e467c4d92e0c03b015">RecalcSizes</reimplementedby>
        <briefdescription>
<para>This method is abstract and has to be overwritten by any derived class. </para>        </briefdescription>
        <detaileddescription>
<para>Here, the sizer will do the actual calculation of its children&apos;s positions and sizes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="684"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a06ef74a0bb6aba1f1d3aab02fb402fec" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxSizer::Remove</definition>
        <argsstring>(wxWindow *window)</argsstring>
        <name>Remove</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Removes a child window from the sizer, but does <bold>not</bold> destroy it (because windows are owned by their parent window, not the sizer). </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000047"><xreftitle>Deprecated</xreftitle><xrefdescription><para>The overload of this method taking a wxWindow* parameter is deprecated as it does not destroy the window as would usually be expected from <ref refid="classwx_sizer_1a06ef74a0bb6aba1f1d3aab02fb402fec" kindref="member">Remove()</ref>. You should use <ref refid="classwx_sizer_1a362d7d556185fe9cd1b5d24004b86518" kindref="member">Detach()</ref> in new code instead. There is currently no <ref refid="classwx_sizer" kindref="compound">wxSizer</ref> method that will both detach and destroy a <ref refid="classwx_window" kindref="compound">wxWindow</ref> item.</para></xrefdescription></xrefsect></para><para><simplesect kind="note"><para>This method does not cause any layout or resizing to take place, call <ref refid="classwx_sizer_1a1ea8589882944f8ac78b6ff8abde1554" kindref="member">Layout()</ref> to update the layout &quot;on screen&quot; after removing a child from the sizer.</para></simplesect>
<simplesect kind="return"><para>true if the child item was found and removed, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="703"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a7fce6ce0e986e00e6702914436b6191a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxSizer::Remove</definition>
        <argsstring>(wxSizer *sizer)</argsstring>
        <name>Remove</name>
        <param>
          <type><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> *</type>
          <declname>sizer</declname>
        </param>
        <briefdescription>
<para>Removes a sizer child from the sizer and destroys it. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This method does not cause any layout or resizing to take place, call <ref refid="classwx_sizer_1a1ea8589882944f8ac78b6ff8abde1554" kindref="member">Layout()</ref> to update the layout &quot;on screen&quot; after removing a child from the sizer.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sizer</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classwx_sizer" kindref="compound">wxSizer</ref> to be removed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the child item was found and removed, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="716"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1accad1425ce5f2504fb63d2801b5b85e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxSizer::Remove</definition>
        <argsstring>(int index)</argsstring>
        <name>Remove</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Removes a child from the sizer and destroys it if it is a sizer or a spacer, but not if it is a window (because windows are owned by their parent window, not the sizer). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This method does not cause any layout or resizing to take place, call <ref refid="classwx_sizer_1a1ea8589882944f8ac78b6ff8abde1554" kindref="member">Layout()</ref> to update the layout &quot;on screen&quot; after removing a child from the sizer.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The position of the child in the sizer, e.g. 0 for the first item.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the child item was found and removed, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="732"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1ade62512b74abfa0c6ff45825ea0c9d9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxSizer::Replace</definition>
        <argsstring>(wxWindow *oldwin, wxWindow *newwin, bool recursive=false)</argsstring>
        <name>Replace</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>oldwin</declname>
        </param>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>newwin</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>recursive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Detaches the given <emphasis>oldwin</emphasis> from the sizer and replaces it with the given <emphasis>newwin</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>The detached child window is <bold>not</bold> deleted (because windows are owned by their parent window, not the sizer).</para><para>Use parameter <emphasis>recursive</emphasis> to search the given element recursively in subsizers.</para><para>This method does not cause any layout or resizing to take place, call <ref refid="classwx_sizer_1a1ea8589882944f8ac78b6ff8abde1554" kindref="member">Layout()</ref> to update the layout &quot;on screen&quot; after replacing a child from the sizer.</para><para>Returns true if the child item was found and removed, false otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="748"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a842fc94c0f5e58597216cb952e044509" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxSizer::Replace</definition>
        <argsstring>(wxSizer *oldsz, wxSizer *newsz, bool recursive=false)</argsstring>
        <name>Replace</name>
        <param>
          <type><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> *</type>
          <declname>oldsz</declname>
        </param>
        <param>
          <type><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> *</type>
          <declname>newsz</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>recursive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Detaches the given <emphasis>oldsz</emphasis> from the sizer and replaces it with the given <emphasis>newsz</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>The detached child sizer is deleted.</para><para>Use parameter <emphasis>recursive</emphasis> to search the given element recursively in subsizers.</para><para>This method does not cause any layout or resizing to take place, call <ref refid="classwx_sizer_1a1ea8589882944f8ac78b6ff8abde1554" kindref="member">Layout()</ref> to update the layout &quot;on screen&quot; after replacing a child from the sizer.</para><para>Returns true if the child item was found and removed, false otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="763"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a5283d4d5fd059cea93e9401e3708f294" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxSizer::Replace</definition>
        <argsstring>(size_t index, wxSizerItem *newitem)</argsstring>
        <name>Replace</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> *</type>
          <declname>newitem</declname>
        </param>
        <briefdescription>
<para>Detaches the given item at position <emphasis>index</emphasis> from the sizer and replaces it with the given <ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> <emphasis>newitem</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>The detached child is deleted <bold>only</bold> if it is a sizer or a spacer (but not if it is a <ref refid="classwx_window" kindref="compound">wxWindow</ref> because windows are owned by their parent window, not the sizer).</para><para>This method does not cause any layout or resizing to take place, call <ref refid="classwx_sizer_1a1ea8589882944f8ac78b6ff8abde1554" kindref="member">Layout()</ref> to update the layout &quot;on screen&quot; after replacing a child from the sizer.</para><para>Returns true if the child item was found and removed, false otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="779"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a3c5483afdc5b5b5657548e190226f285" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizer::SetDimension</definition>
        <argsstring>(int x, int y, int width, int height)</argsstring>
        <name>SetDimension</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Call this to force the sizer to take the given dimension and thus force the items owned by the sizer to resize themselves according to the rules defined by the parameter in the <ref refid="classwx_sizer_1a4e2122f2749261473c21cb192d00709f" kindref="member">Add()</ref> and <ref refid="classwx_sizer_1a7417fb9b0e3b4777c11b381f14cf0153" kindref="member">Prepend()</ref> methods. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="786"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1aa993f4a4534bd4dd24c801bfda6da224" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizer::SetDimension</definition>
        <argsstring>(const wxPoint &amp;pos, const wxSize &amp;size)</argsstring>
        <name>SetDimension</name>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="791"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a97bbbf3ee6e55c321d7bb72b4c1b7d79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizer::SetMinSize</definition>
        <argsstring>(const wxSize &amp;size)</argsstring>
        <name>SetMinSize</name>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Call this to give the sizer a minimal size. </para>        </briefdescription>
        <detaileddescription>
<para>Normally, the sizer will calculate its minimal size based purely on how much space its children need. After calling this method <ref refid="classwx_sizer_1a9fab8d16aefe347dbd57e0bdfe0d810d" kindref="member">GetMinSize()</ref> will return either the minimal size as requested by its children or the minimal size set here, depending on which is bigger. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="827"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a0e89f59e611c0279e8bee1b7ee345446" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizer::SetMinSize</definition>
        <argsstring>(int width, int height)</argsstring>
        <name>SetMinSize</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="832"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1abc460cd0e2bb3bde72142fdb434bc546" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizer::SetSizeHints</definition>
        <argsstring>(wxWindow *window)</argsstring>
        <name>SetSizeHints</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>This method first calls <ref refid="classwx_sizer_1abad9cedc0cbe9ade2c799da23462d17e" kindref="member">Fit()</ref> and then <ref refid="classwx_top_level_window_1ac01a45e5d82e4e3be22a4841c1217e11" kindref="member">wxTopLevelWindow::SetSizeHints()</ref> on the <emphasis>window</emphasis> passed to it. </para>        </briefdescription>
        <detaileddescription>
<para>This only makes sense when <emphasis>window</emphasis> is actually a <ref refid="classwx_top_level_window" kindref="compound">wxTopLevelWindow</ref> such as a <ref refid="classwx_frame" kindref="compound">wxFrame</ref> or a <ref refid="classwx_dialog" kindref="compound">wxDialog</ref>, since SetSizeHints only has any effect in these classes. It does nothing in normal windows or controls.</para><para>This method is implicitly used by <ref refid="classwx_window_1a29938af9828fd35da666536cdfb6b73c" kindref="member">wxWindow::SetSizerAndFit()</ref> which is commonly invoked in the constructor of a toplevel window itself (see the sample in the description of <ref refid="classwx_box_sizer" kindref="compound">wxBoxSizer</ref>) if the toplevel window is resizable. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="847"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a92cab30589d91cc09028a3abfefe6221" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizer::SetVirtualSizeHints</definition>
        <argsstring>(wxWindow *window)</argsstring>
        <name>SetVirtualSizeHints</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Tell the sizer to set the minimal size of the <emphasis>window</emphasis> virtual area to match the sizer&apos;s minimal size. </para>        </briefdescription>
        <detaileddescription>
<para>For windows with managed scrollbars this will set them appropriately.</para><para><xrefsect id="deprecated_1_deprecated000048"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This is exactly the same as <ref refid="classwx_sizer_1a37904ed600fd389345295ff89aa09fdc" kindref="member">FitInside()</ref> in wxWidgets 2.9 and later, please replace calls to it with <ref refid="classwx_sizer_1a37904ed600fd389345295ff89aa09fdc" kindref="member">FitInside()</ref>.</para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><ref refid="classwx_scrolled_1af5d940f364bb5097f20fee4a8e1210bb" kindref="member">wxScrolled::SetScrollbars()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="859"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1afb6638468fe2253d1870b4d387c57a0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSizer::Show</definition>
        <argsstring>(wxWindow *window, bool show=true, bool recursive=false)</argsstring>
        <name>Show</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>show</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>recursive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Shows or hides the <emphasis>window</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>To make a sizer item disappear or reappear, use <ref refid="classwx_sizer_1afb6638468fe2253d1870b4d387c57a0b" kindref="member">Show()</ref> followed by <ref refid="classwx_sizer_1a1ea8589882944f8ac78b6ff8abde1554" kindref="member">Layout()</ref>.</para><para>Use parameter <emphasis>recursive</emphasis> to show or hide elements found in subsizers.</para><para>Returns true if the child item was found, false otherwise.</para><para><simplesect kind="see"><para><ref refid="classwx_sizer_1a317299431009a0adb4874f9c3f39ea8c" kindref="member">Hide()</ref>, <ref refid="classwx_sizer_1a44f05d5396f62aa3764d319489223536" kindref="member">IsShown()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="872"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a65289f40a39fb31512f93d8d7f63720e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSizer::Show</definition>
        <argsstring>(wxSizer *sizer, bool show=true, bool recursive=false)</argsstring>
        <name>Show</name>
        <param>
          <type><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> *</type>
          <declname>sizer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>show</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>recursive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Shows or hides <emphasis>sizer</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>To make a sizer item disappear or reappear, use <ref refid="classwx_sizer_1afb6638468fe2253d1870b4d387c57a0b" kindref="member">Show()</ref> followed by <ref refid="classwx_sizer_1a1ea8589882944f8ac78b6ff8abde1554" kindref="member">Layout()</ref>.</para><para>Use parameter <emphasis>recursive</emphasis> to show or hide elements found in subsizers.</para><para>Returns true if the child item was found, false otherwise.</para><para><simplesect kind="see"><para><ref refid="classwx_sizer_1a317299431009a0adb4874f9c3f39ea8c" kindref="member">Hide()</ref>, <ref refid="classwx_sizer_1a44f05d5396f62aa3764d319489223536" kindref="member">IsShown()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="885"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_1a15f781b11cbe978d6fbc0b62f32bc3b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSizer::Show</definition>
        <argsstring>(size_t index, bool show=true)</argsstring>
        <name>Show</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>show</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Shows the item at <emphasis>index</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>To make a sizer item disappear or reappear, use <ref refid="classwx_sizer_1afb6638468fe2253d1870b4d387c57a0b" kindref="member">Show()</ref> followed by <ref refid="classwx_sizer_1a1ea8589882944f8ac78b6ff8abde1554" kindref="member">Layout()</ref>.</para><para>Returns true if the child item was found, false otherwise.</para><para><simplesect kind="see"><para><ref refid="classwx_sizer_1a317299431009a0adb4874f9c3f39ea8c" kindref="member">Hide()</ref>, <ref refid="classwx_sizer_1a44f05d5396f62aa3764d319489223536" kindref="member">IsShown()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="895"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> is the abstract base class used for laying out subwindows in a window. </para>    </briefdescription>
    <detaileddescription>
<para>You cannot use <ref refid="classwx_sizer" kindref="compound">wxSizer</ref> directly; instead, you will have to use one of the sizer classes derived from it. Currently there are <ref refid="classwx_box_sizer" kindref="compound">wxBoxSizer</ref>, <ref refid="classwx_static_box_sizer" kindref="compound">wxStaticBoxSizer</ref>, <ref refid="classwx_grid_sizer" kindref="compound">wxGridSizer</ref>, <ref refid="classwx_flex_grid_sizer" kindref="compound">wxFlexGridSizer</ref>, <ref refid="classwx_wrap_sizer" kindref="compound">wxWrapSizer</ref> and <ref refid="classwx_grid_bag_sizer" kindref="compound">wxGridBagSizer</ref>.</para><para>The layout algorithm used by sizers in wxWidgets is closely related to layout in other GUI toolkits, such as Java&apos;s AWT, the GTK toolkit or the Qt toolkit. It is based upon the idea of the individual subwindows reporting their minimal required size and their ability to get stretched if the size of the parent window has changed.</para><para>This will most often mean that the programmer does not set the original size of a dialog in the beginning, rather the dialog will be assigned a sizer and this sizer will be queried about the recommended size. The sizer in turn will query its children, which can be normal windows, empty space or other sizers, so that a hierarchy of sizers can be constructed. Note that <ref refid="classwx_sizer" kindref="compound">wxSizer</ref> does not derive from <ref refid="classwx_window" kindref="compound">wxWindow</ref> and thus does not interfere with tab ordering and requires very little resources compared to a real window on screen.</para><para>What makes sizers so well fitted for use in wxWidgets is the fact that every control reports its own minimal size and the algorithm can handle differences in font sizes or different window (dialog item) sizes on different platforms without problems. If e.g. the standard font as well as the overall design of Motif widgets requires more space than on Windows, the initial dialog size will automatically be bigger on Motif than on Windows.</para><para>Sizers may also be used to control the layout of custom drawn items on the window. The <ref refid="classwx_sizer_1a4e2122f2749261473c21cb192d00709f" kindref="member">wxSizer::Add()</ref>, <ref refid="classwx_sizer_1aafc5f53e9d3511440be05f9805bb2871" kindref="member">wxSizer::Insert()</ref>, and <ref refid="classwx_sizer_1a7417fb9b0e3b4777c11b381f14cf0153" kindref="member">wxSizer::Prepend()</ref> functions return a pointer to the newly added <ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref>. Just add empty space of the desired size and attributes, and then use the <ref refid="classwx_sizer_item_1a3c3a8e59193eb64cb6cf1e120c9ed544" kindref="member">wxSizerItem::GetRect()</ref> method to determine where the drawing operations should take place.</para><para>Please notice that sizers, like child windows, are owned by the library and will be deleted by it which implies that they must be allocated on the heap. However if you create a sizer and do not add it to another sizer or window, the library wouldn&apos;t be able to delete such an orphan sizer and in this, and only this, case it should be deleted explicitly.</para><sect1 id="classwx_sizer_1wxsizer_flags">
<title>wxSizer flags</title>
<para>The &quot;flag&quot; argument accepted by wxSizeItem constructors and other functions, e.g. <ref refid="classwx_sizer_1a4e2122f2749261473c21cb192d00709f" kindref="member">wxSizer::Add()</ref>, is OR-combination of the following flags. Two main behaviours are defined using these flags. One is the border around a window: the border parameter determines the border width whereas the flags given here determine which side(s) of the item that the border will be added. The other flags determine how the sizer item behaves when the space allotted to the sizer changes, and is somewhat dependent on the specific kind of sizer used.</para><para><table rows="6" cols="2"><row>
<entry thead="no"><para>wxTOP<linebreak/>
 wxBOTTOM<linebreak/>
 wxLEFT<linebreak/>
 wxRIGHT<linebreak/>
 wxALL </para></entry><entry thead="no"><para>These flags are used to specify which side(s) of the sizer item the border width will apply to. </para></entry></row>
<row>
<entry thead="no"><para>wxEXPAND </para></entry><entry thead="no"><para>The item will be expanded to fill the space assigned to the item. </para></entry></row>
<row>
<entry thead="no"><para>wxSHAPED </para></entry><entry thead="no"><para>The item will be expanded as much as possible while also maintaining its aspect ratio. </para></entry></row>
<row>
<entry thead="no"><para>wxFIXED_MINSIZE </para></entry><entry thead="no"><para>Normally wxSizers will use GetAdjustedBestSize() to determine what the minimal size of window items should be, and will use that size to calculate the layout. This allows layouts to adjust when an item changes and its best size becomes different. If you would rather have a window item stay the size it started with then use <computeroutput>wxFIXED_MINSIZE</computeroutput>. </para></entry></row>
<row>
<entry thead="no"><para>wxRESERVE_SPACE_EVEN_IF_HIDDEN </para></entry><entry thead="no"><para>Normally wxSizers don&apos;t allocate space for hidden windows or other items. This flag overrides this behaviour so that sufficient space is allocated for the window even if it isn&apos;t visible. This makes it possible to dynamically show and hide controls without resizing parent dialog, for example. (Available since 2.8.8.) </para></entry></row>
<row>
<entry thead="no"><para>wxALIGN_CENTER<linebreak/>
 wxALIGN_CENTRE<linebreak/>
 wxALIGN_LEFT<linebreak/>
 wxALIGN_RIGHT<linebreak/>
 wxALIGN_TOP<linebreak/>
 wxALIGN_BOTTOM<linebreak/>
 wxALIGN_CENTER_VERTICAL<linebreak/>
 wxALIGN_CENTRE_VERTICAL<linebreak/>
 wxALIGN_CENTER_HORIZONTAL<linebreak/>
 wxALIGN_CENTRE_HORIZONTAL </para></entry><entry thead="no"><para>The <computeroutput>wxALIGN_*</computeroutput> flags allow you to specify the alignment of the item within the space allotted to it by the sizer, adjusted for the border if any. </para></entry></row>
</table>
</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__winlayout" kindref="compound">Window Layout</ref></para><para><simplesect kind="see"><para><ref refid="overview_sizer" kindref="compound">Sizers Overview</ref> </para></simplesect>
</para></sect1>
    </detaileddescription>
    <inheritancegraph>
      <node id="10422">
        <label>wxWrapSizer</label>
        <link refid="classwx_wrap_sizer"/>
        <childnode refid="10419" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10424">
        <label>wxFlexGridSizer</label>
        <link refid="classwx_flex_grid_sizer"/>
        <childnode refid="10423" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10418">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="10425">
        <label>wxGridBagSizer</label>
        <link refid="classwx_grid_bag_sizer"/>
        <childnode refid="10424" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10421">
        <label>wxStdDialogButtonSizer</label>
        <link refid="classwx_std_dialog_button_sizer"/>
        <childnode refid="10419" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10420">
        <label>wxStaticBoxSizer</label>
        <link refid="classwx_static_box_sizer"/>
        <childnode refid="10419" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10419">
        <label>wxBoxSizer</label>
        <link refid="classwx_box_sizer"/>
        <childnode refid="10417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10417">
        <label>wxSizer</label>
        <link refid="classwx_sizer"/>
        <childnode refid="10418" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10423">
        <label>wxGridSizer</label>
        <link refid="classwx_grid_sizer"/>
        <childnode refid="10417" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10427">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="10428" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="10426">
        <label>wxSizer</label>
        <link refid="classwx_sizer"/>
        <childnode refid="10427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10428">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" line="110" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/sizer.h" bodystart="109" bodyend="896"/>
    <listofallmembers>
      <member refid="classwx_sizer_1a4e2122f2749261473c21cb192d00709f" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Add</name></member>
      <member refid="classwx_sizer_1a81d21f287c416da96739a73faa54840d" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Add</name></member>
      <member refid="classwx_sizer_1a1c45a17c2d1e2d669c46d558d521d891" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Add</name></member>
      <member refid="classwx_sizer_1aaa40babf76cdb56d20f6c37fff282610" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Add</name></member>
      <member refid="classwx_sizer_1aa2d6009b34b1d34de920390795d8c0fb" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Add</name></member>
      <member refid="classwx_sizer_1a6d7602d14f246395773e00ca46bf816a" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Add</name></member>
      <member refid="classwx_sizer_1aedfc0bfd98114c348766431dcb49c9f3" prot="public" virt="virtual"><scope>wxSizer</scope><name>AddSpacer</name></member>
      <member refid="classwx_sizer_1af529134a9dc74a0551d12e747af5c976" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>AddStretchSpacer</name></member>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxSizer</scope><name>AllocExclusive</name></member>
      <member refid="classwx_sizer_1a371b9b72e55c1fedfbea9d298bc2df77" prot="public" virt="pure-virtual"><scope>wxSizer</scope><name>CalcMin</name></member>
      <member refid="classwx_sizer_1a5909429d14de1baf1b832d5c1abf7821" prot="public" virt="virtual"><scope>wxSizer</scope><name>Clear</name></member>
      <member refid="classwx_object_1a1d39f1d3650fe0982c9a1abe7f9fe7b7" prot="protected" virt="virtual"><scope>wxSizer</scope><name>CloneRefData</name></member>
      <member refid="classwx_sizer_1a0da5d65c9b4192bd24cc3feb1be69e59" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>ComputeFittingClientSize</name></member>
      <member refid="classwx_sizer_1a3056cb4d47ea296e095b6cbc35d61155" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>ComputeFittingWindowSize</name></member>
      <member refid="classwx_object_1a95c6a5e4e1e03ff23c7b9efe4cff0c1a" prot="protected" virt="virtual"><scope>wxSizer</scope><name>CreateRefData</name></member>
      <member refid="classwx_sizer_1a362d7d556185fe9cd1b5d24004b86518" prot="public" virt="virtual"><scope>wxSizer</scope><name>Detach</name></member>
      <member refid="classwx_sizer_1a0283dc800bd1c03cd10d437cef240791" prot="public" virt="virtual"><scope>wxSizer</scope><name>Detach</name></member>
      <member refid="classwx_sizer_1aef45062fe9096f2c48c20d8ae3ad6476" prot="public" virt="virtual"><scope>wxSizer</scope><name>Detach</name></member>
      <member refid="classwx_sizer_1abad9cedc0cbe9ade2c799da23462d17e" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Fit</name></member>
      <member refid="classwx_sizer_1a37904ed600fd389345295ff89aa09fdc" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>FitInside</name></member>
      <member refid="classwx_sizer_1a619f8bd8f4fd641819626813b1c1f576" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>GetChildren</name></member>
      <member refid="classwx_sizer_1a542ef0705987b3b25cec3d0607dfdca2" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>GetChildren</name></member>
      <member refid="classwx_object_1ab3a0c6f723cbaddb47be4e8dd98cc8e2" prot="public" virt="virtual"><scope>wxSizer</scope><name>GetClassInfo</name></member>
      <member refid="classwx_sizer_1afc4df63c94cf062b7ef29d274d2ee6c1" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>GetContainingWindow</name></member>
      <member refid="classwx_sizer_1adca9ab35f05d28156ac0d4bc2e2ed6ac" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>GetItem</name></member>
      <member refid="classwx_sizer_1acb45fd75ab336670f41879fd557a7c65" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>GetItem</name></member>
      <member refid="classwx_sizer_1a2aa7f3c241944ae28ee9cbd6df662227" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>GetItem</name></member>
      <member refid="classwx_sizer_1ab94e21f858a3c82055faed4b621e4ad2" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>GetItemById</name></member>
      <member refid="classwx_sizer_1ac0e0239d22c99213b99bbafdade6793d" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>GetItemCount</name></member>
      <member refid="classwx_sizer_1a9fab8d16aefe347dbd57e0bdfe0d810d" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>GetMinSize</name></member>
      <member refid="classwx_sizer_1a3907d4a032274c808b57de3c0c70d215" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>GetPosition</name></member>
      <member refid="classwx_object_1aabdb4fc957226544a8408167844e4f42" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>GetRefData</name></member>
      <member refid="classwx_sizer_1a4898d4754c1b45e8acc79a2376fc6220" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>GetSize</name></member>
      <member refid="classwx_sizer_1a317299431009a0adb4874f9c3f39ea8c" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Hide</name></member>
      <member refid="classwx_sizer_1ae822dbd21860bfdbf7f76ca22cdcc1f4" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Hide</name></member>
      <member refid="classwx_sizer_1a53c972f52267daea500d78f606fa0032" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Hide</name></member>
      <member refid="classwx_sizer_1ad0cc504036ef6c3a9d670dc3c98df3a5" prot="public" virt="virtual"><scope>wxSizer</scope><name>InformFirstDirection</name></member>
      <member refid="classwx_sizer_1aafc5f53e9d3511440be05f9805bb2871" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Insert</name></member>
      <member refid="classwx_sizer_1aecb6744c0c82c0eb1ae12a532d5d019b" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Insert</name></member>
      <member refid="classwx_sizer_1a244f64c3d5c900615b2384b320f6c17b" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Insert</name></member>
      <member refid="classwx_sizer_1a9308aed2cb55227ac1aec7e14707eb3e" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Insert</name></member>
      <member refid="classwx_sizer_1a43cfac9112288a7d9302ceb674694bf4" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Insert</name></member>
      <member refid="classwx_sizer_1a6d1daeda52f9f944a0ebd667471ecf6d" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Insert</name></member>
      <member refid="classwx_sizer_1afb001f9018ff92400937bf6bd494de0d" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>InsertSpacer</name></member>
      <member refid="classwx_sizer_1a8aeaaac2a98635d45a06961e505e8dde" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>InsertStretchSpacer</name></member>
      <member refid="classwx_sizer_1ae456d3459b9b31545100a799eb5e8c2a" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>IsEmpty</name></member>
      <member refid="classwx_object_1af40d580385cf4f8112fae7713404b01e" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a80a1a3fda7b14396a9ddd3d7a46a88bd" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>IsSameAs</name></member>
      <member refid="classwx_sizer_1a44f05d5396f62aa3764d319489223536" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>IsShown</name></member>
      <member refid="classwx_sizer_1a5fd1c503a027709c29e4f56c9707b75c" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>IsShown</name></member>
      <member refid="classwx_sizer_1a7543a671a8ae7193ba8d15532ca8712d" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>IsShown</name></member>
      <member refid="classwx_sizer_1a1ea8589882944f8ac78b6ff8abde1554" prot="public" virt="virtual"><scope>wxSizer</scope><name>Layout</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxSizer</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>operator new</name></member>
      <member refid="classwx_sizer_1a7417fb9b0e3b4777c11b381f14cf0153" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Prepend</name></member>
      <member refid="classwx_sizer_1a66ce726dcc4bf0a283530d3bc425aae9" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Prepend</name></member>
      <member refid="classwx_sizer_1aedfd27f1b77cd34d23c06e001670a62d" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Prepend</name></member>
      <member refid="classwx_sizer_1a968936425f2d5e6b9c15a3820737e1fe" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Prepend</name></member>
      <member refid="classwx_sizer_1a504343f0780c3d1ea7f16bcf1e6e90b5" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Prepend</name></member>
      <member refid="classwx_sizer_1a0f34608b8bf5b119938cea846a4b29c6" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Prepend</name></member>
      <member refid="classwx_sizer_1acc707e1e6d0afd18dc4e70052fa21d78" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>PrependSpacer</name></member>
      <member refid="classwx_sizer_1ac102680023527ab0610a0d2a6340d4e4" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>PrependStretchSpacer</name></member>
      <member refid="classwx_sizer_1ad8bbc5e78a46f85d445db3c324fe1614" prot="public" virt="pure-virtual"><scope>wxSizer</scope><name>RecalcSizes</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Ref</name></member>
      <member refid="classwx_sizer_1a06ef74a0bb6aba1f1d3aab02fb402fec" prot="public" virt="virtual"><scope>wxSizer</scope><name>Remove</name></member>
      <member refid="classwx_sizer_1a7fce6ce0e986e00e6702914436b6191a" prot="public" virt="virtual"><scope>wxSizer</scope><name>Remove</name></member>
      <member refid="classwx_sizer_1accad1425ce5f2504fb63d2801b5b85e1" prot="public" virt="virtual"><scope>wxSizer</scope><name>Remove</name></member>
      <member refid="classwx_sizer_1ade62512b74abfa0c6ff45825ea0c9d9d" prot="public" virt="virtual"><scope>wxSizer</scope><name>Replace</name></member>
      <member refid="classwx_sizer_1a842fc94c0f5e58597216cb952e044509" prot="public" virt="virtual"><scope>wxSizer</scope><name>Replace</name></member>
      <member refid="classwx_sizer_1a5283d4d5fd059cea93e9401e3708f294" prot="public" virt="virtual"><scope>wxSizer</scope><name>Replace</name></member>
      <member refid="classwx_sizer_1a3c5483afdc5b5b5657548e190226f285" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>SetDimension</name></member>
      <member refid="classwx_sizer_1aa993f4a4534bd4dd24c801bfda6da224" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>SetDimension</name></member>
      <member refid="classwx_sizer_1a26fc90231667639d5af7c2f8f7b75c80" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>SetItemMinSize</name></member>
      <member refid="classwx_sizer_1a486d80e43e6cbd8fea5fa2879d111071" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>SetItemMinSize</name></member>
      <member refid="classwx_sizer_1a8e4230a56ca442a3eb3577f6c47094d4" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>SetItemMinSize</name></member>
      <member refid="classwx_sizer_1a9941c644acf3b215678cea0ea15aeec0" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>SetItemMinSize</name></member>
      <member refid="classwx_sizer_1aae51219b9dfd74c3af5823e39f558ed4" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>SetItemMinSize</name></member>
      <member refid="classwx_sizer_1abc7a754f4a12f80025fad0d131082fbb" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>SetItemMinSize</name></member>
      <member refid="classwx_sizer_1a97bbbf3ee6e55c321d7bb72b4c1b7d79" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>SetMinSize</name></member>
      <member refid="classwx_sizer_1a0e89f59e611c0279e8bee1b7ee345446" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>SetMinSize</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>SetRefData</name></member>
      <member refid="classwx_sizer_1abc460cd0e2bb3bde72142fdb434bc546" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>SetSizeHints</name></member>
      <member refid="classwx_sizer_1a92cab30589d91cc09028a3abfefe6221" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>SetVirtualSizeHints</name></member>
      <member refid="classwx_sizer_1afb6638468fe2253d1870b4d387c57a0b" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Show</name></member>
      <member refid="classwx_sizer_1a65289f40a39fb31512f93d8d7f63720e" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Show</name></member>
      <member refid="classwx_sizer_1a15f781b11cbe978d6fbc0b62f32bc3b4" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>Show</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>UnShare</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>wxObject</name></member>
      <member refid="classwx_sizer_1ae05f76a5e5a8e721065dd5aec1bd6cb2" prot="public" virt="non-virtual"><scope>wxSizer</scope><name>wxSizer</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxSizer</scope><name>~wxObject</name></member>
      <member refid="classwx_sizer_1a5d52467e4e1367939ef4d9ddc6876cfe" prot="public" virt="virtual"><scope>wxSizer</scope><name>~wxSizer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
