<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_icon_bundle" kind="class" prot="public">
    <compoundname>wxIconBundle</compoundname>
    <basecompoundref refid="classwx_g_d_i_object" prot="public" virt="non-virtual">wxGDIObject</basecompoundref>
    <includes local="no">wx/iconbndl.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classwx_icon_bundle_1a1a3313599d37c441e73c287b0268119f" prot="public" static="no">
        <name>@19</name>
        <enumvalue id="classwx_icon_bundle_1a1a3313599d37c441e73c287b0268119face97e3a6d1a418f379ff610379db0c3c" prot="public">
          <name>FALLBACK_NONE</name>
          <initializer> 0</initializer>
          <briefdescription>
<para>Return invalid icon if exact size is not found. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classwx_icon_bundle_1a1a3313599d37c441e73c287b0268119fa27467ada8c18746e09ed0125eaffaa74" prot="public">
          <name>FALLBACK_SYSTEM</name>
          <initializer> 1</initializer>
          <briefdescription>
<para>Return the icon of the system icon size if exact size is not found. </para>          </briefdescription>
          <detaileddescription>
<para>May be combined with other non-NONE enum elements to determine what happens if the system icon size is not found neither. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="classwx_icon_bundle_1a1a3313599d37c441e73c287b0268119fa1ae672eced490bb4304c78471e922d69" prot="public">
          <name>FALLBACK_NEAREST_LARGER</name>
          <initializer> 2</initializer>
          <briefdescription>
<para>Return the icon of closest larger size or, if there is no icon of larger size in the bundle, the closest icon of smaller size. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The elements of this enum determine what happens if <ref refid="classwx_icon_bundle_1a96ffc72b040c8f15c1f65fb3606488b4" kindref="member">GetIcon()</ref> doesn&apos;t find the icon of exactly the requested size. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.9.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/iconbndl.h" line="31" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/iconbndl.h" bodystart="30" bodyend="43"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_icon_bundle_1a2f65bb12c79fa372019d380ede4cfbb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxIconBundle::wxIconBundle</definition>
        <argsstring>()</argsstring>
        <name>wxIconBundle</name>
        <briefdescription>
<para>Default ctor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/iconbndl.h" line="49"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_bundle_1a8926b55cde0f0327cdfe6496d1c5a65e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxIconBundle::wxIconBundle</definition>
        <argsstring>(const wxString &amp;file, wxBitmapType type=wxBITMAP_TYPE_ANY)</argsstring>
        <name>wxIconBundle</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="gdicmn_8h_1a90a1eb6d85b5044a99b706fd979f27f5" kindref="member">wxBitmapType</ref></type>
          <declname>type</declname>
          <defval>wxBITMAP_TYPE_ANY</defval>
        </param>
        <briefdescription>
<para>Initializes the bundle with the icon(s) found in the file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/iconbndl.h" line="54"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_bundle_1a7e5fbe5ae2baf1925240dcbbf50f5b82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxIconBundle::wxIconBundle</definition>
        <argsstring>(wxInputStream &amp;stream, wxBitmapType type=wxBITMAP_TYPE_ANY)</argsstring>
        <name>wxIconBundle</name>
        <param>
          <type><ref refid="classwx_input_stream" kindref="compound">wxInputStream</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="gdicmn_8h_1a90a1eb6d85b5044a99b706fd979f27f5" kindref="member">wxBitmapType</ref></type>
          <declname>type</declname>
          <defval>wxBITMAP_TYPE_ANY</defval>
        </param>
        <briefdescription>
<para>Initializes the bundle with the icon(s) found in the stream. </para>        </briefdescription>
        <detaileddescription>
<para>Notice that the <emphasis>stream</emphasis> must be seekable, at least if it contains more than one icon. The stream pointer is positioned after the last icon read from the stream when this function returns.</para><para><simplesect kind="since"><para>2.9.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/iconbndl.h" line="65"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_bundle_1a4ab2055fb57aa5ed44990958e2de2b6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxIconBundle::wxIconBundle</definition>
        <argsstring>(const wxIcon &amp;icon)</argsstring>
        <name>wxIconBundle</name>
        <param>
          <type>const <ref refid="classwx_icon" kindref="compound">wxIcon</ref> &amp;</type>
          <declname>icon</declname>
        </param>
        <briefdescription>
<para>Initializes the bundle with a single icon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/iconbndl.h" line="70"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_bundle_1a41281e6108842ebfbab4acedfaaaa6de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxIconBundle::wxIconBundle</definition>
        <argsstring>(const wxIconBundle &amp;ic)</argsstring>
        <name>wxIconBundle</name>
        <param>
          <type>const <ref refid="classwx_icon_bundle" kindref="compound">wxIconBundle</ref> &amp;</type>
          <declname>ic</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/iconbndl.h" line="75"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_bundle_1a3dd3de60abb5e07439f66d778d37de46" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxIconBundle::~wxIconBundle</definition>
        <argsstring>()</argsstring>
        <name>~wxIconBundle</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/iconbndl.h" line="80"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_bundle_1a62c4e9119b8d73a4273c61ffd3c119f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxIconBundle::AddIcon</definition>
        <argsstring>(const wxString &amp;file, wxBitmapType type=wxBITMAP_TYPE_ANY)</argsstring>
        <name>AddIcon</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="gdicmn_8h_1a90a1eb6d85b5044a99b706fd979f27f5" kindref="member">wxBitmapType</ref></type>
          <declname>type</declname>
          <defval>wxBITMAP_TYPE_ANY</defval>
        </param>
        <briefdescription>
<para>Adds all the icons contained in the file to the bundle; if the collection already contains icons with the same width and height, they are replaced by the new ones. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/iconbndl.h" line="87"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_bundle_1adf0f0de9782521c17c2bd0439bbd06fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxIconBundle::AddIcon</definition>
        <argsstring>(wxInputStream &amp;stream, wxBitmapType type=wxBITMAP_TYPE_ANY)</argsstring>
        <name>AddIcon</name>
        <param>
          <type><ref refid="classwx_input_stream" kindref="compound">wxInputStream</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="gdicmn_8h_1a90a1eb6d85b5044a99b706fd979f27f5" kindref="member">wxBitmapType</ref></type>
          <declname>type</declname>
          <defval>wxBITMAP_TYPE_ANY</defval>
        </param>
        <briefdescription>
<para>Adds all the icons contained in the stream to the bundle; if the collection already contains icons with the same width and height, they are replaced by the new ones. </para>        </briefdescription>
        <detaileddescription>
<para>Notice that, as well as in the constructor loading the icon bundle from stream, the <emphasis>stream</emphasis> must be seekable, at least if more than one icon is to be loaded from it.</para><para><simplesect kind="since"><para>2.9.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/iconbndl.h" line="100"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_bundle_1a0a8c33284a082b901079e2c5042aa1d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxIconBundle::AddIcon</definition>
        <argsstring>(const wxIcon &amp;icon)</argsstring>
        <name>AddIcon</name>
        <param>
          <type>const <ref refid="classwx_icon" kindref="compound">wxIcon</ref> &amp;</type>
          <declname>icon</declname>
        </param>
        <briefdescription>
<para>Adds the icon to the collection; if the collection already contains an icon with the same width and height, it is replaced by the new one. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/iconbndl.h" line="107"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_bundle_1a96ffc72b040c8f15c1f65fb3606488b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_icon" kindref="compound">wxIcon</ref></type>
        <definition>wxIcon wxIconBundle::GetIcon</definition>
        <argsstring>(const wxSize &amp;size, int flags=FALLBACK_SYSTEM) const </argsstring>
        <name>GetIcon</name>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>FALLBACK_SYSTEM</defval>
        </param>
        <briefdescription>
<para>Returns the icon with the given size. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>size</emphasis> is <ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref>, it is interpreted as the standard system icon size, i.e. the size returned by <ref refid="classwx_system_settings_1aa18e3b5794dc4193c4b0668d28d4933a" kindref="member">wxSystemSettings::GetMetric()</ref> for <computeroutput>wxSYS_ICON_X</computeroutput> and <computeroutput>wxSYS_ICON_Y</computeroutput>.</para><para>If the bundle contains an icon with exactly the requested size, it&apos;s always returned. Otherwise, the behaviour depends on the flags. If only ::FALLBACK_NONE is given, the function returns an invalid icon. If ::FALLBACK_SYSTEM is given, it tries to find the icon of standard system size, regardless of the size passed as parameter. Otherwise, or if the icon system size is not found neither, but ::FALLBACK_NEAREST_LARGER flag is specified, the function returns the smallest icon of the size larger than the requested one or, if this fails too, just the icon closest to the specified size.</para><para>The <emphasis>flags</emphasis> parameter is available only since wxWidgets 2.9.4. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/iconbndl.h" line="128"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_bundle_1a4e97d8e76baeda28f71dcbd5d7e76127" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_icon" kindref="compound">wxIcon</ref></type>
        <definition>wxIcon wxIconBundle::GetIcon</definition>
        <argsstring>(wxCoord size=wxDefaultCoord, int flags=FALLBACK_SYSTEM) const </argsstring>
        <name>GetIcon</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>size</declname>
          <defval><ref refid="defs_8h_1ae297119c813ec5d3328ce3f43f9ac6c1" kindref="member">wxDefaultCoord</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>FALLBACK_SYSTEM</defval>
        </param>
        <briefdescription>
<para>Same as. </para>        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal"><sp/><ref refid="classwx_icon_bundle_1a96ffc72b040c8f15c1f65fb3606488b4" kindref="member" tooltip="Returns the icon with the given size.">GetIcon</ref>(<sp/><ref refid="classwx_size" kindref="compound" tooltip="A wxSize is a useful data structure for graphics operations.">wxSize</ref>(<sp/>size,<sp/>size<sp/>)<sp/>)<sp/></highlight></codeline>
</programlisting>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/iconbndl.h" line="134"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_bundle_1ac830fcc74abffa167558dd84fbd34645" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_icon" kindref="compound">wxIcon</ref></type>
        <definition>wxIcon wxIconBundle::GetIconOfExactSize</definition>
        <argsstring>(const wxSize &amp;size) const </argsstring>
        <name>GetIconOfExactSize</name>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Returns the icon with exactly the given size or <ref refid="icon_8h_1a953854798a8dfd400777318358dad5b6" kindref="member">wxNullIcon</ref> if this size is not available. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/iconbndl.h" line="140"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_bundle_1a02acfb70b42a200b4eee9aa51a179860" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxIconBundle::GetIconCount</definition>
        <argsstring>() const </argsstring>
        <name>GetIconCount</name>
        <briefdescription>
<para>return the number of available icons </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/iconbndl.h" line="145"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_bundle_1a78b33103b5a4b16b2581cec8a334f601" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_icon" kindref="compound">wxIcon</ref></type>
        <definition>wxIcon wxIconBundle::GetIconByIndex</definition>
        <argsstring>(size_t n) const </argsstring>
        <name>GetIconByIndex</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>return the icon at index (must be &lt; <ref refid="classwx_icon_bundle_1a02acfb70b42a200b4eee9aa51a179860" kindref="member">GetIconCount()</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/iconbndl.h" line="150"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_bundle_1a3d7505f4b585ffca07395855dfaccd45" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxIconBundle::IsEmpty</definition>
        <argsstring>() const </argsstring>
        <name>IsEmpty</name>
        <briefdescription>
<para>Returns true if the bundle doesn&apos;t contain any icons, false otherwise (in which case a call to <ref refid="classwx_icon_bundle_1a96ffc72b040c8f15c1f65fb3606488b4" kindref="member">GetIcon()</ref> with default parameter should return a valid icon). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/iconbndl.h" line="157"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_bundle_1ae2ebe7031b08ad23c5323b431fa86e31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_icon_bundle" kindref="compound">wxIconBundle</ref> &amp;</type>
        <definition>wxIconBundle&amp; wxIconBundle::operator=</definition>
        <argsstring>(const wxIconBundle &amp;ic)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classwx_icon_bundle" kindref="compound">wxIconBundle</ref> &amp;</type>
          <declname>ic</declname>
        </param>
        <briefdescription>
<para>Assignment operator, using <ref refid="overview_refcount" kindref="compound">reference counting</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/iconbndl.h" line="162"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class contains multiple copies of an icon in different sizes. </para>    </briefdescription>
    <detaileddescription>
<para>It is typically used in <ref refid="classwx_dialog_1a25159a919f632d6b2d15f19a1bfbe639" kindref="member">wxDialog::SetIcons</ref> and <ref refid="classwx_top_level_window_1a34270084ea5a46c12309abbb99f2004c" kindref="member">wxTopLevelWindow::SetIcons</ref>.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__gdi" kindref="compound">Graphics Device Interface (GDI)</ref></para><para>Predefined objects/pointers: <ref refid="iconbndl_8h_1a6b22172688a6f18a3c6c89ee327d5759" kindref="member">wxNullIconBundle</ref> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="7406">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="7405">
        <label>wxGDIObject</label>
        <link refid="classwx_g_d_i_object"/>
        <childnode refid="7406" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7404">
        <label>wxIconBundle</label>
        <link refid="classwx_icon_bundle"/>
        <childnode refid="7405" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7409">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="7410" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="7408">
        <label>wxGDIObject</label>
        <link refid="classwx_g_d_i_object"/>
        <childnode refid="7409" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7410">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
      <node id="7407">
        <label>wxIconBundle</label>
        <link refid="classwx_icon_bundle"/>
        <childnode refid="7408" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/iconbndl.h" line="22" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/iconbndl.h" bodystart="21" bodyend="164"/>
    <listofallmembers>
      <member refid="classwx_icon_bundle_1a62c4e9119b8d73a4273c61ffd3c119f3" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>AddIcon</name></member>
      <member refid="classwx_icon_bundle_1adf0f0de9782521c17c2bd0439bbd06fc" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>AddIcon</name></member>
      <member refid="classwx_icon_bundle_1a0a8c33284a082b901079e2c5042aa1d2" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>AddIcon</name></member>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxIconBundle</scope><name>AllocExclusive</name></member>
      <member refid="classwx_object_1a1d39f1d3650fe0982c9a1abe7f9fe7b7" prot="protected" virt="virtual"><scope>wxIconBundle</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a95c6a5e4e1e03ff23c7b9efe4cff0c1a" prot="protected" virt="virtual"><scope>wxIconBundle</scope><name>CreateRefData</name></member>
      <member refid="classwx_icon_bundle_1a1a3313599d37c441e73c287b0268119fa1ae672eced490bb4304c78471e922d69" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>FALLBACK_NEAREST_LARGER</name></member>
      <member refid="classwx_icon_bundle_1a1a3313599d37c441e73c287b0268119face97e3a6d1a418f379ff610379db0c3c" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>FALLBACK_NONE</name></member>
      <member refid="classwx_icon_bundle_1a1a3313599d37c441e73c287b0268119fa27467ada8c18746e09ed0125eaffaa74" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>FALLBACK_SYSTEM</name></member>
      <member refid="classwx_object_1ab3a0c6f723cbaddb47be4e8dd98cc8e2" prot="public" virt="virtual"><scope>wxIconBundle</scope><name>GetClassInfo</name></member>
      <member refid="classwx_icon_bundle_1a96ffc72b040c8f15c1f65fb3606488b4" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>GetIcon</name></member>
      <member refid="classwx_icon_bundle_1a4e97d8e76baeda28f71dcbd5d7e76127" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>GetIcon</name></member>
      <member refid="classwx_icon_bundle_1a78b33103b5a4b16b2581cec8a334f601" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>GetIconByIndex</name></member>
      <member refid="classwx_icon_bundle_1a02acfb70b42a200b4eee9aa51a179860" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>GetIconCount</name></member>
      <member refid="classwx_icon_bundle_1ac830fcc74abffa167558dd84fbd34645" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>GetIconOfExactSize</name></member>
      <member refid="classwx_object_1aabdb4fc957226544a8408167844e4f42" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>GetRefData</name></member>
      <member refid="classwx_icon_bundle_1a3d7505f4b585ffca07395855dfaccd45" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>IsEmpty</name></member>
      <member refid="classwx_object_1af40d580385cf4f8112fae7713404b01e" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a80a1a3fda7b14396a9ddd3d7a46a88bd" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>IsSameAs</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxIconBundle</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>operator new</name></member>
      <member refid="classwx_icon_bundle_1ae2ebe7031b08ad23c5323b431fa86e31" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>operator=</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>Ref</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>SetRefData</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>UnShare</name></member>
      <member refid="classwx_g_d_i_object_1a20ac442e0d24cf6250d7bd45f0d968d5" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>wxGDIObject</name></member>
      <member refid="classwx_icon_bundle_1a2f65bb12c79fa372019d380ede4cfbb4" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>wxIconBundle</name></member>
      <member refid="classwx_icon_bundle_1a8926b55cde0f0327cdfe6496d1c5a65e" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>wxIconBundle</name></member>
      <member refid="classwx_icon_bundle_1a7e5fbe5ae2baf1925240dcbbf50f5b82" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>wxIconBundle</name></member>
      <member refid="classwx_icon_bundle_1a4ab2055fb57aa5ed44990958e2de2b6d" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>wxIconBundle</name></member>
      <member refid="classwx_icon_bundle_1a41281e6108842ebfbab4acedfaaaa6de" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>wxIconBundle</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxIconBundle</scope><name>wxObject</name></member>
      <member refid="classwx_icon_bundle_1a3dd3de60abb5e07439f66d778d37de46" prot="public" virt="virtual"><scope>wxIconBundle</scope><name>~wxIconBundle</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxIconBundle</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
