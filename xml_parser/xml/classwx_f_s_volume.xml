<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_f_s_volume" kind="class" prot="public">
    <compoundname>wxFSVolume</compoundname>
    <includes local="no">wx/volume.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_f_s_volume_1a29f5d729cae6c7258f8f3598ec32dbd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxFSVolume::wxFSVolume</definition>
        <argsstring>()</argsstring>
        <name>wxFSVolume</name>
        <briefdescription>
<para>Default ctor. </para>        </briefdescription>
        <detaileddescription>
<para>Use <ref refid="classwx_f_s_volume_1adfb2a7c227e86b1705bb6550ee6a991e" kindref="member">Create()</ref> later. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/volume.h" line="73"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_s_volume_1a02f2eb7976b97fd1612dc83bd1289237" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxFSVolume::wxFSVolume</definition>
        <argsstring>(const wxString &amp;name)</argsstring>
        <name>wxFSVolume</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Create the volume object with the given <emphasis>name</emphasis> (which should be one of those returned by <ref refid="classwx_f_s_volume_1a313138cace5f2dc3f8e263435e0a9c87" kindref="member">GetVolumes()</ref>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/volume.h" line="79"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_s_volume_1adfb2a7c227e86b1705bb6550ee6a991e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxFSVolume::Create</definition>
        <argsstring>(const wxString &amp;name)</argsstring>
        <name>Create</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Create the volume object with the given <emphasis>name</emphasis> (which should be one of those returned by <ref refid="classwx_f_s_volume_1a313138cace5f2dc3f8e263435e0a9c87" kindref="member">GetVolumes()</ref>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/volume.h" line="85"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_s_volume_1adefde5139dad28a0edd0c9c4380fc51e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxFSVolume::IsOk</definition>
        <argsstring>() const </argsstring>
        <name>IsOk</name>
        <briefdescription>
<para>Is this a valid volume? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/volume.h" line="110"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_s_volume_1ab690b3bb601eee384c8c12d8f89db366" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="volume_8h_1aa4e140e1cf09e65894158d6df45cb129" kindref="member">wxFSVolumeKind</ref></type>
        <definition>wxFSVolumeKind wxFSVolume::GetKind</definition>
        <argsstring>() const </argsstring>
        <name>GetKind</name>
        <briefdescription>
<para>Returns the kind of this volume. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/volume.h" line="115"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_s_volume_1a8d55b857b58d29150cd9330d9e68e65d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxFSVolume::GetFlags</definition>
        <argsstring>() const </argsstring>
        <name>GetFlags</name>
        <briefdescription>
<para>Returns the flags of this volume. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="volume_8h_1a5c80e004648868994c5a2406a9f950fe" kindref="member">wxFSVolumeFlags</ref> enumeration values. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/volume.h" line="120"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_s_volume_1aad3c199f3bdd89246f091fde409b4014" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxFSVolume::IsWritable</definition>
        <argsstring>() const </argsstring>
        <name>IsWritable</name>
        <briefdescription>
<para>Returns true if this volume is writable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/volume.h" line="125"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_s_volume_1ae6c3cd14cf91fd2d87ac0f2a8d5efe02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxFSVolume::GetName</definition>
        <argsstring>() const </argsstring>
        <name>GetName</name>
        <briefdescription>
<para>Returns the name of the volume; this is the internal name for the volume used by the operating system. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/volume.h" line="131"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_s_volume_1a534f926534e673eab98fd3848fcad64a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxFSVolume::GetDisplayName</definition>
        <argsstring>() const </argsstring>
        <name>GetDisplayName</name>
        <briefdescription>
<para>Returns the name of the volume meant to be shown to the user. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/volume.h" line="136"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_s_volume_1af04cadcda4e2c52d5f2a61c1927678b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_icon" kindref="compound">wxIcon</ref></type>
        <definition>wxIcon wxFSVolume::GetIcon</definition>
        <argsstring>(wxFSIconType type) const </argsstring>
        <name>GetIcon</name>
        <param>
          <type><ref refid="volume_8h_1a25716a00b483e0fd09f520c53cca04c3" kindref="member">wxFSIconType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>This function is available only when <computeroutput>wxUSE_GUI</computeroutput> is <computeroutput>1</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the icon used by the native toolkit for the given file system type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/volume.h" line="143"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_f_s_volume_1a313138cace5f2dc3f8e263435e0a9c87" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_array_string" kindref="compound">wxArrayString</ref></type>
        <definition>static wxArrayString wxFSVolume::GetVolumes</definition>
        <argsstring>(int flagsSet=wxFS_VOL_MOUNTED, int flagsUnset=0)</argsstring>
        <name>GetVolumes</name>
        <param>
          <type>int</type>
          <declname>flagsSet</declname>
          <defval>wxFS_VOL_MOUNTED</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flagsUnset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns an array containing the names of the volumes of this system. </para>        </briefdescription>
        <detaileddescription>
<para>Only the volumes with <emphasis>flags</emphasis> such that the expression <programlisting><codeline><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>flagsSet)<sp/>==<sp/>flagsSet<sp/>&amp;&amp;<sp/>!(flags<sp/>&amp;<sp/>flagsUnset)<sp/></highlight></codeline>
</programlisting> is true, are returned. By default, all mounted ones are returned. See <ref refid="volume_8h_1a5c80e004648868994c5a2406a9f950fe" kindref="member">wxFSVolumeFlags</ref> enumeration values for a list of valid flags.</para><para>This operation may take a while and, even if this function is synchronous, it can be stopped using <ref refid="classwx_f_s_volume_1a0a43342c22263988ce38996ee5ee37af" kindref="member">CancelSearch()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/volume.h" line="99"/>
      </memberdef>
      <memberdef kind="function" id="classwx_f_s_volume_1a0a43342c22263988ce38996ee5ee37af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wxFSVolume::CancelSearch</definition>
        <argsstring>()</argsstring>
        <name>CancelSearch</name>
        <briefdescription>
<para>Stops execution of <ref refid="classwx_f_s_volume_1a313138cace5f2dc3f8e263435e0a9c87" kindref="member">GetVolumes()</ref> called previously (should be called from another thread, of course). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/volume.h" line="105"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classwx_f_s_volume" kindref="compound">wxFSVolume</ref> represents a volume (also known as &apos;drive&apos;) in a file system under wxMSW. </para>    </briefdescription>
    <detaileddescription>
<para>Unix ports of wxWidgets do not have the concept of volumes and thus do not implement <ref refid="classwx_f_s_volume" kindref="compound">wxFSVolume</ref>.</para><para>Availability:<nonbreakablespace/><nonbreakablespace/>only available for the <ref refid="page_port_1page_port_wxmsw" kindref="member">wxMSW</ref> port.  <onlyfor>wxmsw</onlyfor> </para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__misc" kindref="compound">Miscellaneous</ref> </para>    </detaileddescription>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/volume.h" line="68" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/volume.h" bodystart="67" bodyend="144"/>
    <listofallmembers>
      <member refid="classwx_f_s_volume_1a0a43342c22263988ce38996ee5ee37af" prot="public" virt="non-virtual"><scope>wxFSVolume</scope><name>CancelSearch</name></member>
      <member refid="classwx_f_s_volume_1adfb2a7c227e86b1705bb6550ee6a991e" prot="public" virt="non-virtual"><scope>wxFSVolume</scope><name>Create</name></member>
      <member refid="classwx_f_s_volume_1a534f926534e673eab98fd3848fcad64a" prot="public" virt="non-virtual"><scope>wxFSVolume</scope><name>GetDisplayName</name></member>
      <member refid="classwx_f_s_volume_1a8d55b857b58d29150cd9330d9e68e65d" prot="public" virt="non-virtual"><scope>wxFSVolume</scope><name>GetFlags</name></member>
      <member refid="classwx_f_s_volume_1af04cadcda4e2c52d5f2a61c1927678b2" prot="public" virt="non-virtual"><scope>wxFSVolume</scope><name>GetIcon</name></member>
      <member refid="classwx_f_s_volume_1ab690b3bb601eee384c8c12d8f89db366" prot="public" virt="non-virtual"><scope>wxFSVolume</scope><name>GetKind</name></member>
      <member refid="classwx_f_s_volume_1ae6c3cd14cf91fd2d87ac0f2a8d5efe02" prot="public" virt="non-virtual"><scope>wxFSVolume</scope><name>GetName</name></member>
      <member refid="classwx_f_s_volume_1a313138cace5f2dc3f8e263435e0a9c87" prot="public" virt="non-virtual"><scope>wxFSVolume</scope><name>GetVolumes</name></member>
      <member refid="classwx_f_s_volume_1adefde5139dad28a0edd0c9c4380fc51e" prot="public" virt="non-virtual"><scope>wxFSVolume</scope><name>IsOk</name></member>
      <member refid="classwx_f_s_volume_1aad3c199f3bdd89246f091fde409b4014" prot="public" virt="non-virtual"><scope>wxFSVolume</scope><name>IsWritable</name></member>
      <member refid="classwx_f_s_volume_1a29f5d729cae6c7258f8f3598ec32dbd7" prot="public" virt="non-virtual"><scope>wxFSVolume</scope><name>wxFSVolume</name></member>
      <member refid="classwx_f_s_volume_1a02f2eb7976b97fd1612dc83bd1289237" prot="public" virt="non-virtual"><scope>wxFSVolume</scope><name>wxFSVolume</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
