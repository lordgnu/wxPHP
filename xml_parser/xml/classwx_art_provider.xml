<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_art_provider" kind="class" prot="public">
    <compoundname>wxArtProvider</compoundname>
    <basecompoundref refid="classwx_object" prot="public" virt="non-virtual">wxObject</basecompoundref>
    <includes local="no">wx/artprov.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_art_provider_1ac5b69725368c260e0b439bd4f9f3cfe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxArtProvider::~wxArtProvider</definition>
        <argsstring>()</argsstring>
        <name>~wxArtProvider</name>
        <briefdescription>
<para>The destructor automatically removes the provider from the provider stack used by <ref refid="classwx_art_provider_1a405ecf7cdead6dbfb092376a51a856c4" kindref="member">GetBitmap()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/artprov.h" line="257"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_art_provider_1a2ea46956a7acce89f91be6ce422283eb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool wxArtProvider::Delete</definition>
        <argsstring>(wxArtProvider *provider)</argsstring>
        <name>Delete</name>
        <param>
          <type><ref refid="classwx_art_provider" kindref="compound">wxArtProvider</ref> *</type>
          <declname>provider</declname>
        </param>
        <briefdescription>
<para>Delete the given <emphasis>provider</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/artprov.h" line="262"/>
      </memberdef>
      <memberdef kind="function" id="classwx_art_provider_1a405ecf7cdead6dbfb092376a51a856c4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref></type>
        <definition>static wxBitmap wxArtProvider::GetBitmap</definition>
        <argsstring>(const wxArtID &amp;id, const wxArtClient &amp;client=wxART_OTHER, const wxSize &amp;size=wxDefaultSize)</argsstring>
        <name>GetBitmap</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxArtID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxArtClient</ref> &amp;</type>
          <declname>client</declname>
          <defval><ref refid="artprov_8h_1abe6f6066b36e0456cb2f8a0e6decb831" kindref="member">wxART_OTHER</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
          <defval><ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref></defval>
        </param>
        <briefdescription>
<para>Query registered providers for bitmap with given ID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>wxArtID unique identifier of the bitmap. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>wxArtClient identifier of the client (i.e. who is asking for the bitmap). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the returned bitmap or wxDefaultSize if size doesn&apos;t matter.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The bitmap if one of registered providers recognizes the ID or wxNullBitmap otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/artprov.h" line="279"/>
      </memberdef>
      <memberdef kind="function" id="classwx_art_provider_1ac9bd0ba166e5ef9515c68542bb96da09" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_icon" kindref="compound">wxIcon</ref></type>
        <definition>static wxIcon wxArtProvider::GetIcon</definition>
        <argsstring>(const wxArtID &amp;id, const wxArtClient &amp;client=wxART_OTHER, const wxSize &amp;size=wxDefaultSize)</argsstring>
        <name>GetIcon</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxArtID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxArtClient</ref> &amp;</type>
          <declname>client</declname>
          <defval><ref refid="artprov_8h_1abe6f6066b36e0456cb2f8a0e6decb831" kindref="member">wxART_OTHER</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
          <defval><ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref></defval>
        </param>
        <briefdescription>
<para>Same as <ref refid="classwx_art_provider_1a405ecf7cdead6dbfb092376a51a856c4" kindref="member">wxArtProvider::GetBitmap</ref>, but return a <ref refid="classwx_icon" kindref="compound">wxIcon</ref> object (or <ref refid="icon_8h_1a953854798a8dfd400777318358dad5b6" kindref="member">wxNullIcon</ref> on failure). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/artprov.h" line="287"/>
      </memberdef>
      <memberdef kind="function" id="classwx_art_provider_1aba8987da6f829278235407245ee22f57" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>static wxSize wxArtProvider::GetNativeSizeHint</definition>
        <argsstring>(const wxArtClient &amp;client)</argsstring>
        <name>GetNativeSizeHint</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxArtClient</ref> &amp;</type>
          <declname>client</declname>
        </param>
        <briefdescription>
<para>Returns native icon size for use specified by <emphasis>client</emphasis> hint. </para>        </briefdescription>
        <detaileddescription>
<para>If the platform has no commonly used default for this use or if <emphasis>client</emphasis> is not recognized, returns wxDefaultSize.</para><para><simplesect kind="note"><para>In some cases, a platform may have <emphasis>several</emphasis> appropriate native sizes (for example, wxART_FRAME_ICON for frame icons). In that case, this method returns only one of them, picked reasonably.</para></simplesect>
<simplesect kind="since"><para>2.9.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/artprov.h" line="302"/>
      </memberdef>
      <memberdef kind="function" id="classwx_art_provider_1adfcca5fc919f1be4a95cc5ccb63f1cae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>static wxSize wxArtProvider::GetSizeHint</definition>
        <argsstring>(const wxArtClient &amp;client, bool platform_default=false)</argsstring>
        <name>GetSizeHint</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxArtClient</ref> &amp;</type>
          <declname>client</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>platform_default</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns a suitable size hint for the given <emphasis>wxArtClient</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>platform_default</emphasis> is true, return a size based on the current platform using <ref refid="classwx_art_provider_1aba8987da6f829278235407245ee22f57" kindref="member">GetNativeSizeHint()</ref>, otherwise return the size from the topmost <ref refid="classwx_art_provider" kindref="compound">wxArtProvider</ref>. <emphasis>wxDefaultSize</emphasis> may be returned if the client doesn&apos;t have a specified size, like wxART_OTHER for example.</para><para><simplesect kind="see"><para><ref refid="classwx_art_provider_1aba8987da6f829278235407245ee22f57" kindref="member">GetNativeSizeHint()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/artprov.h" line="315"/>
      </memberdef>
      <memberdef kind="function" id="classwx_art_provider_1a0849828481ed689d716e600672fbaec0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_icon_bundle" kindref="compound">wxIconBundle</ref></type>
        <definition>static wxIconBundle wxArtProvider::GetIconBundle</definition>
        <argsstring>(const wxArtID &amp;id, const wxArtClient &amp;client=wxART_OTHER)</argsstring>
        <name>GetIconBundle</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxArtID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxArtClient</ref> &amp;</type>
          <declname>client</declname>
          <defval><ref refid="artprov_8h_1abe6f6066b36e0456cb2f8a0e6decb831" kindref="member">wxART_OTHER</ref></defval>
        </param>
        <briefdescription>
<para>Query registered providers for icon bundle with given ID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>wxArtID unique identifier of the icon bundle. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>wxArtClient identifier of the client (i.e. who is asking for the icon bundle).</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The icon bundle if one of registered providers recognizes the ID or wxNullIconBundle otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/artprov.h" line="330"/>
      </memberdef>
      <memberdef kind="function" id="classwx_art_provider_1ae64f10b3bc37c12ca7b18c2f43c42611" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool wxArtProvider::HasNativeProvider</definition>
        <argsstring>()</argsstring>
        <name>HasNativeProvider</name>
        <briefdescription>
<para>Returns true if the platform uses native icons provider that should take precedence over any customizations. </para>        </briefdescription>
        <detaileddescription>
<para>This is true for any platform that has user-customizable icon themes, currently only wxGTK.</para><para>A typical use for this method is to decide whether a custom art provider should be plugged in using <ref refid="classwx_art_provider_1a6af5625b194423247ff3845e1f0f61d6" kindref="member">Push()</ref> or <ref refid="classwx_art_provider_1a55fe50769f0aeae2cf49860ef0b168d2" kindref="member">PushBack()</ref>.</para><para><simplesect kind="since"><para>2.9.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/artprov.h" line="344"/>
      </memberdef>
      <memberdef kind="function" id="classwx_art_provider_1ae6090f32579d782205dd247006e4c7de" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wxArtProvider::Insert</definition>
        <argsstring>(wxArtProvider *provider)</argsstring>
        <name>Insert</name>
        <param>
          <type><ref refid="classwx_art_provider" kindref="compound">wxArtProvider</ref> *</type>
          <declname>provider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000003"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="classwx_art_provider_1a55fe50769f0aeae2cf49860ef0b168d2" kindref="member">PushBack()</ref> instead.</para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/artprov.h" line="349"/>
      </memberdef>
      <memberdef kind="function" id="classwx_art_provider_1a0be076c2270930e8a698dff5bee94b59" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool wxArtProvider::Pop</definition>
        <argsstring>()</argsstring>
        <name>Pop</name>
        <briefdescription>
<para>Remove latest added provider and delete it. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/artprov.h" line="354"/>
      </memberdef>
      <memberdef kind="function" id="classwx_art_provider_1a6af5625b194423247ff3845e1f0f61d6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wxArtProvider::Push</definition>
        <argsstring>(wxArtProvider *provider)</argsstring>
        <name>Push</name>
        <param>
          <type><ref refid="classwx_art_provider" kindref="compound">wxArtProvider</ref> *</type>
          <declname>provider</declname>
        </param>
        <briefdescription>
<para>Register new art provider and add it to the top of providers stack (i.e. </para>        </briefdescription>
        <detaileddescription>
<para>it will be queried as the first provider).</para><para><simplesect kind="see"><para><ref refid="classwx_art_provider_1a55fe50769f0aeae2cf49860ef0b168d2" kindref="member">PushBack()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/artprov.h" line="362"/>
      </memberdef>
      <memberdef kind="function" id="classwx_art_provider_1a55fe50769f0aeae2cf49860ef0b168d2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wxArtProvider::PushBack</definition>
        <argsstring>(wxArtProvider *provider)</argsstring>
        <name>PushBack</name>
        <param>
          <type><ref refid="classwx_art_provider" kindref="compound">wxArtProvider</ref> *</type>
          <declname>provider</declname>
        </param>
        <briefdescription>
<para>Register new art provider and add it to the bottom of providers stack. </para>        </briefdescription>
        <detaileddescription>
<para>In other words, it will be queried as the last one, after all others, including the default provider.</para><para><simplesect kind="see"><para><ref refid="classwx_art_provider_1a6af5625b194423247ff3845e1f0f61d6" kindref="member">Push()</ref></para></simplesect>
<simplesect kind="since"><para>2.9.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/artprov.h" line="373"/>
      </memberdef>
      <memberdef kind="function" id="classwx_art_provider_1a990035bf586ca89c93c509b704687cbc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool wxArtProvider::Remove</definition>
        <argsstring>(wxArtProvider *provider)</argsstring>
        <name>Remove</name>
        <param>
          <type><ref refid="classwx_art_provider" kindref="compound">wxArtProvider</ref> *</type>
          <declname>provider</declname>
        </param>
        <briefdescription>
<para>Remove a provider from the stack if it is on it. </para>        </briefdescription>
        <detaileddescription>
<para>The provider is not deleted, unlike when using <ref refid="classwx_art_provider_1a2ea46956a7acce89f91be6ce422283eb" kindref="member">Delete()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/artprov.h" line="379"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classwx_art_provider_1a7605cdbfeac3b04094ab05cfa9aba0bc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref></type>
        <definition>virtual wxBitmap wxArtProvider::CreateBitmap</definition>
        <argsstring>(const wxArtID &amp;id, const wxArtClient &amp;client, const wxSize &amp;size)</argsstring>
        <name>CreateBitmap</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxArtID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxArtClient</ref> &amp;</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Derived art provider classes must override this method to create requested art resource. </para>        </briefdescription>
        <detaileddescription>
<para>Note that returned bitmaps are cached by <ref refid="classwx_art_provider" kindref="compound">wxArtProvider</ref> and it is therefore not necessary to optimize <ref refid="classwx_art_provider_1a7605cdbfeac3b04094ab05cfa9aba0bc" kindref="member">CreateBitmap()</ref> for speed (e.g. you may create <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> objects from XPMs here).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>wxArtID unique identifier of the bitmap. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>wxArtClient identifier of the client (i.e. who is asking for the bitmap). This only servers as a hint. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Preferred size of the bitmap. The function may return a bitmap of different dimensions, it will be automatically rescaled to meet client&apos;s request.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This is not part of wxArtProvider&apos;s public API, use <ref refid="classwx_art_provider_1a405ecf7cdead6dbfb092376a51a856c4" kindref="member">wxArtProvider::GetBitmap</ref> or <ref refid="classwx_art_provider_1a0849828481ed689d716e600672fbaec0" kindref="member">wxArtProvider::GetIconBundle</ref> or <ref refid="classwx_art_provider_1ac9bd0ba166e5ef9515c68542bb96da09" kindref="member">wxArtProvider::GetIcon</ref> to query <ref refid="classwx_art_provider" kindref="compound">wxArtProvider</ref> for a resource.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_art_provider_1a0bb64950e85d0cc36977c01f864fdef8" kindref="member">CreateIconBundle()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/artprov.h" line="407"/>
      </memberdef>
      <memberdef kind="function" id="classwx_art_provider_1a0bb64950e85d0cc36977c01f864fdef8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_icon_bundle" kindref="compound">wxIconBundle</ref></type>
        <definition>virtual wxIconBundle wxArtProvider::CreateIconBundle</definition>
        <argsstring>(const wxArtID &amp;id, const wxArtClient &amp;client)</argsstring>
        <name>CreateIconBundle</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxArtID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxArtClient</ref> &amp;</type>
          <declname>client</declname>
        </param>
        <briefdescription>
<para>This method is similar to <ref refid="classwx_art_provider_1a7605cdbfeac3b04094ab05cfa9aba0bc" kindref="member">CreateBitmap()</ref> but can be used when a bitmap (or an icon) exists in several sizes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/artprov.h" line="414"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classwx_art_provider" kindref="compound">wxArtProvider</ref> class is used to customize the look of wxWidgets application. </para>    </briefdescription>
    <detaileddescription>
<para>When wxWidgets needs to display an icon or a bitmap (e.g. in the standard file dialog), it does not use a hard-coded resource but asks <ref refid="classwx_art_provider" kindref="compound">wxArtProvider</ref> for it instead. This way users can plug in their own <ref refid="classwx_art_provider" kindref="compound">wxArtProvider</ref> class and easily replace standard art with their own version.</para><para>All that is needed is to derive a class from <ref refid="classwx_art_provider" kindref="compound">wxArtProvider</ref>, override either its <ref refid="classwx_art_provider_1a7605cdbfeac3b04094ab05cfa9aba0bc" kindref="member">wxArtProvider::CreateBitmap()</ref> and/or its <ref refid="classwx_art_provider_1a0bb64950e85d0cc36977c01f864fdef8" kindref="member">wxArtProvider::CreateIconBundle()</ref> methods and register the provider with <ref refid="classwx_art_provider_1a6af5625b194423247ff3845e1f0f61d6" kindref="member">wxArtProvider::Push()</ref>:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MyProvider<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classwx_art_provider" kindref="compound" tooltip="wxArtProvider class is used to customize the look of wxWidgets application.">wxArtProvider</ref></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_bitmap" kindref="compound" tooltip="This class encapsulates the concept of a platform-dependent bitmap, either monochrome or colour or co...">wxBitmap</ref><sp/><ref refid="classwx_art_provider_1a7605cdbfeac3b04094ab05cfa9aba0bc" kindref="member" tooltip="Derived art provider classes must override this method to create requested art resource.">CreateBitmap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classwx_string" kindref="compound" tooltip="The wxString class has been completely rewritten for wxWidgets 3.0 and this change was actually the m...">wxArtID</ref>&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classwx_string" kindref="compound" tooltip="The wxString class has been completely rewritten for wxWidgets 3.0 and this change was actually the m...">wxArtClient</ref>&amp;<sp/>client,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classwx_size" kindref="compound" tooltip="A wxSize is a useful data structure for graphics operations.">wxSize</ref><sp/>size)</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>optionally<sp/>override<sp/>this<sp/>one<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_icon_bundle" kindref="compound" tooltip="This class contains multiple copies of an icon in different sizes.">wxIconBundle</ref><sp/><ref refid="classwx_art_provider_1a0bb64950e85d0cc36977c01f864fdef8" kindref="member" tooltip="This method is similar to CreateBitmap() but can be used when a bitmap (or an icon) exists in several...">CreateIconBundle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classwx_string" kindref="compound" tooltip="The wxString class has been completely rewritten for wxWidgets 3.0 and this change was actually the m...">wxArtID</ref>&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classwx_string" kindref="compound" tooltip="The wxString class has been completely rewritten for wxWidgets 3.0 and this change was actually the m...">wxArtClient</ref>&amp;<sp/>client)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>...<sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_art_provider_1a6af5625b194423247ff3845e1f0f61d6" kindref="member" tooltip="Register new art provider and add it to the top of providers stack (i.e.">wxArtProvider::Push</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MyProvider);</highlight></codeline>
</programlisting></para><para>If you need bitmap images (of the same artwork) that should be displayed at different sizes you should probably consider overriding <ref refid="classwx_art_provider_1a0bb64950e85d0cc36977c01f864fdef8" kindref="member">wxArtProvider::CreateIconBundle</ref> and supplying icon bundles that contain different bitmap sizes.</para><para>There&apos;s another way of taking advantage of this class: you can use it in your code and use platform native icons as provided by <ref refid="classwx_art_provider_1a405ecf7cdead6dbfb092376a51a856c4" kindref="member">wxArtProvider::GetBitmap</ref> or <ref refid="classwx_art_provider_1ac9bd0ba166e5ef9515c68542bb96da09" kindref="member">wxArtProvider::GetIcon</ref>.</para><sect1 id="classwx_art_provider_1artprovider_identify">
<title>Identifying art resources</title>
<para>Every bitmap and icon bundle are known to <ref refid="classwx_art_provider" kindref="compound">wxArtProvider</ref> under an unique ID that is used when requesting a resource from it. The ID is represented by the <ref refid="artprov_8h_1af7d82bed13ba95dd8ba357f0cb4bdfbd" kindref="member">wxArtID</ref> type and can have one of these predefined values (you can see bitmaps represented by these constants in the <ref refid="page_samples_1page_samples_artprov" kindref="member">Art Provider Sample</ref>):</para><para><table rows="1" cols="3"><row>
<entry thead="no"><para><itemizedlist>
<listitem><para><computeroutput>wxART_ERROR</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_QUESTION</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_WARNING</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_INFORMATION</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_ADD_BOOKMARK</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_DEL_BOOKMARK</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_HELP_SIDE_PANEL</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_HELP_SETTINGS</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_HELP_BOOK</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_HELP_FOLDER</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_HELP_PAGE</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_GO_BACK</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_GO_FORWARD</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_GO_UP</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_GO_DOWN</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_GO_TO_PARENT</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_GO_HOME</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_GOTO_FIRST</computeroutput> (since 2.9.2) </para></listitem>
</itemizedlist>
</para></entry><entry thead="no"><para><itemizedlist>
<listitem><para><computeroutput>wxART_GOTO_LAST</computeroutput> (since 2.9.2) </para></listitem>
<listitem><para><computeroutput>wxART_PRINT</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_HELP</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_TIP</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_REPORT_VIEW</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_LIST_VIEW</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_NEW_DIR</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_FOLDER</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_FOLDER_OPEN</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_GO_DIR_UP</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_EXECUTABLE_FILE</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_NORMAL_FILE</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_TICK_MARK</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_CROSS_MARK</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_MISSING_IMAGE</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_NEW</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_FILE_OPEN</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_FILE_SAVE</computeroutput> </para></listitem>
</itemizedlist>
</para></entry><entry thead="no"><para><itemizedlist>
<listitem><para><computeroutput>wxART_FILE_SAVE_AS</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_DELETE</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_COPY</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_CUT</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_PASTE</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_UNDO</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_REDO</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_PLUS</computeroutput> (since 2.9.2) </para></listitem>
<listitem><para><computeroutput>wxART_MINUS</computeroutput> (since 2.9.2) </para></listitem>
<listitem><para><computeroutput>wxART_CLOSE</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_QUIT</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_FIND</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_FIND_AND_REPLACE</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_HARDDISK</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_FLOPPY</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_CDROM</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_REMOVABLE</computeroutput>  </para></listitem>
</itemizedlist>
</para></entry></row>
</table>
</para><para>Additionally, any string recognized by custom art providers registered using <ref refid="classwx_art_provider_1a6af5625b194423247ff3845e1f0f61d6" kindref="member">wxArtProvider::Push</ref> may be used.</para><para><simplesect kind="note"><para>When running under GTK+ 2, GTK+ stock item IDs (e.g. <computeroutput>&quot;gtk-cdrom&quot;</computeroutput>) may be used as well: <programlisting><codeline><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>__WXGTK__</highlight></codeline>
<codeline><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_bitmap" kindref="compound" tooltip="This class encapsulates the concept of a platform-dependent bitmap, either monochrome or colour or co...">wxBitmap</ref><sp/>bmp<sp/>=<sp/><ref refid="classwx_art_provider_1a405ecf7cdead6dbfb092376a51a856c4" kindref="member" tooltip="Query registered providers for bitmap with given ID.">wxArtProvider::GetBitmap</ref>(</highlight><highlight class="stringliteral">&quot;gtk-cdrom&quot;</highlight><highlight class="normal">,<sp/><ref refid="artprov_8h_1a71acc864981812e272f64633af6f63a6" kindref="member">wxART_MENU</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
</programlisting> For a list of the GTK+ stock items please refer to the <ulink url="http://library.gnome.org/devel/gtk/stable/gtk-Stock-Items.html">GTK+ documentation page</ulink>. It is also possible to load icons from the current icon theme by specifying their name (without extension and directory components). Icon themes recognized by GTK+ follow the freedesktop.org <ulink url="http://freedesktop.org/Standards/icon-theme-spec">Icon Themes specification</ulink>. Note that themes are not guaranteed to contain all icons, so <ref refid="classwx_art_provider" kindref="compound">wxArtProvider</ref> may return <ref refid="interface_2wx_2bitmap_8h_1a2947690e84b8fdb2e37b79a4af8f8a21" kindref="member">wxNullBitmap</ref> or <ref refid="icon_8h_1a953854798a8dfd400777318358dad5b6" kindref="member">wxNullIcon</ref>. The default theme is typically installed in <computeroutput>/usr/share/icons/hicolor</computeroutput>.</para></simplesect>
</para></sect1>
<sect1 id="classwx_art_provider_1artprovider_clients">
<title>Clients</title>
<para>The <emphasis>client</emphasis> is the entity that calls wxArtProvider&apos;s <ref refid="classwx_art_provider_1a405ecf7cdead6dbfb092376a51a856c4" kindref="member">GetBitmap()</ref> or <ref refid="classwx_art_provider_1ac9bd0ba166e5ef9515c68542bb96da09" kindref="member">GetIcon()</ref> function. It is represented by wxClientID type and can have one of these values:</para><para><itemizedlist>
<listitem><para><computeroutput>wxART_TOOLBAR</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_MENU</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_BUTTON</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_FRAME_ICON</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_CMN_DIALOG</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_HELP_BROWSER</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_MESSAGE_BOX</computeroutput> </para></listitem>
<listitem><para><computeroutput>wxART_OTHER</computeroutput> (used for all requests that don&apos;t fit into any of the categories above)</para></listitem>
</itemizedlist>
Client ID serve as a hint to <ref refid="classwx_art_provider" kindref="compound">wxArtProvider</ref> that is supposed to help it to choose the best looking bitmap. For example it is often desirable to use slightly different icons in menus and toolbars even though they represent the same action (e.g. wxART_FILE_OPEN). Remember that this is really only a hint for <ref refid="classwx_art_provider" kindref="compound">wxArtProvider</ref> -- it is common that <ref refid="classwx_art_provider_1a405ecf7cdead6dbfb092376a51a856c4" kindref="member">wxArtProvider::GetBitmap</ref> returns identical bitmap for different client values!</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__misc" kindref="compound">Miscellaneous</ref></para><para><simplesect kind="see"><para><ref refid="page_samples_1page_samples_artprov" kindref="member">Art Provider Sample</ref> for an example of <ref refid="classwx_art_provider" kindref="compound">wxArtProvider</ref> usage; <ref refid="page_stockitems" kindref="compound">stock ID list</ref> </para></simplesect>
</para></sect1>
    </detaileddescription>
    <inheritancegraph>
      <node id="4441">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="4440">
        <label>wxArtProvider</label>
        <link refid="classwx_art_provider"/>
        <childnode refid="4441" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4443">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="4444" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="4442">
        <label>wxArtProvider</label>
        <link refid="classwx_art_provider"/>
        <childnode refid="4443" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4444">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/artprov.h" line="251" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/artprov.h" bodystart="250" bodyend="415"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxArtProvider</scope><name>AllocExclusive</name></member>
      <member refid="classwx_object_1a1d39f1d3650fe0982c9a1abe7f9fe7b7" prot="protected" virt="virtual"><scope>wxArtProvider</scope><name>CloneRefData</name></member>
      <member refid="classwx_art_provider_1a7605cdbfeac3b04094ab05cfa9aba0bc" prot="protected" virt="virtual"><scope>wxArtProvider</scope><name>CreateBitmap</name></member>
      <member refid="classwx_art_provider_1a0bb64950e85d0cc36977c01f864fdef8" prot="protected" virt="virtual"><scope>wxArtProvider</scope><name>CreateIconBundle</name></member>
      <member refid="classwx_object_1a95c6a5e4e1e03ff23c7b9efe4cff0c1a" prot="protected" virt="virtual"><scope>wxArtProvider</scope><name>CreateRefData</name></member>
      <member refid="classwx_art_provider_1a2ea46956a7acce89f91be6ce422283eb" prot="public" virt="non-virtual"><scope>wxArtProvider</scope><name>Delete</name></member>
      <member refid="classwx_art_provider_1a405ecf7cdead6dbfb092376a51a856c4" prot="public" virt="non-virtual"><scope>wxArtProvider</scope><name>GetBitmap</name></member>
      <member refid="classwx_object_1ab3a0c6f723cbaddb47be4e8dd98cc8e2" prot="public" virt="virtual"><scope>wxArtProvider</scope><name>GetClassInfo</name></member>
      <member refid="classwx_art_provider_1ac9bd0ba166e5ef9515c68542bb96da09" prot="public" virt="non-virtual"><scope>wxArtProvider</scope><name>GetIcon</name></member>
      <member refid="classwx_art_provider_1a0849828481ed689d716e600672fbaec0" prot="public" virt="non-virtual"><scope>wxArtProvider</scope><name>GetIconBundle</name></member>
      <member refid="classwx_art_provider_1aba8987da6f829278235407245ee22f57" prot="public" virt="non-virtual"><scope>wxArtProvider</scope><name>GetNativeSizeHint</name></member>
      <member refid="classwx_object_1aabdb4fc957226544a8408167844e4f42" prot="public" virt="non-virtual"><scope>wxArtProvider</scope><name>GetRefData</name></member>
      <member refid="classwx_art_provider_1adfcca5fc919f1be4a95cc5ccb63f1cae" prot="public" virt="non-virtual"><scope>wxArtProvider</scope><name>GetSizeHint</name></member>
      <member refid="classwx_art_provider_1ae64f10b3bc37c12ca7b18c2f43c42611" prot="public" virt="non-virtual"><scope>wxArtProvider</scope><name>HasNativeProvider</name></member>
      <member refid="classwx_art_provider_1ae6090f32579d782205dd247006e4c7de" prot="public" virt="non-virtual"><scope>wxArtProvider</scope><name>Insert</name></member>
      <member refid="classwx_object_1af40d580385cf4f8112fae7713404b01e" prot="public" virt="non-virtual"><scope>wxArtProvider</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a80a1a3fda7b14396a9ddd3d7a46a88bd" prot="public" virt="non-virtual"><scope>wxArtProvider</scope><name>IsSameAs</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxArtProvider</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxArtProvider</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxArtProvider</scope><name>operator new</name></member>
      <member refid="classwx_art_provider_1a0be076c2270930e8a698dff5bee94b59" prot="public" virt="non-virtual"><scope>wxArtProvider</scope><name>Pop</name></member>
      <member refid="classwx_art_provider_1a6af5625b194423247ff3845e1f0f61d6" prot="public" virt="non-virtual"><scope>wxArtProvider</scope><name>Push</name></member>
      <member refid="classwx_art_provider_1a55fe50769f0aeae2cf49860ef0b168d2" prot="public" virt="non-virtual"><scope>wxArtProvider</scope><name>PushBack</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxArtProvider</scope><name>Ref</name></member>
      <member refid="classwx_art_provider_1a990035bf586ca89c93c509b704687cbc" prot="public" virt="non-virtual"><scope>wxArtProvider</scope><name>Remove</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxArtProvider</scope><name>SetRefData</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxArtProvider</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxArtProvider</scope><name>UnShare</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxArtProvider</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxArtProvider</scope><name>wxObject</name></member>
      <member refid="classwx_art_provider_1ac5b69725368c260e0b439bd4f9f3cfe4" prot="public" virt="virtual"><scope>wxArtProvider</scope><name>~wxArtProvider</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxArtProvider</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
