<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_any" kind="class" prot="public">
    <compoundname>wxAny</compoundname>
    <includes local="no">wx/any.h</includes>
      <sectiondef kind="user-defined">
      <header>Assignment operators</header>
      <memberdef kind="function" id="classwx_any_1a541e66e0480075de627c7dfb0268b8dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classwx_any" kindref="compound">wxAny</ref> &amp;</type>
        <definition>wxAny&amp; wxAny::operator=</definition>
        <argsstring>(const T &amp;value)</argsstring>
        <name>operator=</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="171"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a29c8766d77f2de7d1f71dc0bc14bf6d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_any" kindref="compound">wxAny</ref> &amp;</type>
        <definition>wxAny&amp; wxAny::operator=</definition>
        <argsstring>(const wxAny &amp;any)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classwx_any" kindref="compound">wxAny</ref> &amp;</type>
          <declname>any</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="172"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1abb73ad85c843f81f08fca557de7691cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_any" kindref="compound">wxAny</ref> &amp;</type>
        <definition>wxAny&amp; wxAny::operator=</definition>
        <argsstring>(const wxVariant &amp;variant)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classwx_variant" kindref="compound">wxVariant</ref> &amp;</type>
          <declname>variant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="173"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Equality operators</header>
      <memberdef kind="function" id="classwx_any_1a03624c1199b671fecfafce1c601af90f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator==</definition>
        <argsstring>(signed char value) const </argsstring>
        <name>operator==</name>
        <param>
          <type>signed char</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="192"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a0d242351c6eb48534f9c9f931a6eb36f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator==</definition>
        <argsstring>(signed short value) const </argsstring>
        <name>operator==</name>
        <param>
          <type>signed short</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="193"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a558dcbbd0f11d63cc0f066c5cd918236" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator==</definition>
        <argsstring>(signed int value) const </argsstring>
        <name>operator==</name>
        <param>
          <type>signed int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="194"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a5f66019f6aa4e986db5df86bfc941770" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator==</definition>
        <argsstring>(signed long value) const </argsstring>
        <name>operator==</name>
        <param>
          <type>signed long</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="195"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a80656d8d9dffaee07f752e5c1e3ead7f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator==</definition>
        <argsstring>(wxLongLong_t value) const </argsstring>
        <name>operator==</name>
        <param>
          <type>wxLongLong_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="196"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1aa303feab0ab79a76c0bd4a2f9b17d20d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator==</definition>
        <argsstring>(unsigned char value) const </argsstring>
        <name>operator==</name>
        <param>
          <type>unsigned char</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="197"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a120318c9a4afa852b62b75bee2a3c1cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator==</definition>
        <argsstring>(unsigned short value) const </argsstring>
        <name>operator==</name>
        <param>
          <type>unsigned short</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="198"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a1164d436993afbe2f9dd6c58d73f7f4d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator==</definition>
        <argsstring>(unsigned int value) const </argsstring>
        <name>operator==</name>
        <param>
          <type>unsigned int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="199"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a2651ce3d1bb6123e1e84f079526a126b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator==</definition>
        <argsstring>(unsigned long value) const </argsstring>
        <name>operator==</name>
        <param>
          <type>unsigned long</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="200"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a0c441b9a31274f58d2896c47115d5211" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator==</definition>
        <argsstring>(wxULongLong_t value) const </argsstring>
        <name>operator==</name>
        <param>
          <type>wxULongLong_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="201"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1ab8e1336558ebb9f92a8e54c5d2b52910" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator==</definition>
        <argsstring>(float value) const </argsstring>
        <name>operator==</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="202"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a6275b16b7c2cf39d87612a2e57983516" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator==</definition>
        <argsstring>(double value) const </argsstring>
        <name>operator==</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="203"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a66b647f3249a3623c44f05d88b0273b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator==</definition>
        <argsstring>(bool value) const </argsstring>
        <name>operator==</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="204"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a98b8608c36245a8246ac072916e4aa23" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator==</definition>
        <argsstring>(const char *value) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="205"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1aeac7404327dbf6dd6085247c048ffdff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator==</definition>
        <argsstring>(const wchar_t *value) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const wchar_t *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="206"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a4adcbefab516969a6151253fd5d36820" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator==</definition>
        <argsstring>(const wxString &amp;value) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="207"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Inequality operators</header>
      <memberdef kind="function" id="classwx_any_1ada1873fa336f96ac0ca554468f6a204a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator!=</definition>
        <argsstring>(signed char value) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>signed char</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="214"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1ad12d17413c0d6264f309b8560e1d5d6b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator!=</definition>
        <argsstring>(signed short value) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>signed short</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="215"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1af8b340f80c0cd3a905f538eab0e9a6d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator!=</definition>
        <argsstring>(signed int value) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>signed int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="216"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a450a984511ffe073018d4b24e804791d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator!=</definition>
        <argsstring>(signed long value) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>signed long</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="217"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a627a17a0f981fa10b01c9ad99e0e9c76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator!=</definition>
        <argsstring>(wxLongLong_t value) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>wxLongLong_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="218"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a43f71a82ffcbcf6af72e1a4f98cbb331" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator!=</definition>
        <argsstring>(unsigned char value) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>unsigned char</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="219"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a21788a9ce8c665557fbade96b5580a6b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator!=</definition>
        <argsstring>(unsigned short value) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>unsigned short</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="220"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a64926bb68f5bdfeac68856bbcac5badf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator!=</definition>
        <argsstring>(unsigned int value) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>unsigned int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="221"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1afcc9fc392bfde5407207cb7ae5eef351" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator!=</definition>
        <argsstring>(unsigned long value) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>unsigned long</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="222"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a0760797e5a7e83d620299e48751a3561" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator!=</definition>
        <argsstring>(wxULongLong_t value) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>wxULongLong_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="223"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a346cb99e650df2ceb77342010ceee1dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator!=</definition>
        <argsstring>(float value) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="224"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1aac0e33d3b0244ce2156f50448d5054f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator!=</definition>
        <argsstring>(double value) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="225"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a1b4f197b6472b6e11b71819122742bd1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator!=</definition>
        <argsstring>(bool value) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="226"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1ae3a0bcd28a2aee39dd8db093672e6f90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator!=</definition>
        <argsstring>(const char *value) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="227"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a1f9c01f18ac4202f77f30eddff86b617" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator!=</definition>
        <argsstring>(const wchar_t *value) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const wchar_t *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="228"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1ab458be2a984d91c0716d2582b62a658b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::operator!=</definition>
        <argsstring>(const wxString &amp;value) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="229"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_any_1a0dab49e1f6127bc459b49aed7f5106a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxAny::wxAny</definition>
        <argsstring>()</argsstring>
        <name>wxAny</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
<para>It seeds the object with a null value. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="62"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a5024428dd23e1776fccdd05afaea5cbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>wxAny::wxAny</definition>
        <argsstring>(const T &amp;value)</argsstring>
        <name>wxAny</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Constructs <ref refid="classwx_any" kindref="compound">wxAny</ref> from data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="68"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a1a98d3bb6b2fd780822524000214f252" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxAny::wxAny</definition>
        <argsstring>(const wxAny &amp;any)</argsstring>
        <name>wxAny</name>
        <param>
          <type>const <ref refid="classwx_any" kindref="compound">wxAny</ref> &amp;</type>
          <declname>any</declname>
        </param>
        <briefdescription>
<para>Constructs <ref refid="classwx_any" kindref="compound">wxAny</ref> from another <ref refid="classwx_any" kindref="compound">wxAny</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="73"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a3db7df945f7e1390e45c9ff44af80b5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxAny::wxAny</definition>
        <argsstring>(const wxVariant &amp;variant)</argsstring>
        <name>wxAny</name>
        <param>
          <type>const <ref refid="classwx_variant" kindref="compound">wxVariant</ref> &amp;</type>
          <declname>variant</declname>
        </param>
        <briefdescription>
<para>Constructs <ref refid="classwx_any" kindref="compound">wxAny</ref>, converting value from <ref refid="classwx_variant" kindref="compound">wxVariant</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>Because of this conversion, it is not usually possible to have <ref refid="classwx_any" kindref="compound">wxAny</ref> that actually holds a <ref refid="classwx_variant" kindref="compound">wxVariant</ref>. If <ref refid="classwx_variant" kindref="compound">wxVariant</ref> cannot be converted to a specific data type, <ref refid="classwx_any" kindref="compound">wxAny</ref> will then hold and manage reference to wxVariantData* similar to how <ref refid="classwx_variant" kindref="compound">wxVariant</ref> does. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="84"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a2073a5bead2fc7929778a6b80c5e41a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxAny::~wxAny</definition>
        <argsstring>()</argsstring>
        <name>~wxAny</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="89"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1ad5958253489be22f0e414cd1dd7a38f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T wxAny::As</definition>
        <argsstring>() const </argsstring>
        <name>As</name>
        <briefdescription>
<para>This template function converts <ref refid="classwx_any" kindref="compound">wxAny</ref> into given type. </para>        </briefdescription>
        <detaileddescription>
<para>In most cases no type conversion is performed, so if the type is incorrect an assertion failure will occur.</para><para><simplesect kind="remark"><para>For conveniency, conversion is done when T is <ref refid="classwx_string" kindref="compound">wxString</ref>. This is useful when a string literal (which are treated as const char* and const wchar_t*) has been assigned to <ref refid="classwx_any" kindref="compound">wxAny</ref>.</para></simplesect>
This template function may not work properly with Visual C++ 6. For full compiler compatibility, please use <ref refid="any_8h_1a718197eac6fd06ce8cd60b868536852c" kindref="member">wxANY_AS(any, T)</ref> macro instead. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="105"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1ae199ddb24972bb32afc27511c64963bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool wxAny::CheckType</definition>
        <argsstring>() const </argsstring>
        <name>CheckType</name>
        <briefdescription>
<para>Use this template function for checking if this <ref refid="classwx_any" kindref="compound">wxAny</ref> holds a specific C++ data type. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This template function may not work properly with Visual C++ 6. For full compiler compatibility, please use <ref refid="any_8h_1a50295ab114c98f18da22360091b590c9" kindref="member">wxANY_CHECK_TYPE(any, T)</ref> macro instead.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_any_value_type_1a331dd31c6de02ff4b32259e2fe6742ea" kindref="member">wxAnyValueType::CheckType()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="118"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a2ffeadd0c60660f17920988d44e6c36b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool wxAny::GetAs</definition>
        <argsstring>(T *value) const </argsstring>
        <name>GetAs</name>
        <param>
          <type>T *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Template function that retrieves and converts the value of this <ref refid="classwx_any" kindref="compound">wxAny</ref> to the type that T* value is. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns true if conversion was successful. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="127"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a98611e833a68b8fdd4d2694737eb9bf9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::GetAs</definition>
        <argsstring>(wxVariant *value) const </argsstring>
        <name>GetAs</name>
        <param>
          <type><ref refid="classwx_variant" kindref="compound">wxVariant</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Specialization of <ref refid="classwx_any_1a2ffeadd0c60660f17920988d44e6c36b" kindref="member">GetAs()</ref> that allows conversion of <ref refid="classwx_any" kindref="compound">wxAny</ref> into <ref refid="classwx_variant" kindref="compound">wxVariant</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns true if conversion was successful. Conversion usually only fails if variant used custom <ref refid="classwx_variant_data" kindref="compound">wxVariantData</ref> that did not implement the <ref refid="classwx_any" kindref="compound">wxAny</ref> to <ref refid="classwx_variant" kindref="compound">wxVariant</ref> conversion functions. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="137"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a567f458f2e8fc8ffdfe38905d6c5e1da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_any_value_type" kindref="compound">wxAnyValueType</ref> *</type>
        <definition>const wxAnyValueType* wxAny::GetType</definition>
        <argsstring>() const </argsstring>
        <name>GetType</name>
        <briefdescription>
<para>Returns the value type as <ref refid="classwx_any_value_type" kindref="compound">wxAnyValueType</ref> instance. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>You cannot reliably test whether two wxAnys are of same value type by simply comparing return values of <ref refid="classwx_any_1a567f458f2e8fc8ffdfe38905d6c5e1da" kindref="member">wxAny::GetType()</ref>. Instead, use <ref refid="classwx_any_1a903c00884bde666fb5dc178cb355be8b" kindref="member">wxAny::HasSameType()</ref>.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_any_1a903c00884bde666fb5dc178cb355be8b" kindref="member">HasSameType()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="148"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1a903c00884bde666fb5dc178cb355be8b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::HasSameType</definition>
        <argsstring>(const wxAny &amp;other) const </argsstring>
        <name>HasSameType</name>
        <param>
          <type>const <ref refid="classwx_any" kindref="compound">wxAny</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns true if this and another <ref refid="classwx_any" kindref="compound">wxAny</ref> have the same value type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="154"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1abd2b24fc0a7216a5336d8f7d731c2370" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAny::IsNull</definition>
        <argsstring>() const </argsstring>
        <name>IsNull</name>
        <briefdescription>
<para>Tests if <ref refid="classwx_any" kindref="compound">wxAny</ref> is null (that is, whether there is no data). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="159"/>
      </memberdef>
      <memberdef kind="function" id="classwx_any_1ab229cda7063a3c3a82330b6dd7b3550c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxAny::MakeNull</definition>
        <argsstring>()</argsstring>
        <name>MakeNull</name>
        <briefdescription>
<para>Makes <ref refid="classwx_any" kindref="compound">wxAny</ref> null (that is, clears it). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="164"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classwx_any" kindref="compound">wxAny</ref> class represents a container for any type. </para>    </briefdescription>
    <detaileddescription>
<para>Its value can be changed at run time, possibly to a different type of value.</para><para><ref refid="classwx_any" kindref="compound">wxAny</ref> is a backwards-incompatible (but convertible) successor class for <ref refid="classwx_variant" kindref="compound">wxVariant</ref>, essentially doing the same thing in a more modern, template- based manner and with transparent support for any user data type.</para><para>Some pseudo-code&apos;ish example of use with arbitrary user data:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SomeFunction()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MyClass<sp/>myObject;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_any" kindref="compound" tooltip="The wxAny class represents a container for any type.">wxAny</ref><sp/>any<sp/>=<sp/>myObject;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>something</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let&apos;s<sp/>do<sp/>a<sp/>sanity<sp/>check<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>any<sp/>still<sp/>holds</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>data<sp/>of<sp/>correct<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>any.<ref refid="classwx_any_1ae199ddb24972bb32afc27511c64963bd" kindref="member" tooltip="Use this template function for checking if this wxAny holds a specific C++ data type.">CheckType</ref>&lt;MyClass&gt;()<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Thank<sp/>goodness,<sp/>still<sp/>a<sp/>correct<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MyClass<sp/>myObject2<sp/>=<sp/>any.<ref refid="classwx_any_1ad5958253489be22f0e414cd1dd7a38f6" kindref="member" tooltip="This template function converts wxAny into given type.">As</ref>&lt;MyClass&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Something<sp/>has<sp/>gone<sp/>horribly<sp/>wrong!</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__funcmacro__debug_1gaa5b456751cd8c71e9a787fba16ecbd68" kindref="member" tooltip="Will always generate an assert error if this code is reached (in debug mode).">wxFAIL</ref>();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
</programlisting></para><para>When compared to <ref refid="classwx_variant" kindref="compound">wxVariant</ref>, there are various internal implementation differences as well. For instance, <ref refid="classwx_any" kindref="compound">wxAny</ref> only allocates separate data object in heap for large objects (i.e. ones with size more than WX_ANY_VALUE_BUFFER_SIZE, which at the time of writing is 16 bytes).</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__data" kindref="compound">Data Structures</ref></para><para><simplesect kind="see"><para><ref refid="classwx_any_value_type" kindref="compound">wxAnyValueType</ref>, <ref refid="classwx_variant" kindref="compound">wxVariant</ref>, <ref refid="overview_cpp_rtti_disabled" kindref="compound">Caveats When Not Using C++ RTTI</ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" line="57" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/any.h" bodystart="56" bodyend="231"/>
    <listofallmembers>
      <member refid="classwx_any_1ad5958253489be22f0e414cd1dd7a38f6" prot="public" virt="non-virtual"><scope>wxAny</scope><name>As</name></member>
      <member refid="classwx_any_1ae199ddb24972bb32afc27511c64963bd" prot="public" virt="non-virtual"><scope>wxAny</scope><name>CheckType</name></member>
      <member refid="classwx_any_1a2ffeadd0c60660f17920988d44e6c36b" prot="public" virt="non-virtual"><scope>wxAny</scope><name>GetAs</name></member>
      <member refid="classwx_any_1a98611e833a68b8fdd4d2694737eb9bf9" prot="public" virt="non-virtual"><scope>wxAny</scope><name>GetAs</name></member>
      <member refid="classwx_any_1a567f458f2e8fc8ffdfe38905d6c5e1da" prot="public" virt="non-virtual"><scope>wxAny</scope><name>GetType</name></member>
      <member refid="classwx_any_1a903c00884bde666fb5dc178cb355be8b" prot="public" virt="non-virtual"><scope>wxAny</scope><name>HasSameType</name></member>
      <member refid="classwx_any_1abd2b24fc0a7216a5336d8f7d731c2370" prot="public" virt="non-virtual"><scope>wxAny</scope><name>IsNull</name></member>
      <member refid="classwx_any_1ab229cda7063a3c3a82330b6dd7b3550c" prot="public" virt="non-virtual"><scope>wxAny</scope><name>MakeNull</name></member>
      <member refid="classwx_any_1ada1873fa336f96ac0ca554468f6a204a" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator!=</name></member>
      <member refid="classwx_any_1ad12d17413c0d6264f309b8560e1d5d6b" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator!=</name></member>
      <member refid="classwx_any_1af8b340f80c0cd3a905f538eab0e9a6d5" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator!=</name></member>
      <member refid="classwx_any_1a450a984511ffe073018d4b24e804791d" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator!=</name></member>
      <member refid="classwx_any_1a627a17a0f981fa10b01c9ad99e0e9c76" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator!=</name></member>
      <member refid="classwx_any_1a43f71a82ffcbcf6af72e1a4f98cbb331" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator!=</name></member>
      <member refid="classwx_any_1a21788a9ce8c665557fbade96b5580a6b" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator!=</name></member>
      <member refid="classwx_any_1a64926bb68f5bdfeac68856bbcac5badf" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator!=</name></member>
      <member refid="classwx_any_1afcc9fc392bfde5407207cb7ae5eef351" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator!=</name></member>
      <member refid="classwx_any_1a0760797e5a7e83d620299e48751a3561" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator!=</name></member>
      <member refid="classwx_any_1a346cb99e650df2ceb77342010ceee1dd" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator!=</name></member>
      <member refid="classwx_any_1aac0e33d3b0244ce2156f50448d5054f9" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator!=</name></member>
      <member refid="classwx_any_1a1b4f197b6472b6e11b71819122742bd1" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator!=</name></member>
      <member refid="classwx_any_1ae3a0bcd28a2aee39dd8db093672e6f90" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator!=</name></member>
      <member refid="classwx_any_1a1f9c01f18ac4202f77f30eddff86b617" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator!=</name></member>
      <member refid="classwx_any_1ab458be2a984d91c0716d2582b62a658b" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator!=</name></member>
      <member refid="classwx_any_1a541e66e0480075de627c7dfb0268b8dd" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator=</name></member>
      <member refid="classwx_any_1a29c8766d77f2de7d1f71dc0bc14bf6d4" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator=</name></member>
      <member refid="classwx_any_1abb73ad85c843f81f08fca557de7691cf" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator=</name></member>
      <member refid="classwx_any_1a03624c1199b671fecfafce1c601af90f" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator==</name></member>
      <member refid="classwx_any_1a0d242351c6eb48534f9c9f931a6eb36f" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator==</name></member>
      <member refid="classwx_any_1a558dcbbd0f11d63cc0f066c5cd918236" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator==</name></member>
      <member refid="classwx_any_1a5f66019f6aa4e986db5df86bfc941770" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator==</name></member>
      <member refid="classwx_any_1a80656d8d9dffaee07f752e5c1e3ead7f" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator==</name></member>
      <member refid="classwx_any_1aa303feab0ab79a76c0bd4a2f9b17d20d" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator==</name></member>
      <member refid="classwx_any_1a120318c9a4afa852b62b75bee2a3c1cb" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator==</name></member>
      <member refid="classwx_any_1a1164d436993afbe2f9dd6c58d73f7f4d" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator==</name></member>
      <member refid="classwx_any_1a2651ce3d1bb6123e1e84f079526a126b" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator==</name></member>
      <member refid="classwx_any_1a0c441b9a31274f58d2896c47115d5211" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator==</name></member>
      <member refid="classwx_any_1ab8e1336558ebb9f92a8e54c5d2b52910" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator==</name></member>
      <member refid="classwx_any_1a6275b16b7c2cf39d87612a2e57983516" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator==</name></member>
      <member refid="classwx_any_1a66b647f3249a3623c44f05d88b0273b7" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator==</name></member>
      <member refid="classwx_any_1a98b8608c36245a8246ac072916e4aa23" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator==</name></member>
      <member refid="classwx_any_1aeac7404327dbf6dd6085247c048ffdff" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator==</name></member>
      <member refid="classwx_any_1a4adcbefab516969a6151253fd5d36820" prot="public" virt="non-virtual"><scope>wxAny</scope><name>operator==</name></member>
      <member refid="classwx_any_1a0dab49e1f6127bc459b49aed7f5106a3" prot="public" virt="non-virtual"><scope>wxAny</scope><name>wxAny</name></member>
      <member refid="classwx_any_1a5024428dd23e1776fccdd05afaea5cbc" prot="public" virt="non-virtual"><scope>wxAny</scope><name>wxAny</name></member>
      <member refid="classwx_any_1a1a98d3bb6b2fd780822524000214f252" prot="public" virt="non-virtual"><scope>wxAny</scope><name>wxAny</name></member>
      <member refid="classwx_any_1a3db7df945f7e1390e45c9ff44af80b5d" prot="public" virt="non-virtual"><scope>wxAny</scope><name>wxAny</name></member>
      <member refid="classwx_any_1a2073a5bead2fc7929778a6b80c5e41a2" prot="public" virt="non-virtual"><scope>wxAny</scope><name>~wxAny</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
