<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_standard_paths" kind="class" prot="public">
    <compoundname>wxStandardPaths</compoundname>
    <includes local="no">wx/stdpaths.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classwx_standard_paths_1a00cb1fa092b0a164c3d1b5813b836a93" prot="public" static="no">
        <name>ResourceCat</name>
        <enumvalue id="classwx_standard_paths_1a00cb1fa092b0a164c3d1b5813b836a93aa2cd7ae0b6238a2de910cde4eab5c745" prot="public">
          <name>ResourceCat_None</name>
          <briefdescription>
<para>No special category, this is the default. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classwx_standard_paths_1a00cb1fa092b0a164c3d1b5813b836a93a555b4185a68ec29bce358ac2718e78bc" prot="public">
          <name>ResourceCat_Messages</name>
          <briefdescription>
<para>Message catalog resources category. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Possible values for category parameter of <ref refid="classwx_standard_paths_1a3dc46e76d0a5045a9331d02fd429173c" kindref="member">GetLocalizedResourcesDir()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stdpaths.h" line="62" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/stdpaths.h" bodystart="61" bodyend="68"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_standard_paths_1a3348987c98140398e567ef76509400b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStandardPaths::DontIgnoreAppSubDir</definition>
        <argsstring>()</argsstring>
        <name>DontIgnoreAppSubDir</name>
        <briefdescription>
<para>MSW-specific function undoing the effect of <ref refid="classwx_standard_paths_1ab7534e9987d802dada6c02ab70fbaa96" kindref="member">IgnoreAppSubDir()</ref> calls. </para>        </briefdescription>
        <detaileddescription>
<para>After a call to this function the program directory will be exactly the directory containing the main application binary, i.e. it undoes the effect of any previous <ref refid="classwx_standard_paths_1ab7534e9987d802dada6c02ab70fbaa96" kindref="member">IgnoreAppSubDir()</ref> calls including the ones done indirectly by <ref refid="classwx_standard_paths_1a36a497e73df7226240f8ac0f0dfa52bc" kindref="member">IgnoreAppBuildSubDirs()</ref> called from the class constructor.</para><para><simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stdpaths.h" line="82"/>
      </memberdef>
      <memberdef kind="function" id="classwx_standard_paths_1ae67e85d9e97f134bad9f2fa8acb29eef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxStandardPaths::GetAppDocumentsDir</definition>
        <argsstring>() const </argsstring>
        <name>GetAppDocumentsDir</name>
        <briefdescription>
<para>Return the directory for the document files used by this application. </para>        </briefdescription>
        <detaileddescription>
<para>If the application-specific directory doesn&apos;t exist, this function returns <ref refid="classwx_standard_paths_1aa87a172690af8f7535cc37f2e9b59c43" kindref="member">GetDocumentsDir()</ref>.</para><para>Example return values:<itemizedlist>
<listitem><para>Unix: <computeroutput>~/appinfo</computeroutput> </para></listitem><listitem><para>Windows: <computeroutput>&quot;C:\Documents and Settings\username\My Documents\appinfo&quot;</computeroutput> </para></listitem><listitem><para>Mac: <computeroutput>~/Documents/appinfo</computeroutput> </para></listitem></itemizedlist>
</para><para><simplesect kind="since"><para>2.9.0</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_standard_paths_1ae67e85d9e97f134bad9f2fa8acb29eef" kindref="member">GetAppDocumentsDir()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stdpaths.h" line="104"/>
      </memberdef>
      <memberdef kind="function" id="classwx_standard_paths_1ae17c730ec91dca81b3574a27a9add456" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxStandardPaths::GetConfigDir</definition>
        <argsstring>() const </argsstring>
        <name>GetConfigDir</name>
        <briefdescription>
<para>Return the directory containing the system config files. </para>        </briefdescription>
        <detaileddescription>
<para>Example return values:<itemizedlist>
<listitem><para>Unix: <computeroutput>/etc</computeroutput> </para></listitem><listitem><para>Windows: <computeroutput>&quot;C:\Documents and Settings\All Users\Application Data&quot;</computeroutput> </para></listitem><listitem><para>Mac: <computeroutput>/Library/Preferences</computeroutput> </para></listitem></itemizedlist>
</para><para><simplesect kind="see"><para><ref refid="classwx_file_config" kindref="compound">wxFileConfig</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stdpaths.h" line="115"/>
      </memberdef>
      <memberdef kind="function" id="classwx_standard_paths_1a2453024a2a5305bbda3bc6d4c0664cba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxStandardPaths::GetDataDir</definition>
        <argsstring>() const </argsstring>
        <name>GetDataDir</name>
        <briefdescription>
<para>Return the location of the applications global, i.e. </para>        </briefdescription>
        <detaileddescription>
<para>not user-specific, data files.</para><para>Example return values:<itemizedlist>
<listitem><para>Unix: <computeroutput>prefix/share/appinfo</computeroutput> </para></listitem><listitem><para>Windows: the directory where the executable file is located</para></listitem><listitem><para>Mac: <computeroutput>appinfo.app/Contents/SharedSupport</computeroutput> bundle subdirectory</para></listitem></itemizedlist>
</para><para>Under Unix (only) it is possible to override the default value returned from this function by setting the value of <computeroutput>WX_APPNAME_DATA_DIR</computeroutput> environment variable to the directory to use (where <computeroutput>APPNAME</computeroutput> is the upper-cased value of <ref refid="classwx_app_console_1a2bfe9c53c57d61f8b115705796f258eb" kindref="member">wxApp::GetAppName()</ref>). This is useful in order to be able to run applications using this function without installing them as you can simply set this environment variable to the source directory location to allow the application to find its files there.</para><para><simplesect kind="see"><para><ref refid="classwx_standard_paths_1ac935a5c1764c513a4b6d4b8b66d5b808" kindref="member">GetLocalDataDir()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stdpaths.h" line="136"/>
      </memberdef>
      <memberdef kind="function" id="classwx_standard_paths_1aa87a172690af8f7535cc37f2e9b59c43" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxStandardPaths::GetDocumentsDir</definition>
        <argsstring>() const </argsstring>
        <name>GetDocumentsDir</name>
        <briefdescription>
<para>Return the directory containing the current user&apos;s documents. </para>        </briefdescription>
        <detaileddescription>
<para>Example return values:<itemizedlist>
<listitem><para>Unix: <computeroutput>~</computeroutput> (the home directory)</para></listitem><listitem><para>Windows: <computeroutput>&quot;C:\Documents and Settings\username\My Documents&quot;</computeroutput> </para></listitem><listitem><para>Mac: <computeroutput>~/Documents</computeroutput> </para></listitem></itemizedlist>
</para><para><simplesect kind="since"><para>2.7.0</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_standard_paths_1ae67e85d9e97f134bad9f2fa8acb29eef" kindref="member">GetAppDocumentsDir()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stdpaths.h" line="150"/>
      </memberdef>
      <memberdef kind="function" id="classwx_standard_paths_1aca76479d42511c0b45f39b0cfbb35c6b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxStandardPaths::GetExecutablePath</definition>
        <argsstring>() const </argsstring>
        <name>GetExecutablePath</name>
        <briefdescription>
<para>Return the directory and the filename for the current executable. </para>        </briefdescription>
        <detaileddescription>
<para>Example return values:<itemizedlist>
<listitem><para>Unix: <computeroutput>/usr/local/bin/exename</computeroutput> </para></listitem><listitem><para>Windows: <computeroutput>&quot;C:\Programs\AppFolder\exename.exe&quot;</computeroutput> </para></listitem><listitem><para>Mac: <computeroutput>/Applications/exename</computeroutput>.app/Contents/MacOS/exename </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stdpaths.h" line="159"/>
      </memberdef>
      <memberdef kind="function" id="classwx_standard_paths_1a318d939990abd7589a7a2890bc0856de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxStandardPaths::GetInstallPrefix</definition>
        <argsstring>() const </argsstring>
        <name>GetInstallPrefix</name>
        <briefdescription>
<para>Return the program installation prefix, e.g. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>/usr</computeroutput>, <computeroutput>/opt</computeroutput> or <computeroutput>/home/zeitlin</computeroutput>.</para><para>If the prefix had been previously by <ref refid="classwx_standard_paths_1a80af124a7df05bf1a1f7bee7406d278f" kindref="member">SetInstallPrefix()</ref>, returns that value, otherwise tries to determine it automatically (Linux only right now) and finally returns the default <computeroutput>/usr/local</computeroutput> value if it failed.</para><para><simplesect kind="note"><para>This function is only available under Unix platforms (but not limited to wxGTK mentioned below).</para></simplesect>
Availability:<nonbreakablespace/><nonbreakablespace/>only available for the <ref refid="page_port_1page_port_wxos2" kindref="member">wxOS2</ref>, <ref refid="page_port_1page_port_wxgtk" kindref="member">wxGTK</ref> ports.  <onlyfor>wxos2,wxgtk</onlyfor>  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stdpaths.h" line="173"/>
      </memberdef>
      <memberdef kind="function" id="classwx_standard_paths_1ac935a5c1764c513a4b6d4b8b66d5b808" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxStandardPaths::GetLocalDataDir</definition>
        <argsstring>() const </argsstring>
        <name>GetLocalDataDir</name>
        <briefdescription>
<para>Return the location for application data files which are host-specific and can&apos;t, or shouldn&apos;t, be shared with the other machines. </para>        </briefdescription>
        <detaileddescription>
<para>This is the same as <ref refid="classwx_standard_paths_1a2453024a2a5305bbda3bc6d4c0664cba" kindref="member">GetDataDir()</ref> except under Unix where it returns <computeroutput>/etc/appinfo</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stdpaths.h" line="181"/>
      </memberdef>
      <memberdef kind="function" id="classwx_standard_paths_1a3dc46e76d0a5045a9331d02fd429173c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxStandardPaths::GetLocalizedResourcesDir</definition>
        <argsstring>(const wxString &amp;lang, ResourceCat category=ResourceCat_None) const </argsstring>
        <name>GetLocalizedResourcesDir</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>lang</declname>
        </param>
        <param>
          <type><ref refid="classwx_standard_paths_1a00cb1fa092b0a164c3d1b5813b836a93" kindref="member">ResourceCat</ref></type>
          <declname>category</declname>
          <defval>ResourceCat_None</defval>
        </param>
        <briefdescription>
<para>Return the localized resources directory containing the resource files of the specified category for the given language. </para>        </briefdescription>
        <detaileddescription>
<para>In general this is just the same as <emphasis>lang</emphasis> subdirectory of <ref refid="classwx_standard_paths_1a5514bf6288ee9f5a0acaf065762ad95d" kindref="member">GetResourcesDir()</ref> (or <computeroutput>lang.lproj</computeroutput> under Mac OS X) but is something quite different for message catalog category under Unix where it returns the standard <computeroutput>prefix/share/locale/lang/LC_MESSAGES</computeroutput> directory.</para><para><simplesect kind="since"><para>2.7.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stdpaths.h" line="196"/>
      </memberdef>
      <memberdef kind="function" id="classwx_standard_paths_1a6eeeafa8476b389b322454d3f352d7e9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxStandardPaths::GetPluginsDir</definition>
        <argsstring>() const </argsstring>
        <name>GetPluginsDir</name>
        <briefdescription>
<para>Return the directory where the loadable modules (plugins) live. </para>        </briefdescription>
        <detaileddescription>
<para>Example return values:<itemizedlist>
<listitem><para>Unix: <computeroutput>prefix/lib/appinfo</computeroutput> </para></listitem><listitem><para>Windows: the directory of the executable file</para></listitem><listitem><para>Mac: <computeroutput>appinfo.app/Contents/PlugIns</computeroutput> bundle subdirectory</para></listitem></itemizedlist>
</para><para><simplesect kind="see"><para><ref refid="classwx_dynamic_library" kindref="compound">wxDynamicLibrary</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stdpaths.h" line="207"/>
      </memberdef>
      <memberdef kind="function" id="classwx_standard_paths_1a5514bf6288ee9f5a0acaf065762ad95d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxStandardPaths::GetResourcesDir</definition>
        <argsstring>() const </argsstring>
        <name>GetResourcesDir</name>
        <briefdescription>
<para>Return the directory where the application resource files are located. </para>        </briefdescription>
        <detaileddescription>
<para>The resources are the auxiliary data files needed for the application to run and include, for example, image and sound files it might use.</para><para>This function is the same as <ref refid="classwx_standard_paths_1a2453024a2a5305bbda3bc6d4c0664cba" kindref="member">GetDataDir()</ref> for all platforms except Mac OS X. Example return values:<itemizedlist>
<listitem><para>Unix: <computeroutput>prefix/share/appinfo</computeroutput> </para></listitem><listitem><para>Windows: the directory where the executable file is located</para></listitem><listitem><para>Mac: <computeroutput>appinfo.app/Contents/Resources</computeroutput> bundle subdirectory</para></listitem></itemizedlist>
</para><para><simplesect kind="since"><para>2.7.0</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_standard_paths_1a3dc46e76d0a5045a9331d02fd429173c" kindref="member">GetLocalizedResourcesDir()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stdpaths.h" line="225"/>
      </memberdef>
      <memberdef kind="function" id="classwx_standard_paths_1a6da8efb476e9a2c23f28761523b51986" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxStandardPaths::GetTempDir</definition>
        <argsstring>() const </argsstring>
        <name>GetTempDir</name>
        <briefdescription>
<para>Return the directory for storing temporary files. </para>        </briefdescription>
        <detaileddescription>
<para>To create unique temporary files, it is best to use <ref refid="classwx_file_name_1a416af84fddd624a3b457dbffbe174317" kindref="member">wxFileName::CreateTempFileName</ref> for correct behaviour when multiple processes are attempting to create temporary files.</para><para><simplesect kind="since"><para>2.7.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stdpaths.h" line="234"/>
      </memberdef>
      <memberdef kind="function" id="classwx_standard_paths_1a7c7cf595d94d29147360d031647476b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxStandardPaths::GetUserConfigDir</definition>
        <argsstring>() const </argsstring>
        <name>GetUserConfigDir</name>
        <briefdescription>
<para>Return the directory for the user config files: </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Unix: <computeroutput>~</computeroutput> (the home directory)</para></listitem><listitem><para>Windows: <computeroutput>&quot;C:\Documents and Settings\username\Application Data&quot;</computeroutput> </para></listitem><listitem><para>Mac: <computeroutput>~/Library/Preferences</computeroutput> </para></listitem></itemizedlist>
</para><para>Only use this method if you have a single configuration file to put in this directory, otherwise <ref refid="classwx_standard_paths_1a4752213ef4d7bdc71170b9e5c3691f0f" kindref="member">GetUserDataDir()</ref> is more appropriate as the latter adds <computeroutput>appinfo</computeroutput> to the path, unlike this function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stdpaths.h" line="246"/>
      </memberdef>
      <memberdef kind="function" id="classwx_standard_paths_1a4752213ef4d7bdc71170b9e5c3691f0f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxStandardPaths::GetUserDataDir</definition>
        <argsstring>() const </argsstring>
        <name>GetUserDataDir</name>
        <briefdescription>
<para>Return the directory for the user-dependent application data files: </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Unix: <computeroutput>~/</computeroutput>.appinfo</para></listitem><listitem><para>Windows: <computeroutput>&quot;C:\Documents and Settings\username\Application Data\appinfo&quot;</computeroutput> </para></listitem><listitem><para>Mac: <computeroutput>&quot;~/Library/Application Support/appinfo&quot;</computeroutput> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stdpaths.h" line="254"/>
      </memberdef>
      <memberdef kind="function" id="classwx_standard_paths_1a456fcd2e246c57a61dda9511e4dac9c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxStandardPaths::GetUserLocalDataDir</definition>
        <argsstring>() const </argsstring>
        <name>GetUserLocalDataDir</name>
        <briefdescription>
<para>Return the directory for user data files which shouldn&apos;t be shared with the other machines. </para>        </briefdescription>
        <detaileddescription>
<para>This is the same as <ref refid="classwx_standard_paths_1a4752213ef4d7bdc71170b9e5c3691f0f" kindref="member">GetUserDataDir()</ref> for all platforms except Windows where it returns <computeroutput>&quot;C:\Documents and Settings\username\Local Settings\Application Data\appinfo&quot;</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stdpaths.h" line="263"/>
      </memberdef>
      <memberdef kind="function" id="classwx_standard_paths_1ab7534e9987d802dada6c02ab70fbaa96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStandardPaths::IgnoreAppSubDir</definition>
        <argsstring>(const wxString &amp;subdirPattern)</argsstring>
        <name>IgnoreAppSubDir</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>subdirPattern</declname>
        </param>
        <briefdescription>
<para>MSW-specific function to customize application directory detection. </para>        </briefdescription>
        <detaileddescription>
<para>This class supposes that data, plugins &amp;c files are located under the program directory which is the directory containing the application binary itself. But sometimes this binary may be in a subdirectory of the main program directory, e.g. this happens in at least the following common cases:<itemizedlist>
<listitem><para>The program is in &quot;bin&quot; subdirectory of the installation directory.</para></listitem><listitem><para>The program is in &quot;debug&quot; subdirectory of the directory containing sources and data files during development</para></listitem></itemizedlist>
</para><para>By calling this function you instruct the class to remove the last component of the path if it matches its argument. Notice that it may be called more than once, e.g. you can call both IgnoreAppSubDir(&quot;bin&quot;) and IgnoreAppSubDir(&quot;debug&quot;) to take care of both production and development cases above but that each call will only remove the last path component. Finally note that the argument can contain wild cards so you can also call IgnoreAppSubDir(&quot;vc*msw*&quot;) to ignore all build directories at once when using wxWidgets-inspired output directories names.</para><para><simplesect kind="since"><para>2.9.1</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_standard_paths_1a36a497e73df7226240f8ac0f0dfa52bc" kindref="member">IgnoreAppBuildSubDirs()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>subdirPattern</parametername>
</parameternamelist>
<parameterdescription>
<para>The subdirectory containing the application binary which should be ignored when determining the top application directory. The pattern is case-insensitive and may contain wild card characters <computeroutput>&apos;</computeroutput>?&apos; and <computeroutput>&apos;*&apos;</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stdpaths.h" line="296"/>
      </memberdef>
      <memberdef kind="function" id="classwx_standard_paths_1a36a497e73df7226240f8ac0f0dfa52bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStandardPaths::IgnoreAppBuildSubDirs</definition>
        <argsstring>()</argsstring>
        <name>IgnoreAppBuildSubDirs</name>
        <briefdescription>
<para>MSW-specific function to ignore all common build directories. </para>        </briefdescription>
        <detaileddescription>
<para>This function calls <ref refid="classwx_standard_paths_1ab7534e9987d802dada6c02ab70fbaa96" kindref="member">IgnoreAppSubDir()</ref> with all common values for build directory, e.g. <computeroutput>&quot;debug&quot;</computeroutput> and <computeroutput>&quot;release&quot;</computeroutput>.</para><para>It is called by the class constructor and so the build directories are always ignored by default. You may use <ref refid="classwx_standard_paths_1a3348987c98140398e567ef76509400b6" kindref="member">DontIgnoreAppSubDir()</ref> to avoid ignoring them if this is inappropriate for your application.</para><para><simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stdpaths.h" line="310"/>
      </memberdef>
      <memberdef kind="function" id="classwx_standard_paths_1a80af124a7df05bf1a1f7bee7406d278f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStandardPaths::SetInstallPrefix</definition>
        <argsstring>(const wxString &amp;prefix)</argsstring>
        <name>SetInstallPrefix</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
<para>Lets <ref refid="classwx_standard_paths" kindref="compound">wxStandardPaths</ref> know about the real program installation prefix on a Unix system. </para>        </briefdescription>
        <detaileddescription>
<para>By default, the value returned by <ref refid="classwx_standard_paths_1a318d939990abd7589a7a2890bc0856de" kindref="member">GetInstallPrefix()</ref> is used.</para><para>Although under Linux systems the program prefix may usually be determined automatically, portable programs should call this function. Usually the prefix is set during program configuration if using GNU autotools and so it is enough to pass its value defined in <computeroutput>config.h</computeroutput> to this function.</para><para><simplesect kind="note"><para>This function is only available under Unix platforms (but not limited to wxGTK mentioned below).</para></simplesect>
Availability:<nonbreakablespace/><nonbreakablespace/>only available for the <ref refid="page_port_1page_port_wxos2" kindref="member">wxOS2</ref>, <ref refid="page_port_1page_port_wxgtk" kindref="member">wxGTK</ref> ports.  <onlyfor>wxos2,wxgtk</onlyfor>  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stdpaths.h" line="346"/>
      </memberdef>
      <memberdef kind="function" id="classwx_standard_paths_1ada72c782dcab502f17c348c0e5d3874c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStandardPaths::UseAppInfo</definition>
        <argsstring>(int info)</argsstring>
        <name>UseAppInfo</name>
        <param>
          <type>int</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Controls what application information is used when constructing paths that should be unique to this program, such as the application data directory, the plugins directory on Unix, etc. </para>        </briefdescription>
        <detaileddescription>
<para>Valid values for <emphasis>info</emphasis> are:<itemizedlist>
<listitem><para><computeroutput>AppInfo_None:</computeroutput> don&apos;t use neither application nor vendor name in the paths.</para></listitem><listitem><para><computeroutput>AppInfo_AppName:</computeroutput> use the application name in the paths.</para></listitem><listitem><para><computeroutput>AppInfo_VendorName:</computeroutput> use the vendor name in the paths, usually used combined with AppInfo_AppName, i.e. as <programlisting><codeline><highlight class="normal"><sp/>AppInfo_AppName<sp/>|</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AppInfo_VendorName<sp/></highlight></codeline>
</programlisting></para></listitem></itemizedlist>
</para><para>By default, only the application name is used.</para><para><simplesect kind="since"><para>2.9.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stdpaths.h" line="365"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_standard_paths_1a19601f7f8ed84aa28a0a0942dafb19c9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_standard_paths" kindref="compound">wxStandardPaths</ref> &amp;</type>
        <definition>static wxStandardPaths&amp; wxStandardPaths::Get</definition>
        <argsstring>()</argsstring>
        <name>Get</name>
        <briefdescription>
<para>Returns reference to the unique global standard paths object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stdpaths.h" line="87"/>
      </memberdef>
      <memberdef kind="function" id="classwx_standard_paths_1a5a523db5b6aca46154ac76d264d2bb57" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>static wxString wxStandardPaths::MSWGetShellDir</definition>
        <argsstring>(int csidl)</argsstring>
        <name>MSWGetShellDir</name>
        <param>
          <type>int</type>
          <declname>csidl</declname>
        </param>
        <briefdescription>
<para>Returns location of Windows shell special folder. </para>        </briefdescription>
        <detaileddescription>
<para>This function is, by definition, MSW-specific. It can be used to access pre-defined shell directories not covered by the existing methods of this class, e.g.: <programlisting><codeline><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>__WXMSW__</highlight></codeline>
<codeline><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>location<sp/>of<sp/>files<sp/>waiting<sp/>to<sp/>be<sp/>burned<sp/>on<sp/>a<sp/>CD</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_string" kindref="compound" tooltip="The wxString class has been completely rewritten for wxWidgets 3.0 and this change was actually the m...">wxString</ref><sp/>cdburnArea<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_standard_paths_1a5a523db5b6aca46154ac76d264d2bb57" kindref="member" tooltip="Returns location of Windows shell special folder.">wxStandardPaths::MSWGetShellDir</ref>(CSIDL_CDBURN_AREA);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif<sp/>//<sp/>__WXMSW__</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>csidl</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stdpaths.h" line="330"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classwx_standard_paths" kindref="compound">wxStandardPaths</ref> returns the standard locations in the file system and should be used by applications to find their data files in a portable way. </para>    </briefdescription>
    <detaileddescription>
<para>Note that you must not create objects of class <ref refid="classwx_standard_paths" kindref="compound">wxStandardPaths</ref> directly, but use the global standard paths object returned by <ref refid="classwx_standard_paths_1a19601f7f8ed84aa28a0a0942dafb19c9" kindref="member">wxStandardPaths::Get()</ref> (which can be of a type derived from <ref refid="classwx_standard_paths" kindref="compound">wxStandardPaths</ref> and not of exactly this type) and call the methods you need on it. The object returned by <ref refid="classwx_standard_paths_1a19601f7f8ed84aa28a0a0942dafb19c9" kindref="member">Get()</ref> may be customized by overriding <ref refid="classwx_app_traits_1ae9bd1317e78e21695c394220873b2cdc" kindref="member">wxAppTraits::GetStandardPaths()</ref> methods.</para><para>In the description of the methods below, the example return values are given for the Unix, Windows and Mac OS X systems, however please note that these are just the examples and the actual values may differ. For example, under Windows: the system administrator may change the standard directories locations, e.g. the Windows directory may be named <computeroutput>&quot;W:\Win2003&quot;</computeroutput> instead of the default <computeroutput>&quot;C:\Windows&quot;</computeroutput>.</para><para>Notice that in the examples below the string <computeroutput>appinfo</computeroutput> may be either just the application name (as returned by <ref refid="classwx_app_console_1a2bfe9c53c57d61f8b115705796f258eb" kindref="member">wxApp::GetAppName()</ref>) or a combination of the vendor name (<ref refid="classwx_app_console_1af73ec0d186dd10b7fdabb57cf097bef8" kindref="member">wxApp::GetVendorName()</ref>) and the application name, with a path separator between them. By default, only the application name is used, use <ref refid="classwx_standard_paths_1ada72c782dcab502f17c348c0e5d3874c" kindref="member">UseAppInfo()</ref> to change this.</para><para>The other placeholders should be self-explanatory: the string <computeroutput>username</computeroutput> should be replaced with the value the name of the currently logged in user. and <computeroutput>prefix</computeroutput> is only used under Unix and is <computeroutput>/usr/local</computeroutput> by default but may be changed using <ref refid="classwx_standard_paths_1a80af124a7df05bf1a1f7bee7406d278f" kindref="member">wxStandardPaths::SetInstallPrefix()</ref>.</para><para>The directories returned by the methods of this class may or may not exist. If they don&apos;t exist, it&apos;s up to the caller to create them, <ref refid="classwx_standard_paths" kindref="compound">wxStandardPaths</ref> doesn&apos;t do it.</para><para>Finally note that these functions only work with standardly packaged applications. I.e. under Unix you should follow the standard installation conventions and under Mac you should create your application bundle according to the Apple guidelines. Again, this class doesn&apos;t help you to do it.</para><para>This class is MT-safe: its methods may be called concurrently from different threads without additional locking.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__file" kindref="compound">File Handling</ref></para><para><simplesect kind="see"><para><ref refid="classwx_file_config" kindref="compound">wxFileConfig</ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/stdpaths.h" line="58" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/stdpaths.h" bodystart="57" bodyend="366"/>
    <listofallmembers>
      <member refid="classwx_standard_paths_1a3348987c98140398e567ef76509400b6" prot="public" virt="non-virtual"><scope>wxStandardPaths</scope><name>DontIgnoreAppSubDir</name></member>
      <member refid="classwx_standard_paths_1a19601f7f8ed84aa28a0a0942dafb19c9" prot="public" virt="non-virtual"><scope>wxStandardPaths</scope><name>Get</name></member>
      <member refid="classwx_standard_paths_1ae67e85d9e97f134bad9f2fa8acb29eef" prot="public" virt="virtual"><scope>wxStandardPaths</scope><name>GetAppDocumentsDir</name></member>
      <member refid="classwx_standard_paths_1ae17c730ec91dca81b3574a27a9add456" prot="public" virt="virtual"><scope>wxStandardPaths</scope><name>GetConfigDir</name></member>
      <member refid="classwx_standard_paths_1a2453024a2a5305bbda3bc6d4c0664cba" prot="public" virt="virtual"><scope>wxStandardPaths</scope><name>GetDataDir</name></member>
      <member refid="classwx_standard_paths_1aa87a172690af8f7535cc37f2e9b59c43" prot="public" virt="virtual"><scope>wxStandardPaths</scope><name>GetDocumentsDir</name></member>
      <member refid="classwx_standard_paths_1aca76479d42511c0b45f39b0cfbb35c6b" prot="public" virt="virtual"><scope>wxStandardPaths</scope><name>GetExecutablePath</name></member>
      <member refid="classwx_standard_paths_1a318d939990abd7589a7a2890bc0856de" prot="public" virt="non-virtual"><scope>wxStandardPaths</scope><name>GetInstallPrefix</name></member>
      <member refid="classwx_standard_paths_1ac935a5c1764c513a4b6d4b8b66d5b808" prot="public" virt="virtual"><scope>wxStandardPaths</scope><name>GetLocalDataDir</name></member>
      <member refid="classwx_standard_paths_1a3dc46e76d0a5045a9331d02fd429173c" prot="public" virt="virtual"><scope>wxStandardPaths</scope><name>GetLocalizedResourcesDir</name></member>
      <member refid="classwx_standard_paths_1a6eeeafa8476b389b322454d3f352d7e9" prot="public" virt="virtual"><scope>wxStandardPaths</scope><name>GetPluginsDir</name></member>
      <member refid="classwx_standard_paths_1a5514bf6288ee9f5a0acaf065762ad95d" prot="public" virt="virtual"><scope>wxStandardPaths</scope><name>GetResourcesDir</name></member>
      <member refid="classwx_standard_paths_1a6da8efb476e9a2c23f28761523b51986" prot="public" virt="virtual"><scope>wxStandardPaths</scope><name>GetTempDir</name></member>
      <member refid="classwx_standard_paths_1a7c7cf595d94d29147360d031647476b0" prot="public" virt="virtual"><scope>wxStandardPaths</scope><name>GetUserConfigDir</name></member>
      <member refid="classwx_standard_paths_1a4752213ef4d7bdc71170b9e5c3691f0f" prot="public" virt="virtual"><scope>wxStandardPaths</scope><name>GetUserDataDir</name></member>
      <member refid="classwx_standard_paths_1a456fcd2e246c57a61dda9511e4dac9c3" prot="public" virt="virtual"><scope>wxStandardPaths</scope><name>GetUserLocalDataDir</name></member>
      <member refid="classwx_standard_paths_1a36a497e73df7226240f8ac0f0dfa52bc" prot="public" virt="non-virtual"><scope>wxStandardPaths</scope><name>IgnoreAppBuildSubDirs</name></member>
      <member refid="classwx_standard_paths_1ab7534e9987d802dada6c02ab70fbaa96" prot="public" virt="non-virtual"><scope>wxStandardPaths</scope><name>IgnoreAppSubDir</name></member>
      <member refid="classwx_standard_paths_1a5a523db5b6aca46154ac76d264d2bb57" prot="public" virt="non-virtual"><scope>wxStandardPaths</scope><name>MSWGetShellDir</name></member>
      <member refid="classwx_standard_paths_1a00cb1fa092b0a164c3d1b5813b836a93" prot="public" virt="non-virtual"><scope>wxStandardPaths</scope><name>ResourceCat</name></member>
      <member refid="classwx_standard_paths_1a00cb1fa092b0a164c3d1b5813b836a93a555b4185a68ec29bce358ac2718e78bc" prot="public" virt="non-virtual"><scope>wxStandardPaths</scope><name>ResourceCat_Messages</name></member>
      <member refid="classwx_standard_paths_1a00cb1fa092b0a164c3d1b5813b836a93aa2cd7ae0b6238a2de910cde4eab5c745" prot="public" virt="non-virtual"><scope>wxStandardPaths</scope><name>ResourceCat_None</name></member>
      <member refid="classwx_standard_paths_1a80af124a7df05bf1a1f7bee7406d278f" prot="public" virt="non-virtual"><scope>wxStandardPaths</scope><name>SetInstallPrefix</name></member>
      <member refid="classwx_standard_paths_1ada72c782dcab502f17c348c0e5d3874c" prot="public" virt="non-virtual"><scope>wxStandardPaths</scope><name>UseAppInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
