<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_critical_section" kind="class" prot="public">
    <compoundname>wxCriticalSection</compoundname>
    <includes local="no">wx/thread.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_critical_section_1a483f17efa8bb35b3829288165bb2dedc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxCriticalSection::wxCriticalSection</definition>
        <argsstring>(wxCriticalSectionType critSecType=wxCRITSEC_DEFAULT)</argsstring>
        <name>wxCriticalSection</name>
        <param>
          <type><ref refid="interface_2wx_2thread_8h_1ad32912ed5726dfd2d4c24bdafbedac2e" kindref="member">wxCriticalSectionType</ref></type>
          <declname>critSecType</declname>
          <defval>wxCRITSEC_DEFAULT</defval>
        </param>
        <briefdescription>
<para>Default constructor initializes critical section object. </para>        </briefdescription>
        <detaileddescription>
<para>By default critical sections are recursive under Unix and Windows. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/thread.h" line="565"/>
      </memberdef>
      <memberdef kind="function" id="classwx_critical_section_1a6701aa3a4d56438728d0a2511c264d30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxCriticalSection::~wxCriticalSection</definition>
        <argsstring>()</argsstring>
        <name>~wxCriticalSection</name>
        <briefdescription>
<para>Destructor frees the resources. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/thread.h" line="570"/>
      </memberdef>
      <memberdef kind="function" id="classwx_critical_section_1afa80c7cb306d72884ebcc4e60ea61d39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxCriticalSection::Enter</definition>
        <argsstring>()</argsstring>
        <name>Enter</name>
        <briefdescription>
<para>Enter the critical section (same as locking a mutex): if another thread has already entered it, this call will block until the other thread calls <ref refid="classwx_critical_section_1a9710ab7240b29a653fd9233c12aadba6" kindref="member">Leave()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>There is no error return for this function.</para><para>After entering the critical section protecting a data variable, the thread running inside the critical section may safely use/modify it.</para><para>Note that entering the same critical section twice or more from the same thread doesn&apos;t result in a deadlock; in this case in fact this function will immediately return. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/thread.h" line="585"/>
      </memberdef>
      <memberdef kind="function" id="classwx_critical_section_1abb732e66f2b0e6f38d30f29a25d8851a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxCriticalSection::TryEnter</definition>
        <argsstring>()</argsstring>
        <name>TryEnter</name>
        <briefdescription>
<para>Try to enter the critical section (same as trying to lock a mutex). </para>        </briefdescription>
        <detaileddescription>
<para>If it can&apos;t, immediately returns false.</para><para><simplesect kind="since"><para>2.9.3 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/thread.h" line="593"/>
      </memberdef>
      <memberdef kind="function" id="classwx_critical_section_1a9710ab7240b29a653fd9233c12aadba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxCriticalSection::Leave</definition>
        <argsstring>()</argsstring>
        <name>Leave</name>
        <briefdescription>
<para>Leave the critical section allowing other threads use the global data protected by it. </para>        </briefdescription>
        <detaileddescription>
<para>There is no error return for this function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/thread.h" line="599"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A critical section object is used for exactly the same purpose as a <ref refid="classwx_mutex" kindref="compound">wxMutex</ref>. </para>    </briefdescription>
    <detaileddescription>
<para>The only difference is that under Windows platform critical sections are only visible inside one process, while mutexes may be shared among processes, so using critical sections is slightly more efficient.</para><para>The terminology is also slightly different: mutex may be locked (or acquired) and unlocked (or released) while critical section is entered and left by the program.</para><para>Finally, you should try to use <ref refid="classwx_critical_section_locker" kindref="compound">wxCriticalSectionLocker</ref> class whenever possible instead of directly using <ref refid="classwx_critical_section" kindref="compound">wxCriticalSection</ref> for the same reasons <ref refid="classwx_mutex_locker" kindref="compound">wxMutexLocker</ref> is preferable to <ref refid="classwx_mutex" kindref="compound">wxMutex</ref> - please see <ref refid="classwx_mutex" kindref="compound">wxMutex</ref> for an example.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__threading" kindref="compound">Threading</ref></para><para><simplesect kind="note"><para>Critical sections can be used before the wxWidgets library is fully initialized. In particular, it&apos;s safe to create global <ref refid="classwx_critical_section" kindref="compound">wxCriticalSection</ref> instances.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_thread" kindref="compound">wxThread</ref>, <ref refid="classwx_condition" kindref="compound">wxCondition</ref>, <ref refid="classwx_critical_section_locker" kindref="compound">wxCriticalSectionLocker</ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/thread.h" line="559" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/thread.h" bodystart="558" bodyend="600"/>
    <listofallmembers>
      <member refid="classwx_critical_section_1afa80c7cb306d72884ebcc4e60ea61d39" prot="public" virt="non-virtual"><scope>wxCriticalSection</scope><name>Enter</name></member>
      <member refid="classwx_critical_section_1a9710ab7240b29a653fd9233c12aadba6" prot="public" virt="non-virtual"><scope>wxCriticalSection</scope><name>Leave</name></member>
      <member refid="classwx_critical_section_1abb732e66f2b0e6f38d30f29a25d8851a" prot="public" virt="non-virtual"><scope>wxCriticalSection</scope><name>TryEnter</name></member>
      <member refid="classwx_critical_section_1a483f17efa8bb35b3829288165bb2dedc" prot="public" virt="non-virtual"><scope>wxCriticalSection</scope><name>wxCriticalSection</name></member>
      <member refid="classwx_critical_section_1a6701aa3a4d56438728d0a2511c264d30" prot="public" virt="non-virtual"><scope>wxCriticalSection</scope><name>~wxCriticalSection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
