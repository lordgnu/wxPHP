<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_text_file" kind="class" prot="public">
    <compoundname>wxTextFile</compoundname>
    <includes local="no">wx/textfile.h</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_text_file_1a0066519546e6cbead80621b9fe5c0493" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>wxString&amp; wxTextFile::GetLine</definition>
        <argsstring>(size_t n)</argsstring>
        <name>GetLine</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Retrieves the line number <emphasis>n</emphasis> from the file. </para>        </briefdescription>
        <detaileddescription>
<para>The returned line may be modified when non-const method is used but you shouldn&apos;t add line terminator at the end -- this will be done by <ref refid="classwx_text_file" kindref="compound">wxTextFile</ref> itself. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="198"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1ae57d70f1c4d8c22a9a5cb56274332c67" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>const wxString&amp; wxTextFile::GetLine</definition>
        <argsstring>(size_t n) const </argsstring>
        <name>GetLine</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Retrieves the line number <emphasis>n</emphasis> from the file. </para>        </briefdescription>
        <detaileddescription>
<para>The returned line may be modified when non-const method is used but you shouldn&apos;t add line terminator at the end -- this will be done by <ref refid="classwx_text_file" kindref="compound">wxTextFile</ref> itself. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="199"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classwx_text_file_1a2556d86c0c6130379d9122a3c076340b" prot="public" static="yes" mutable="no">
        <type>const <ref refid="textfile_8h_1a6a6d37c2bb834f5ffba195db0eb6e023" kindref="member">wxTextFileType</ref></type>
        <definition>const wxTextFileType wxTextFile::typeDefault</definition>
        <argsstring></argsstring>
        <name>typeDefault</name>
        <briefdescription>
<para>Default type for current platform determined at compile time. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="72" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_text_file_1a6db03940c46e79610b5d6b36bf30503e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxTextFile::wxTextFile</definition>
        <argsstring>()</argsstring>
        <name>wxTextFile</name>
        <briefdescription>
<para>Default constructor, use <ref refid="classwx_text_file_1a1d332b0de7bd9b02af42564de6163a12" kindref="member">Create()</ref> or <ref refid="classwx_text_file_1a627cf46a2209de3084fc7f6631fd4f78" kindref="member">Open()</ref> with a file name parameter to initialize the object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="78"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1a275108258ea8216b5c87784266bd678e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxTextFile::wxTextFile</definition>
        <argsstring>(const wxString &amp;strFile)</argsstring>
        <name>wxTextFile</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>strFile</declname>
        </param>
        <briefdescription>
<para>Constructor does not load the file into memory, use <ref refid="classwx_text_file_1a627cf46a2209de3084fc7f6631fd4f78" kindref="member">Open()</ref> to do it. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="83"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1a1237cdd1b9fe55ba52b8038452ff6685" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxTextFile::~wxTextFile</definition>
        <argsstring>()</argsstring>
        <name>~wxTextFile</name>
        <briefdescription>
<para>Destructor does nothing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="88"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1abed1a69c2e35828fadddf8e1cb0365d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextFile::AddLine</definition>
        <argsstring>(const wxString &amp;str, wxTextFileType type=typeDefault)</argsstring>
        <name>AddLine</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="textfile_8h_1a6a6d37c2bb834f5ffba195db0eb6e023" kindref="member">wxTextFileType</ref></type>
          <declname>type</declname>
          <defval><ref refid="classwx_text_file_1a2556d86c0c6130379d9122a3c076340b" kindref="member">typeDefault</ref></defval>
        </param>
        <briefdescription>
<para>Adds a line to the end of file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="93"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1aa1959fb872da49445852b631ad5f5076" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextFile::Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <briefdescription>
<para>Delete all lines from the file, set current line number to 0. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="98"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1a9745296181a5991bbfa663e587bbf7c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextFile::Close</definition>
        <argsstring>()</argsstring>
        <name>Close</name>
        <briefdescription>
<para>Closes the file and frees memory, <bold>&quot;losing all changes&quot;</bold>. </para>        </briefdescription>
        <detaileddescription>
<para>Use <ref refid="classwx_text_file_1add5fdaa0aa021d462fd9d5063167b89b" kindref="member">Write()</ref> if you want to save them. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="104"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1a1d332b0de7bd9b02af42564de6163a12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextFile::Create</definition>
        <argsstring>()</argsstring>
        <name>Create</name>
        <briefdescription>
<para>Creates the file with the name which was given in the <ref refid="classwx_text_file_1a275108258ea8216b5c87784266bd678e" kindref="member">wxTextFile(const wxString&amp;)</ref> constructor. </para>        </briefdescription>
        <detaileddescription>
<para>The array of file lines is initially empty.</para><para>It will fail if the file already exists, <ref refid="classwx_text_file_1a627cf46a2209de3084fc7f6631fd4f78" kindref="member">Open()</ref> should be used in this case. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="113"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1afb0c99656d6a0be088596fd27976cee9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextFile::Create</definition>
        <argsstring>(const wxString &amp;strFile)</argsstring>
        <name>Create</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>strFile</declname>
        </param>
        <briefdescription>
<para>Creates the file with the given name. </para>        </briefdescription>
        <detaileddescription>
<para>The array of file lines is initially empty.</para><para>It will fail if the file already exists, <ref refid="classwx_text_file_1a627cf46a2209de3084fc7f6631fd4f78" kindref="member">Open()</ref> should be used in this case. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="121"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1a351c68daa30b83f338b669bfe931c21d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextFile::Eof</definition>
        <argsstring>() const </argsstring>
        <name>Eof</name>
        <briefdescription>
<para>Returns true if the current line is the last one. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="126"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1ab25b098ffce74c399f441e05c82846df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextFile::Exists</definition>
        <argsstring>() const </argsstring>
        <name>Exists</name>
        <briefdescription>
<para>Return true if file exists - the name of the file should have been specified in the constructor before calling <ref refid="classwx_text_file_1ab25b098ffce74c399f441e05c82846df" kindref="member">Exists()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="132"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1ac8922e4da677e0b03ad52fbacfdffb99" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxTextFile::GetCurrentLine</definition>
        <argsstring>() const </argsstring>
        <name>GetCurrentLine</name>
        <briefdescription>
<para>Returns the current line: it has meaning only when you&apos;re using <ref refid="classwx_text_file_1a34dba92dd33454179b9537aee0ed0871" kindref="member">GetFirstLine()</ref>/GetNextLine() functions, it doesn&apos;t get updated when you&apos;re using &quot;direct access&quot; functions like <ref refid="classwx_text_file_1a0066519546e6cbead80621b9fe5c0493" kindref="member">GetLine()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="classwx_text_file_1a34dba92dd33454179b9537aee0ed0871" kindref="member">GetFirstLine()</ref> and <ref refid="classwx_text_file_1ad42633ac6b3c009155159639485b3045" kindref="member">GetLastLine()</ref> also change the value of the current line, as well as <ref refid="classwx_text_file_1a8e0dd930c68dc78c26442c778d9c42a4" kindref="member">GoToLine()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="141"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1a34dba92dd33454179b9537aee0ed0871" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>wxString&amp; wxTextFile::GetFirstLine</definition>
        <argsstring>()</argsstring>
        <name>GetFirstLine</name>
        <briefdescription>
<para>This method together with <ref refid="classwx_text_file_1a1c7e9023dc31336524f44da5659b28a8" kindref="member">GetNextLine()</ref> allows more &quot;iterator-like&quot; traversal of the list of lines, i.e. </para>        </briefdescription>
        <detaileddescription>
<para>you may write something like:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_text_file" kindref="compound" tooltip="The wxTextFile is a simple class which allows to work with text files on line by line basis...">wxTextFile</ref><sp/>file;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>str<sp/>=<sp/>file.<ref refid="classwx_text_file_1a34dba92dd33454179b9537aee0ed0871" kindref="member" tooltip="This method together with GetNextLine() allows more &amp;quot;iterator-like&amp;quot; traversal of the list of lines...">GetFirstLine</ref>();<sp/>!file.<ref refid="classwx_text_file_1a351c68daa30b83f338b669bfe931c21d" kindref="member" tooltip="Returns true if the current line is the last one.">Eof</ref>();<sp/>str<sp/>=<sp/>file.<ref refid="classwx_text_file_1a1c7e9023dc31336524f44da5659b28a8" kindref="member" tooltip="Gets the next line (see GetFirstLine() for the example).">GetNextLine</ref>()<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>something<sp/>with<sp/>the<sp/>current<sp/>line<sp/>in<sp/>str</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>something<sp/>with<sp/>the<sp/>last<sp/>line<sp/>in<sp/>str</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="168"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1ad42633ac6b3c009155159639485b3045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>wxString&amp; wxTextFile::GetLastLine</definition>
        <argsstring>()</argsstring>
        <name>GetLastLine</name>
        <briefdescription>
<para>Gets the last line of the file. </para>        </briefdescription>
        <detaileddescription>
<para>Together with <ref refid="classwx_text_file_1ac800c410c6ac0d565e0a70e2ebfc4364" kindref="member">GetPrevLine()</ref> it allows to enumerate the lines in the file from the end to the beginning like this:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_text_file" kindref="compound" tooltip="The wxTextFile is a simple class which allows to work with text files on line by line basis...">wxTextFile</ref><sp/>file;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>str<sp/>=<sp/>file.<ref refid="classwx_text_file_1ad42633ac6b3c009155159639485b3045" kindref="member" tooltip="Gets the last line of the file.">GetLastLine</ref>();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file.<ref refid="classwx_text_file_1ac8922e4da677e0b03ad52fbacfdffb99" kindref="member" tooltip="Returns the current line: it has meaning only when you&amp;#39;re using GetFirstLine()/GetNextLine() function...">GetCurrentLine</ref>()<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/>file.<ref refid="classwx_text_file_1ac800c410c6ac0d565e0a70e2ebfc4364" kindref="member" tooltip="Gets the previous line in the file.">GetPrevLine</ref>()<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>something<sp/>with<sp/>the<sp/>current<sp/>line<sp/>in<sp/>str</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>something<sp/>with<sp/>the<sp/>first<sp/>line<sp/>in<sp/>str</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="188"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1a478857cce2edade3fea4a962b85c567b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxTextFile::GetLineCount</definition>
        <argsstring>() const </argsstring>
        <name>GetLineCount</name>
        <briefdescription>
<para>Get the number of lines in the file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="205"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1affd091ae39a634fc57837d3b05b6aa4f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="textfile_8h_1a6a6d37c2bb834f5ffba195db0eb6e023" kindref="member">wxTextFileType</ref></type>
        <definition>wxTextFileType wxTextFile::GetLineType</definition>
        <argsstring>(size_t n) const </argsstring>
        <name>GetLineType</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the type of the line (see also <ref refid="classwx_text_file_1a70ef0a9330955eaecd463bec9519d192" kindref="member">wxTextFile::GetEOL</ref>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="210"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1a5d4f4ce4e434610bcac90fc6e23029bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>const wxString&amp; wxTextFile::GetName</definition>
        <argsstring>() const </argsstring>
        <name>GetName</name>
        <briefdescription>
<para>Get the name of the file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="215"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1a1c7e9023dc31336524f44da5659b28a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>wxString&amp; wxTextFile::GetNextLine</definition>
        <argsstring>()</argsstring>
        <name>GetNextLine</name>
        <briefdescription>
<para>Gets the next line (see <ref refid="classwx_text_file_1a34dba92dd33454179b9537aee0ed0871" kindref="member">GetFirstLine()</ref> for the example). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="220"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1ac800c410c6ac0d565e0a70e2ebfc4364" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>wxString&amp; wxTextFile::GetPrevLine</definition>
        <argsstring>()</argsstring>
        <name>GetPrevLine</name>
        <briefdescription>
<para>Gets the previous line in the file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="225"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1a8e0dd930c68dc78c26442c778d9c42a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextFile::GoToLine</definition>
        <argsstring>(size_t n)</argsstring>
        <name>GoToLine</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Changes the value returned by <ref refid="classwx_text_file_1ac8922e4da677e0b03ad52fbacfdffb99" kindref="member">GetCurrentLine()</ref> and used by <ref refid="classwx_text_file_1a34dba92dd33454179b9537aee0ed0871" kindref="member">GetFirstLine()</ref> and <ref refid="classwx_text_file_1a1c7e9023dc31336524f44da5659b28a8" kindref="member">GetNextLine()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="231"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1a3c9ee4a521b46b4a133592296366a0fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="textfile_8h_1a6a6d37c2bb834f5ffba195db0eb6e023" kindref="member">wxTextFileType</ref></type>
        <definition>wxTextFileType wxTextFile::GuessType</definition>
        <argsstring>() const </argsstring>
        <name>GuessType</name>
        <briefdescription>
<para>Guess the type of file (which is supposed to be opened). </para>        </briefdescription>
        <detaileddescription>
<para>If sufficiently many lines of the file are in DOS/Unix/Mac format, the corresponding value will be returned. If the detection mechanism fails <computeroutput>wxTextFileType_None</computeroutput> is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="240"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1a4d7dea995d33ee094fb5645395eb4d9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextFile::InsertLine</definition>
        <argsstring>(const wxString &amp;str, size_t n, wxTextFileType type=typeDefault)</argsstring>
        <name>InsertLine</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="textfile_8h_1a6a6d37c2bb834f5ffba195db0eb6e023" kindref="member">wxTextFileType</ref></type>
          <declname>type</declname>
          <defval><ref refid="classwx_text_file_1a2556d86c0c6130379d9122a3c076340b" kindref="member">typeDefault</ref></defval>
        </param>
        <briefdescription>
<para>Insert a line before the line number <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="246"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1a57933998de4ede97ea48db7ba4036b13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextFile::IsOpened</definition>
        <argsstring>() const </argsstring>
        <name>IsOpened</name>
        <briefdescription>
<para>Returns true if the file is currently opened. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="251"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1a627cf46a2209de3084fc7f6631fd4f78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextFile::Open</definition>
        <argsstring>(const wxMBConv &amp;conv=wxConvAuto())</argsstring>
        <name>Open</name>
        <param>
          <type>const <ref refid="classwx_m_b_conv" kindref="compound">wxMBConv</ref> &amp;</type>
          <declname>conv</declname>
          <defval><ref refid="classwx_conv_auto" kindref="compound">wxConvAuto</ref>()</defval>
        </param>
        <briefdescription>
<para>Opens the file with the name which was given in the <ref refid="classwx_text_file_1a275108258ea8216b5c87784266bd678e" kindref="member">wxTextFile(const wxString&amp;)</ref> constructor and also loads file in memory on success. </para>        </briefdescription>
        <detaileddescription>
<para>It will fail if the file does not exist, <ref refid="classwx_text_file_1a1d332b0de7bd9b02af42564de6163a12" kindref="member">Create()</ref> should be used in this case.</para><para>The <emphasis>conv</emphasis> argument is only meaningful in Unicode build of wxWidgets when it is used to convert the file to wide character representation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="262"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1a83ae81cd94a79673adf91174b6e5d675" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextFile::Open</definition>
        <argsstring>(const wxString &amp;strFile, const wxMBConv &amp;conv=wxConvAuto())</argsstring>
        <name>Open</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>strFile</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_m_b_conv" kindref="compound">wxMBConv</ref> &amp;</type>
          <declname>conv</declname>
          <defval><ref refid="classwx_conv_auto" kindref="compound">wxConvAuto</ref>()</defval>
        </param>
        <briefdescription>
<para>Opens the file with the given name and also loads file in memory on success. </para>        </briefdescription>
        <detaileddescription>
<para>It will fail if the file does not exist, <ref refid="classwx_text_file_1a1d332b0de7bd9b02af42564de6163a12" kindref="member">Create()</ref> should be used in this case.</para><para>The <emphasis>conv</emphasis> argument is only meaningful in Unicode build of wxWidgets when it is used to convert the file to wide character representation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="272"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1aa39d04978b59dde58372c043240049ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextFile::RemoveLine</definition>
        <argsstring>(size_t n)</argsstring>
        <name>RemoveLine</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Delete line number <emphasis>n</emphasis> from the file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="277"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1add5fdaa0aa021d462fd9d5063167b89b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextFile::Write</definition>
        <argsstring>(wxTextFileType typeNew=wxTextFileType_None, const wxMBConv &amp;conv=wxConvAuto())</argsstring>
        <name>Write</name>
        <param>
          <type><ref refid="textfile_8h_1a6a6d37c2bb834f5ffba195db0eb6e023" kindref="member">wxTextFileType</ref></type>
          <declname>typeNew</declname>
          <defval>wxTextFileType_None</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_m_b_conv" kindref="compound">wxMBConv</ref> &amp;</type>
          <declname>conv</declname>
          <defval><ref refid="classwx_conv_auto" kindref="compound">wxConvAuto</ref>()</defval>
        </param>
        <briefdescription>
<para>Change the file on disk. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>typeNew</emphasis> parameter allows you to change the file format (default argument means &quot;don&apos;t change type&quot;) and may be used to convert, for example, DOS files to Unix.</para><para>The <emphasis>conv</emphasis> argument is only meaningful in Unicode build of wxWidgets when it is used to convert all lines to multibyte representation before writing them to physical file.</para><para><simplesect kind="return"><para>true if operation succeeded, false if it failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="294"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_file_1ad014a633b35638248520491a36c25bcb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>wxString&amp; wxTextFile::operator[]</definition>
        <argsstring>(size_t n) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>The same as <ref refid="classwx_text_file_1a0066519546e6cbead80621b9fe5c0493" kindref="member">GetLine()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="299"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_text_file_1a70ef0a9330955eaecd463bec9519d192" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="group__group__funcmacro__string_1gad42f64d8c82f1ce4ae58773a89b2d6a7" kindref="member">wxChar</ref> *</type>
        <definition>static const wxChar* wxTextFile::GetEOL</definition>
        <argsstring>(wxTextFileType type=typeDefault)</argsstring>
        <name>GetEOL</name>
        <param>
          <type><ref refid="textfile_8h_1a6a6d37c2bb834f5ffba195db0eb6e023" kindref="member">wxTextFileType</ref></type>
          <declname>type</declname>
          <defval><ref refid="classwx_text_file_1a2556d86c0c6130379d9122a3c076340b" kindref="member">typeDefault</ref></defval>
        </param>
        <briefdescription>
<para>Get the line termination string corresponding to given constant. </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>typeDefault</emphasis> is the value defined during the compilation and corresponds to the native format of the platform, i.e. it will be <computeroutput>wxTextFileType_Dos</computeroutput> under Windows and <computeroutput>wxTextFileType_Unix</computeroutput> under Unix (including Mac OS X, the value <computeroutput>wxTextFileType_Mac</computeroutput> was only used for classic Mac OS versions). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="152"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classwx_text_file" kindref="compound">wxTextFile</ref> is a simple class which allows to work with text files on line by line basis. </para>    </briefdescription>
    <detaileddescription>
<para>It also understands the differences in line termination characters under different platforms and will not do anything bad to files with &quot;non
    native&quot; line termination sequences - in fact, it can be also used to modify the text files and change the line termination characters from one type (say DOS) to another (say Unix).</para><para>One word of warning: the class is not at all optimized for big files and thus it will load the file entirely into memory when opened. Of course, you should not work in this way with large files (as an estimation, anything over 1 Megabyte is surely too big for this class). On the other hand, it is not a serious limitation for small files like configuration files or program sources which are well handled by <ref refid="classwx_text_file" kindref="compound">wxTextFile</ref>.</para><para>The typical things you may do with <ref refid="classwx_text_file" kindref="compound">wxTextFile</ref> in order are:</para><para><itemizedlist>
<listitem><para>Create and open it: this is done with either <ref refid="classwx_text_file_1a1d332b0de7bd9b02af42564de6163a12" kindref="member">wxTextFile::Create</ref> or <ref refid="classwx_text_file_1a627cf46a2209de3084fc7f6631fd4f78" kindref="member">wxTextFile::Open</ref> function which opens the file (name may be specified either as the argument to these functions or in the constructor), reads its contents in memory (in the case of <ref refid="classwx_text_file_1a627cf46a2209de3084fc7f6631fd4f78" kindref="member">wxTextFile::Open()</ref>) and closes it.</para></listitem><listitem><para>Work with the lines in the <ulink url="file:">file:</ulink> this may be done either with &quot;direct
      access&quot; functions like <ref refid="classwx_text_file_1a478857cce2edade3fea4a962b85c567b" kindref="member">wxTextFile::GetLineCount</ref> and <ref refid="classwx_text_file_1a0066519546e6cbead80621b9fe5c0493" kindref="member">wxTextFile::GetLine</ref> (<emphasis>operator</emphasis>[] does exactly the same but looks more like array addressing) or with &quot;sequential access&quot; functions which include <ref refid="classwx_text_file_1a34dba92dd33454179b9537aee0ed0871" kindref="member">wxTextFile::GetFirstLine</ref>, <ref refid="classwx_text_file_1a1c7e9023dc31336524f44da5659b28a8" kindref="member">wxTextFile::GetNextLine</ref> and also <ref refid="classwx_text_file_1ad42633ac6b3c009155159639485b3045" kindref="member">wxTextFile::GetLastLine</ref>, <ref refid="classwx_text_file_1ac800c410c6ac0d565e0a70e2ebfc4364" kindref="member">wxTextFile::GetPrevLine</ref>. For the sequential access functions the current line number is maintained: it is returned by <ref refid="classwx_text_file_1ac8922e4da677e0b03ad52fbacfdffb99" kindref="member">wxTextFile::GetCurrentLine</ref> and may be changed with <ref refid="classwx_text_file_1a8e0dd930c68dc78c26442c778d9c42a4" kindref="member">wxTextFile::GoToLine</ref>.</para></listitem><listitem><para>Add/remove lines to the <ulink url="file:">file:</ulink> <ref refid="classwx_text_file_1abed1a69c2e35828fadddf8e1cb0365d6" kindref="member">wxTextFile::AddLine</ref> and <ref refid="classwx_text_file_1a4d7dea995d33ee094fb5645395eb4d9c" kindref="member">wxTextFile::InsertLine</ref> add new lines while <ref refid="classwx_text_file_1aa39d04978b59dde58372c043240049ae" kindref="member">wxTextFile::RemoveLine</ref> deletes the existing ones. <ref refid="classwx_text_file_1aa1959fb872da49445852b631ad5f5076" kindref="member">wxTextFile::Clear</ref> resets the file to empty.</para></listitem><listitem><para>Save your changes: notice that the changes you make to the file will <bold>not</bold> be saved automatically; calling <ref refid="classwx_text_file_1a9745296181a5991bbfa663e587bbf7c4" kindref="member">wxTextFile::Close</ref> or doing nothing discards them! To save the changes you must explicitly call <ref refid="classwx_text_file_1add5fdaa0aa021d462fd9d5063167b89b" kindref="member">wxTextFile::Write</ref> - here, you may also change the line termination type if you wish.</para></listitem></itemizedlist>
</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__file" kindref="compound">File Handling</ref></para><para><simplesect kind="see"><para><ref refid="classwx_file" kindref="compound">wxFile</ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" line="67" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/textfile.h" bodystart="66" bodyend="300"/>
    <listofallmembers>
      <member refid="classwx_text_file_1abed1a69c2e35828fadddf8e1cb0365d6" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>AddLine</name></member>
      <member refid="classwx_text_file_1aa1959fb872da49445852b631ad5f5076" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>Clear</name></member>
      <member refid="classwx_text_file_1a9745296181a5991bbfa663e587bbf7c4" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>Close</name></member>
      <member refid="classwx_text_file_1a1d332b0de7bd9b02af42564de6163a12" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>Create</name></member>
      <member refid="classwx_text_file_1afb0c99656d6a0be088596fd27976cee9" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>Create</name></member>
      <member refid="classwx_text_file_1a351c68daa30b83f338b669bfe931c21d" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>Eof</name></member>
      <member refid="classwx_text_file_1ab25b098ffce74c399f441e05c82846df" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>Exists</name></member>
      <member refid="classwx_text_file_1ac8922e4da677e0b03ad52fbacfdffb99" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>GetCurrentLine</name></member>
      <member refid="classwx_text_file_1a70ef0a9330955eaecd463bec9519d192" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>GetEOL</name></member>
      <member refid="classwx_text_file_1a34dba92dd33454179b9537aee0ed0871" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>GetFirstLine</name></member>
      <member refid="classwx_text_file_1ad42633ac6b3c009155159639485b3045" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>GetLastLine</name></member>
      <member refid="classwx_text_file_1a0066519546e6cbead80621b9fe5c0493" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>GetLine</name></member>
      <member refid="classwx_text_file_1ae57d70f1c4d8c22a9a5cb56274332c67" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>GetLine</name></member>
      <member refid="classwx_text_file_1a478857cce2edade3fea4a962b85c567b" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>GetLineCount</name></member>
      <member refid="classwx_text_file_1affd091ae39a634fc57837d3b05b6aa4f" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>GetLineType</name></member>
      <member refid="classwx_text_file_1a5d4f4ce4e434610bcac90fc6e23029bb" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>GetName</name></member>
      <member refid="classwx_text_file_1a1c7e9023dc31336524f44da5659b28a8" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>GetNextLine</name></member>
      <member refid="classwx_text_file_1ac800c410c6ac0d565e0a70e2ebfc4364" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>GetPrevLine</name></member>
      <member refid="classwx_text_file_1a8e0dd930c68dc78c26442c778d9c42a4" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>GoToLine</name></member>
      <member refid="classwx_text_file_1a3c9ee4a521b46b4a133592296366a0fe" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>GuessType</name></member>
      <member refid="classwx_text_file_1a4d7dea995d33ee094fb5645395eb4d9c" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>InsertLine</name></member>
      <member refid="classwx_text_file_1a57933998de4ede97ea48db7ba4036b13" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>IsOpened</name></member>
      <member refid="classwx_text_file_1a627cf46a2209de3084fc7f6631fd4f78" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>Open</name></member>
      <member refid="classwx_text_file_1a83ae81cd94a79673adf91174b6e5d675" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>Open</name></member>
      <member refid="classwx_text_file_1ad014a633b35638248520491a36c25bcb" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>operator[]</name></member>
      <member refid="classwx_text_file_1aa39d04978b59dde58372c043240049ae" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>RemoveLine</name></member>
      <member refid="classwx_text_file_1a2556d86c0c6130379d9122a3c076340b" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>typeDefault</name></member>
      <member refid="classwx_text_file_1add5fdaa0aa021d462fd9d5063167b89b" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>Write</name></member>
      <member refid="classwx_text_file_1a6db03940c46e79610b5d6b36bf30503e" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>wxTextFile</name></member>
      <member refid="classwx_text_file_1a275108258ea8216b5c87784266bd678e" prot="public" virt="non-virtual"><scope>wxTextFile</scope><name>wxTextFile</name></member>
      <member refid="classwx_text_file_1a1237cdd1b9fe55ba52b8038452ff6685" prot="public" virt="virtual"><scope>wxTextFile</scope><name>~wxTextFile</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
