<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_tree_item_data" kind="class" prot="public">
    <compoundname>wxTreeItemData</compoundname>
    <basecompoundref refid="classwx_client_data" prot="public" virt="non-virtual">wxClientData</basecompoundref>
    <includes local="no">wx/treebase.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_tree_item_data_1a8ebdd1027310183289833bcbb18dba6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxTreeItemData::wxTreeItemData</definition>
        <argsstring>()</argsstring>
        <name>wxTreeItemData</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
<para><bold>wxPerl Note:</bold> In wxPerl the constructor accepts a scalar as an optional parameter and stores it as client data; use<itemizedlist>
<listitem><para>GetData() to retrieve the value.</para></listitem><listitem><para>SetData(data) to set it. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treebase.h" line="77"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_item_data_1aa3d0fb19b863733d7f5c2a9331a18236" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxTreeItemData::~wxTreeItemData</definition>
        <argsstring>()</argsstring>
        <name>~wxTreeItemData</name>
        <briefdescription>
<para>Virtual destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treebase.h" line="82"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_item_data_1a78d6d1c5374d0580dd3244ef42ae8b3c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
        <definition>const wxTreeItemId&amp; wxTreeItemData::GetId</definition>
        <argsstring>() const </argsstring>
        <name>GetId</name>
        <briefdescription>
<para>Returns the item associated with this node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treebase.h" line="87"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_item_data_1a527fa24ac4c80f1df25f51e24990ec44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeItemData::SetId</definition>
        <argsstring>(const wxTreeItemId &amp;id)</argsstring>
        <name>SetId</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Sets the item associated with this node. </para>        </briefdescription>
        <detaileddescription>
<para>Notice that this function is automatically called by <ref refid="classwx_tree_ctrl" kindref="compound">wxTreeCtrl</ref> methods associating an object of this class with a tree control item such as <ref refid="classwx_tree_ctrl_1a0a798a2a06f21bcb5bef2c4b4b7cc3a5" kindref="member">wxTreeCtrl::AppendItem()</ref>, <ref refid="classwx_tree_ctrl_1a06e1e6b25a7121922412eea510bd3109" kindref="member">wxTreeCtrl::InsertItem()</ref> and <ref refid="classwx_tree_ctrl_1adb74a81b41ab25bd38884311bb4b3b46" kindref="member">wxTreeCtrl::SetItemData()</ref> so there is usually no need to call it yourself. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treebase.h" line="98"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classwx_tree_item_data" kindref="compound">wxTreeItemData</ref> is some (arbitrary) user class associated with some item. </para>    </briefdescription>
    <detaileddescription>
<para>The main advantage of having this class is that <ref refid="classwx_tree_item_data" kindref="compound">wxTreeItemData</ref> objects are destroyed automatically by the tree and, as this class has virtual destructor, it means that the memory and any other resources associated with a tree item will be automatically freed when it is deleted. Note that we don&apos;t use <ref refid="classwx_object" kindref="compound">wxObject</ref> as the base class for <ref refid="classwx_tree_item_data" kindref="compound">wxTreeItemData</ref> because the size of this class is critical: in many applications, each tree leaf will have <ref refid="classwx_tree_item_data" kindref="compound">wxTreeItemData</ref> associated with it and the number of leaves may be quite big.</para><para>Also please note that because the objects of this class are deleted by the tree using the operator <computeroutput>delete</computeroutput>, they must always be allocated on the heap using <computeroutput>new</computeroutput>.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__containers" kindref="compound">Containers</ref></para><para><simplesect kind="see"><para><ref refid="classwx_tree_ctrl" kindref="compound">wxTreeCtrl</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="11402">
        <label>wxClientData</label>
        <link refid="classwx_client_data"/>
      </node>
      <node id="11401">
        <label>wxTreeItemData</label>
        <link refid="classwx_tree_item_data"/>
        <childnode refid="11402" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11404">
        <label>wxClientData</label>
        <link refid="classwx_client_data"/>
      </node>
      <node id="11403">
        <label>wxTreeItemData</label>
        <link refid="classwx_tree_item_data"/>
        <childnode refid="11404" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/treebase.h" line="65" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/treebase.h" bodystart="64" bodyend="99"/>
    <listofallmembers>
      <member refid="classwx_tree_item_data_1a78d6d1c5374d0580dd3244ef42ae8b3c" prot="public" virt="non-virtual"><scope>wxTreeItemData</scope><name>GetId</name></member>
      <member refid="classwx_tree_item_data_1a527fa24ac4c80f1df25f51e24990ec44" prot="public" virt="non-virtual"><scope>wxTreeItemData</scope><name>SetId</name></member>
      <member refid="classwx_client_data_1acf0e79134d5fb8abd8a4a343c616e8d7" prot="public" virt="non-virtual"><scope>wxTreeItemData</scope><name>wxClientData</name></member>
      <member refid="classwx_tree_item_data_1a8ebdd1027310183289833bcbb18dba6a" prot="public" virt="non-virtual"><scope>wxTreeItemData</scope><name>wxTreeItemData</name></member>
      <member refid="classwx_client_data_1a427b6e314d2e172badcdcf55068a2c00" prot="public" virt="virtual"><scope>wxTreeItemData</scope><name>~wxClientData</name></member>
      <member refid="classwx_tree_item_data_1aa3d0fb19b863733d7f5c2a9331a18236" prot="public" virt="virtual"><scope>wxTreeItemData</scope><name>~wxTreeItemData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
