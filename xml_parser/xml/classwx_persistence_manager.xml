<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_persistence_manager" kind="class" prot="public">
    <compoundname>wxPersistenceManager</compoundname>
    <includes local="no">wx/persist.h</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_persistence_manager_1aa6a195c6e56cb6e325d2f07afb0e0a44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool wxPersistenceManager::RegisterAndRestore</definition>
        <argsstring>(T *obj)</argsstring>
        <name>RegisterAndRestore</name>
        <param>
          <type>T *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Combines both <ref refid="classwx_persistence_manager_1a94e205e486abe0001ebd15af9e81dc63" kindref="member">Register()</ref> and <ref refid="classwx_persistence_manager_1a932d8f5cf981aed723f79d1923f67aed" kindref="member">Restore()</ref> calls. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/persist.h" line="159"/>
      </memberdef>
      <memberdef kind="function" id="classwx_persistence_manager_1ac0a4d5858a69cd6db22e5ab75e5e9298" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxPersistenceManager::RegisterAndRestore</definition>
        <argsstring>(void *obj, wxPersistentObject *po)</argsstring>
        <name>RegisterAndRestore</name>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="classwx_persistent_object" kindref="compound">wxPersistentObject</ref> *</type>
          <declname>po</declname>
        </param>
        <briefdescription>
<para>Combines both <ref refid="classwx_persistence_manager_1a94e205e486abe0001ebd15af9e81dc63" kindref="member">Register()</ref> and <ref refid="classwx_persistence_manager_1a932d8f5cf981aed723f79d1923f67aed" kindref="member">Restore()</ref> calls. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/persist.h" line="161"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_persistence_manager_1a4cbc79238e7d46f5e201c67e86fd5343" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wxPersistenceManager::Set</definition>
        <argsstring>(wxPersistenceManager &amp;manager)</argsstring>
        <name>Set</name>
        <param>
          <type><ref refid="classwx_persistence_manager" kindref="compound">wxPersistenceManager</ref> &amp;</type>
          <declname>manager</declname>
        </param>
        <briefdescription>
<para>Set the global persistence manager to use. </para>        </briefdescription>
        <detaileddescription>
<para>Call this method to specify a non-default persistence manager to use. It should usually be called very early (e.g. in wxApp-derived class constructor or in the beginning of overridden <ref refid="classwx_app_console_1a99953775a2fd83fa2456e390779afe15" kindref="member">wxApp::OnInit()</ref>) to affect creation of all persistent controls and the object passed to it must have a lifetime long enough to be still alive when the persistent controls are destroyed and need it to save their state so typically this would be a global or a <ref refid="classwx_app" kindref="compound">wxApp</ref> member.</para><para><simplesect kind="since"><para>2.9.3 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/persist.h" line="40"/>
      </memberdef>
      <memberdef kind="function" id="classwx_persistence_manager_1a1d594b5905ef1c7a11ccadf348325f5b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_persistence_manager" kindref="compound">wxPersistenceManager</ref> &amp;</type>
        <definition>static wxPersistenceManager&amp; wxPersistenceManager::Get</definition>
        <argsstring>()</argsstring>
        <name>Get</name>
        <briefdescription>
<para>Returns the unique persistence manager object. </para>        </briefdescription>
        <detaileddescription>
<para>If <ref refid="classwx_persistence_manager_1a4cbc79238e7d46f5e201c67e86fd5343" kindref="member">Set()</ref> hadn&apos;t been called before, a default persistence manager implementation is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/persist.h" line="48"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_persistence_manager_1a4183a42f9dfbd223c363c2879b85d137" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPersistenceManager::DisableSaving</definition>
        <argsstring>()</argsstring>
        <name>DisableSaving</name>
        <briefdescription>
<para>Globally disable saving the persistence object properties. </para>        </briefdescription>
        <detaileddescription>
<para>By default, saving properties in <ref refid="classwx_persistence_manager_1ae0b01606ded5323e923b1c9848bdb3bb" kindref="member">Save()</ref> is enabled but the program may wish to disable if, for example, it detects that it is running on a system which shouldn&apos;t be modified in any way and so configuration file (or Windows registry) shouldn&apos;t be written to.</para><para><simplesect kind="see"><para><ref refid="classwx_persistence_manager_1aea41f3b4c596f7bc90f43e888faac93b" kindref="member">DisableRestoring()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/persist.h" line="60"/>
      </memberdef>
      <memberdef kind="function" id="classwx_persistence_manager_1aea41f3b4c596f7bc90f43e888faac93b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPersistenceManager::DisableRestoring</definition>
        <argsstring>()</argsstring>
        <name>DisableRestoring</name>
        <briefdescription>
<para>Globally disable restoring the persistence object properties. </para>        </briefdescription>
        <detaileddescription>
<para>By default, restoring properties in <ref refid="classwx_persistence_manager_1a932d8f5cf981aed723f79d1923f67aed" kindref="member">Restore()</ref> is enabled but this function allows to disable it. This is mostly useful for testing.</para><para><simplesect kind="see"><para><ref refid="classwx_persistence_manager_1a4183a42f9dfbd223c363c2879b85d137" kindref="member">DisableSaving()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/persist.h" line="70"/>
      </memberdef>
      <memberdef kind="function" id="classwx_persistence_manager_1a94e205e486abe0001ebd15af9e81dc63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classwx_persistent_object" kindref="compound">wxPersistentObject</ref> *</type>
        <definition>wxPersistentObject* wxPersistenceManager::Register</definition>
        <argsstring>(T *obj)</argsstring>
        <name>Register</name>
        <param>
          <type>T *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Register an object with the manager automatically creating a persistence adapter for it. </para>        </briefdescription>
        <detaileddescription>
<para>This is equivalent to calling <ref refid="classwx_persistence_manager_1a48a010ae8b64a84a58ba5ab8b8b9e836" kindref="member">Register(void *, wxPersistentObject *)</ref> with wxCreatePersistentObject(obj) as the second argument.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>The object to register. <ref refid="interface_2wx_2persist_2bookctrl_8h_1a8b21681a5cb6009c8acb05f474ca1899" kindref="member">wxCreatePersistentObject()</ref> overload must be defined for the objects of this class. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/persist.h" line="85"/>
      </memberdef>
      <memberdef kind="function" id="classwx_persistence_manager_1a48a010ae8b64a84a58ba5ab8b8b9e836" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_persistent_object" kindref="compound">wxPersistentObject</ref> *</type>
        <definition>wxPersistentObject* wxPersistenceManager::Register</definition>
        <argsstring>(void *obj, wxPersistentObject *po)</argsstring>
        <name>Register</name>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="classwx_persistent_object" kindref="compound">wxPersistentObject</ref> *</type>
          <declname>po</declname>
        </param>
        <briefdescription>
<para>Register an object with the manager. </para>        </briefdescription>
        <detaileddescription>
<para>Note that registering the object doesn&apos;t do anything except allowing to call <ref refid="classwx_persistence_manager_1a932d8f5cf981aed723f79d1923f67aed" kindref="member">Restore()</ref> for it later. If you want to register the object and restore its properties, use <ref refid="classwx_persistence_manager_1aa6a195c6e56cb6e325d2f07afb0e0a44" kindref="member">RegisterAndRestore()</ref>.</para><para>The manager takes ownership of <emphasis>po</emphasis> and will delete it when it is unregistered.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>The object to register. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>po</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classwx_persistent_object" kindref="compound">wxPersistentObject</ref> to use for saving and restoring this object properties. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/persist.h" line="103"/>
      </memberdef>
      <memberdef kind="function" id="classwx_persistence_manager_1ae0b4a3076e576c6285353ae50a61e214" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_persistent_object" kindref="compound">wxPersistentObject</ref> *</type>
        <definition>wxPersistentObject* wxPersistenceManager::Find</definition>
        <argsstring>(void *obj) const </argsstring>
        <name>Find</name>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Check if the object is registered and return the associated <ref refid="classwx_persistent_object" kindref="compound">wxPersistentObject</ref> if it is or NULL otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/persist.h" line="109"/>
      </memberdef>
      <memberdef kind="function" id="classwx_persistence_manager_1a453383431eb8f8127f0ac0d8a2cee1c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPersistenceManager::Unregister</definition>
        <argsstring>(void *obj)</argsstring>
        <name>Unregister</name>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Unregister the object and delete the associated <ref refid="classwx_persistent_object" kindref="compound">wxPersistentObject</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>For the persistent windows this is done automatically (via <ref refid="classwx_persistence_manager_1ab8a9b090b5f84df7b6a765fed78d4820" kindref="member">SaveAndUnregister()</ref>) when the window is destroyed so you only need to call this function explicitly if you are using custom persistent objects or if you want to prevent the object properties from being saved.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>An object previously registered with <ref refid="classwx_persistence_manager_1a94e205e486abe0001ebd15af9e81dc63" kindref="member">Register()</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/persist.h" line="123"/>
      </memberdef>
      <memberdef kind="function" id="classwx_persistence_manager_1ae0b01606ded5323e923b1c9848bdb3bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPersistenceManager::Save</definition>
        <argsstring>(void *obj)</argsstring>
        <name>Save</name>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Save the object properties to persistent storage. </para>        </briefdescription>
        <detaileddescription>
<para>This method does nothing if <ref refid="classwx_persistence_manager_1a4183a42f9dfbd223c363c2879b85d137" kindref="member">DisableSaving()</ref> had been called.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>An object previously registered with <ref refid="classwx_persistence_manager_1a94e205e486abe0001ebd15af9e81dc63" kindref="member">Register()</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classwx_persistence_manager_1ab8a9b090b5f84df7b6a765fed78d4820" kindref="member">SaveAndUnregister()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/persist.h" line="136"/>
      </memberdef>
      <memberdef kind="function" id="classwx_persistence_manager_1a932d8f5cf981aed723f79d1923f67aed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxPersistenceManager::Restore</definition>
        <argsstring>(void *obj)</argsstring>
        <name>Restore</name>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Restore the object properties previously saved by <ref refid="classwx_persistence_manager_1ae0b01606ded5323e923b1c9848bdb3bb" kindref="member">Save()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>This method does nothing if <ref refid="classwx_persistence_manager_1aea41f3b4c596f7bc90f43e888faac93b" kindref="member">DisableRestoring()</ref> had been called.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>An object previously registered with <ref refid="classwx_persistence_manager_1a94e205e486abe0001ebd15af9e81dc63" kindref="member">Register()</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the object properties were restored or false if nothing was found to restore or the saved settings were invalid.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_persistence_manager_1aa6a195c6e56cb6e325d2f07afb0e0a44" kindref="member">RegisterAndRestore()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/persist.h" line="151"/>
      </memberdef>
      <memberdef kind="function" id="classwx_persistence_manager_1ab8a9b090b5f84df7b6a765fed78d4820" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPersistenceManager::SaveAndUnregister</definition>
        <argsstring>(void *obj)</argsstring>
        <name>SaveAndUnregister</name>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Combines both <ref refid="classwx_persistence_manager_1ae0b01606ded5323e923b1c9848bdb3bb" kindref="member">Save()</ref> and <ref refid="classwx_persistence_manager_1a453383431eb8f8127f0ac0d8a2cee1c5" kindref="member">Unregister()</ref> calls. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/persist.h" line="154"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classwx_persistence_manager_1a298f522c9c2c9ddb6f2eb0c1ad557743" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxPersistenceManager::wxPersistenceManager</definition>
        <argsstring>()</argsstring>
        <name>wxPersistenceManager</name>
        <briefdescription>
<para>Protected default constructor. </para>        </briefdescription>
        <detaileddescription>
<para>This constructor is only provided for the derived classes, to use an object of this class static <ref refid="classwx_persistence_manager_1a1d594b5905ef1c7a11ccadf348325f5b" kindref="member">Get()</ref> method should be called. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/persist.h" line="171"/>
      </memberdef>
      <memberdef kind="function" id="classwx_persistence_manager_1a65683c942534f521ce1a19ca704a206a" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_config_base" kindref="compound">wxConfigBase</ref> *</type>
        <definition>virtual wxConfigBase* wxPersistenceManager::GetConfig</definition>
        <argsstring>() const </argsstring>
        <name>GetConfig</name>
        <briefdescription>
<para>Return the config object to use. </para>        </briefdescription>
        <detaileddescription>
<para>By default the global wxConfig, returned by <ref refid="classwx_config_base_1a61bfb04c1c133190b3e851b252ed1c60" kindref="member">wxConfigBase::Get()</ref>, is used but a derived class could override this function to return a different one if necessary.</para><para><simplesect kind="since"><para>2.9.3 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/persist.h" line="182"/>
      </memberdef>
      <memberdef kind="function" id="classwx_persistence_manager_1a03e9951d6bfd4b6b089a60a5045ae19e" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxPersistenceManager::GetKey</definition>
        <argsstring>(const wxPersistentObject &amp;who, const wxString &amp;name) const </argsstring>
        <name>GetKey</name>
        <param>
          <type>const <ref refid="classwx_persistent_object" kindref="compound">wxPersistentObject</ref> &amp;</type>
          <declname>who</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Return the path to use for saving the setting with the given name for the specified object. </para>        </briefdescription>
        <detaileddescription>
<para>Notice that the <emphasis>name</emphasis> argument is the name of the setting, not the name of the object itself which can be retrieved with its GetName() method.</para><para>This method can be overridden by a derived class to change where in wxConfig the different options are stored. By default, all settings of the persistent controls are stored under &quot;Persistent_Options&quot; group and grouped by control type (e.g. &quot;Window&quot; for top level windows or &quot;Splitter&quot;) and name, so that the position of a splitter called &quot;sep&quot; could be stored under &quot;Persistent_Options/Splitter/sep/Position&quot; key.</para><para><simplesect kind="since"><para>2.9.3 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/persist.h" line="202"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides support for automatically saving and restoring object properties to persistent storage. </para>    </briefdescription>
    <detaileddescription>
<para>This class is the central element of wxWidgets persistence framework, see <ref refid="overview_persistence" kindref="compound">Persistent Objects Overview</ref> for its overview.</para><para>This is a singleton class and its unique instance can be retrieved using <ref refid="classwx_persistence_manager_1a1d594b5905ef1c7a11ccadf348325f5b" kindref="member">Get()</ref> method.</para><para><simplesect kind="since"><para>2.9.0</para></simplesect>
<heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref> </para>    </detaileddescription>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/persist.h" line="25" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/persist.h" bodystart="24" bodyend="203"/>
    <listofallmembers>
      <member refid="classwx_persistence_manager_1aea41f3b4c596f7bc90f43e888faac93b" prot="public" virt="non-virtual"><scope>wxPersistenceManager</scope><name>DisableRestoring</name></member>
      <member refid="classwx_persistence_manager_1a4183a42f9dfbd223c363c2879b85d137" prot="public" virt="non-virtual"><scope>wxPersistenceManager</scope><name>DisableSaving</name></member>
      <member refid="classwx_persistence_manager_1ae0b4a3076e576c6285353ae50a61e214" prot="public" virt="non-virtual"><scope>wxPersistenceManager</scope><name>Find</name></member>
      <member refid="classwx_persistence_manager_1a1d594b5905ef1c7a11ccadf348325f5b" prot="public" virt="non-virtual"><scope>wxPersistenceManager</scope><name>Get</name></member>
      <member refid="classwx_persistence_manager_1a65683c942534f521ce1a19ca704a206a" prot="protected" virt="virtual"><scope>wxPersistenceManager</scope><name>GetConfig</name></member>
      <member refid="classwx_persistence_manager_1a03e9951d6bfd4b6b089a60a5045ae19e" prot="protected" virt="virtual"><scope>wxPersistenceManager</scope><name>GetKey</name></member>
      <member refid="classwx_persistence_manager_1a94e205e486abe0001ebd15af9e81dc63" prot="public" virt="non-virtual"><scope>wxPersistenceManager</scope><name>Register</name></member>
      <member refid="classwx_persistence_manager_1a48a010ae8b64a84a58ba5ab8b8b9e836" prot="public" virt="non-virtual"><scope>wxPersistenceManager</scope><name>Register</name></member>
      <member refid="classwx_persistence_manager_1aa6a195c6e56cb6e325d2f07afb0e0a44" prot="public" virt="non-virtual"><scope>wxPersistenceManager</scope><name>RegisterAndRestore</name></member>
      <member refid="classwx_persistence_manager_1ac0a4d5858a69cd6db22e5ab75e5e9298" prot="public" virt="non-virtual"><scope>wxPersistenceManager</scope><name>RegisterAndRestore</name></member>
      <member refid="classwx_persistence_manager_1a932d8f5cf981aed723f79d1923f67aed" prot="public" virt="non-virtual"><scope>wxPersistenceManager</scope><name>Restore</name></member>
      <member refid="classwx_persistence_manager_1ae0b01606ded5323e923b1c9848bdb3bb" prot="public" virt="non-virtual"><scope>wxPersistenceManager</scope><name>Save</name></member>
      <member refid="classwx_persistence_manager_1ab8a9b090b5f84df7b6a765fed78d4820" prot="public" virt="non-virtual"><scope>wxPersistenceManager</scope><name>SaveAndUnregister</name></member>
      <member refid="classwx_persistence_manager_1a4cbc79238e7d46f5e201c67e86fd5343" prot="public" virt="non-virtual"><scope>wxPersistenceManager</scope><name>Set</name></member>
      <member refid="classwx_persistence_manager_1a453383431eb8f8127f0ac0d8a2cee1c5" prot="public" virt="non-virtual"><scope>wxPersistenceManager</scope><name>Unregister</name></member>
      <member refid="classwx_persistence_manager_1a298f522c9c2c9ddb6f2eb0c1ad557743" prot="protected" virt="non-virtual"><scope>wxPersistenceManager</scope><name>wxPersistenceManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
