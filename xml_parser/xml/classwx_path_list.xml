<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_path_list" kind="class" prot="public">
    <compoundname>wxPathList</compoundname>
    <basecompoundref refid="classwx_array_string" prot="public" virt="non-virtual">wxArrayString</basecompoundref>
    <includes local="no">wx/filefn.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_path_list_1af5ecce12a412899c96eb9968604ba6ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxPathList::wxPathList</definition>
        <argsstring>()</argsstring>
        <name>wxPathList</name>
        <briefdescription>
<para>Standard constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/filefn.h" line="30"/>
      </memberdef>
      <memberdef kind="function" id="classwx_path_list_1a4450101a66ed3b517921e46968b79378" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxPathList::wxPathList</definition>
        <argsstring>(const wxArrayString &amp;arr)</argsstring>
        <name>wxPathList</name>
        <param>
          <type>const <ref refid="classwx_array_string" kindref="compound">wxArrayString</ref> &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
<para>Constructs the object calling the <ref refid="classwx_path_list_1adc4332dbbb73130484e147bb654e825e" kindref="member">Add()</ref> function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/filefn.h" line="35"/>
      </memberdef>
      <memberdef kind="function" id="classwx_path_list_1adc4332dbbb73130484e147bb654e825e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxPathList::Add</definition>
        <argsstring>(const wxString &amp;path)</argsstring>
        <name>Add</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Adds the given directory to the path list, if the <emphasis>path</emphasis> is not already in the list. </para>        </briefdescription>
        <detaileddescription>
<para>If the path cannot be normalized for some reason, it returns false.</para><para>The <emphasis>path</emphasis> is always considered to be a directory but no existence checks will be done on it (because if it doesn&apos;t exist, it could be created later and thus result a valid path when <ref refid="classwx_path_list_1ad48a1536f1e0ea787913c1619326c0a9" kindref="member">FindValidPath()</ref> is called).</para><para><simplesect kind="note"><para>if the given path is relative, it won&apos;t be made absolute before adding it (this is why <ref refid="classwx_path_list_1ad48a1536f1e0ea787913c1619326c0a9" kindref="member">FindValidPath()</ref> may return relative paths). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/filefn.h" line="48"/>
      </memberdef>
      <memberdef kind="function" id="classwx_path_list_1a14e1b6527fe820394556d50fcb1faee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPathList::Add</definition>
        <argsstring>(const wxArrayString &amp;arr)</argsstring>
        <name>Add</name>
        <param>
          <type>const <ref refid="classwx_array_string" kindref="compound">wxArrayString</ref> &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
<para>Adds all elements of the given array as paths. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/filefn.h" line="53"/>
      </memberdef>
      <memberdef kind="function" id="classwx_path_list_1a1f1c05d3555bf51bd09e657121b40773" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPathList::AddEnvList</definition>
        <argsstring>(const wxString &amp;env_variable)</argsstring>
        <name>AddEnvList</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>env_variable</declname>
        </param>
        <briefdescription>
<para>Finds the value of the given environment variable, and adds all paths to the path list. </para>        </briefdescription>
        <detaileddescription>
<para>Useful for finding files in the <computeroutput>PATH</computeroutput> variable, for example. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/filefn.h" line="61"/>
      </memberdef>
      <memberdef kind="function" id="classwx_path_list_1a0410287f73b6c2700a4ee2377ddc83dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxPathList::EnsureFileAccessible</definition>
        <argsstring>(const wxString &amp;filename)</argsstring>
        <name>EnsureFileAccessible</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Given a full filename (with path), calls <ref refid="classwx_path_list_1adc4332dbbb73130484e147bb654e825e" kindref="member">Add()</ref> with the path of the file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/filefn.h" line="66"/>
      </memberdef>
      <memberdef kind="function" id="classwx_path_list_1a6c89ece04438d73118131208b2a015b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxPathList::FindAbsoluteValidPath</definition>
        <argsstring>(const wxString &amp;file) const </argsstring>
        <name>FindAbsoluteValidPath</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Like <ref refid="classwx_path_list_1ad48a1536f1e0ea787913c1619326c0a9" kindref="member">FindValidPath()</ref> but this function always returns an absolute path (eventually prepending the current working directory to the value returned <ref refid="classwx_path_list_1ad48a1536f1e0ea787913c1619326c0a9" kindref="member">wxPathList::FindValidPath()</ref>) or an empty string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/filefn.h" line="73"/>
      </memberdef>
      <memberdef kind="function" id="classwx_path_list_1ad48a1536f1e0ea787913c1619326c0a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxPathList::FindValidPath</definition>
        <argsstring>(const wxString &amp;file) const </argsstring>
        <name>FindValidPath</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Searches the given file in all paths stored in this class. </para>        </briefdescription>
        <detaileddescription>
<para>The first path which concatenated to the given string points to an existing file (see <ref refid="group__group__funcmacro__file_1ga72d2e4ef03d51c0d59c2cb788462d600" kindref="member">wxFileExists()</ref>) is returned.</para><para>If the file wasn&apos;t found in any of the stored paths, an empty string is returned.</para><para>The given string must be a file name, eventually with a path prefix (if the path prefix is absolute, only its name will be searched); i.e. it must not end with a directory separator (see <ref refid="classwx_file_name_1ad6f9ae274e12729fc5689128ea94d16e" kindref="member">wxFileName::GetPathSeparator</ref>) otherwise an assertion will fail.</para><para>The returned path may be relative to the current working directory.</para><para>Note in fact that <ref refid="classwx_path_list" kindref="compound">wxPathList</ref> can be used to store both relative and absolute paths so that if you added relative paths, then the current working directory (see <ref refid="group__group__funcmacro__file_1gab0cc6ceca11d23f61cba353c01eeac06" kindref="member">wxGetCwd()</ref> and <ref refid="group__group__funcmacro__file_1ga315b861f905ae6b3915faa79526a198e" kindref="member">wxSetWorkingDirectory()</ref>) may affect the value returned by this function! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/filefn.h" line="95"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The path list is a convenient way of storing a number of directories, and when presented with a filename without a directory, searching for an existing file in those directories. </para>    </briefdescription>
    <detaileddescription>
<para>Be sure to look also at <ref refid="classwx_standard_paths" kindref="compound">wxStandardPaths</ref> if you only want to search files in some standard paths.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__file" kindref="compound">File Handling</ref></para><para><simplesect kind="see"><para><ref refid="classwx_array_string" kindref="compound">wxArrayString</ref>, <ref refid="classwx_standard_paths" kindref="compound">wxStandardPaths</ref>, <ref refid="classwx_file_name" kindref="compound">wxFileName</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="8786">
        <label>wxPathList</label>
        <link refid="classwx_path_list"/>
        <childnode refid="8787" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8787">
        <label>wxArrayString</label>
        <link refid="classwx_array_string"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8788">
        <label>wxPathList</label>
        <link refid="classwx_path_list"/>
        <childnode refid="8789" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8789">
        <label>wxArrayString</label>
        <link refid="classwx_array_string"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/filefn.h" line="25" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/filefn.h" bodystart="24" bodyend="96"/>
    <listofallmembers>
      <member refid="classwx_path_list_1adc4332dbbb73130484e147bb654e825e" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>Add</name></member>
      <member refid="classwx_path_list_1a14e1b6527fe820394556d50fcb1faee1" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>Add</name></member>
      <member refid="classwx_array_string_1af06b61455118d83a24183c3a9f6854b1" prot="public" virt="non-virtual" ambiguityscope="wxArrayString::"><scope>wxPathList</scope><name>Add</name></member>
      <member refid="classwx_path_list_1a1f1c05d3555bf51bd09e657121b40773" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>AddEnvList</name></member>
      <member refid="classwx_array_string_1a7d399eb79ba4f7ad165af03909889894" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>Alloc</name></member>
      <member refid="classwx_array_string_1aad1c8fe1dd445b359a633cdd6c5940ce" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>Clear</name></member>
      <member refid="classwx_array_string_1ab3765f8d31f415ef480c3224c390eda3" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>CompareFunction</name></member>
      <member refid="classwx_array_string_1ac23ff4a9b6a0f014c2c803361eee52f5" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>Empty</name></member>
      <member refid="classwx_path_list_1a0410287f73b6c2700a4ee2377ddc83dc" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>EnsureFileAccessible</name></member>
      <member refid="classwx_path_list_1a6c89ece04438d73118131208b2a015b4" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>FindAbsoluteValidPath</name></member>
      <member refid="classwx_path_list_1ad48a1536f1e0ea787913c1619326c0a9" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>FindValidPath</name></member>
      <member refid="classwx_array_string_1ad2a491f799c8d6539dc64d06f2c37ac6" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>GetCount</name></member>
      <member refid="classwx_array_string_1a87d29ec37fca50c5b289c242fbaad2f5" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>Index</name></member>
      <member refid="classwx_array_string_1a9913831038ad76b0c4386cbd095b8e0d" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>Insert</name></member>
      <member refid="classwx_array_string_1a1eb4f967685188b1c14407026e9ec53c" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>IsEmpty</name></member>
      <member refid="classwx_array_string_1a9d02526d49d8b9da9ea184969ca721d2" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>Item</name></member>
      <member refid="classwx_array_string_1a2eaf5fd9e978099af9a06da914aa30db" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>Item</name></member>
      <member refid="classwx_array_string_1ae6c05b8d0a6dd18ec1f72a94827dbd03" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>Last</name></member>
      <member refid="classwx_array_string_1ab02b482011ff086cf024b11dce2eb105" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>Last</name></member>
      <member refid="classwx_array_string_1a3796e3297a21ff4f1dce9f1eecc7f8f7" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>operator!=</name></member>
      <member refid="classwx_array_string_1a87f49b6cea7e371f45a4fc40b0f01548" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>operator=</name></member>
      <member refid="classwx_array_string_1a4ccc608a22d5a805ee1374b3446b09ff" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>operator==</name></member>
      <member refid="classwx_array_string_1af0a959d8f8e8031e1442bc0e977b6a4f" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>operator[]</name></member>
      <member refid="classwx_array_string_1ae24a86de01c53488e84ce3c39582fbc1" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>Remove</name></member>
      <member refid="classwx_array_string_1a1374163a35ccb75adac977acfe8add96" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>RemoveAt</name></member>
      <member refid="classwx_array_string_1a598a1eba111e3c25ef760dcdcc0c7678" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>Shrink</name></member>
      <member refid="classwx_array_string_1af10a5c5c81001638f5a2b6dceaa74810" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>Sort</name></member>
      <member refid="classwx_array_string_1a0403ae7f8702fdc5c21b700053e7af0c" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>Sort</name></member>
      <member refid="classwx_array_string_1a35fe0f0ee8452506f1ca39d3fd48c14e" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>wxArrayString</name></member>
      <member refid="classwx_array_string_1a217ff3d3246ea5079bac9295ff36a237" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>wxArrayString</name></member>
      <member refid="classwx_array_string_1a4df6e48276a8f2f12d018281eda1a618" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>wxArrayString</name></member>
      <member refid="classwx_array_string_1a71f569b4bbe2a77a6f222a743dc9e44b" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>wxArrayString</name></member>
      <member refid="classwx_array_string_1aeb9c9e5cb3550098735f54a47c3d29b4" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>wxArrayString</name></member>
      <member refid="classwx_path_list_1af5ecce12a412899c96eb9968604ba6ba" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>wxPathList</name></member>
      <member refid="classwx_path_list_1a4450101a66ed3b517921e46968b79378" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>wxPathList</name></member>
      <member refid="classwx_array_string_1a62c4453faf577c0196eac0b38701d710" prot="public" virt="non-virtual"><scope>wxPathList</scope><name>~wxArrayString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
