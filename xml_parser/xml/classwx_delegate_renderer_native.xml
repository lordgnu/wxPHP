<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classwx_delegate_renderer_native" kind="class" prot="public">
    <compoundname>wxDelegateRendererNative</compoundname>
    <basecompoundref refid="classwx_renderer_native" prot="public" virt="non-virtual">wxRendererNative</basecompoundref>
    <includes local="no">wx/renderer.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_delegate_renderer_native_1a184f122211b4632234a5398575305e2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxDelegateRendererNative::wxDelegateRendererNative</definition>
        <argsstring>()</argsstring>
        <name>wxDelegateRendererNative</name>
        <briefdescription>
<para>The default constructor does the same thing as the other one except that it uses the <ref refid="classwx_renderer_native_1afa11498932e1c8c56e2ef2e2ca33ddc6" kindref="member">generic renderer</ref> instead of the user-specified <emphasis>rendererNative</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>In any case, this sets up the delegate renderer object to follow all calls to the specified real renderer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="183"/>
      </memberdef>
      <memberdef kind="function" id="classwx_delegate_renderer_native_1a8d9dc80cc471a8162a4c9360790fb4cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxDelegateRendererNative::wxDelegateRendererNative</definition>
        <argsstring>(wxRendererNative &amp;rendererNative)</argsstring>
        <name>wxDelegateRendererNative</name>
        <param>
          <type><ref refid="classwx_renderer_native" kindref="compound">wxRendererNative</ref> &amp;</type>
          <declname>rendererNative</declname>
        </param>
        <briefdescription>
<para>This constructor uses the user-specified <emphasis>rendererNative</emphasis> to set up the delegate renderer object to follow all calls to the specified real renderer. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This object does not take ownership of (i.e. won&apos;t delete) <emphasis>rendererNative</emphasis>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="191"/>
      </memberdef>
      <memberdef kind="function" id="classwx_delegate_renderer_native_1ac910b4ed8daf2381d806c18b217dd9f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int wxDelegateRendererNative::DrawHeaderButton</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxRect &amp;rect, int flags=0, wxHeaderSortIconType sortArrow=wxHDR_SORT_ICON_NONE, wxHeaderButtonParams *params=NULL)</argsstring>
        <name>DrawHeaderButton</name>
        <reimplements refid="classwx_renderer_native_1a65c10b87b311b5278890026b26c525b1">DrawHeaderButton</reimplements>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="renderer_8h_1a9902390625d1f5ae05a28f6b5ff56f5e" kindref="member">wxHeaderSortIconType</ref></type>
          <declname>sortArrow</declname>
          <defval>wxHDR_SORT_ICON_NONE</defval>
        </param>
        <param>
          <type><ref refid="structwx_header_button_params" kindref="compound">wxHeaderButtonParams</ref> *</type>
          <declname>params</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Draw the header control button (used, for example, by <ref refid="classwx_list_ctrl" kindref="compound">wxListCtrl</ref>). </para>        </briefdescription>
        <detaileddescription>
<para>Depending on platforms the <emphasis>flags</emphasis> parameter may support the <computeroutput>wxCONTROL_SELECTED</computeroutput> <computeroutput>wxCONTROL_DISABLED</computeroutput> and <computeroutput>wxCONTROL_CURRENT</computeroutput> bits, see <ref refid="renderer_8h_1wxCONTROL_FLAGS" kindref="member">wxCONTROL_FLAGS</ref>.</para><para><simplesect kind="return"><para>The optimal width to contain the unabbreviated label text or bitmap, the sort arrow if present, and internal margins. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="198"/>
      </memberdef>
      <memberdef kind="function" id="classwx_delegate_renderer_native_1a1e8e5f9bf7466fef835582df85abafa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int wxDelegateRendererNative::DrawHeaderButtonContents</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxRect &amp;rect, int flags=0, wxHeaderSortIconType sortArrow=wxHDR_SORT_ICON_NONE, wxHeaderButtonParams *params=NULL)</argsstring>
        <name>DrawHeaderButtonContents</name>
        <reimplements refid="classwx_renderer_native_1a7abc86c94cc688f59dc01a21f7b0db94">DrawHeaderButtonContents</reimplements>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="renderer_8h_1a9902390625d1f5ae05a28f6b5ff56f5e" kindref="member">wxHeaderSortIconType</ref></type>
          <declname>sortArrow</declname>
          <defval>wxHDR_SORT_ICON_NONE</defval>
        </param>
        <param>
          <type><ref refid="structwx_header_button_params" kindref="compound">wxHeaderButtonParams</ref> *</type>
          <declname>params</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Draw the contents of a header control button (label, sort arrows, etc.). </para>        </briefdescription>
        <detaileddescription>
<para>This function is normally only called by <ref refid="classwx_delegate_renderer_native_1ac910b4ed8daf2381d806c18b217dd9f8" kindref="member">DrawHeaderButton()</ref>.</para><para>Depending on platforms the <emphasis>flags</emphasis> parameter may support the <computeroutput>wxCONTROL_SELECTED</computeroutput> <computeroutput>wxCONTROL_DISABLED</computeroutput> and <computeroutput>wxCONTROL_CURRENT</computeroutput> bits, see <ref refid="renderer_8h_1wxCONTROL_FLAGS" kindref="member">wxCONTROL_FLAGS</ref>.</para><para><simplesect kind="return"><para>The optimal width to contain the unabbreviated label text or bitmap, the sort arrow if present, and internal margins. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="203"/>
      </memberdef>
      <memberdef kind="function" id="classwx_delegate_renderer_native_1ac3e965692b37194e4333f25a1b113b17" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int wxDelegateRendererNative::GetHeaderButtonHeight</definition>
        <argsstring>(wxWindow *win)</argsstring>
        <name>GetHeaderButtonHeight</name>
        <reimplements refid="classwx_renderer_native_1a7318ee160cf6810d5fbcfa3383a0562f">GetHeaderButtonHeight</reimplements>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
<para>Returns the height of a header button, either a fixed platform height if available, or a generic height based on the <emphasis>win</emphasis> window&apos;s font. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="205"/>
      </memberdef>
      <memberdef kind="function" id="classwx_delegate_renderer_native_1a08d3b128ece58037c36ee675e25b41ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int wxDelegateRendererNative::GetHeaderButtonMargin</definition>
        <argsstring>(wxWindow *win)</argsstring>
        <name>GetHeaderButtonMargin</name>
        <reimplements refid="classwx_renderer_native_1afede2d2f77c54cd443b1be09dbe2f9e4">GetHeaderButtonMargin</reimplements>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
<para>Returns the horizontal margin on the left and right sides of header button&apos;s label. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.9.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="207"/>
      </memberdef>
      <memberdef kind="function" id="classwx_delegate_renderer_native_1a9118555100e615c5d84a7894110025a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxDelegateRendererNative::DrawTreeItemButton</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxRect &amp;rect, int flags=0)</argsstring>
        <name>DrawTreeItemButton</name>
        <reimplements refid="classwx_renderer_native_1a2b66a74d44ffc6a36a8bd1e15c83e77c">DrawTreeItemButton</reimplements>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draw the expanded/collapsed icon for a tree control item. </para>        </briefdescription>
        <detaileddescription>
<para>To draw an expanded button the <emphasis>flags</emphasis> parameter must contain <computeroutput>wxCONTROL_EXPANDED</computeroutput> bit, see <ref refid="renderer_8h_1wxCONTROL_FLAGS" kindref="member">wxCONTROL_FLAGS</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="210"/>
      </memberdef>
      <memberdef kind="function" id="classwx_delegate_renderer_native_1a75a9c27ea848e5eaba778927e469306d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxDelegateRendererNative::DrawSplitterBorder</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxRect &amp;rect, int flags=0)</argsstring>
        <name>DrawSplitterBorder</name>
        <reimplements refid="classwx_renderer_native_1a42ec07b63b3c38ab7309fe87932cfcb3">DrawSplitterBorder</reimplements>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draw the border for sash window: this border must be such that the sash drawn by <ref refid="classwx_delegate_renderer_native_1af49e23a1eb34dbd75751eb5c6740ce75" kindref="member">DrawSplitterSash()</ref> blends into it well. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="213"/>
      </memberdef>
      <memberdef kind="function" id="classwx_delegate_renderer_native_1af49e23a1eb34dbd75751eb5c6740ce75" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxDelegateRendererNative::DrawSplitterSash</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxSize &amp;size, wxCoord position, wxOrientation orient, int flags=0)</argsstring>
        <name>DrawSplitterSash</name>
        <reimplements refid="classwx_renderer_native_1ac9eedbd75f63fb4b99a2a93ca08612c1">DrawSplitterSash</reimplements>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a1e6994f40bd9cb140e292afb165af971" kindref="member">wxOrientation</ref></type>
          <declname>orient</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draw a sash. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>orient</emphasis> parameter defines whether the sash should be vertical or horizontal and how the <emphasis>position</emphasis> should be interpreted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="217"/>
      </memberdef>
      <memberdef kind="function" id="classwx_delegate_renderer_native_1ad5f90483ab97283cdc7af41a37ddba0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxDelegateRendererNative::DrawComboBoxDropButton</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxRect &amp;rect, int flags=0)</argsstring>
        <name>DrawComboBoxDropButton</name>
        <reimplements refid="classwx_renderer_native_1a9495db526d637f854a3436e1d17bb472">DrawComboBoxDropButton</reimplements>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draw a button like the one used by <ref refid="classwx_combo_box" kindref="compound">wxComboBox</ref> to show a drop down window. </para>        </briefdescription>
        <detaileddescription>
<para>The usual appearance is a downwards pointing arrow.</para><para><emphasis>flags</emphasis> may have the <computeroutput>wxCONTROL_PRESSED</computeroutput> or <computeroutput>wxCONTROL_CURRENT</computeroutput> bit set, see <ref refid="renderer_8h_1wxCONTROL_FLAGS" kindref="member">wxCONTROL_FLAGS</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="220"/>
      </memberdef>
      <memberdef kind="function" id="classwx_delegate_renderer_native_1aead3836f3a96a7e1bc23feb83febc3e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxDelegateRendererNative::DrawDropArrow</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxRect &amp;rect, int flags=0)</argsstring>
        <name>DrawDropArrow</name>
        <reimplements refid="classwx_renderer_native_1a0c16016c310cec4d3d2f53574741df05">DrawDropArrow</reimplements>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draw a drop down arrow that is suitable for use outside a combo box. </para>        </briefdescription>
        <detaileddescription>
<para>Arrow will have transparent background.</para><para><emphasis>rect</emphasis> is not entirely filled by the arrow. Instead, you should use bounding rectangle of a drop down button which arrow matches the size you need.</para><para><emphasis>flags</emphasis> may have the <computeroutput>wxCONTROL_PRESSED</computeroutput> or <computeroutput>wxCONTROL_CURRENT</computeroutput> bit set, see <ref refid="renderer_8h_1wxCONTROL_FLAGS" kindref="member">wxCONTROL_FLAGS</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="223"/>
      </memberdef>
      <memberdef kind="function" id="classwx_delegate_renderer_native_1ab1851301b3a176eb6ccba1ab0ac61d97" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxDelegateRendererNative::DrawCheckBox</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxRect &amp;rect, int flags=0)</argsstring>
        <name>DrawCheckBox</name>
        <reimplements refid="classwx_renderer_native_1af5a80f13e6b7a20affd26b0becd9856b">DrawCheckBox</reimplements>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draw a check box. </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>flags</emphasis> may have the <computeroutput>wxCONTROL_CHECKED</computeroutput>, <computeroutput>wxCONTROL_CURRENT</computeroutput> or <computeroutput>wxCONTROL_UNDETERMINED</computeroutput> bit set, see <ref refid="renderer_8h_1wxCONTROL_FLAGS" kindref="member">wxCONTROL_FLAGS</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="226"/>
      </memberdef>
      <memberdef kind="function" id="classwx_delegate_renderer_native_1a958fad461eb562edcd215f263cda91f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>virtual wxSize wxDelegateRendererNative::GetCheckBoxSize</definition>
        <argsstring>(wxWindow *win)</argsstring>
        <name>GetCheckBoxSize</name>
        <reimplements refid="classwx_renderer_native_1aae69eead8c4e298acf97a6bd4848a45c">GetCheckBoxSize</reimplements>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
<para>Returns the size of a check box. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>win</emphasis> parameter is not used currently and can be NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="228"/>
      </memberdef>
      <memberdef kind="function" id="classwx_delegate_renderer_native_1aef079b02758509abad5d52186ef092b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxDelegateRendererNative::DrawPushButton</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxRect &amp;rect, int flags=0)</argsstring>
        <name>DrawPushButton</name>
        <reimplements refid="classwx_renderer_native_1a866a6e77f5f302e7fbb50819268de331">DrawPushButton</reimplements>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draw a blank push button that looks very similar to <ref refid="classwx_button" kindref="compound">wxButton</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>flags</emphasis> may have the <computeroutput>wxCONTROL_PRESSED</computeroutput>, <computeroutput>wxCONTROL_CURRENT</computeroutput> or <computeroutput>wxCONTROL_ISDEFAULT</computeroutput> bit set, see <ref refid="renderer_8h_1wxCONTROL_FLAGS" kindref="member">wxCONTROL_FLAGS</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="231"/>
      </memberdef>
      <memberdef kind="function" id="classwx_delegate_renderer_native_1accb2c7ceb0364736feeb4d631368f3c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxDelegateRendererNative::DrawItemSelectionRect</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxRect &amp;rect, int flags=0)</argsstring>
        <name>DrawItemSelectionRect</name>
        <reimplements refid="classwx_renderer_native_1a5d0ab3cbc0dbcf90a91a4e6ed400ff8a">DrawItemSelectionRect</reimplements>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draw a selection rectangle underneath the text as used e.g. </para>        </briefdescription>
        <detaileddescription>
<para>in a <ref refid="classwx_list_ctrl" kindref="compound">wxListCtrl</ref>.</para><para>The supported <emphasis>flags</emphasis> are <computeroutput>wxCONTROL_SELECTED</computeroutput> for items which are selected (e.g. often a blue rectangle) and <computeroutput>wxCONTROL_CURRENT</computeroutput> for the item that has the focus (often a dotted line around the item&apos;s text). <computeroutput>wxCONTROL_FOCUSED</computeroutput> may be used to indicate if the control has the focus (otherwise the selection rectangle is e.g. often grey and not blue). This may be ignored by the renderer or deduced by the code directly from the <emphasis>win</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="234"/>
      </memberdef>
      <memberdef kind="function" id="classwx_delegate_renderer_native_1af88adc13d5efe94b29fbcfa3d61dfa26" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxDelegateRendererNative::DrawFocusRect</definition>
        <argsstring>(wxWindow *win, wxDC &amp;dc, const wxRect &amp;rect, int flags=0)</argsstring>
        <name>DrawFocusRect</name>
        <reimplements refid="classwx_renderer_native_1a365bc24e598ce64e3a8d2b9559a8c4c9">DrawFocusRect</reimplements>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draw a focus rectangle using the specified rectangle. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="classwx_list_ctrl" kindref="compound">wxListCtrl</ref>.</para><para>The only supported flags is <computeroutput>wxCONTROL_SELECTED</computeroutput> for items which are selected. see <ref refid="renderer_8h_1wxCONTROL_FLAGS" kindref="member">wxCONTROL_FLAGS</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="237"/>
      </memberdef>
      <memberdef kind="function" id="classwx_delegate_renderer_native_1afde38ab84be55382f0bba8cf4ddd5713" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structwx_splitter_render_params" kindref="compound">wxSplitterRenderParams</ref></type>
        <definition>virtual wxSplitterRenderParams wxDelegateRendererNative::GetSplitterParams</definition>
        <argsstring>(const wxWindow *win)</argsstring>
        <name>GetSplitterParams</name>
        <reimplements refid="classwx_renderer_native_1a4c5673f91bfd18792710ca133ca2e3f8">GetSplitterParams</reimplements>
        <param>
          <type>const <ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
<para>Get the splitter parameters, see <ref refid="structwx_splitter_render_params" kindref="compound">wxSplitterRenderParams</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>win</emphasis> parameter should be a <ref refid="classwx_splitter_window" kindref="compound">wxSplitterWindow</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="239"/>
      </memberdef>
      <memberdef kind="function" id="classwx_delegate_renderer_native_1af9b226f3ea9857618116931d9a8cd04a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structwx_renderer_version" kindref="compound">wxRendererVersion</ref></type>
        <definition>virtual wxRendererVersion wxDelegateRendererNative::GetVersion</definition>
        <argsstring>() const </argsstring>
        <name>GetVersion</name>
        <reimplements refid="classwx_renderer_native_1af42af0da60489f1f54c8883f68bfdd42">GetVersion</reimplements>
        <briefdescription>
<para>This function is used for version checking: <ref refid="classwx_renderer_native_1a0536cd4ed40c392859d2e8ae37a3eaca" kindref="member">Load()</ref> refuses to load any shared libraries implementing an older or incompatible version. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>The implementation of this method is always the same in all renderers (simply construct <ref refid="structwx_renderer_version" kindref="compound">wxRendererVersion</ref> using the <computeroutput>wxRendererVersion::Current_XXX</computeroutput> values), but it has to be in the derived, not base, class, to detect mismatches between the renderers versions and so you have to implement it anew in all renderers. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="241"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classwx_delegate_renderer_native" kindref="compound">wxDelegateRendererNative</ref> allows reuse of renderers code by forwarding all the <ref refid="classwx_renderer_native" kindref="compound">wxRendererNative</ref> methods to the given object and thus allowing you to only modify some of its methods -- without having to reimplement all of them. </para>    </briefdescription>
    <detaileddescription>
<para>Note that the &quot;normal&quot;, inheritance-based approach, doesn&apos;t work with the renderers as it is impossible to derive from a class unknown at compile-time and the renderer is only chosen at run-time. So suppose that you want to only add something to the drawing of the tree control buttons but leave all the other methods unchanged -- the only way to do it, considering that the renderer class which you want to customize might not even be written yet when you write your code (it could be written later and loaded from a DLL during run-time), is by using this class.</para><para>Except for the constructor, it has exactly the same methods as <ref refid="classwx_renderer_native" kindref="compound">wxRendererNative</ref> and their implementation is trivial: they are simply forwarded to the real renderer. Note that the &quot;real&quot; renderer may, in turn, be a <ref refid="classwx_delegate_renderer_native" kindref="compound">wxDelegateRendererNative</ref> as well and that there may be arbitrarily many levels like this -- but at the end of the chain there must be a real renderer which does the drawing.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para><para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__gdi" kindref="compound">Graphics Device Interface (GDI)</ref></para><para><simplesect kind="see"><para><ref refid="classwx_renderer_native" kindref="compound">wxRendererNative</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="5664">
        <label>wxDelegateRendererNative</label>
        <link refid="classwx_delegate_renderer_native"/>
        <childnode refid="5665" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5665">
        <label>wxRendererNative</label>
        <link refid="classwx_renderer_native"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5666">
        <label>wxDelegateRendererNative</label>
        <link refid="classwx_delegate_renderer_native"/>
        <childnode refid="5667" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5667">
        <label>wxRendererNative</label>
        <link refid="classwx_renderer_native"/>
      </node>
    </collaborationgraph>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" line="173" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/renderer.h" bodystart="172" bodyend="242"/>
    <listofallmembers>
      <member refid="classwx_delegate_renderer_native_1ab1851301b3a176eb6ccba1ab0ac61d97" prot="public" virt="virtual"><scope>wxDelegateRendererNative</scope><name>DrawCheckBox</name></member>
      <member refid="classwx_renderer_native_1a54bc38596a1ff8f37aa2a4f97d208a2d" prot="public" virt="pure-virtual"><scope>wxDelegateRendererNative</scope><name>DrawChoice</name></member>
      <member refid="classwx_renderer_native_1ab9e724dd0441e511a75aee96fb7ddcd2" prot="public" virt="pure-virtual"><scope>wxDelegateRendererNative</scope><name>DrawComboBox</name></member>
      <member refid="classwx_delegate_renderer_native_1ad5f90483ab97283cdc7af41a37ddba0f" prot="public" virt="virtual"><scope>wxDelegateRendererNative</scope><name>DrawComboBoxDropButton</name></member>
      <member refid="classwx_delegate_renderer_native_1aead3836f3a96a7e1bc23feb83febc3e9" prot="public" virt="virtual"><scope>wxDelegateRendererNative</scope><name>DrawDropArrow</name></member>
      <member refid="classwx_delegate_renderer_native_1af88adc13d5efe94b29fbcfa3d61dfa26" prot="public" virt="virtual"><scope>wxDelegateRendererNative</scope><name>DrawFocusRect</name></member>
      <member refid="classwx_delegate_renderer_native_1ac910b4ed8daf2381d806c18b217dd9f8" prot="public" virt="virtual"><scope>wxDelegateRendererNative</scope><name>DrawHeaderButton</name></member>
      <member refid="classwx_delegate_renderer_native_1a1e8e5f9bf7466fef835582df85abafa0" prot="public" virt="virtual"><scope>wxDelegateRendererNative</scope><name>DrawHeaderButtonContents</name></member>
      <member refid="classwx_delegate_renderer_native_1accb2c7ceb0364736feeb4d631368f3c1" prot="public" virt="virtual"><scope>wxDelegateRendererNative</scope><name>DrawItemSelectionRect</name></member>
      <member refid="classwx_delegate_renderer_native_1aef079b02758509abad5d52186ef092b4" prot="public" virt="virtual"><scope>wxDelegateRendererNative</scope><name>DrawPushButton</name></member>
      <member refid="classwx_renderer_native_1af62a5a4bd85f1d2f26ae72d5feb4469c" prot="public" virt="pure-virtual"><scope>wxDelegateRendererNative</scope><name>DrawRadioBitmap</name></member>
      <member refid="classwx_delegate_renderer_native_1a75a9c27ea848e5eaba778927e469306d" prot="public" virt="virtual"><scope>wxDelegateRendererNative</scope><name>DrawSplitterBorder</name></member>
      <member refid="classwx_delegate_renderer_native_1af49e23a1eb34dbd75751eb5c6740ce75" prot="public" virt="virtual"><scope>wxDelegateRendererNative</scope><name>DrawSplitterSash</name></member>
      <member refid="classwx_renderer_native_1a35e49075d3a7e748953660101252a892" prot="public" virt="pure-virtual"><scope>wxDelegateRendererNative</scope><name>DrawTextCtrl</name></member>
      <member refid="classwx_renderer_native_1a0bfb492af0725bd49a1402baa5f68e12" prot="public" virt="pure-virtual"><scope>wxDelegateRendererNative</scope><name>DrawTitleBarBitmap</name></member>
      <member refid="classwx_delegate_renderer_native_1a9118555100e615c5d84a7894110025a2" prot="public" virt="virtual"><scope>wxDelegateRendererNative</scope><name>DrawTreeItemButton</name></member>
      <member refid="classwx_renderer_native_1a4eeacb56d2a1cd9146994d6e213d0163" prot="public" virt="non-virtual"><scope>wxDelegateRendererNative</scope><name>Get</name></member>
      <member refid="classwx_delegate_renderer_native_1a958fad461eb562edcd215f263cda91f8" prot="public" virt="virtual"><scope>wxDelegateRendererNative</scope><name>GetCheckBoxSize</name></member>
      <member refid="classwx_renderer_native_1a53078a525d6a53dea7bcdb83cf43a840" prot="public" virt="non-virtual"><scope>wxDelegateRendererNative</scope><name>GetDefault</name></member>
      <member refid="classwx_renderer_native_1afa11498932e1c8c56e2ef2e2ca33ddc6" prot="public" virt="non-virtual"><scope>wxDelegateRendererNative</scope><name>GetGeneric</name></member>
      <member refid="classwx_delegate_renderer_native_1ac3e965692b37194e4333f25a1b113b17" prot="public" virt="virtual"><scope>wxDelegateRendererNative</scope><name>GetHeaderButtonHeight</name></member>
      <member refid="classwx_delegate_renderer_native_1a08d3b128ece58037c36ee675e25b41ab" prot="public" virt="virtual"><scope>wxDelegateRendererNative</scope><name>GetHeaderButtonMargin</name></member>
      <member refid="classwx_delegate_renderer_native_1afde38ab84be55382f0bba8cf4ddd5713" prot="public" virt="virtual"><scope>wxDelegateRendererNative</scope><name>GetSplitterParams</name></member>
      <member refid="classwx_delegate_renderer_native_1af9b226f3ea9857618116931d9a8cd04a" prot="public" virt="virtual"><scope>wxDelegateRendererNative</scope><name>GetVersion</name></member>
      <member refid="classwx_renderer_native_1a0536cd4ed40c392859d2e8ae37a3eaca" prot="public" virt="non-virtual"><scope>wxDelegateRendererNative</scope><name>Load</name></member>
      <member refid="classwx_renderer_native_1ace3f6d878be2e967f886397c26181c82" prot="public" virt="non-virtual"><scope>wxDelegateRendererNative</scope><name>Set</name></member>
      <member refid="classwx_delegate_renderer_native_1a184f122211b4632234a5398575305e2c" prot="public" virt="non-virtual"><scope>wxDelegateRendererNative</scope><name>wxDelegateRendererNative</name></member>
      <member refid="classwx_delegate_renderer_native_1a8d9dc80cc471a8162a4c9360790fb4cd" prot="public" virt="non-virtual"><scope>wxDelegateRendererNative</scope><name>wxDelegateRendererNative</name></member>
      <member refid="classwx_renderer_native_1a3b5f285195f6d00e060658d3c209ac62" prot="public" virt="virtual"><scope>wxDelegateRendererNative</scope><name>~wxRendererNative</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
