<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="tls_8h" kind="file">
    <compoundname>tls.h</compoundname>
      <sectiondef kind="define">
      <memberdef kind="define" id="tls_8h_1aeddd0d67bf87ae5064a9dd8f16021913" prot="public" static="no">
        <name>wxTLS_TYPE</name>
        <param><defname>type</defname></param>
        <initializer>compiler-dependent-implementation</initializer>
        <briefdescription>
<para>Macro to be used for thread-specific variables declarations. </para>        </briefdescription>
        <detaileddescription>
<para>This macro can be used to define thread-specific variables of the specified <emphasis>type</emphasis>. Such variables must be global or static and must be POD, i.e. not have any constructors or destructor (even implicitly generated by the compiler due to use of base classes or members which are not POD in a struct).</para><para>Example of use: <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PerThreadData</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...<sp/>data<sp/>which<sp/>will<sp/>be<sp/>different<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>every<sp/>thread<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="tls_8h_1aeddd0d67bf87ae5064a9dd8f16021913" kindref="member" tooltip="Macro to be used for thread-specific variables declarations.">wxTLS_TYPE</ref>(PerThreadData)<sp/>s_threadDataVar;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#define<sp/>s_threadData<sp/>(wxTLS_VALUE(s_threadDataVar))</highlight></codeline>
<codeline><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>...<sp/>use<sp/>s_threadData<sp/>as<sp/>a<sp/>variable<sp/>of<sp/>type<sp/>PerThreadData<sp/>...</highlight></codeline>
</programlisting></para><para>Notice that the use of the ugly <ref refid="tls_8h_1a006b3d4d82de2eb0e067e63cfe773b55" kindref="member">wxTLS_VALUE()</ref> macro is unfortunately required if you need to support platforms without native compiler support for thread-specific variables. If you compile your code only on platforms which do have such support (recent versions of GNU C++ compiler, Microsoft Visual C++ and Sun C++ compiler are known to have it), you can avoid it and use the variable directly. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/tls.h" line="38" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/tls.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tls_8h_1a006b3d4d82de2eb0e067e63cfe773b55" prot="public" static="no">
        <name>wxTLS_VALUE</name>
        <param><defname>var</defname></param>
        <briefdescription>
<para>Macro to access thread-specific variables. </para>        </briefdescription>
        <detaileddescription>
<para>This macro is used to hide the difference in implementation of thread-specific variables under different platforms: they can be of type T used in <ref refid="tls_8h_1aeddd0d67bf87ae5064a9dd8f16021913" kindref="member">wxTLS_TYPE()</ref> if they are directly supported by the compiler or of type emulating <computeroutput>T</computeroutput> <computeroutput>*</computeroutput>, i.e. a pointer to this type otherwise. This macro always returns an expression of type <computeroutput>T</computeroutput> itself.</para><para>As shown in <ref refid="tls_8h_1aeddd0d67bf87ae5064a9dd8f16021913" kindref="member">wxTLS_TYPE()</ref> example, you may want to <computeroutput>#define</computeroutput> a symbol wrapping a thread-specific variable with this macro. And, as also explained in <ref refid="tls_8h_1aeddd0d67bf87ae5064a9dd8f16021913" kindref="member">wxTLS_TYPE()</ref> documentation, you may avoid using it entirely if you target only recent compilers.</para><para><simplesect kind="see"><para><ref refid="tls_8h_1a0077bfcfde11a116e390d2f9b84a5e68" kindref="member">wxTLS_PTR()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/tls.h" line="56" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/tls.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tls_8h_1a0077bfcfde11a116e390d2f9b84a5e68" prot="public" static="no">
        <name>wxTLS_PTR</name>
        <param><defname>var</defname></param>
        <briefdescription>
<para>Macro to return address of a thread-specific variables. </para>        </briefdescription>
        <detaileddescription>
<para>This macro is similar to <ref refid="tls_8h_1a006b3d4d82de2eb0e067e63cfe773b55" kindref="member">wxTLS_VALUE()</ref> except that it always returns a pointer to the type of thread-specific variable.</para><para>Notice that this is not a constant expression even if the macro is defined simply as <computeroutput>&amp;var</computeroutput> -- the value returned is still different for every thread. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/tls.h" line="68" bodyfile="/home/jgm/Development/wxWidgets-svn/interface/wx/tls.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/jgm/Development/wxWidgets-svn/interface/wx/tls.h"/>
  </compounddef>
</doxygen>
