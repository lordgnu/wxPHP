/*
 * @author Mário Soares
 * @contributors Jefferson González
 * 
 * @license 
 * This file is part of wxPHP check the LICENSE file for information.
 * 
 * @note
 * This file was auto-generated by the wxPHP source maker
*/

#ifndef WXPHP_GDI_H_GUARD
#define WXPHP_GDI_H_GUARD

#include "references.h"

ZEND_BEGIN_ARG_INFO_EX(wxphp_gdi_get_args, 0, 0, 1)
	ZEND_ARG_INFO(0, name)
ZEND_END_ARG_INFO()

extern int le_wxGraphicsGradientStop;
extern zend_class_entry *php_wxGraphicsGradientStop_entry;
void php_wxGraphicsGradientStop_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxGraphicsGradientStop_php: public wxGraphicsGradientStop{
	public:
	
	wxGraphicsGradientStop_php(wxColour col=wxTransparentColour, float pos=0.):wxGraphicsGradientStop(col, pos){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGraphicsGradientStop_functions[] = {
	PHP_ME(php_wxGraphicsGradientStop, GetColour, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGraphicsGradientStop, GetPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGraphicsGradientStop, SetColour, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGraphicsGradientStop, SetPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGraphicsGradientStop, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern int le_wxGraphicsGradientStops;
extern zend_class_entry *php_wxGraphicsGradientStops_entry;
void php_wxGraphicsGradientStops_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxGraphicsGradientStops_php: public wxGraphicsGradientStops{
	public:
	
	wxGraphicsGradientStops_php(wxColour startCol=wxTransparentColour, wxColour endCol=wxTransparentColour):wxGraphicsGradientStops(startCol, endCol){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGraphicsGradientStops_functions[] = {
	PHP_ME(php_wxGraphicsGradientStops, Add, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGraphicsGradientStops, GetCount, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGraphicsGradientStops, GetEndColour, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGraphicsGradientStops, GetStartColour, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGraphicsGradientStops, Item, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGraphicsGradientStops, SetEndColour, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGraphicsGradientStops, SetStartColour, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGraphicsGradientStops, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern int le_wxAnimation;
extern zend_class_entry *php_wxAnimation_entry;
void php_wxAnimation_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxAnimation_php: public wxAnimation{
	public:
	
	wxAnimation_php(const wxAnimation& anim):wxAnimation(anim){}
	wxAnimation_php(const wxString& name, wxAnimationType type=wxANIMATION_TYPE_ANY):wxAnimation(name, type){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxAnimation_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAnimation, GetDelay, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAnimation, GetFrame, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAnimation, GetFrameCount, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAnimation, GetSize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAnimation, IsOk, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAnimation, LoadFile, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAnimation, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxAnimation, Load, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern int le_wxBitmapHandler;
extern zend_class_entry *php_wxBitmapHandler_entry;
void php_wxBitmapHandler_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxBitmapHandler_php: public wxBitmapHandler{
	public:
	
	wxBitmapHandler_php():wxBitmapHandler(){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxBitmapHandler_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmapHandler, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxBitmapHandler, SetType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmapHandler, SetName, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmapHandler, SetExtension, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmapHandler, LoadFile, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmapHandler, GetType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmapHandler, GetName, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmapHandler, GetExtension, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmapHandler, SaveFile, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmapHandler, Create, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern int le_wxBitmap;
extern zend_class_entry *php_wxBitmap_entry;
void php_wxBitmap_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxBitmap_php: public wxBitmap{
	public:
	
	wxBitmap_php():wxBitmap(){}
	wxBitmap_php(const wxBitmap& bitmap):wxBitmap(bitmap){}
	wxBitmap_php(int width, int height, int depth=wxBITMAP_SCREEN_DEPTH):wxBitmap(width, height, depth){}
	wxBitmap_php(const wxSize& sz, int depth=wxBITMAP_SCREEN_DEPTH):wxBitmap(sz, depth){}
	wxBitmap_php(const wxString& name, wxBitmapType type=wxBITMAP_DEFAULT_TYPE):wxBitmap(name, type){}
	wxBitmap_php(const wxImage& img, int depth=wxBITMAP_SCREEN_DEPTH):wxBitmap(img, depth){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxBitmap_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmap, AddHandler, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmap, CleanUpHandlers, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmap, ConvertToDisabled, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmap, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxBitmap, LoadFile, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmap, RemoveHandler, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmap, SaveFile, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmap, SetDepth, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmap, SetHeight, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmap, SetWidth, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmap, ConvertToImage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmap, CopyFromIcon, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmap, Create, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmap, FindHandler, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmap, GetDepth, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmap, GetHeight, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmap, GetMask, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmap, GetPalette, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmap, GetSize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmap, GetSubBitmap, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmap, GetWidth, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmap, InitStandardHandlers, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmap, InsertHandler, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmap, IsOk, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmap, SetMask, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBitmap, SetPalette, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern int le_wxMask;
extern zend_class_entry *php_wxMask_entry;
void php_wxMask_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxMask_php: public wxMask{
	public:
	
	wxMask_php():wxMask(){}
	wxMask_php(const wxBitmap& bitmap, int index):wxMask(bitmap, index){}
	wxMask_php(const wxBitmap& bitmap):wxMask(bitmap){}
	wxMask_php(const wxBitmap& bitmap, const wxColour& colour):wxMask(bitmap, colour){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxMask_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMask, Create, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMask, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern int le_wxBrush;
extern zend_class_entry *php_wxBrush_entry;
void php_wxBrush_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxBrush_php: public wxBrush{
	public:
	
	wxBrush_php():wxBrush(){}
	wxBrush_php(const wxColour& colour, wxBrushStyle style=wxBRUSHSTYLE_SOLID):wxBrush(colour, style){}
	wxBrush_php(const wxBitmap& stippleBitmap):wxBrush(stippleBitmap){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxBrush_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBrush, GetColour, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBrush, GetStipple, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBrush, GetStyle, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBrush, IsHatch, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBrush, IsNonTransparent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBrush, IsOk, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBrush, IsTransparent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBrush, SetColour, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBrush, SetStipple, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBrush, SetStyle, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxBrush, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern int le_wxColour;
extern zend_class_entry *php_wxColour_entry;
void php_wxColour_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxColour_php: public wxColour{
	public:
	
	wxColour_php(unsigned char red, unsigned char green, unsigned char blue, unsigned char alpha=wxALPHA_OPAQUE):wxColour(red, green, blue, alpha){}
	wxColour_php(const wxString& colourName):wxColour(colourName){}
	wxColour_php(unsigned long colRGB):wxColour(colRGB){}
	wxColour_php(const wxColour& colour):wxColour(colour){}
	wxColour_php():wxColour(){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxColour_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxColour, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxColour, Set, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxColour, Red, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxColour, SetRGB, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxColour, SetRGBA, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxColour, Blue, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxColour, Green, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxColour, GetRGBA, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxColour, GetRGB, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxColour, Alpha, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern int le_wxCursor;
extern zend_class_entry *php_wxCursor_entry;
void php_wxCursor_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxCursor_php: public wxCursor{
	public:
	
	wxCursor_php():wxCursor(){}
	wxCursor_php(const wxImage& image):wxCursor(image){}
	wxCursor_php(const wxCursor& cursor):wxCursor(cursor){}
	wxCursor_php(const wxString& cursorName, wxBitmapType type=wxCURSOR_DEFAULT_TYPE, int hotSpotX=0, int hotSpotY=0):wxCursor(cursorName, type, hotSpotX, hotSpotY){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxCursor_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCursor, IsOk, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCursor, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern int le_wxDCClipper;
extern zend_class_entry *php_wxDCClipper_entry;
void php_wxDCClipper_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDCClipper_php: public wxDCClipper{
	public:
	
	wxDCClipper_php(wxDC& dc, const wxRegion& region):wxDCClipper(dc, region){}
	wxDCClipper_php(wxDC& dc, const wxRect& rect):wxDCClipper(dc, rect){}
	wxDCClipper_php(wxDC& dc, wxCoord x, wxCoord y, wxCoord w, wxCoord h):wxDCClipper(dc, x, y, w, h){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDCClipper_functions[] = {
	PHP_ME(php_wxDCClipper, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern int le_wxFont;
extern zend_class_entry *php_wxFont_entry;
void php_wxFont_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxFont_php: public wxFont{
	public:
	
	wxFont_php():wxFont(){}
	wxFont_php(const wxFont& font):wxFont(font){}
	wxFont_php(int pointSize, wxFontFamily family, wxFontStyle style, wxFontWeight weight, bool underline=false, const wxString& faceName=wxEmptyString, wxFontEncoding encoding=wxFONTENCODING_DEFAULT):wxFont(pointSize, family, style, weight, underline, faceName, encoding){}
	wxFont_php(const wxSize& pixelSize, wxFontFamily family, wxFontStyle style, wxFontWeight weight, bool underline=false, const wxString& faceName=wxEmptyString, wxFontEncoding encoding=wxFONTENCODING_DEFAULT):wxFont(pixelSize, family, style, weight, underline, faceName, encoding){}
	wxFont_php(const wxString& nativeInfoString):wxFont(nativeInfoString){}
	wxFont_php(const wxNativeFontInfo& nativeInfo):wxFont(nativeInfo){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxFont_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxFont, Bold, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, GetDefaultEncoding, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, GetEncoding, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, GetFaceName, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, GetFamily, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, GetNativeFontInfoDesc, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, GetNativeFontInfoUserDesc, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, GetPixelSize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, GetPointSize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, GetStyle, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, GetUnderlined, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, GetWeight, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, IsFixedWidth, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, IsOk, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, Italic, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, Larger, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, MakeBold, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, MakeItalic, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, MakeLarger, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, MakeSmaller, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, MakeUnderlined, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, New, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, Scale, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, Scaled, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, SetDefaultEncoding, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, SetEncoding, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, SetFaceName, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, SetFamily, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, SetNativeFontInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, SetNativeFontInfoUserDesc, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, SetPixelSize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, SetPointSize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, SetStyle, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, SetSymbolicSize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, SetSymbolicSizeRelativeTo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, SetUnderlined, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, SetWeight, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, Smaller, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, Underlined, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFont, GetNativeFontInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern int le_wxFontList;
extern zend_class_entry *php_wxFontList_entry;
void php_wxFontList_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxFontList_php: public wxFontList{
	public:
	
	wxFontList_php():wxFontList(){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxFontList_functions[] = {
	PHP_ME(php_wxFontList, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxFontList, FindOrCreateFont, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern int le_wxFontEnumerator;
extern zend_class_entry *php_wxFontEnumerator_entry;
void php_wxFontEnumerator_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxFontEnumerator_php: public wxFontEnumerator{
	public:
	
		
	bool OnFontEncoding(const wxString& font, const wxString& encoding);
	bool OnFacename(const wxString& font);
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxFontEnumerator_functions[] = {
	PHP_ME(php_wxFontEnumerator, IsValidFacename, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFontEnumerator, GetFacenames, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFontEnumerator, GetEncodings, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFontEnumerator, EnumerateFacenames, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFontEnumerator, EnumerateEncodings, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern int le_wxNativeFontInfo;
extern zend_class_entry *php_wxNativeFontInfo_entry;
void php_wxNativeFontInfo_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxNativeFontInfo_php: public wxNativeFontInfo{
	public:
	
	wxNativeFontInfo_php():wxNativeFontInfo(){}
	wxNativeFontInfo_php(const wxNativeFontInfo& info):wxNativeFontInfo(info){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxNativeFontInfo_functions[] = {
	PHP_ME(php_wxNativeFontInfo, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxNativeFontInfo, FromString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNativeFontInfo, FromUserString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNativeFontInfo, GetEncoding, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNativeFontInfo, GetFaceName, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNativeFontInfo, GetFamily, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNativeFontInfo, GetPixelSize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNativeFontInfo, GetPointSize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNativeFontInfo, GetStyle, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNativeFontInfo, GetUnderlined, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNativeFontInfo, GetWeight, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNativeFontInfo, Init, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNativeFontInfo, InitFromFont, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNativeFontInfo, SetEncoding, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNativeFontInfo, SetFaceName, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNativeFontInfo, SetFamily, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNativeFontInfo, SetPixelSize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNativeFontInfo, SetPointSize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNativeFontInfo, SetStyle, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNativeFontInfo, SetUnderlined, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNativeFontInfo, SetWeight, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNativeFontInfo, ToString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNativeFontInfo, ToUserString, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern int le_wxColourDatabase;
extern zend_class_entry *php_wxColourDatabase_entry;
void php_wxColourDatabase_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxColourDatabase_php: public wxColourDatabase{
	public:
	
	wxColourDatabase_php():wxColourDatabase(){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxColourDatabase_functions[] = {
	PHP_ME(php_wxColourDatabase, AddColour, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxColourDatabase, Find, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxColourDatabase, FindName, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxColourDatabase, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern int le_wxGDIObject;
extern zend_class_entry *php_wxGDIObject_entry;
void php_wxGDIObject_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxGDIObject_php: public wxGDIObject{
	public:
	
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGDIObject_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern int le_wxGraphicsRenderer;
extern zend_class_entry *php_wxGraphicsRenderer_entry;
void php_wxGraphicsRenderer_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxGraphicsRenderer_php: public wxGraphicsRenderer{
	public:
	
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGraphicsRenderer_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern int le_wxGraphicsMatrix;
extern zend_class_entry *php_wxGraphicsMatrix_entry;
void php_wxGraphicsMatrix_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxGraphicsMatrix_php: public wxGraphicsMatrix{
	public:
	
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGraphicsMatrix_functions[] = {
	PHP_FE_END
};
#endif

extern int le_wxIcon;
extern zend_class_entry *php_wxIcon_entry;
void php_wxIcon_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxIcon_php: public wxIcon{
	public:
	
	wxIcon_php(const wxString& name, wxBitmapType type=wxICON_DEFAULT_TYPE, int desiredWidth=-1, int desiredHeight=-1):wxIcon(name, type, desiredWidth, desiredHeight){}
	wxIcon_php(const wxIcon& icon):wxIcon(icon){}
	wxIcon_php():wxIcon(){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxIcon_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxIcon, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxIcon, SetWidth, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxIcon, SetHeight, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxIcon, SetDepth, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxIcon, LoadFile, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxIcon, IsOk, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxIcon, GetWidth, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxIcon, GetHeight, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxIcon, GetDepth, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxIcon, CopyFromBitmap, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern int le_wxIconBundle;
extern zend_class_entry *php_wxIconBundle_entry;
void php_wxIconBundle_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxIconBundle_php: public wxIconBundle{
	public:
	
	wxIconBundle_php():wxIconBundle(){}
	wxIconBundle_php(const wxString& file, wxBitmapType type=wxBITMAP_TYPE_ANY):wxIconBundle(file, type){}
	wxIconBundle_php(const wxIcon& icon):wxIconBundle(icon){}
	wxIconBundle_php(const wxIconBundle& ic):wxIconBundle(ic){}
	wxIconBundle_php(wxInputStream& stream, wxBitmapType type=wxBITMAP_TYPE_ANY):wxIconBundle(stream, type){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxIconBundle_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxIconBundle, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxIconBundle, IsEmpty, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxIconBundle, GetIconOfExactSize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxIconBundle, GetIconCount, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxIconBundle, GetIconByIndex, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxIconBundle, AddIcon, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxIconBundle, GetIcon, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern int le_wxImageHandler;
extern zend_class_entry *php_wxImageHandler_entry;
void php_wxImageHandler_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxImageHandler_php: public wxImageHandler{
	public:
	
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxImageHandler_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImageHandler, CanRead, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImageHandler, GetAltExtensions, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImageHandler, GetExtension, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImageHandler, GetImageCount, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImageHandler, GetMimeType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImageHandler, GetName, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImageHandler, GetType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImageHandler, LoadFile, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImageHandler, SaveFile, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImageHandler, SetAltExtensions, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImageHandler, SetExtension, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImageHandler, SetMimeType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImageHandler, SetName, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern int le_wxImage;
extern zend_class_entry *php_wxImage_entry;
void php_wxImage_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxImage_php: public wxImage{
	public:
	
	wxImage_php(int width, int height, bool clear=true):wxImage(width, height, clear){}
	wxImage_php():wxImage(){}
	wxImage_php(const wxSize& sz, bool clear=true):wxImage(sz, clear){}
	wxImage_php(const wxString& name, wxBitmapType type=wxBITMAP_TYPE_ANY, int index=-1):wxImage(name, type, index){}
	wxImage_php(const wxString& name, const wxString& mimetype, int index=-1):wxImage(name, mimetype, index){}
	wxImage_php(wxInputStream& stream, wxBitmapType type=wxBITMAP_TYPE_ANY, int index=-1):wxImage(stream, type, index){}
	wxImage_php(wxInputStream& stream, const wxString& mimetype, int index=-1):wxImage(stream, mimetype, index){}
	wxImage_php(const wxSize& sz, unsigned char* data, unsigned char* alpha, bool static_data=false):wxImage(sz, data, alpha, static_data){}
	wxImage_php(int width, int height, unsigned char* data, unsigned char* alpha, bool static_data=false):wxImage(width, height, data, alpha, static_data){}
	wxImage_php(const wxSize& sz, unsigned char* data, bool static_data=false):wxImage(sz, data, static_data){}
	wxImage_php(int width, int height, unsigned char* data, bool static_data=false):wxImage(width, height, data, static_data){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxImage_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxImage, SetType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, SetRGB, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, SetPalette, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, SetOption, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, SetMaskFromImage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, SetMaskColour, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, SetMask, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, SetData, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, SetAlpha, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, Scale, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, SaveFile, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, RotateHue, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, Rotate90, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, Rotate180, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, Rotate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, Resize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, Rescale, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, Replace, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, RemoveHandler, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, Paste, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, Mirror, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, LoadFile, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, IsTransparent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, IsOk, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, InsertHandler, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, InitStandardHandlers, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, InitAlpha, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, HasOption, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, HasMask, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, HasAlpha, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, GetWidth, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, GetType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, GetSubImage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, GetSize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, GetRed, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, GetPalette, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, GetOrFindMaskColour, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, GetOptionInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, GetOption, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, GetMaskRed, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, GetMaskGreen, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, GetMaskBlue, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, GetImageExtWildcard, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, GetImageCount, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, GetHeight, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, GetGreen, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, GetData, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, GetBlue, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, GetAlpha, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, FindHandlerMime, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, FindHandler, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, FindFirstUnusedColour, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, Destroy, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, Create, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, Copy, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, ConvertToMono, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, ConvertToGreyscale, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, ConvertToDisabled, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, ConvertAlphaToMask, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, ClearAlpha, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, Clear, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, CleanUpHandlers, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, CanRead, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, BlurVertical, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, BlurHorizontal, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, Blur, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, AddHandler, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImage, Size, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern int le_wxImageList;
extern zend_class_entry *php_wxImageList_entry;
void php_wxImageList_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxImageList_php: public wxImageList{
	public:
	
	wxImageList_php():wxImageList(){}
	wxImageList_php(int width, int height, bool mask=true, int initialCount=1):wxImageList(width, height, mask, initialCount){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxImageList_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImageList, Add, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImageList, Create, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImageList, GetBitmap, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImageList, GetIcon, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImageList, GetImageCount, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImageList, GetSize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImageList, Remove, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImageList, RemoveAll, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImageList, Replace, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxImageList, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxImageList, Draw, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern int le_wxPalette;
extern zend_class_entry *php_wxPalette_entry;
void php_wxPalette_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxPalette_php: public wxPalette{
	public:
	
	wxPalette_php():wxPalette(){}
	wxPalette_php(const wxPalette& palette):wxPalette(palette){}
	wxPalette_php(int n, const unsigned char* red, const unsigned char* green, const unsigned char* blue):wxPalette(n, red, green, blue){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxPalette_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPalette, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxPalette, IsOk, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPalette, GetPixel, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPalette, GetColoursCount, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPalette, Create, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPalette, GetRGB, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern int le_wxPen;
extern zend_class_entry *php_wxPen_entry;
void php_wxPen_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxPen_php: public wxPen{
	public:
	
	wxPen_php():wxPen(){}
	wxPen_php(const wxColour& colour, int width=1, wxPenStyle style=wxPENSTYLE_SOLID):wxPen(colour, width, style){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxPen_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPen, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxPen, IsTransparent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPen, IsOk, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPen, IsNonTransparent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPen, GetWidth, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPen, GetStyle, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPen, GetStipple, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPen, GetJoin, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPen, GetColour, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPen, GetCap, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPen, SetColour, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPen, SetJoin, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPen, SetStipple, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPen, SetStyle, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPen, SetWidth, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPen, SetCap, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern int le_wxPenList;
extern zend_class_entry *php_wxPenList_entry;
void php_wxPenList_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxPenList_php: public wxPenList{
	public:
	
	wxPenList_php():wxPenList(){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxPenList_functions[] = {
	PHP_ME(php_wxPenList, FindOrCreatePen, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPenList, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern int le_wxRendererNative;
extern zend_class_entry *php_wxRendererNative_entry;
void php_wxRendererNative_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxRendererNative_php: public wxRendererNative{
	public:
	
		
	void DrawCheckBox(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
	void DrawChoice(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
	void DrawComboBox(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
	void DrawComboBoxDropButton(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
	void DrawDropArrow(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
	void DrawFocusRect(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
	void DrawPushButton(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
	void DrawItemSelectionRect(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
	void DrawRadioBitmap(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
	void DrawSplitterBorder(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
	void DrawSplitterSash(wxWindow* win, wxDC& dc, const wxSize& size, wxCoord position, wxOrientation orient, int flags=0);
	void DrawTextCtrl(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
	void DrawTreeItemButton(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
	wxSize GetCheckBoxSize(wxWindow* win);
	int GetHeaderButtonHeight(wxWindow* win);
	int GetHeaderButtonMargin(wxWindow* win);
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxRendererNative_functions[] = {
	PHP_ME(php_wxRendererNative, Get, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRendererNative, GetDefault, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRendererNative, GetGeneric, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRendererNative, Load, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRendererNative, Set, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

#endif //WXPHP_GDI_H_GUARD
