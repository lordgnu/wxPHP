/*
 * @author Mário Soares
 * @contributors Jefferson González
 * 
 * @license 
 * This file is part of wxPHP check the LICENSE file for information.
 * 
 * @note
 * This file was auto-generated by the wxPHP source maker
*/

#ifndef WXPHP_DVC_H_GUARD
#define WXPHP_DVC_H_GUARD

#include "references.h"

ZEND_BEGIN_ARG_INFO_EX(wxphp_dvc_get_args, 0, 0, 1)
	ZEND_ARG_INFO(0, name)
ZEND_END_ARG_INFO()

extern int le_wxDataViewModel;
extern zend_class_entry *php_wxDataViewModel_entry;
void php_wxDataViewModel_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDataViewModel_php: public wxDataViewModel{
	public:
	
		
	unsigned int GetColumnCount() const;
	wxString GetColumnType(unsigned int col) const;
	wxDataViewItem GetParent(const wxDataViewItem& item) const;
	void GetValue(wxVariant& variant, const wxDataViewItem& item, unsigned int col) const;
	bool IsContainer(const wxDataViewItem& item) const;
	bool SetValue(const wxVariant& variant, const wxDataViewItem& item, unsigned int col);
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewModel_functions[] = {
	PHP_ME(php_wxRefCounter, DecRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRefCounter, GetRefCount, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRefCounter, IncRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, AddNotifier, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ChangeValue, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, Cleared, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, Compare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, GetAttr, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, HasContainerColumns, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, HasDefaultCompare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, HasValue, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, IsEnabled, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ItemAdded, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ItemChanged, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ItemDeleted, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, RemoveNotifier, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, Resort, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ValueChanged, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern int le_wxDataViewListModel;
extern zend_class_entry *php_wxDataViewListModel_entry;
void php_wxDataViewListModel_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDataViewListModel_php: public wxDataViewListModel{
	public:
	
		
	void GetValueByRow(wxVariant& variant, unsigned int row, unsigned int col) const;
	bool SetValueByRow(const wxVariant& variant, unsigned int row, unsigned int col);
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewListModel_functions[] = {
	PHP_ME(php_wxRefCounter, DecRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRefCounter, GetRefCount, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRefCounter, IncRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, AddNotifier, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ChangeValue, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, Cleared, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, Compare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, GetAttr, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, HasContainerColumns, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, HasDefaultCompare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, HasValue, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, IsEnabled, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ItemAdded, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ItemChanged, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ItemDeleted, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, RemoveNotifier, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, Resort, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ValueChanged, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListModel, GetAttrByRow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListModel, GetCount, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListModel, GetRow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListModel, IsEnabledByRow, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern int le_wxDataViewIndexListModel;
extern zend_class_entry *php_wxDataViewIndexListModel_entry;
void php_wxDataViewIndexListModel_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDataViewIndexListModel_php: public wxDataViewIndexListModel{
	public:
	
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewIndexListModel_functions[] = {
	PHP_ME(php_wxRefCounter, DecRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRefCounter, GetRefCount, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRefCounter, IncRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, AddNotifier, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ChangeValue, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, Cleared, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, Compare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, GetAttr, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, HasContainerColumns, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, HasDefaultCompare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, HasValue, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, IsEnabled, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ItemAdded, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ItemChanged, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ItemDeleted, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, RemoveNotifier, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, Resort, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ValueChanged, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListModel, GetAttrByRow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListModel, GetCount, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListModel, GetRow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListModel, IsEnabledByRow, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern int le_wxDataViewVirtualListModel;
extern zend_class_entry *php_wxDataViewVirtualListModel_entry;
void php_wxDataViewVirtualListModel_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDataViewVirtualListModel_php: public wxDataViewVirtualListModel{
	public:
	
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewVirtualListModel_functions[] = {
	PHP_ME(php_wxRefCounter, DecRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRefCounter, GetRefCount, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRefCounter, IncRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, AddNotifier, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ChangeValue, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, Cleared, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, Compare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, GetAttr, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, HasContainerColumns, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, HasDefaultCompare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, HasValue, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, IsEnabled, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ItemAdded, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ItemChanged, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ItemDeleted, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, RemoveNotifier, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, Resort, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ValueChanged, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListModel, GetAttrByRow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListModel, GetCount, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListModel, GetRow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListModel, IsEnabledByRow, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern int le_wxDataViewItemAttr;
extern zend_class_entry *php_wxDataViewItemAttr_entry;
void php_wxDataViewItemAttr_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDataViewItemAttr_php: public wxDataViewItemAttr{
	public:
	
	wxDataViewItemAttr_php():wxDataViewItemAttr(){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewItemAttr_functions[] = {
	PHP_ME(php_wxDataViewItemAttr, SetBold, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewItemAttr, SetColour, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewItemAttr, SetItalic, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewItemAttr, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern int le_wxDataViewItem;
extern zend_class_entry *php_wxDataViewItem_entry;
void php_wxDataViewItem_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDataViewItem_php: public wxDataViewItem{
	public:
	
	wxDataViewItem_php():wxDataViewItem(){}
	wxDataViewItem_php(const wxDataViewItem& item):wxDataViewItem(item){}
	wxDataViewItem_php(void* id):wxDataViewItem(id){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewItem_functions[] = {
	PHP_ME(php_wxDataViewItem, GetID, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewItem, IsOk, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewItem, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern int le_wxDataViewModelNotifier;
extern zend_class_entry *php_wxDataViewModelNotifier_entry;
void php_wxDataViewModelNotifier_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDataViewModelNotifier_php: public wxDataViewModelNotifier{
	public:
	
	wxDataViewModelNotifier_php():wxDataViewModelNotifier(){}
		
	bool Cleared();
	bool ItemAdded(const wxDataViewItem& parent, const wxDataViewItem& item);
	bool ItemChanged(const wxDataViewItem& item);
	bool ItemDeleted(const wxDataViewItem& parent, const wxDataViewItem& item);
	void Resort();
	bool ValueChanged(const wxDataViewItem& item, unsigned int col);
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewModelNotifier_functions[] = {
	PHP_ME(php_wxDataViewModelNotifier, GetOwner, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModelNotifier, SetOwner, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModelNotifier, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern int le_wxDataViewRenderer;
extern zend_class_entry *php_wxDataViewRenderer_entry;
void php_wxDataViewRenderer_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDataViewRenderer_php: public wxDataViewRenderer{
	public:
	
		
	bool GetValue(wxVariant& value) const;
	bool SetValue(const wxVariant& value);
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewRenderer_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, EnableEllipsize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, DisableEllipsize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetAlignment, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetEllipsizeMode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetMode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetOwner, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetVariantType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, SetAlignment, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, SetOwner, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, Validate, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern int le_wxDataViewTextRenderer;
extern zend_class_entry *php_wxDataViewTextRenderer_entry;
void php_wxDataViewTextRenderer_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDataViewTextRenderer_php: public wxDataViewTextRenderer{
	public:
	
	wxDataViewTextRenderer_php(const wxString& varianttype="string", wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int align=wxDVR_DEFAULT_ALIGNMENT):wxDataViewTextRenderer(varianttype, mode, align){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewTextRenderer_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, EnableEllipsize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, DisableEllipsize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetAlignment, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetEllipsizeMode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetMode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetOwner, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetVariantType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, SetAlignment, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, SetOwner, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, Validate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewTextRenderer, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern int le_wxDataViewIconTextRenderer;
extern zend_class_entry *php_wxDataViewIconTextRenderer_entry;
void php_wxDataViewIconTextRenderer_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDataViewIconTextRenderer_php: public wxDataViewIconTextRenderer{
	public:
	
	wxDataViewIconTextRenderer_php(const wxString& varianttype="wxDataViewIconText", wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int align=wxDVR_DEFAULT_ALIGNMENT):wxDataViewIconTextRenderer(varianttype, mode, align){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewIconTextRenderer_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, EnableEllipsize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, DisableEllipsize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetAlignment, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetEllipsizeMode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetMode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetOwner, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetVariantType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, SetAlignment, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, SetOwner, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, Validate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewIconTextRenderer, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern int le_wxDataViewProgressRenderer;
extern zend_class_entry *php_wxDataViewProgressRenderer_entry;
void php_wxDataViewProgressRenderer_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDataViewProgressRenderer_php: public wxDataViewProgressRenderer{
	public:
	
	wxDataViewProgressRenderer_php(const wxString& label=wxEmptyString, const wxString& varianttype="long", wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int align=wxDVR_DEFAULT_ALIGNMENT):wxDataViewProgressRenderer(label, varianttype, mode, align){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewProgressRenderer_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, EnableEllipsize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, DisableEllipsize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetAlignment, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetEllipsizeMode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetMode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetOwner, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetVariantType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, SetAlignment, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, SetOwner, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, Validate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewProgressRenderer, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern int le_wxDataViewSpinRenderer;
extern zend_class_entry *php_wxDataViewSpinRenderer_entry;
void php_wxDataViewSpinRenderer_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDataViewSpinRenderer_php: public wxDataViewSpinRenderer{
	public:
	
	wxDataViewSpinRenderer_php(int min, int max, wxDataViewCellMode mode=wxDATAVIEW_CELL_EDITABLE, int align=wxDVR_DEFAULT_ALIGNMENT):wxDataViewSpinRenderer(min, max, mode, align){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewSpinRenderer_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, EnableEllipsize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, DisableEllipsize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetAlignment, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetEllipsizeMode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetMode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetOwner, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetVariantType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, SetAlignment, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, SetOwner, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, Validate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewCustomRenderer, ActivateCell, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewCustomRenderer, CreateEditorCtrl, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewCustomRenderer, GetAttr, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewCustomRenderer, GetValueFromEditorCtrl, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewCustomRenderer, HasEditorCtrl, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewCustomRenderer, LeftClick, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewCustomRenderer, RenderText, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewCustomRenderer, StartDrag, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewSpinRenderer, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern int le_wxDataViewToggleRenderer;
extern zend_class_entry *php_wxDataViewToggleRenderer_entry;
void php_wxDataViewToggleRenderer_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDataViewToggleRenderer_php: public wxDataViewToggleRenderer{
	public:
	
	wxDataViewToggleRenderer_php(const wxString& varianttype="bool", wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int align=wxDVR_DEFAULT_ALIGNMENT):wxDataViewToggleRenderer(varianttype, mode, align){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewToggleRenderer_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, EnableEllipsize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, DisableEllipsize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetAlignment, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetEllipsizeMode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetMode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetOwner, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetVariantType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, SetAlignment, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, SetOwner, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, Validate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewToggleRenderer, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern int le_wxDataViewChoiceRenderer;
extern zend_class_entry *php_wxDataViewChoiceRenderer_entry;
void php_wxDataViewChoiceRenderer_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDataViewChoiceRenderer_php: public wxDataViewChoiceRenderer{
	public:
	
	wxDataViewChoiceRenderer_php(const wxArrayString& choices, wxDataViewCellMode mode=wxDATAVIEW_CELL_EDITABLE, int alignment=wxDVR_DEFAULT_ALIGNMENT):wxDataViewChoiceRenderer(choices, mode, alignment){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewChoiceRenderer_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, EnableEllipsize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, DisableEllipsize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetAlignment, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetEllipsizeMode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetMode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetOwner, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetVariantType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, SetAlignment, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, SetOwner, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, Validate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewChoiceRenderer, GetChoice, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewChoiceRenderer, GetChoices, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewChoiceRenderer, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern int le_wxDataViewDateRenderer;
extern zend_class_entry *php_wxDataViewDateRenderer_entry;
void php_wxDataViewDateRenderer_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDataViewDateRenderer_php: public wxDataViewDateRenderer{
	public:
	
	wxDataViewDateRenderer_php(const wxString& varianttype="datetime", wxDataViewCellMode mode=wxDATAVIEW_CELL_ACTIVATABLE, int align=wxDVR_DEFAULT_ALIGNMENT):wxDataViewDateRenderer(varianttype, mode, align){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewDateRenderer_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, EnableEllipsize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, DisableEllipsize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetAlignment, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetEllipsizeMode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetMode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetOwner, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetVariantType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, SetAlignment, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, SetOwner, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, Validate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewDateRenderer, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern int le_wxDataViewCustomRenderer;
extern zend_class_entry *php_wxDataViewCustomRenderer_entry;
void php_wxDataViewCustomRenderer_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDataViewCustomRenderer_php: public wxDataViewCustomRenderer{
	public:
	
		
	wxSize GetSize() const;
	bool Render(wxRect cell, wxDC* dc, int state);
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewCustomRenderer_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, EnableEllipsize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, DisableEllipsize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetAlignment, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetEllipsizeMode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetMode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetOwner, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetVariantType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, SetAlignment, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, SetOwner, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, Validate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewCustomRenderer, ActivateCell, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewCustomRenderer, CreateEditorCtrl, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewCustomRenderer, GetAttr, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewCustomRenderer, GetValueFromEditorCtrl, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewCustomRenderer, HasEditorCtrl, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewCustomRenderer, LeftClick, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewCustomRenderer, RenderText, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewCustomRenderer, StartDrag, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern int le_wxDataViewBitmapRenderer;
extern zend_class_entry *php_wxDataViewBitmapRenderer_entry;
void php_wxDataViewBitmapRenderer_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDataViewBitmapRenderer_php: public wxDataViewBitmapRenderer{
	public:
	
	wxDataViewBitmapRenderer_php(const wxString& varianttype="wxBitmap", wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int align=wxDVR_DEFAULT_ALIGNMENT):wxDataViewBitmapRenderer(varianttype, mode, align){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewBitmapRenderer_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, EnableEllipsize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, DisableEllipsize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetAlignment, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetEllipsizeMode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetMode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetOwner, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, GetVariantType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, SetAlignment, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, SetOwner, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewRenderer, Validate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewBitmapRenderer, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern int le_wxDataViewColumn;
extern zend_class_entry *php_wxDataViewColumn_entry;
void php_wxDataViewColumn_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDataViewColumn_php: public wxDataViewColumn{
	public:
	
	wxDataViewColumn_php(const wxString& title, wxDataViewRenderer* renderer, unsigned int model_column, int width=wxDVC_DEFAULT_WIDTH, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE):wxDataViewColumn(title, renderer, model_column, width, align, flags){}
	wxDataViewColumn_php(const wxBitmap& bitmap, wxDataViewRenderer* renderer, unsigned int model_column, int width=wxDVC_DEFAULT_WIDTH, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE):wxDataViewColumn(bitmap, renderer, model_column, width, align, flags){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewColumn_functions[] = {
	PHP_ME(php_wxHeaderColumn, HasFlag, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxHeaderColumn, IsHidden, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxHeaderColumn, IsReorderable, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxHeaderColumn, IsResizeable, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxHeaderColumn, IsShown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxHeaderColumn, IsSortable, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSettableHeaderColumn, UnsetAsSortKey, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSettableHeaderColumn, ToggleSortOrder, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSettableHeaderColumn, ToggleFlag, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSettableHeaderColumn, SetSortable, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSettableHeaderColumn, SetResizeable, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSettableHeaderColumn, SetReorderable, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSettableHeaderColumn, SetHidden, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSettableHeaderColumn, SetFlag, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSettableHeaderColumn, ClearFlag, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSettableHeaderColumn, ChangeFlag, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewColumn, GetModelColumn, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewColumn, GetOwner, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewColumn, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxDataViewColumn, GetRenderer, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern int le_wxDataViewListStore;
extern zend_class_entry *php_wxDataViewListStore_entry;
void php_wxDataViewListStore_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDataViewListStore_php: public wxDataViewListStore{
	public:
	
	wxDataViewListStore_php():wxDataViewListStore(){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewListStore_functions[] = {
	PHP_ME(php_wxRefCounter, DecRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRefCounter, GetRefCount, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRefCounter, IncRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, AddNotifier, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ChangeValue, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, Cleared, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, Compare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, GetAttr, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, HasContainerColumns, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, HasDefaultCompare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, HasValue, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, IsEnabled, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ItemAdded, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ItemChanged, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ItemDeleted, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, RemoveNotifier, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, Resort, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ValueChanged, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListModel, GetAttrByRow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListModel, GetCount, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListModel, GetRow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListModel, IsEnabledByRow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListStore, AppendColumn, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListStore, DeleteAllItems, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListStore, DeleteItem, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListStore, GetColumnCount, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListStore, GetColumnType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListStore, GetValueByRow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListStore, InsertColumn, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListStore, PrependColumn, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListStore, SetValueByRow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewListStore, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern int le_wxDataViewTreeStore;
extern zend_class_entry *php_wxDataViewTreeStore_entry;
void php_wxDataViewTreeStore_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDataViewTreeStore_php: public wxDataViewTreeStore{
	public:
	
	wxDataViewTreeStore_php():wxDataViewTreeStore(){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewTreeStore_functions[] = {
	PHP_ME(php_wxRefCounter, DecRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRefCounter, GetRefCount, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRefCounter, IncRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, AddNotifier, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ChangeValue, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, Cleared, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, Compare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, GetAttr, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, HasContainerColumns, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, HasDefaultCompare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, HasValue, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, IsEnabled, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ItemAdded, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ItemChanged, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ItemDeleted, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, RemoveNotifier, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, Resort, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewModel, ValueChanged, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewTreeStore, AppendContainer, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewTreeStore, AppendItem, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewTreeStore, DeleteAllItems, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewTreeStore, DeleteChildren, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewTreeStore, DeleteItem, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewTreeStore, GetChildCount, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewTreeStore, GetItemData, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewTreeStore, GetItemExpandedIcon, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewTreeStore, GetItemIcon, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewTreeStore, GetItemText, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewTreeStore, GetNthChild, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewTreeStore, InsertContainer, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewTreeStore, InsertItem, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewTreeStore, PrependContainer, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewTreeStore, PrependItem, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewTreeStore, SetItemData, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewTreeStore, SetItemExpandedIcon, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewTreeStore, SetItemIcon, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewTreeStore, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern int le_wxDataViewIconText;
extern zend_class_entry *php_wxDataViewIconText_entry;
void php_wxDataViewIconText_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDataViewIconText_php: public wxDataViewIconText{
	public:
	
	wxDataViewIconText_php(const wxString& text=wxEmptyString, const wxIcon& icon=wxNullIcon):wxDataViewIconText(text, icon){}
	wxDataViewIconText_php(const wxDataViewIconText& other):wxDataViewIconText(other){}
		
		
	void InitProperties(){
	}
	
	zval *evnArray;
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewIconText_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewIconText, GetIcon, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewIconText, GetText, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewIconText, SetIcon, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewIconText, SetText, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewIconText, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

#endif //WXPHP_DVC_H_GUARD
